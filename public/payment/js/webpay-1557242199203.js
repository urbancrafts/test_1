!function(e,t){"function"==typeof define&&define.amd?define([],t):e.forge=t()}(this,function(){var e,t,r;return function(n){function a(e,t){return E.call(e,t)}function i(e,t){var r,n,a,i,s,o,u,c,l,p,f,d=t&&t.split("/"),h=v.map,y=h&&h["*"]||{};if(e&&"."===e.charAt(0))if(t){for(d=d.slice(0,d.length-1),e=e.split("/"),s=e.length-1,v.nodeIdCompat&&T.test(e[s])&&(e[s]=e[s].replace(T,"")),e=d.concat(e),l=0;l<e.length;l+=1)if(f=e[l],"."===f)e.splice(l,1),l-=1;else if(".."===f){if(1===l&&(".."===e[2]||".."===e[0]))break;l>0&&(e.splice(l-1,2),l-=2)}e=e.join("/")}else 0===e.indexOf("./")&&(e=e.substring(2));if((d||y)&&h){for(r=e.split("/"),l=r.length;l>0;l-=1){if(n=r.slice(0,l).join("/"),d)for(p=d.length;p>0;p-=1)if(a=h[d.slice(0,p).join("/")],a&&(a=a[n])){i=a,o=l;break}if(i)break;!u&&y&&y[n]&&(u=y[n],c=l)}!i&&u&&(i=u,o=c),i&&(r.splice(0,o,i),e=r.join("/"))}return e}function s(e,t){return function(){return d.apply(n,S.call(arguments,0).concat([e,t]))}}function o(e){return function(t){return i(t,e)}}function u(e){return function(t){g[e]=t}}function c(e){if(a(m,e)){var t=m[e];delete m[e],C[e]=!0,f.apply(n,t)}if(!a(g,e)&&!a(C,e))throw new Error("No "+e);return g[e]}function l(e){var t,r=e?e.indexOf("!"):-1;return r>-1&&(t=e.substring(0,r),e=e.substring(r+1,e.length)),[t,e]}function p(e){return function(){return v&&v.config&&v.config[e]||{}}}var f,d,h,y,g={},m={},v={},C={},E=Object.prototype.hasOwnProperty,S=[].slice,T=/\.js$/;h=function(e,t){var r,n=l(e),a=n[0];return e=n[1],a&&(a=i(a,t),r=c(a)),a?e=r&&r.normalize?r.normalize(e,o(t)):i(e,t):(e=i(e,t),n=l(e),a=n[0],e=n[1],a&&(r=c(a))),{f:a?a+"!"+e:e,n:e,pr:a,p:r}},y={require:function(e){return s(e)},exports:function(e){var t=g[e];return"undefined"!=typeof t?t:g[e]={}},module:function(e){return{id:e,uri:"",exports:g[e],config:p(e)}}},f=function(e,t,r,i){var o,l,p,f,d,v,E=[],S=typeof r;if(i=i||e,"undefined"===S||"function"===S){for(t=!t.length&&r.length?["require","exports","module"]:t,d=0;d<t.length;d+=1)if(f=h(t[d],i),l=f.f,"require"===l)E[d]=y.require(e);else if("exports"===l)E[d]=y.exports(e),v=!0;else if("module"===l)o=E[d]=y.module(e);else if(a(g,l)||a(m,l)||a(C,l))E[d]=c(l);else{if(!f.p)throw new Error(e+" missing "+l);f.p.load(f.n,s(i,!0),u(l),{}),E[d]=g[l]}p=r?r.apply(g[e],E):void 0,e&&(o&&o.exports!==n&&o.exports!==g[e]?g[e]=o.exports:p===n&&v||(g[e]=p))}else e&&(g[e]=r)},e=t=d=function(e,t,r,a,i){if("string"==typeof e)return y[e]?y[e](t):c(h(e,t).f);if(!e.splice){if(v=e,v.deps&&d(v.deps,v.callback),!t)return;t.splice?(e=t,t=r,r=null):e=n}return t=t||function(){},"function"==typeof r&&(r=a,a=i),a?f(n,e,t,r):setTimeout(function(){f(n,e,t,r)},4),d},d.config=function(e){return d(e)},e._defined=g,r=function(e,t,r){t.splice||(r=t,t=[]),a(g,e)||a(m,e)||(m[e]=[e,t,r])},r.amd={jQuery:!0}}(),r("node_modules/almond/almond",function(){}),function(){function e(e){function t(e){if(this.data="",this.read=0,"string"==typeof e)this.data=e;else if(n.isArrayBuffer(e)||n.isArrayBufferView(e)){var r=new Uint8Array(e);try{this.data=String.fromCharCode.apply(null,r)}catch(a){for(var i=0;i<r.length;++i)this.putByte(r[i])}}else(e instanceof t||"object"==typeof e&&"string"==typeof e.data&&"number"==typeof e.read)&&(this.data=e.data,this.read=e.read);this._constructedStringLength=0}function r(e,t){t=t||{},this.read=t.readOffset||0,this.growSize=t.growSize||1024;var r=n.isArrayBuffer(e),a=n.isArrayBufferView(e);return r||a?(r?this.data=new DataView(e):this.data=new DataView(e.buffer,e.byteOffset,e.byteLength),void(this.write="writeOffset"in t?t.writeOffset:this.data.byteLength)):(this.data=new DataView(new ArrayBuffer(0)),this.write=0,null!==e&&void 0!==e&&this.putBytes(e),void("writeOffset"in t&&(this.write=t.writeOffset)))}var n=e.util=e.util||{};"undefined"!=typeof process&&process.nextTick?(n.nextTick=process.nextTick,"function"==typeof setImmediate?n.setImmediate=setImmediate:n.setImmediate=n.nextTick):"function"==typeof setImmediate?(n.setImmediate=setImmediate,n.nextTick=function(e){return setImmediate(e)}):(n.setImmediate=function(e){setTimeout(e,0)},n.nextTick=n.setImmediate),n.isArray=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)},n.isArrayBuffer=function(e){return"undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer};var a=[];"undefined"!=typeof DataView&&a.push(DataView),"undefined"!=typeof Int8Array&&a.push(Int8Array),"undefined"!=typeof Uint8Array&&a.push(Uint8Array),"undefined"!=typeof Uint8ClampedArray&&a.push(Uint8ClampedArray),"undefined"!=typeof Int16Array&&a.push(Int16Array),"undefined"!=typeof Uint16Array&&a.push(Uint16Array),"undefined"!=typeof Int32Array&&a.push(Int32Array),"undefined"!=typeof Uint32Array&&a.push(Uint32Array),"undefined"!=typeof Float32Array&&a.push(Float32Array),"undefined"!=typeof Float64Array&&a.push(Float64Array),n.isArrayBufferView=function(e){for(var t=0;t<a.length;++t)if(e instanceof a[t])return!0;return!1},n.ByteBuffer=t,n.ByteStringBuffer=t;var i=4096;n.ByteStringBuffer.prototype._optimizeConstructedString=function(e){this._constructedStringLength+=e,this._constructedStringLength>i&&(this.data.substr(0,1),this._constructedStringLength=0)},n.ByteStringBuffer.prototype.length=function(){return this.data.length-this.read},n.ByteStringBuffer.prototype.isEmpty=function(){return this.length()<=0},n.ByteStringBuffer.prototype.putByte=function(e){return this.putBytes(String.fromCharCode(e))},n.ByteStringBuffer.prototype.fillWithByte=function(e,t){e=String.fromCharCode(e);for(var r=this.data;t>0;)1&t&&(r+=e),t>>>=1,t>0&&(e+=e);return this.data=r,this._optimizeConstructedString(t),this},n.ByteStringBuffer.prototype.putBytes=function(e){return this.data+=e,this._optimizeConstructedString(e.length),this},n.ByteStringBuffer.prototype.putString=function(e){return this.putBytes(n.encodeUtf8(e))},n.ByteStringBuffer.prototype.putInt16=function(e){return this.putBytes(String.fromCharCode(e>>8&255)+String.fromCharCode(255&e))},n.ByteStringBuffer.prototype.putInt24=function(e){return this.putBytes(String.fromCharCode(e>>16&255)+String.fromCharCode(e>>8&255)+String.fromCharCode(255&e))},n.ByteStringBuffer.prototype.putInt32=function(e){return this.putBytes(String.fromCharCode(e>>24&255)+String.fromCharCode(e>>16&255)+String.fromCharCode(e>>8&255)+String.fromCharCode(255&e))},n.ByteStringBuffer.prototype.putInt16Le=function(e){return this.putBytes(String.fromCharCode(255&e)+String.fromCharCode(e>>8&255))},n.ByteStringBuffer.prototype.putInt24Le=function(e){return this.putBytes(String.fromCharCode(255&e)+String.fromCharCode(e>>8&255)+String.fromCharCode(e>>16&255))},n.ByteStringBuffer.prototype.putInt32Le=function(e){return this.putBytes(String.fromCharCode(255&e)+String.fromCharCode(e>>8&255)+String.fromCharCode(e>>16&255)+String.fromCharCode(e>>24&255))},n.ByteStringBuffer.prototype.putInt=function(e,t){var r="";do t-=8,r+=String.fromCharCode(e>>t&255);while(t>0);return this.putBytes(r)},n.ByteStringBuffer.prototype.putSignedInt=function(e,t){return 0>e&&(e+=2<<t-1),this.putInt(e,t)},n.ByteStringBuffer.prototype.putBuffer=function(e){return this.putBytes(e.getBytes())},n.ByteStringBuffer.prototype.getByte=function(){return this.data.charCodeAt(this.read++)},n.ByteStringBuffer.prototype.getInt16=function(){var e=this.data.charCodeAt(this.read)<<8^this.data.charCodeAt(this.read+1);return this.read+=2,e},n.ByteStringBuffer.prototype.getInt24=function(){var e=this.data.charCodeAt(this.read)<<16^this.data.charCodeAt(this.read+1)<<8^this.data.charCodeAt(this.read+2);return this.read+=3,e},n.ByteStringBuffer.prototype.getInt32=function(){var e=this.data.charCodeAt(this.read)<<24^this.data.charCodeAt(this.read+1)<<16^this.data.charCodeAt(this.read+2)<<8^this.data.charCodeAt(this.read+3);return this.read+=4,e},n.ByteStringBuffer.prototype.getInt16Le=function(){var e=this.data.charCodeAt(this.read)^this.data.charCodeAt(this.read+1)<<8;return this.read+=2,e},n.ByteStringBuffer.prototype.getInt24Le=function(){var e=this.data.charCodeAt(this.read)^this.data.charCodeAt(this.read+1)<<8^this.data.charCodeAt(this.read+2)<<16;return this.read+=3,e},n.ByteStringBuffer.prototype.getInt32Le=function(){var e=this.data.charCodeAt(this.read)^this.data.charCodeAt(this.read+1)<<8^this.data.charCodeAt(this.read+2)<<16^this.data.charCodeAt(this.read+3)<<24;return this.read+=4,e},n.ByteStringBuffer.prototype.getInt=function(e){var t=0;do t=(t<<8)+this.data.charCodeAt(this.read++),e-=8;while(e>0);return t},n.ByteStringBuffer.prototype.getSignedInt=function(e){var t=this.getInt(e),r=2<<e-2;return t>=r&&(t-=r<<1),t},n.ByteStringBuffer.prototype.getBytes=function(e){var t;return e?(e=Math.min(this.length(),e),t=this.data.slice(this.read,this.read+e),this.read+=e):0===e?t="":(t=0===this.read?this.data:this.data.slice(this.read),this.clear()),t},n.ByteStringBuffer.prototype.bytes=function(e){return"undefined"==typeof e?this.data.slice(this.read):this.data.slice(this.read,this.read+e)},n.ByteStringBuffer.prototype.at=function(e){return this.data.charCodeAt(this.read+e)},n.ByteStringBuffer.prototype.setAt=function(e,t){return this.data=this.data.substr(0,this.read+e)+String.fromCharCode(t)+this.data.substr(this.read+e+1),this},n.ByteStringBuffer.prototype.last=function(){return this.data.charCodeAt(this.data.length-1)},n.ByteStringBuffer.prototype.copy=function(){var e=n.createBuffer(this.data);return e.read=this.read,e},n.ByteStringBuffer.prototype.compact=function(){return this.read>0&&(this.data=this.data.slice(this.read),this.read=0),this},n.ByteStringBuffer.prototype.clear=function(){return this.data="",this.read=0,this},n.ByteStringBuffer.prototype.truncate=function(e){var t=Math.max(0,this.length()-e);return this.data=this.data.substr(this.read,t),this.read=0,this},n.ByteStringBuffer.prototype.toHex=function(){for(var e="",t=this.read;t<this.data.length;++t){var r=this.data.charCodeAt(t);16>r&&(e+="0"),e+=r.toString(16)}return e},n.ByteStringBuffer.prototype.toString=function(){return n.decodeUtf8(this.bytes())},n.DataBuffer=r,n.DataBuffer.prototype.length=function(){return this.write-this.read},n.DataBuffer.prototype.isEmpty=function(){return this.length()<=0},n.DataBuffer.prototype.accommodate=function(e,t){if(this.length()>=e)return this;t=Math.max(t||this.growSize,e);var r=new Uint8Array(this.data.buffer,this.data.byteOffset,this.data.byteLength),n=new Uint8Array(this.length()+t);return n.set(r),this.data=new DataView(n.buffer),this},n.DataBuffer.prototype.putByte=function(e){return this.accommodate(1),this.data.setUint8(this.write++,e),this},n.DataBuffer.prototype.fillWithByte=function(e,t){this.accommodate(t);for(var r=0;t>r;++r)this.data.setUint8(e);return this},n.DataBuffer.prototype.putBytes=function(e,t){if(n.isArrayBufferView(e)){var r=new Uint8Array(e.buffer,e.byteOffset,e.byteLength),a=r.byteLength-r.byteOffset;this.accommodate(a);var i=new Uint8Array(this.data.buffer,this.write);return i.set(r),this.write+=a,this}if(n.isArrayBuffer(e)){var r=new Uint8Array(e);this.accommodate(r.byteLength);var i=new Uint8Array(this.data.buffer);return i.set(r,this.write),this.write+=r.byteLength,this}if(e instanceof n.DataBuffer||"object"==typeof e&&"number"==typeof e.read&&"number"==typeof e.write&&n.isArrayBufferView(e.data)){var r=new Uint8Array(e.data.byteLength,e.read,e.length());this.accommodate(r.byteLength);var i=new Uint8Array(e.data.byteLength,this.write);return i.set(r),this.write+=r.byteLength,this}if(e instanceof n.ByteStringBuffer&&(e=e.data,t="binary"),t=t||"binary","string"==typeof e){var s;if("hex"===t)return this.accommodate(Math.ceil(e.length/2)),s=new Uint8Array(this.data.buffer,this.write),this.write+=n.binary.hex.decode(e,s,this.write),this;if("base64"===t)return this.accommodate(3*Math.ceil(e.length/4)),s=new Uint8Array(this.data.buffer,this.write),this.write+=n.binary.base64.decode(e,s,this.write),this;if("utf8"===t&&(e=n.encodeUtf8(e),t="binary"),"binary"===t||"raw"===t)return this.accommodate(e.length),s=new Uint8Array(this.data.buffer,this.write),this.write+=n.binary.raw.decode(s),this;if("utf16"===t)return this.accommodate(2*e.length),s=new Uint16Array(this.data.buffer,this.write),this.write+=n.text.utf16.encode(s),this;throw new Error("Invalid encoding: "+t)}throw Error("Invalid parameter: "+e)},n.DataBuffer.prototype.putBuffer=function(e){return this.putBytes(e),e.clear(),this},n.DataBuffer.prototype.putString=function(e){return this.putBytes(e,"utf16")},n.DataBuffer.prototype.putInt16=function(e){return this.accommodate(2),this.data.setInt16(this.write,e),this.write+=2,this},n.DataBuffer.prototype.putInt24=function(e){return this.accommodate(3),this.data.setInt16(this.write,e>>8&65535),this.data.setInt8(this.write,e>>16&255),this.write+=3,this},n.DataBuffer.prototype.putInt32=function(e){return this.accommodate(4),this.data.setInt32(this.write,e),this.write+=4,this},n.DataBuffer.prototype.putInt16Le=function(e){return this.accommodate(2),this.data.setInt16(this.write,e,!0),this.write+=2,this},n.DataBuffer.prototype.putInt24Le=function(e){return this.accommodate(3),this.data.setInt8(this.write,e>>16&255),this.data.setInt16(this.write,e>>8&65535,!0),this.write+=3,this},n.DataBuffer.prototype.putInt32Le=function(e){return this.accommodate(4),this.data.setInt32(this.write,e,!0),this.write+=4,this},n.DataBuffer.prototype.putInt=function(e,t){this.accommodate(t/8);do t-=8,this.data.setInt8(this.write++,e>>t&255);while(t>0);return this},n.DataBuffer.prototype.putSignedInt=function(e,t){return this.accommodate(t/8),0>e&&(e+=2<<t-1),this.putInt(e,t)},n.DataBuffer.prototype.getByte=function(){return this.data.getInt8(this.read++)},n.DataBuffer.prototype.getInt16=function(){var e=this.data.getInt16(this.read);return this.read+=2,e},n.DataBuffer.prototype.getInt24=function(){var e=this.data.getInt16(this.read)<<8^this.data.getInt8(this.read+2);return this.read+=3,e},n.DataBuffer.prototype.getInt32=function(){var e=this.data.getInt32(this.read);return this.read+=4,e},n.DataBuffer.prototype.getInt16Le=function(){var e=this.data.getInt16(this.read,!0);return this.read+=2,e},n.DataBuffer.prototype.getInt24Le=function(){var e=this.data.getInt8(this.read)^this.data.getInt16(this.read+1,!0)<<8;return this.read+=3,e},n.DataBuffer.prototype.getInt32Le=function(){var e=this.data.getInt32(this.read,!0);return this.read+=4,e},n.DataBuffer.prototype.getInt=function(e){var t=0;do t=(t<<8)+this.data.getInt8(this.read++),e-=8;while(e>0);return t},n.DataBuffer.prototype.getSignedInt=function(e){var t=this.getInt(e),r=2<<e-2;return t>=r&&(t-=r<<1),t},n.DataBuffer.prototype.getBytes=function(e){var t;return e?(e=Math.min(this.length(),e),t=this.data.slice(this.read,this.read+e),this.read+=e):0===e?t="":(t=0===this.read?this.data:this.data.slice(this.read),this.clear()),t},n.DataBuffer.prototype.bytes=function(e){return"undefined"==typeof e?this.data.slice(this.read):this.data.slice(this.read,this.read+e)},n.DataBuffer.prototype.at=function(e){return this.data.getUint8(this.read+e)},n.DataBuffer.prototype.setAt=function(e,t){return this.data.setUint8(e,t),this},n.DataBuffer.prototype.last=function(){return this.data.getUint8(this.write-1)},n.DataBuffer.prototype.copy=function(){return new n.DataBuffer(this)},n.DataBuffer.prototype.compact=function(){if(this.read>0){var e=new Uint8Array(this.data.buffer,this.read),t=new Uint8Array(e.byteLength);t.set(e),this.data=new DataView(t),this.write-=this.read,this.read=0}return this},n.DataBuffer.prototype.clear=function(){return this.data=new DataView(new ArrayBuffer(0)),this.read=this.write=0,this},n.DataBuffer.prototype.truncate=function(e){return this.write=Math.max(0,this.length()-e),this.read=Math.min(this.read,this.write),this},n.DataBuffer.prototype.toHex=function(){for(var e="",t=this.read;t<this.data.byteLength;++t){var r=this.data.getUint8(t);16>r&&(e+="0"),e+=r.toString(16)}return e},n.DataBuffer.prototype.toString=function(e){var t=new Uint8Array(this.data,this.read,this.length());if(e=e||"utf8","binary"===e||"raw"===e)return n.binary.raw.encode(t);if("hex"===e)return n.binary.hex.encode(t);if("base64"===e)return n.binary.base64.encode(t);if("utf8"===e)return n.text.utf8.decode(t);if("utf16"===e)return n.text.utf16.decode(t);throw new Error("Invalid encoding: "+e)},n.createBuffer=function(e,t){return t=t||"raw",void 0!==e&&"utf8"===t&&(e=n.encodeUtf8(e)),new n.ByteBuffer(e)},n.fillString=function(e,t){for(var r="";t>0;)1&t&&(r+=e),t>>>=1,t>0&&(e+=e);return r},n.xorBytes=function(e,t,r){for(var n="",a="",i="",s=0,o=0;r>0;--r,++s)a=e.charCodeAt(s)^t.charCodeAt(s),o>=10&&(n+=i,i="",o=0),i+=String.fromCharCode(a),++o;return n+=i},n.hexToBytes=function(e){var t="",r=0;for(e.length&!0&&(r=1,t+=String.fromCharCode(parseInt(e[0],16)));r<e.length;r+=2)t+=String.fromCharCode(parseInt(e.substr(r,2),16));return t},n.bytesToHex=function(e){return n.createBuffer(e).toHex()},n.int32ToBytes=function(e){return String.fromCharCode(e>>24&255)+String.fromCharCode(e>>16&255)+String.fromCharCode(e>>8&255)+String.fromCharCode(255&e)};var s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",o=[62,-1,-1,-1,63,52,53,54,55,56,57,58,59,60,61,-1,-1,-1,64,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,-1,-1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51];n.encode64=function(e,t){for(var r,n,a,i="",o="",u=0;u<e.length;)r=e.charCodeAt(u++),n=e.charCodeAt(u++),a=e.charCodeAt(u++),i+=s.charAt(r>>2),i+=s.charAt((3&r)<<4|n>>4),isNaN(n)?i+="==":(i+=s.charAt((15&n)<<2|a>>6),i+=isNaN(a)?"=":s.charAt(63&a)),t&&i.length>t&&(o+=i.substr(0,t)+"\r\n",i=i.substr(t));return o+=i},n.decode64=function(e){e=e.replace(/[^A-Za-z0-9\+\/\=]/g,"");for(var t,r,n,a,i="",s=0;s<e.length;)t=o[e.charCodeAt(s++)-43],r=o[e.charCodeAt(s++)-43],n=o[e.charCodeAt(s++)-43],a=o[e.charCodeAt(s++)-43],i+=String.fromCharCode(t<<2|r>>4),64!==n&&(i+=String.fromCharCode((15&r)<<4|n>>2),64!==a&&(i+=String.fromCharCode((3&n)<<6|a)));return i},n.encodeUtf8=function(e){return unescape(encodeURIComponent(e))},n.decodeUtf8=function(e){return decodeURIComponent(escape(e))},n.binary={raw:{},hex:{},base64:{}},n.binary.raw.encode=function(e){return String.fromCharCode.apply(null,e)},n.binary.raw.decode=function(e,t,r){var n=t;n||(n=new Uint8Array(e.length)),r=r||0;for(var a=r,i=0;i<e.length;++i)n[a++]=e.charCodeAt(i);return t?a-r:n},n.binary.hex.encode=n.bytesToHex,n.binary.hex.decode=function(e,t,r){var n=t;n||(n=new Uint8Array(Math.ceil(e.length/2))),r=r||0;var a=0,i=r;for(1&e.length&&(a=1,n[i++]=parseInt(e[0],16));a<e.length;a+=2)n[i++]=parseInt(e.substr(a,2),16);return t?i-r:n},n.binary.base64.encode=function(e,t){for(var r,n,a,i="",o="",u=0;u<e.byteLength;)r=e[u++],n=e[u++],a=e[u++],i+=s.charAt(r>>2),i+=s.charAt((3&r)<<4|n>>4),isNaN(n)?i+="==":(i+=s.charAt((15&n)<<2|a>>6),i+=isNaN(a)?"=":s.charAt(63&a)),t&&i.length>t&&(o+=i.substr(0,t)+"\r\n",i=i.substr(t));return o+=i},n.binary.base64.decode=function(e,t,r){var n=t;n||(n=new Uint8Array(3*Math.ceil(e.length/4))),e=e.replace(/[^A-Za-z0-9\+\/\=]/g,""),r=r||0;for(var a,i,s,u,c=0,l=r;c<e.length;)a=o[e.charCodeAt(c++)-43],i=o[e.charCodeAt(c++)-43],s=o[e.charCodeAt(c++)-43],u=o[e.charCodeAt(c++)-43],n[l++]=a<<2|i>>4,64!==s&&(n[l++]=(15&i)<<4|s>>2,64!==u&&(n[l++]=(3&s)<<6|u));return t?l-r:n.subarray(0,l)},n.text={utf8:{},utf16:{}},n.text.utf8.encode=function(e,t,r){e=n.encodeUtf8(e);var a=t;a||(a=new Uint8Array(e.length)),r=r||0;for(var i=r,s=0;s<e.length;++s)a[i++]=e.charCodeAt(s);return t?i-r:a},n.text.utf8.decode=function(e){return n.decodeUtf8(String.fromCharCode.apply(null,e))},n.text.utf16.encode=function(e,t,r){var n=t;n||(n=new Uint8Array(e.length));var a=new Uint16Array(n);r=r||0;for(var i=r,s=r,o=0;o<e.length;++o)a[s++]=e.charCodeAt(o),i+=2;return t?i-r:n},n.text.utf16.decode=function(e){return String.fromCharCode.apply(null,new Uint16Array(e))},n.deflate=function(e,t,r){if(t=n.decode64(e.deflate(n.encode64(t)).rval),r){var a=2,i=t.charCodeAt(1);32&i&&(a=6),t=t.substring(a,t.length-4)}return t},n.inflate=function(e,t,r){var a=e.inflate(n.encode64(t)).rval;return null===a?null:n.decode64(a)};var u=function(e,t,r){if(!e)throw new Error("WebStorage not available.");var a;if(null===r?a=e.removeItem(t):(r=n.encode64(JSON.stringify(r)),a=e.setItem(t,r)),"undefined"!=typeof a&&a.rval!==!0){var i=new Error(a.error.message);throw i.id=a.error.id,i.name=a.error.name,i}},c=function(e,t){if(!e)throw new Error("WebStorage not available.");var r=e.getItem(t);if(e.init)if(null===r.rval){if(r.error){var a=new Error(r.error.message);throw a.id=r.error.id,a.name=r.error.name,a}r=null}else r=r.rval;return null!==r&&(r=JSON.parse(n.decode64(r))),r},l=function(e,t,r,n){var a=c(e,t);null===a&&(a={}),a[r]=n,u(e,t,a)},p=function(e,t,r){var n=c(e,t);return null!==n&&(n=r in n?n[r]:null),n},f=function(e,t,r){var n=c(e,t);if(null!==n&&r in n){delete n[r];var a=!0;for(var i in n){a=!1;break}a&&(n=null),u(e,t,n)}},d=function(e,t){u(e,t,null)},h=function(e,t,r){var n=null;"undefined"==typeof r&&(r=["web","flash"]);var a,i=!1,s=null;for(var o in r){a=r[o];try{if("flash"===a||"both"===a){if(null===t[0])throw new Error("Flash local storage not available.");n=e.apply(this,t),i="flash"===a}("web"===a||"both"===a)&&(t[0]=localStorage,n=e.apply(this,t),i=!0)}catch(u){s=u}if(i)break}if(!i)throw s;return n};n.setItem=function(e,t,r,n,a){h(l,arguments,a)},n.getItem=function(e,t,r,n){return h(p,arguments,n)},n.removeItem=function(e,t,r,n){h(f,arguments,n)},n.clearItems=function(e,t,r){h(d,arguments,r)},n.parseUrl=function(e){var t=/^(https?):\/\/([^:&^\/]*):?(\d*)(.*)$/g;t.lastIndex=0;var r=t.exec(e),n=null===r?null:{full:e,scheme:r[1],host:r[2],port:r[3],path:r[4]};return n&&(n.fullHost=n.host,n.port?80!==n.port&&"http"===n.scheme?n.fullHost+=":"+n.port:443!==n.port&&"https"===n.scheme&&(n.fullHost+=":"+n.port):"http"===n.scheme?n.port=80:"https"===n.scheme&&(n.port=443),n.full=n.scheme+"://"+n.fullHost),n};var y=null;n.getQueryVariables=function(e){var t,r=function(e){for(var t={},r=e.split("&"),n=0;n<r.length;n++){var a,i,s=r[n].indexOf("=");s>0?(a=r[n].substring(0,s),i=r[n].substring(s+1)):(a=r[n],i=null),a in t||(t[a]=[]),a in Object.prototype||null===i||t[a].push(unescape(i))}return t};return"undefined"==typeof e?(null===y&&(y="undefined"==typeof window?{}:r(window.location.search.substring(1))),t=y):t=r(e),t},n.parseFragment=function(e){var t=e,r="",a=e.indexOf("?");a>0&&(t=e.substring(0,a),r=e.substring(a+1));var i=t.split("/");i.length>0&&""===i[0]&&i.shift();var s=""===r?{}:n.getQueryVariables(r);return{pathString:t,queryString:r,path:i,query:s}},n.makeRequest=function(e){var t=n.parseFragment(e),r={path:t.pathString,query:t.queryString,getPath:function(e){return"undefined"==typeof e?t.path:t.path[e]},getQuery:function(e,r){var n;return"undefined"==typeof e?n=t.query:(n=t.query[e],n&&"undefined"!=typeof r&&(n=n[r])),n},getQueryLast:function(e,t){var n,a=r.getQuery(e);return n=a?a[a.length-1]:t}};return r},n.makeLink=function(e,t,r){e=jQuery.isArray(e)?e.join("/"):e;var n=jQuery.param(t||{});return r=r||"",e+(n.length>0?"?"+n:"")+(r.length>0?"#"+r:"")},n.setPath=function(e,t,r){if("object"==typeof e&&null!==e)for(var n=0,a=t.length;a>n;){var i=t[n++];if(n==a)e[i]=r;else{var s=i in e;(!s||s&&"object"!=typeof e[i]||s&&null===e[i])&&(e[i]={}),e=e[i]}}},n.getPath=function(e,t,r){for(var n=0,a=t.length,i=!0;i&&a>n&&"object"==typeof e&&null!==e;){var s=t[n++];i=s in e,i&&(e=e[s])}return i?e:r},n.deletePath=function(e,t){if("object"==typeof e&&null!==e)for(var r=0,n=t.length;n>r;){var a=t[r++];if(r==n)delete e[a];else{if(!(a in e)||"object"!=typeof e[a]||null===e[a])break;e=e[a]}}},n.isEmpty=function(e){for(var t in e)if(e.hasOwnProperty(t))return!1;return!0},n.format=function(e){for(var t,r,n=/%./g,a=0,i=[],s=0;t=n.exec(e);){r=e.substring(s,n.lastIndex-2),r.length>0&&i.push(r),s=n.lastIndex;var o=t[0][1];switch(o){case"s":case"o":a<arguments.length?i.push(arguments[a++ +1]):i.push("<?>");break;case"%":i.push("%");break;default:i.push("<%"+o+"?>")}}return i.push(e.substring(s)),i.join("")},n.formatNumber=function(e,t,r,n){var a=e,i=isNaN(t=Math.abs(t))?2:t,s=void 0===r?",":r,o=void 0===n?".":n,u=0>a?"-":"",c=parseInt(a=Math.abs(+a||0).toFixed(i),10)+"",l=c.length>3?c.length%3:0;return u+(l?c.substr(0,l)+o:"")+c.substr(l).replace(/(\d{3})(?=\d)/g,"$1"+o)+(i?s+Math.abs(a-c).toFixed(i).slice(2):"")},n.formatSize=function(e){return e=e>=1073741824?n.formatNumber(e/1073741824,2,".","")+" GiB":e>=1048576?n.formatNumber(e/1048576,2,".","")+" MiB":e>=1024?n.formatNumber(e/1024,0)+" KiB":n.formatNumber(e,0)+" bytes"},n.bytesFromIP=function(e){return-1!==e.indexOf(".")?n.bytesFromIPv4(e):-1!==e.indexOf(":")?n.bytesFromIPv6(e):null},n.bytesFromIPv4=function(e){if(e=e.split("."),4!==e.length)return null;for(var t=n.createBuffer(),r=0;r<e.length;++r){var a=parseInt(e[r],10);if(isNaN(a))return null;t.putByte(a)}return t.getBytes()},n.bytesFromIPv6=function(e){var t=0;e=e.split(":").filter(function(e){return 0===e.length&&++t,!0});for(var r=2*(8-e.length+t),a=n.createBuffer(),i=0;8>i;++i)if(e[i]&&0!==e[i].length){var s=n.hexToBytes(e[i]);s.length<2&&a.putByte(0),a.putBytes(s)}else a.fillWithByte(0,r),r=0;return a.getBytes()},n.bytesToIP=function(e){return 4===e.length?n.bytesToIPv4(e):16===e.length?n.bytesToIPv6(e):null},n.bytesToIPv4=function(e){if(4!==e.length)return null;for(var t=[],r=0;r<e.length;++r)t.push(e.charCodeAt(r));return t.join(".")},n.bytesToIPv6=function(e){if(16!==e.length)return null;for(var t=[],r=[],a=0,i=0;i<e.length;i+=2){for(var s=n.bytesToHex(e[i]+e[i+1]);"0"===s[0]&&"0"!==s;)s=s.substr(1);if("0"===s){var o=r[r.length-1],u=t.length;o&&u===o.end+1?(o.end=u,o.end-o.start>r[a].end-r[a].start&&(a=r.length-1)):r.push({start:u,end:u})}t.push(s)}if(r.length>0){var c=r[a];c.end-c.start>0&&(t.splice(c.start,c.end-c.start+1,""),0===c.start&&t.unshift(""),7===c.end&&t.push(""))}return t.join(":")},n.estimateCores=function(e,t){function r(e,o,u){if(0===o){var c=Math.floor(e.reduce(function(e,t){return e+t},0)/e.length);return n.cores=Math.max(1,c),URL.revokeObjectURL(s),t(null,n.cores)}a(u,function(t,n){e.push(i(u,n)),r(e,o-1,u)})}function a(e,t){for(var r=[],n=[],a=0;e>a;++a){var i=new Worker(s);i.addEventListener("message",function(a){if(n.push(a.data),n.length===e){for(var i=0;e>i;++i)r[i].terminate();t(null,n)}}),r.push(i)}for(var a=0;e>a;++a)r[a].postMessage(a)}function i(e,t){for(var r=[],n=0;e>n;++n)for(var a=t[n],i=r[n]=[],s=0;e>s;++s)if(n!==s){var o=t[s];(a.st>o.st&&a.st<o.et||o.st>a.st&&o.st<a.et)&&i.push(s)}return r.reduce(function(e,t){return Math.max(e,t.length)},0)}if("function"==typeof e&&(t=e,e={}),e=e||{},"cores"in n&&!e.update)return t(null,n.cores);if("undefined"!=typeof navigator&&"hardwareConcurrency"in navigator&&navigator.hardwareConcurrency>0)return n.cores=navigator.hardwareConcurrency,t(null,n.cores);if("undefined"==typeof Worker)return n.cores=1,t(null,n.cores);if("undefined"==typeof Blob)return n.cores=2,t(null,n.cores);var s=URL.createObjectURL(new Blob(["(",function(){self.addEventListener("message",function(e){for(var t=Date.now(),r=t+4;Date.now()<r;);self.postMessage({st:t,et:r})})}.toString(),")()"],{type:"application/javascript"}));r([],5,16)}}var n="util";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/util",["require","module"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){e.cipher=e.cipher||{},e.cipher.algorithms=e.cipher.algorithms||{},e.cipher.createCipher=function(t,r){var n=t;if("string"==typeof n&&(n=e.cipher.getAlgorithm(n),n&&(n=n())),!n)throw new Error("Unsupported algorithm: "+t);return new e.cipher.BlockCipher({algorithm:n,key:r,decrypt:!1})},e.cipher.createDecipher=function(t,r){var n=t;if("string"==typeof n&&(n=e.cipher.getAlgorithm(n),n&&(n=n())),!n)throw new Error("Unsupported algorithm: "+t);return new e.cipher.BlockCipher({algorithm:n,key:r,decrypt:!0})},e.cipher.registerAlgorithm=function(t,r){t=t.toUpperCase(),e.cipher.algorithms[t]=r},e.cipher.getAlgorithm=function(t){return t=t.toUpperCase(),t in e.cipher.algorithms?e.cipher.algorithms[t]:null};var t=e.cipher.BlockCipher=function(e){this.algorithm=e.algorithm,this.mode=this.algorithm.mode,this.blockSize=this.mode.blockSize,this._finish=!1,this._input=null,this.output=null,this._op=e.decrypt?this.mode.decrypt:this.mode.encrypt,this._decrypt=e.decrypt,this.algorithm.initialize(e)};t.prototype.start=function(t){t=t||{};var r={};for(var n in t)r[n]=t[n];r.decrypt=this._decrypt,this._finish=!1,this._input=e.util.createBuffer(),this.output=t.output||e.util.createBuffer(),this.mode.start(r)},t.prototype.update=function(e){for(this._finish||this._input.putBuffer(e);this._input.length()>=this.blockSize||this._input.length()>0&&this._finish;)this._op.call(this.mode,this._input,this.output);this._input.compact()},t.prototype.finish=function(e){e&&"CBC"===this.mode.name&&(this.mode.pad=function(t){return e(this.blockSize,t,!1)},this.mode.unpad=function(t){return e(this.blockSize,t,!0)});var t={};return t.decrypt=this._decrypt,t.overflow=this._input.length()%this.blockSize,this._decrypt||!this.mode.pad||this.mode.pad(this._input,t)?(this._finish=!0,this.update(),this._decrypt&&this.mode.unpad&&!this.mode.unpad(this.output,t)?!1:this.mode.afterFinish&&!this.mode.afterFinish(this.output,t)?!1:!0):!1}}var n="cipher";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/cipher",["require","module","./util"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function t(t){if("string"==typeof t&&(t=e.util.createBuffer(t)),e.util.isArray(t)&&t.length>4){var r=t;t=e.util.createBuffer();for(var n=0;n<r.length;++n)t.putByte(r[n])}return e.util.isArray(t)||(t=[t.getInt32(),t.getInt32(),t.getInt32(),t.getInt32()]),t}function r(e){e[e.length-1]=e[e.length-1]+1&4294967295}function n(e){return[e/4294967296|0,4294967295&e]}e.cipher=e.cipher||{};var a=e.cipher.modes=e.cipher.modes||{};a.ecb=function(e){e=e||{},this.name="ECB",this.cipher=e.cipher,this.blockSize=e.blockSize||16,this._blocks=this.blockSize/4,this._inBlock=new Array(this._blocks),this._outBlock=new Array(this._blocks)},a.ecb.prototype.start=function(e){},a.ecb.prototype.encrypt=function(e,t){for(var r=0;r<this._blocks;++r)this._inBlock[r]=e.getInt32();this.cipher.encrypt(this._inBlock,this._outBlock);for(var r=0;r<this._blocks;++r)t.putInt32(this._outBlock[r])},a.ecb.prototype.decrypt=function(e,t){for(var r=0;r<this._blocks;++r)this._inBlock[r]=e.getInt32();this.cipher.decrypt(this._inBlock,this._outBlock);for(var r=0;r<this._blocks;++r)t.putInt32(this._outBlock[r])},a.ecb.prototype.pad=function(e,t){var r=e.length()===this.blockSize?this.blockSize:this.blockSize-e.length();return e.fillWithByte(r,r),!0},a.ecb.prototype.unpad=function(e,t){if(t.overflow>0)return!1;var r=e.length(),n=e.at(r-1);return n>this.blockSize<<2?!1:(e.truncate(n),!0)},a.cbc=function(e){e=e||{},this.name="CBC",this.cipher=e.cipher,this.blockSize=e.blockSize||16,this._blocks=this.blockSize/4,this._inBlock=new Array(this._blocks),
    this._outBlock=new Array(this._blocks)},a.cbc.prototype.start=function(e){if(null===e.iv){if(!this._prev)throw new Error("Invalid IV parameter.");this._iv=this._prev.slice(0)}else{if(!("iv"in e))throw new Error("Invalid IV parameter.");this._iv=t(e.iv),this._prev=this._iv.slice(0)}},a.cbc.prototype.encrypt=function(e,t){for(var r=0;r<this._blocks;++r)this._inBlock[r]=this._prev[r]^e.getInt32();this.cipher.encrypt(this._inBlock,this._outBlock);for(var r=0;r<this._blocks;++r)t.putInt32(this._outBlock[r]);this._prev=this._outBlock},a.cbc.prototype.decrypt=function(e,t){for(var r=0;r<this._blocks;++r)this._inBlock[r]=e.getInt32();this.cipher.decrypt(this._inBlock,this._outBlock);for(var r=0;r<this._blocks;++r)t.putInt32(this._prev[r]^this._outBlock[r]);this._prev=this._inBlock.slice(0)},a.cbc.prototype.pad=function(e,t){var r=e.length()===this.blockSize?this.blockSize:this.blockSize-e.length();return e.fillWithByte(r,r),!0},a.cbc.prototype.unpad=function(e,t){if(t.overflow>0)return!1;var r=e.length(),n=e.at(r-1);return n>this.blockSize<<2?!1:(e.truncate(n),!0)},a.cfb=function(e){e=e||{},this.name="CFB",this.cipher=e.cipher,this.blockSize=e.blockSize||16,this._blocks=this.blockSize/4,this._inBlock=null,this._outBlock=new Array(this._blocks)},a.cfb.prototype.start=function(e){if(!("iv"in e))throw new Error("Invalid IV parameter.");this._iv=t(e.iv),this._inBlock=this._iv.slice(0)},a.cfb.prototype.encrypt=function(e,t){this.cipher.encrypt(this._inBlock,this._outBlock);for(var r=0;r<this._blocks;++r)this._inBlock[r]=e.getInt32()^this._outBlock[r],t.putInt32(this._inBlock[r])},a.cfb.prototype.decrypt=function(e,t){this.cipher.encrypt(this._inBlock,this._outBlock);for(var r=0;r<this._blocks;++r)this._inBlock[r]=e.getInt32(),t.putInt32(this._inBlock[r]^this._outBlock[r])},a.cfb.prototype.afterFinish=function(e,t){return t.overflow>0&&e.truncate(this.blockSize-t.overflow),!0},a.ofb=function(e){e=e||{},this.name="OFB",this.cipher=e.cipher,this.blockSize=e.blockSize||16,this._blocks=this.blockSize/4,this._inBlock=null,this._outBlock=new Array(this._blocks)},a.ofb.prototype.start=function(e){if(!("iv"in e))throw new Error("Invalid IV parameter.");this._iv=t(e.iv),this._inBlock=this._iv.slice(0)},a.ofb.prototype.encrypt=function(e,t){this.cipher.encrypt(this._inBlock,this._outBlock);for(var r=0;r<this._blocks;++r)t.putInt32(e.getInt32()^this._outBlock[r]),this._inBlock[r]=this._outBlock[r]},a.ofb.prototype.decrypt=a.ofb.prototype.encrypt,a.ofb.prototype.afterFinish=function(e,t){return t.overflow>0&&e.truncate(this.blockSize-t.overflow),!0},a.ctr=function(e){e=e||{},this.name="CTR",this.cipher=e.cipher,this.blockSize=e.blockSize||16,this._blocks=this.blockSize/4,this._inBlock=null,this._outBlock=new Array(this._blocks)},a.ctr.prototype.start=function(e){if(!("iv"in e))throw new Error("Invalid IV parameter.");this._iv=t(e.iv),this._inBlock=this._iv.slice(0)},a.ctr.prototype.encrypt=function(e,t){this.cipher.encrypt(this._inBlock,this._outBlock),r(this._inBlock);for(var n=0;n<this._blocks;++n)t.putInt32(e.getInt32()^this._outBlock[n])},a.ctr.prototype.decrypt=a.ctr.prototype.encrypt,a.ctr.prototype.afterFinish=function(e,t){return t.overflow>0&&e.truncate(this.blockSize-t.overflow),!0},a.gcm=function(e){e=e||{},this.name="GCM",this.cipher=e.cipher,this.blockSize=e.blockSize||16,this._blocks=this.blockSize/4,this._inBlock=new Array(this._blocks),this._outBlock=new Array(this._blocks),this._R=3774873600},a.gcm.prototype.start=function(t){if(!("iv"in t))throw new Error("Invalid IV parameter.");var a=e.util.createBuffer(t.iv);this._cipherLength=0;var i;if(i="additionalData"in t?e.util.createBuffer(t.additionalData):e.util.createBuffer(),"tagLength"in t?this._tagLength=t.tagLength:this._tagLength=128,this._tag=null,t.decrypt&&(this._tag=e.util.createBuffer(t.tag).getBytes(),this._tag.length!==this._tagLength/8))throw new Error("Authentication tag does not match tag length.");this._hashBlock=new Array(this._blocks),this.tag=null,this._hashSubkey=new Array(this._blocks),this.cipher.encrypt([0,0,0,0],this._hashSubkey),this.componentBits=4,this._m=this.generateHashTable(this._hashSubkey,this.componentBits);var s=a.length();if(12===s)this._j0=[a.getInt32(),a.getInt32(),a.getInt32(),1];else{for(this._j0=[0,0,0,0];a.length()>0;)this._j0=this.ghash(this._hashSubkey,this._j0,[a.getInt32(),a.getInt32(),a.getInt32(),a.getInt32()]);this._j0=this.ghash(this._hashSubkey,this._j0,[0,0].concat(n(8*s)))}this._inBlock=this._j0.slice(0),r(this._inBlock),i=e.util.createBuffer(i),this._aDataLength=n(8*i.length());var o=i.length()%this.blockSize;for(o&&i.fillWithByte(0,this.blockSize-o),this._s=[0,0,0,0];i.length()>0;)this._s=this.ghash(this._hashSubkey,this._s,[i.getInt32(),i.getInt32(),i.getInt32(),i.getInt32()])},a.gcm.prototype.encrypt=function(t,n){this.cipher.encrypt(this._inBlock,this._outBlock),r(this._inBlock);for(var a=t.length(),i=0;i<this._blocks;++i)this._outBlock[i]^=t.getInt32();if(a<this.blockSize){var s=a%this.blockSize;this._cipherLength+=s;var o=e.util.createBuffer();o.putInt32(this._outBlock[0]),o.putInt32(this._outBlock[1]),o.putInt32(this._outBlock[2]),o.putInt32(this._outBlock[3]),o.truncate(this.blockSize-s),this._outBlock[0]=o.getInt32(),this._outBlock[1]=o.getInt32(),this._outBlock[2]=o.getInt32(),this._outBlock[3]=o.getInt32()}else this._cipherLength+=this.blockSize;for(var i=0;i<this._blocks;++i)n.putInt32(this._outBlock[i]);this._s=this.ghash(this._hashSubkey,this._s,this._outBlock)},a.gcm.prototype.decrypt=function(e,t){this.cipher.encrypt(this._inBlock,this._outBlock),r(this._inBlock);var n=e.length();this._hashBlock[0]=e.getInt32(),this._hashBlock[1]=e.getInt32(),this._hashBlock[2]=e.getInt32(),this._hashBlock[3]=e.getInt32(),this._s=this.ghash(this._hashSubkey,this._s,this._hashBlock);for(var a=0;a<this._blocks;++a)t.putInt32(this._outBlock[a]^this._hashBlock[a]);n<this.blockSize?this._cipherLength+=n%this.blockSize:this._cipherLength+=this.blockSize},a.gcm.prototype.afterFinish=function(t,r){var a=!0;r.overflow&&t.truncate(this.blockSize-r.overflow),this.tag=e.util.createBuffer();var i=this._aDataLength.concat(n(8*this._cipherLength));this._s=this.ghash(this._hashSubkey,this._s,i);var s=[];this.cipher.encrypt(this._j0,s);for(var o=0;o<this._blocks;++o)this.tag.putInt32(this._s[o]^s[o]);return this.tag.truncate(this.tag.length()%(this._tagLength/8)),r.decrypt&&this.tag.bytes()!==this._tag&&(a=!1),a},a.gcm.prototype.multiply=function(e,t){for(var r=[0,0,0,0],n=t.slice(0),a=0;128>a;++a){var i=e[a/32|0]&1<<31-a%32;i&&(r[0]^=n[0],r[1]^=n[1],r[2]^=n[2],r[3]^=n[3]),this.pow(n,n)}return r},a.gcm.prototype.pow=function(e,t){for(var r=1&e[3],n=3;n>0;--n)t[n]=e[n]>>>1|(1&e[n-1])<<31;t[0]=e[0]>>>1,r&&(t[0]^=this._R)},a.gcm.prototype.tableMultiply=function(e){for(var t=[0,0,0,0],r=0;32>r;++r){var n=r/8|0,a=e[n]>>>4*(7-r%8)&15,i=this._m[r][a];t[0]^=i[0],t[1]^=i[1],t[2]^=i[2],t[3]^=i[3]}return t},a.gcm.prototype.ghash=function(e,t,r){return t[0]^=r[0],t[1]^=r[1],t[2]^=r[2],t[3]^=r[3],this.tableMultiply(t)},a.gcm.prototype.generateHashTable=function(e,t){for(var r=8/t,n=4*r,a=16*r,i=new Array(a),s=0;a>s;++s){var o=[0,0,0,0],u=s/n|0,c=(n-1-s%n)*t;o[u]=1<<t-1<<c,i[s]=this.generateSubHashTable(this.multiply(o,e),t)}return i},a.gcm.prototype.generateSubHashTable=function(e,t){var r=1<<t,n=r>>>1,a=new Array(r);a[n]=e.slice(0);for(var i=n>>>1;i>0;)this.pow(a[2*i],a[i]=[]),i>>=1;for(i=2;n>i;){for(var s=1;i>s;++s){var o=a[i],u=a[s];a[i+s]=[o[0]^u[0],o[1]^u[1],o[2]^u[2],o[3]^u[3]]}i*=2}for(a[0]=[0,0,0,0],i=n+1;r>i;++i){var c=a[i^n];a[i]=[e[0]^c[0],e[1]^c[1],e[2]^c[2],e[3]^c[3]]}return a}}var n="cipherModes";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/cipherModes",["require","module","./util"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function t(t,r){var n=function(){return new e.aes.Algorithm(t,r)};e.cipher.registerAlgorithm(t,n)}function r(){p=!0,u=[0,1,2,4,8,16,32,64,128,27,54];for(var e=new Array(256),t=0;128>t;++t)e[t]=t<<1,e[t+128]=t+128<<1^283;s=new Array(256),o=new Array(256),c=new Array(4),l=new Array(4);for(var t=0;4>t;++t)c[t]=new Array(256),l[t]=new Array(256);for(var r,n,a,i,f,d,h,y=0,g=0,t=0;256>t;++t){i=g^g<<1^g<<2^g<<3^g<<4,i=i>>8^255&i^99,s[y]=i,o[i]=y,f=e[i],r=e[y],n=e[r],a=e[n],d=f<<24^i<<16^i<<8^(i^f),h=(r^n^a)<<24^(y^a)<<16^(y^n^a)<<8^(y^r^a);for(var m=0;4>m;++m)c[m][y]=d,l[m][i]=h,d=d<<24|d>>>8,h=h<<24|h>>>8;0===y?y=g=1:(y=r^e[e[e[r^a]]],g^=e[e[g]])}}function n(e,t){for(var r,n=e.slice(0),a=1,i=n.length,o=i+6+1,c=f*o,p=i;c>p;++p)r=n[p-1],p%i===0?(r=s[r>>>16&255]<<24^s[r>>>8&255]<<16^s[255&r]<<8^s[r>>>24]^u[a]<<24,a++):i>6&&p%i===4&&(r=s[r>>>24]<<24^s[r>>>16&255]<<16^s[r>>>8&255]<<8^s[255&r]),n[p]=n[p-i]^r;if(t){var d,h=l[0],y=l[1],g=l[2],m=l[3],v=n.slice(0);c=n.length;for(var p=0,C=c-f;c>p;p+=f,C-=f)if(0===p||p===c-f)v[p]=n[C],v[p+1]=n[C+3],v[p+2]=n[C+2],v[p+3]=n[C+1];else for(var E=0;f>E;++E)d=n[C+E],v[p+(3&-E)]=h[s[d>>>24]]^y[s[d>>>16&255]]^g[s[d>>>8&255]]^m[s[255&d]];n=v}return n}function a(e,t,r,n){var a,i,u,p,f,d=e.length/4-1;n?(a=l[0],i=l[1],u=l[2],p=l[3],f=o):(a=c[0],i=c[1],u=c[2],p=c[3],f=s);var h,y,g,m,v,C,E;h=t[0]^e[0],y=t[n?3:1]^e[1],g=t[2]^e[2],m=t[n?1:3]^e[3];for(var S=3,T=1;d>T;++T)v=a[h>>>24]^i[y>>>16&255]^u[g>>>8&255]^p[255&m]^e[++S],C=a[y>>>24]^i[g>>>16&255]^u[m>>>8&255]^p[255&h]^e[++S],E=a[g>>>24]^i[m>>>16&255]^u[h>>>8&255]^p[255&y]^e[++S],m=a[m>>>24]^i[h>>>16&255]^u[y>>>8&255]^p[255&g]^e[++S],h=v,y=C,g=E;r[0]=f[h>>>24]<<24^f[y>>>16&255]<<16^f[g>>>8&255]<<8^f[255&m]^e[++S],r[n?3:1]=f[y>>>24]<<24^f[g>>>16&255]<<16^f[m>>>8&255]<<8^f[255&h]^e[++S],r[2]=f[g>>>24]<<24^f[m>>>16&255]<<16^f[h>>>8&255]<<8^f[255&y]^e[++S],r[n?1:3]=f[m>>>24]<<24^f[h>>>16&255]<<16^f[y>>>8&255]<<8^f[255&g]^e[++S]}function i(t){t=t||{};var r,n=(t.mode||"CBC").toUpperCase(),a="AES-"+n;r=t.decrypt?e.cipher.createDecipher(a,t.key):e.cipher.createCipher(a,t.key);var i=r.start;return r.start=function(t,n){var a=null;n instanceof e.util.ByteBuffer&&(a=n,n={}),n=n||{},n.output=a,n.iv=t,i.call(r,n)},r}e.aes=e.aes||{},e.aes.startEncrypting=function(e,t,r,n){var a=i({key:e,output:r,decrypt:!1,mode:n});return a.start(t),a},e.aes.createEncryptionCipher=function(e,t){return i({key:e,output:null,decrypt:!1,mode:t})},e.aes.startDecrypting=function(e,t,r,n){var a=i({key:e,output:r,decrypt:!0,mode:n});return a.start(t),a},e.aes.createDecryptionCipher=function(e,t){return i({key:e,output:null,decrypt:!0,mode:t})},e.aes.Algorithm=function(e,t){p||r();var n=this;n.name=e,n.mode=new t({blockSize:16,cipher:{encrypt:function(e,t){return a(n._w,e,t,!1)},decrypt:function(e,t){return a(n._w,e,t,!0)}}}),n._init=!1},e.aes.Algorithm.prototype.initialize=function(t){if(!this._init){var r,a=t.key;if("string"!=typeof a||16!==a.length&&24!==a.length&&32!==a.length){if(e.util.isArray(a)&&(16===a.length||24===a.length||32===a.length)){r=a,a=e.util.createBuffer();for(var i=0;i<r.length;++i)a.putByte(r[i])}}else a=e.util.createBuffer(a);if(!e.util.isArray(a)){r=a,a=[];var s=r.length();if(16===s||24===s||32===s){s>>>=2;for(var i=0;s>i;++i)a.push(r.getInt32())}}if(!e.util.isArray(a)||4!==a.length&&6!==a.length&&8!==a.length)throw new Error("Invalid key parameter.");var o=this.mode.name,u=-1!==["CFB","OFB","CTR","GCM"].indexOf(o);this._w=n(a,t.decrypt&&!u),this._init=!0}},e.aes._expandKey=function(e,t){return p||r(),n(e,t)},e.aes._updateBlock=a,t("AES-CBC",e.cipher.modes.cbc),t("AES-CFB",e.cipher.modes.cfb),t("AES-OFB",e.cipher.modes.ofb),t("AES-CTR",e.cipher.modes.ctr),t("AES-GCM",e.cipher.modes.gcm);var s,o,u,c,l,p=!1,f=4}var n="aes";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/aes",["require","module","./cipher","./cipherModes","./util"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){e.pki=e.pki||{};var t=e.pki.oids=e.oids=e.oids||{};t["1.2.840.113549.1.1.1"]="rsaEncryption",t.rsaEncryption="1.2.840.113549.1.1.1",t["1.2.840.113549.1.1.4"]="md5WithRSAEncryption",t.md5WithRSAEncryption="1.2.840.113549.1.1.4",t["1.2.840.113549.1.1.5"]="sha1WithRSAEncryption",t.sha1WithRSAEncryption="1.2.840.113549.1.1.5",t["1.2.840.113549.1.1.7"]="RSAES-OAEP",t["RSAES-OAEP"]="1.2.840.113549.1.1.7",t["1.2.840.113549.1.1.8"]="mgf1",t.mgf1="1.2.840.113549.1.1.8",t["1.2.840.113549.1.1.9"]="pSpecified",t.pSpecified="1.2.840.113549.1.1.9",t["1.2.840.113549.1.1.10"]="RSASSA-PSS",t["RSASSA-PSS"]="1.2.840.113549.1.1.10",t["1.2.840.113549.1.1.11"]="sha256WithRSAEncryption",t.sha256WithRSAEncryption="1.2.840.113549.1.1.11",t["1.2.840.113549.1.1.12"]="sha384WithRSAEncryption",t.sha384WithRSAEncryption="1.2.840.113549.1.1.12",t["1.2.840.113549.1.1.13"]="sha512WithRSAEncryption",t.sha512WithRSAEncryption="1.2.840.113549.1.1.13",t["1.3.14.3.2.7"]="desCBC",t.desCBC="1.3.14.3.2.7",t["1.3.14.3.2.26"]="sha1",t.sha1="1.3.14.3.2.26",t["2.16.840.1.101.3.4.2.1"]="sha256",t.sha256="2.16.840.1.101.3.4.2.1",t["2.16.840.1.101.3.4.2.2"]="sha384",t.sha384="2.16.840.1.101.3.4.2.2",t["2.16.840.1.101.3.4.2.3"]="sha512",t.sha512="2.16.840.1.101.3.4.2.3",t["1.2.840.113549.2.5"]="md5",t.md5="1.2.840.113549.2.5",t["1.2.840.113549.1.7.1"]="data",t.data="1.2.840.113549.1.7.1",t["1.2.840.113549.1.7.2"]="signedData",t.signedData="1.2.840.113549.1.7.2",t["1.2.840.113549.1.7.3"]="envelopedData",t.envelopedData="1.2.840.113549.1.7.3",t["1.2.840.113549.1.7.4"]="signedAndEnvelopedData",t.signedAndEnvelopedData="1.2.840.113549.1.7.4",t["1.2.840.113549.1.7.5"]="digestedData",t.digestedData="1.2.840.113549.1.7.5",t["1.2.840.113549.1.7.6"]="encryptedData",t.encryptedData="1.2.840.113549.1.7.6",t["1.2.840.113549.1.9.1"]="emailAddress",t.emailAddress="1.2.840.113549.1.9.1",t["1.2.840.113549.1.9.2"]="unstructuredName",t.unstructuredName="1.2.840.113549.1.9.2",t["1.2.840.113549.1.9.3"]="contentType",t.contentType="1.2.840.113549.1.9.3",t["1.2.840.113549.1.9.4"]="messageDigest",t.messageDigest="1.2.840.113549.1.9.4",t["1.2.840.113549.1.9.5"]="signingTime",t.signingTime="1.2.840.113549.1.9.5",t["1.2.840.113549.1.9.6"]="counterSignature",t.counterSignature="1.2.840.113549.1.9.6",t["1.2.840.113549.1.9.7"]="challengePassword",t.challengePassword="1.2.840.113549.1.9.7",t["1.2.840.113549.1.9.8"]="unstructuredAddress",t.unstructuredAddress="1.2.840.113549.1.9.8",t["1.2.840.113549.1.9.14"]="extensionRequest",t.extensionRequest="1.2.840.113549.1.9.14",t["1.2.840.113549.1.9.20"]="friendlyName",t.friendlyName="1.2.840.113549.1.9.20",t["1.2.840.113549.1.9.21"]="localKeyId",t.localKeyId="1.2.840.113549.1.9.21",t["1.2.840.113549.1.9.22.1"]="x509Certificate",t.x509Certificate="1.2.840.113549.1.9.22.1",t["1.2.840.113549.1.12.10.1.1"]="keyBag",t.keyBag="1.2.840.113549.1.12.10.1.1",t["1.2.840.113549.1.12.10.1.2"]="pkcs8ShroudedKeyBag",t.pkcs8ShroudedKeyBag="1.2.840.113549.1.12.10.1.2",t["1.2.840.113549.1.12.10.1.3"]="certBag",t.certBag="1.2.840.113549.1.12.10.1.3",t["1.2.840.113549.1.12.10.1.4"]="crlBag",t.crlBag="1.2.840.113549.1.12.10.1.4",t["1.2.840.113549.1.12.10.1.5"]="secretBag",t.secretBag="1.2.840.113549.1.12.10.1.5",t["1.2.840.113549.1.12.10.1.6"]="safeContentsBag",t.safeContentsBag="1.2.840.113549.1.12.10.1.6",t["1.2.840.113549.1.5.13"]="pkcs5PBES2",t.pkcs5PBES2="1.2.840.113549.1.5.13",t["1.2.840.113549.1.5.12"]="pkcs5PBKDF2",t.pkcs5PBKDF2="1.2.840.113549.1.5.12",t["1.2.840.113549.1.12.1.1"]="pbeWithSHAAnd128BitRC4",t.pbeWithSHAAnd128BitRC4="1.2.840.113549.1.12.1.1",t["1.2.840.113549.1.12.1.2"]="pbeWithSHAAnd40BitRC4",t.pbeWithSHAAnd40BitRC4="1.2.840.113549.1.12.1.2",t["1.2.840.113549.1.12.1.3"]="pbeWithSHAAnd3-KeyTripleDES-CBC",t["pbeWithSHAAnd3-KeyTripleDES-CBC"]="1.2.840.113549.1.12.1.3",t["1.2.840.113549.1.12.1.4"]="pbeWithSHAAnd2-KeyTripleDES-CBC",t["pbeWithSHAAnd2-KeyTripleDES-CBC"]="1.2.840.113549.1.12.1.4",t["1.2.840.113549.1.12.1.5"]="pbeWithSHAAnd128BitRC2-CBC",t["pbeWithSHAAnd128BitRC2-CBC"]="1.2.840.113549.1.12.1.5",t["1.2.840.113549.1.12.1.6"]="pbewithSHAAnd40BitRC2-CBC",t["pbewithSHAAnd40BitRC2-CBC"]="1.2.840.113549.1.12.1.6",t["1.2.840.113549.3.7"]="des-EDE3-CBC",t["des-EDE3-CBC"]="1.2.840.113549.3.7",t["2.16.840.1.101.3.4.1.2"]="aes128-CBC",t["aes128-CBC"]="2.16.840.1.101.3.4.1.2",t["2.16.840.1.101.3.4.1.22"]="aes192-CBC",t["aes192-CBC"]="2.16.840.1.101.3.4.1.22",t["2.16.840.1.101.3.4.1.42"]="aes256-CBC",t["aes256-CBC"]="2.16.840.1.101.3.4.1.42",t["2.5.4.3"]="commonName",t.commonName="2.5.4.3",t["2.5.4.5"]="serialName",t.serialName="2.5.4.5",t["2.5.4.6"]="countryName",t.countryName="2.5.4.6",t["2.5.4.7"]="localityName",t.localityName="2.5.4.7",t["2.5.4.8"]="stateOrProvinceName",t.stateOrProvinceName="2.5.4.8",t["2.5.4.10"]="organizationName",t.organizationName="2.5.4.10",t["2.5.4.11"]="organizationalUnitName",t.organizationalUnitName="2.5.4.11",t["2.16.840.1.113730.1.1"]="nsCertType",t.nsCertType="2.16.840.1.113730.1.1",t["2.5.29.1"]="authorityKeyIdentifier",t["2.5.29.2"]="keyAttributes",t["2.5.29.3"]="certificatePolicies",t["2.5.29.4"]="keyUsageRestriction",t["2.5.29.5"]="policyMapping",t["2.5.29.6"]="subtreesConstraint",t["2.5.29.7"]="subjectAltName",t["2.5.29.8"]="issuerAltName",t["2.5.29.9"]="subjectDirectoryAttributes",t["2.5.29.10"]="basicConstraints",t["2.5.29.11"]="nameConstraints",t["2.5.29.12"]="policyConstraints",t["2.5.29.13"]="basicConstraints",t["2.5.29.14"]="subjectKeyIdentifier",t.subjectKeyIdentifier="2.5.29.14",t["2.5.29.15"]="keyUsage",t.keyUsage="2.5.29.15",t["2.5.29.16"]="privateKeyUsagePeriod",t["2.5.29.17"]="subjectAltName",t.subjectAltName="2.5.29.17",t["2.5.29.18"]="issuerAltName",t.issuerAltName="2.5.29.18",t["2.5.29.19"]="basicConstraints",t.basicConstraints="2.5.29.19",t["2.5.29.20"]="cRLNumber",t["2.5.29.21"]="cRLReason",t["2.5.29.22"]="expirationDate",t["2.5.29.23"]="instructionCode",t["2.5.29.24"]="invalidityDate",t["2.5.29.25"]="cRLDistributionPoints",t["2.5.29.26"]="issuingDistributionPoint",t["2.5.29.27"]="deltaCRLIndicator",t["2.5.29.28"]="issuingDistributionPoint",t["2.5.29.29"]="certificateIssuer",t["2.5.29.30"]="nameConstraints",t["2.5.29.31"]="cRLDistributionPoints",t["2.5.29.32"]="certificatePolicies",t["2.5.29.33"]="policyMappings",t["2.5.29.34"]="policyConstraints",t["2.5.29.35"]="authorityKeyIdentifier",t["2.5.29.36"]="policyConstraints",t["2.5.29.37"]="extKeyUsage",t.extKeyUsage="2.5.29.37",t["2.5.29.46"]="freshestCRL",t["2.5.29.54"]="inhibitAnyPolicy",t["1.3.6.1.5.5.7.3.1"]="serverAuth",t.serverAuth="1.3.6.1.5.5.7.3.1",t["1.3.6.1.5.5.7.3.2"]="clientAuth",t.clientAuth="1.3.6.1.5.5.7.3.2",t["1.3.6.1.5.5.7.3.3"]="codeSigning",t.codeSigning="1.3.6.1.5.5.7.3.3",t["1.3.6.1.5.5.7.3.4"]="emailProtection",t.emailProtection="1.3.6.1.5.5.7.3.4",t["1.3.6.1.5.5.7.3.8"]="timeStamping",t.timeStamping="1.3.6.1.5.5.7.3.8"}var n="oids";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/oids",["require","module"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){var t=e.asn1=e.asn1||{};t.Class={UNIVERSAL:0,APPLICATION:64,CONTEXT_SPECIFIC:128,PRIVATE:192},t.Type={NONE:0,BOOLEAN:1,INTEGER:2,BITSTRING:3,OCTETSTRING:4,NULL:5,OID:6,ODESC:7,EXTERNAL:8,REAL:9,ENUMERATED:10,EMBEDDED:11,UTF8:12,ROID:13,SEQUENCE:16,SET:17,PRINTABLESTRING:19,IA5STRING:22,UTCTIME:23,GENERALIZEDTIME:24,BMPSTRING:30},t.create=function(t,r,n,a){if(e.util.isArray(a)){for(var i=[],s=0;s<a.length;++s)void 0!==a[s]&&i.push(a[s]);a=i}return{tagClass:t,type:r,constructed:n,composed:n||e.util.isArray(a),value:a}};var r=function(e){var t=e.getByte();if(128!==t){var r,n=128&t;return r=n?e.getInt((127&t)<<3):t}};t.fromDer=function(n,a){if(void 0===a&&(a=!0),"string"==typeof n&&(n=e.util.createBuffer(n)),n.length()<2){var i=new Error("Too few bytes to parse DER.");throw i.bytes=n.length(),i}var s=n.getByte(),o=192&s,u=31&s,c=r(n);if(n.length()<c){if(a){var i=new Error("Too few bytes to read ASN.1 value.");throw i.detail=n.length()+" < "+c,i}c=n.length()}var l,p=32===(32&s),f=p;if(!f&&o===t.Class.UNIVERSAL&&u===t.Type.BITSTRING&&c>1){var d=n.read,h=n.getByte();if(0===h){s=n.getByte();var y=192&s;if(y===t.Class.UNIVERSAL||y===t.Class.CONTEXT_SPECIFIC)try{var g=r(n);f=g===c-(n.read-d),f&&(++d,--c)}catch(m){}}n.read=d}if(f)if(l=[],void 0===c)for(;;){if(n.bytes(2)===String.fromCharCode(0,0)){n.getBytes(2);break}l.push(t.fromDer(n,a))}else for(var v=n.length();c>0;)l.push(t.fromDer(n,a)),c-=v-n.length(),v=n.length();else{if(void 0===c){if(a)throw new Error("Non-constructed ASN.1 object of indefinite length.");c=n.length()}if(u===t.Type.BMPSTRING){l="";for(var C=0;c>C;C+=2)l+=String.fromCharCode(n.getInt16())}else l=n.getBytes(c)}return t.create(o,u,p,l)},t.toDer=function(r){var n=e.util.createBuffer(),a=r.tagClass|r.type,i=e.util.createBuffer();if(r.composed){r.constructed?a|=32:i.putByte(0);for(var s=0;s<r.value.length;++s)void 0!==r.value[s]&&i.putBuffer(t.toDer(r.value[s]))}else if(r.type===t.Type.BMPSTRING)for(var s=0;s<r.value.length;++s)i.putInt16(r.value.charCodeAt(s));else i.putBytes(r.value);if(n.putByte(a),i.length()<=127)n.putByte(127&i.length());else{var o=i.length(),u="";do u+=String.fromCharCode(255&o),o>>>=8;while(o>0);n.putByte(128|u.length);for(var s=u.length-1;s>=0;--s)n.putByte(u.charCodeAt(s))}return n.putBuffer(i),n},t.oidToDer=function(t){var r=t.split("."),n=e.util.createBuffer();n.putByte(40*parseInt(r[0],10)+parseInt(r[1],10));for(var a,i,s,o,u=2;u<r.length;++u){a=!0,i=[],s=parseInt(r[u],10);do o=127&s,s>>>=7,a||(o|=128),i.push(o),a=!1;while(s>0);for(var c=i.length-1;c>=0;--c)n.putByte(i[c])}return n},t.derToOid=function(t){var r;"string"==typeof t&&(t=e.util.createBuffer(t));var n=t.getByte();r=Math.floor(n/40)+"."+n%40;for(var a=0;t.length()>0;)n=t.getByte(),a<<=7,128&n?a+=127&n:(r+="."+(a+n),a=0);return r},t.utcTimeToDate=function(e){var t=new Date,r=parseInt(e.substr(0,2),10);r=r>=50?1900+r:2e3+r;var n=parseInt(e.substr(2,2),10)-1,a=parseInt(e.substr(4,2),10),i=parseInt(e.substr(6,2),10),s=parseInt(e.substr(8,2),10),o=0;if(e.length>11){var u=e.charAt(10),c=10;"+"!==u&&"-"!==u&&(o=parseInt(e.substr(10,2),10),c+=2)}if(t.setUTCFullYear(r,n,a),t.setUTCHours(i,s,o,0),c&&(u=e.charAt(c),"+"===u||"-"===u)){var l=parseInt(e.substr(c+1,2),10),p=parseInt(e.substr(c+4,2),10),f=60*l+p;f*=6e4,"+"===u?t.setTime(+t-f):t.setTime(+t+f)}return t},t.generalizedTimeToDate=function(e){var t=new Date,r=parseInt(e.substr(0,4),10),n=parseInt(e.substr(4,2),10)-1,a=parseInt(e.substr(6,2),10),i=parseInt(e.substr(8,2),10),s=parseInt(e.substr(10,2),10),o=parseInt(e.substr(12,2),10),u=0,c=0,l=!1;"Z"===e.charAt(e.length-1)&&(l=!0);var p=e.length-5,f=e.charAt(p);if("+"===f||"-"===f){var d=parseInt(e.substr(p+1,2),10),h=parseInt(e.substr(p+4,2),10);c=60*d+h,c*=6e4,"+"===f&&(c*=-1),l=!0}return"."===e.charAt(14)&&(u=1e3*parseFloat(e.substr(14),10)),l?(t.setUTCFullYear(r,n,a),t.setUTCHours(i,s,o,u),t.setTime(+t+c)):(t.setFullYear(r,n,a),t.setHours(i,s,o,u)),t},t.dateToUtcTime=function(e){var t="",r=[];r.push((""+e.getUTCFullYear()).substr(2)),r.push(""+(e.getUTCMonth()+1)),r.push(""+e.getUTCDate()),r.push(""+e.getUTCHours()),r.push(""+e.getUTCMinutes()),r.push(""+e.getUTCSeconds());for(var n=0;n<r.length;++n)r[n].length<2&&(t+="0"),t+=r[n];return t+="Z"},t.integerToDer=function(t){var r=e.util.createBuffer();if(t>=-128&&128>t)return r.putSignedInt(t,8);if(t>=-32768&&32768>t)return r.putSignedInt(t,16);if(t>=-8388608&&8388608>t)return r.putSignedInt(t,24);if(t>=-2147483648&&2147483648>t)return r.putSignedInt(t,32);var n=new Error("Integer too large; max is 32-bits.");throw n.integer=t,n},t.derToInteger=function(t){"string"==typeof t&&(t=e.util.createBuffer(t));var r=8*t.length();if(r>32)throw new Error("Integer too large; max is 32-bits.");return t.getSignedInt(r)},t.validate=function(r,n,a,i){var s=!1;if(r.tagClass!==n.tagClass&&"undefined"!=typeof n.tagClass||r.type!==n.type&&"undefined"!=typeof n.type)i&&(r.tagClass!==n.tagClass&&i.push("["+n.name+'] Expected tag class "'+n.tagClass+'", got "'+r.tagClass+'"'),r.type!==n.type&&i.push("["+n.name+'] Expected type "'+n.type+'", got "'+r.type+'"'));else if(r.constructed===n.constructed||"undefined"==typeof n.constructed){if(s=!0,n.value&&e.util.isArray(n.value))for(var o=0,u=0;s&&u<n.value.length;++u)s=n.value[u].optional||!1,r.value[o]&&(s=t.validate(r.value[o],n.value[u],a,i),s?++o:n.value[u].optional&&(s=!0)),!s&&i&&i.push("["+n.name+'] Tag class "'+n.tagClass+'", type "'+n.type+'" expected value length "'+n.value.length+'", got "'+r.value.length+'"');s&&a&&(n.capture&&(a[n.capture]=r.value),n.captureAsn1&&(a[n.captureAsn1]=r))}else i&&i.push("["+n.name+'] Expected constructed "'+n.constructed+'", got "'+r.constructed+'"');return s};var n=/[^\\u0000-\\u00ff]/;t.prettyPrint=function(r,a,i){var s="";a=a||0,i=i||2,a>0&&(s+="\n");for(var o="",u=0;a*i>u;++u)o+=" ";switch(s+=o+"Tag: ",r.tagClass){case t.Class.UNIVERSAL:s+="Universal:";break;case t.Class.APPLICATION:s+="Application:";break;case t.Class.CONTEXT_SPECIFIC:s+="Context-Specific:";break;case t.Class.PRIVATE:s+="Private:"}if(r.tagClass===t.Class.UNIVERSAL)switch(s+=r.type,r.type){case t.Type.NONE:s+=" (None)";break;case t.Type.BOOLEAN:s+=" (Boolean)";break;case t.Type.BITSTRING:s+=" (Bit string)";break;case t.Type.INTEGER:s+=" (Integer)";break;case t.Type.OCTETSTRING:s+=" (Octet string)";break;case t.Type.NULL:s+=" (Null)";break;case t.Type.OID:s+=" (Object Identifier)";break;case t.Type.ODESC:s+=" (Object Descriptor)";break;case t.Type.EXTERNAL:s+=" (External or Instance of)";break;case t.Type.REAL:s+=" (Real)";break;case t.Type.ENUMERATED:s+=" (Enumerated)";break;case t.Type.EMBEDDED:s+=" (Embedded PDV)";break;case t.Type.UTF8:s+=" (UTF8)";break;case t.Type.ROID:s+=" (Relative Object Identifier)";break;case t.Type.SEQUENCE:s+=" (Sequence)";break;case t.Type.SET:s+=" (Set)";break;case t.Type.PRINTABLESTRING:s+=" (Printable String)";break;case t.Type.IA5String:s+=" (IA5String (ASCII))";break;case t.Type.UTCTIME:s+=" (UTC time)";break;case t.Type.GENERALIZEDTIME:s+=" (Generalized time)";break;case t.Type.BMPSTRING:s+=" (BMP String)"}else s+=r.type;if(s+="\n",s+=o+"Constructed: "+r.constructed+"\n",r.composed){for(var c=0,l="",u=0;u<r.value.length;++u)void 0!==r.value[u]&&(c+=1,l+=t.prettyPrint(r.value[u],a+1,i),u+1<r.value.length&&(l+=","));s+=o+"Sub values: "+c+l}else{if(s+=o+"Value: ",r.type===t.Type.OID){var p=t.derToOid(r.value);s+=p,e.pki&&e.pki.oids&&p in e.pki.oids&&(s+=" ("+e.pki.oids[p]+") ")}if(r.type===t.Type.INTEGER)try{s+=t.derToInteger(r.value)}catch(f){s+="0x"+e.util.bytesToHex(r.value)}else r.type===t.Type.OCTETSTRING?(n.test(r.value)||(s+="("+r.value+") "),s+="0x"+e.util.bytesToHex(r.value)):s+=r.type===t.Type.UTF8?e.util.decodeUtf8(r.value):r.type===t.Type.PRINTABLESTRING||r.type===t.Type.IA5String?r.value:n.test(r.value)?"0x"+e.util.bytesToHex(r.value):0===r.value.length?"[null]":r.value}return s}}var n="asn1";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/asn1",["require","module","./util","./oids"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function t(){a=String.fromCharCode(128),a+=e.util.fillString(String.fromCharCode(0),64),i=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,6,11,0,5,10,15,4,9,14,3,8,13,2,7,12,5,8,11,14,1,4,7,10,13,0,3,6,9,12,15,2,0,7,14,5,12,3,10,1,8,15,6,13,4,11,2,9],s=[7,12,17,22,7,12,17,22,7,12,17,22,7,12,17,22,5,9,14,20,5,9,14,20,5,9,14,20,5,9,14,20,4,11,16,23,4,11,16,23,4,11,16,23,4,11,16,23,6,10,15,21,6,10,15,21,6,10,15,21,6,10,15,21],o=new Array(64);for(var t=0;64>t;++t)o[t]=Math.floor(4294967296*Math.abs(Math.sin(t+1)));u=!0}function r(e,t,r){for(var n,a,u,c,l,p,f,d,h=r.length();h>=64;){for(a=e.h0,u=e.h1,c=e.h2,l=e.h3,d=0;16>d;++d)t[d]=r.getInt32Le(),p=l^u&(c^l),n=a+p+o[d]+t[d],f=s[d],a=l,l=c,c=u,u+=n<<f|n>>>32-f;for(;32>d;++d)p=c^l&(u^c),n=a+p+o[d]+t[i[d]],f=s[d],a=l,l=c,c=u,u+=n<<f|n>>>32-f;for(;48>d;++d)p=u^c^l,n=a+p+o[d]+t[i[d]],f=s[d],a=l,l=c,c=u,u+=n<<f|n>>>32-f;for(;64>d;++d)p=c^(u|~l),n=a+p+o[d]+t[i[d]],f=s[d],a=l,l=c,c=u,u+=n<<f|n>>>32-f;e.h0=e.h0+a|0,e.h1=e.h1+u|0,e.h2=e.h2+c|0,e.h3=e.h3+l|0,h-=64}}var n=e.md5=e.md5||{};e.md=e.md||{},e.md.algorithms=e.md.algorithms||{},e.md.md5=e.md.algorithms.md5=n,n.create=function(){u||t();var n=null,i=e.util.createBuffer(),s=new Array(16),o={algorithm:"md5",blockLength:64,digestLength:16,messageLength:0,messageLength64:[0,0]};return o.start=function(){return o.messageLength=0,o.messageLength64=[0,0],i=e.util.createBuffer(),n={h0:1732584193,h1:4023233417,h2:2562383102,h3:271733878},o},o.start(),o.update=function(t,a){return"utf8"===a&&(t=e.util.encodeUtf8(t)),o.messageLength+=t.length,o.messageLength64[0]+=t.length/4294967296>>>0,o.messageLength64[1]+=t.length>>>0,i.putBytes(t),r(n,s,i),(i.read>2048||0===i.length())&&i.compact(),o},o.digest=function(){var t=e.util.createBuffer();t.putBytes(i.bytes()),t.putBytes(a.substr(0,64-(o.messageLength64[1]+8&63))),t.putInt32Le(o.messageLength64[1]<<3),t.putInt32Le(o.messageLength64[0]<<3|o.messageLength64[0]>>>28);var u={h0:n.h0,h1:n.h1,h2:n.h2,h3:n.h3};r(u,s,t);var c=e.util.createBuffer();return c.putInt32Le(u.h0),c.putInt32Le(u.h1),c.putInt32Le(u.h2),c.putInt32Le(u.h3),c},o};var a=null,i=null,s=null,o=null,u=!1}var n="md5";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/md5",["require","module","./util"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function t(){a=String.fromCharCode(128),a+=e.util.fillString(String.fromCharCode(0),64),i=!0}function r(e,t,r){for(var n,a,i,s,o,u,c,l,p=r.length();p>=64;){for(a=e.h0,i=e.h1,s=e.h2,o=e.h3,u=e.h4,l=0;16>l;++l)n=r.getInt32(),
    t[l]=n,c=o^i&(s^o),n=(a<<5|a>>>27)+c+u+1518500249+n,u=o,o=s,s=i<<30|i>>>2,i=a,a=n;for(;20>l;++l)n=t[l-3]^t[l-8]^t[l-14]^t[l-16],n=n<<1|n>>>31,t[l]=n,c=o^i&(s^o),n=(a<<5|a>>>27)+c+u+1518500249+n,u=o,o=s,s=i<<30|i>>>2,i=a,a=n;for(;32>l;++l)n=t[l-3]^t[l-8]^t[l-14]^t[l-16],n=n<<1|n>>>31,t[l]=n,c=i^s^o,n=(a<<5|a>>>27)+c+u+1859775393+n,u=o,o=s,s=i<<30|i>>>2,i=a,a=n;for(;40>l;++l)n=t[l-6]^t[l-16]^t[l-28]^t[l-32],n=n<<2|n>>>30,t[l]=n,c=i^s^o,n=(a<<5|a>>>27)+c+u+1859775393+n,u=o,o=s,s=i<<30|i>>>2,i=a,a=n;for(;60>l;++l)n=t[l-6]^t[l-16]^t[l-28]^t[l-32],n=n<<2|n>>>30,t[l]=n,c=i&s|o&(i^s),n=(a<<5|a>>>27)+c+u+2400959708+n,u=o,o=s,s=i<<30|i>>>2,i=a,a=n;for(;80>l;++l)n=t[l-6]^t[l-16]^t[l-28]^t[l-32],n=n<<2|n>>>30,t[l]=n,c=i^s^o,n=(a<<5|a>>>27)+c+u+3395469782+n,u=o,o=s,s=i<<30|i>>>2,i=a,a=n;e.h0=e.h0+a|0,e.h1=e.h1+i|0,e.h2=e.h2+s|0,e.h3=e.h3+o|0,e.h4=e.h4+u|0,p-=64}}var n=e.sha1=e.sha1||{};e.md=e.md||{},e.md.algorithms=e.md.algorithms||{},e.md.sha1=e.md.algorithms.sha1=n,n.create=function(){i||t();var n=null,s=e.util.createBuffer(),o=new Array(80),u={algorithm:"sha1",blockLength:64,digestLength:20,messageLength:0,messageLength64:[0,0]};return u.start=function(){return u.messageLength=0,u.messageLength64=[0,0],s=e.util.createBuffer(),n={h0:1732584193,h1:4023233417,h2:2562383102,h3:271733878,h4:3285377520},u},u.start(),u.update=function(t,a){return"utf8"===a&&(t=e.util.encodeUtf8(t)),u.messageLength+=t.length,u.messageLength64[0]+=t.length/4294967296>>>0,u.messageLength64[1]+=t.length>>>0,s.putBytes(t),r(n,o,s),(s.read>2048||0===s.length())&&s.compact(),u},u.digest=function(){var t=e.util.createBuffer();t.putBytes(s.bytes()),t.putBytes(a.substr(0,64-(u.messageLength64[1]+8&63))),t.putInt32(u.messageLength64[0]<<3|u.messageLength64[0]>>>28),t.putInt32(u.messageLength64[1]<<3);var i={h0:n.h0,h1:n.h1,h2:n.h2,h3:n.h3,h4:n.h4};r(i,o,t);var c=e.util.createBuffer();return c.putInt32(i.h0),c.putInt32(i.h1),c.putInt32(i.h2),c.putInt32(i.h3),c.putInt32(i.h4),c},u};var a=null,i=!1}var n="sha1";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/sha1",["require","module","./util"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function t(){a=String.fromCharCode(128),a+=e.util.fillString(String.fromCharCode(0),64),s=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],i=!0}function r(e,t,r){for(var n,a,i,o,u,c,l,p,f,d,h,y,g,m,v,C=r.length();C>=64;){for(l=0;16>l;++l)t[l]=r.getInt32();for(;64>l;++l)n=t[l-2],n=(n>>>17|n<<15)^(n>>>19|n<<13)^n>>>10,a=t[l-15],a=(a>>>7|a<<25)^(a>>>18|a<<14)^a>>>3,t[l]=n+t[l-7]+a+t[l-16]|0;for(p=e.h0,f=e.h1,d=e.h2,h=e.h3,y=e.h4,g=e.h5,m=e.h6,v=e.h7,l=0;64>l;++l)o=(y>>>6|y<<26)^(y>>>11|y<<21)^(y>>>25|y<<7),u=m^y&(g^m),i=(p>>>2|p<<30)^(p>>>13|p<<19)^(p>>>22|p<<10),c=p&f|d&(p^f),n=v+o+u+s[l]+t[l],a=i+c,v=m,m=g,g=y,y=h+n|0,h=d,d=f,f=p,p=n+a|0;e.h0=e.h0+p|0,e.h1=e.h1+f|0,e.h2=e.h2+d|0,e.h3=e.h3+h|0,e.h4=e.h4+y|0,e.h5=e.h5+g|0,e.h6=e.h6+m|0,e.h7=e.h7+v|0,C-=64}}var n=e.sha256=e.sha256||{};e.md=e.md||{},e.md.algorithms=e.md.algorithms||{},e.md.sha256=e.md.algorithms.sha256=n,n.create=function(){i||t();var n=null,s=e.util.createBuffer(),o=new Array(64),u={algorithm:"sha256",blockLength:64,digestLength:32,messageLength:0,messageLength64:[0,0]};return u.start=function(){return u.messageLength=0,u.messageLength64=[0,0],s=e.util.createBuffer(),n={h0:1779033703,h1:3144134277,h2:1013904242,h3:2773480762,h4:1359893119,h5:2600822924,h6:528734635,h7:1541459225},u},u.start(),u.update=function(t,a){return"utf8"===a&&(t=e.util.encodeUtf8(t)),u.messageLength+=t.length,u.messageLength64[0]+=t.length/4294967296>>>0,u.messageLength64[1]+=t.length>>>0,s.putBytes(t),r(n,o,s),(s.read>2048||0===s.length())&&s.compact(),u},u.digest=function(){var t=e.util.createBuffer();t.putBytes(s.bytes()),t.putBytes(a.substr(0,64-(u.messageLength64[1]+8&63))),t.putInt32(u.messageLength64[0]<<3|u.messageLength64[0]>>>28),t.putInt32(u.messageLength64[1]<<3);var i={h0:n.h0,h1:n.h1,h2:n.h2,h3:n.h3,h4:n.h4,h5:n.h5,h6:n.h6,h7:n.h7};r(i,o,t);var c=e.util.createBuffer();return c.putInt32(i.h0),c.putInt32(i.h1),c.putInt32(i.h2),c.putInt32(i.h3),c.putInt32(i.h4),c.putInt32(i.h5),c.putInt32(i.h6),c.putInt32(i.h7),c},u};var a=null,i=!1,s=null}var n="sha256";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/sha256",["require","module","./util"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function t(){i=String.fromCharCode(128),i+=e.util.fillString(String.fromCharCode(0),128),o=[[1116352408,3609767458],[1899447441,602891725],[3049323471,3964484399],[3921009573,2173295548],[961987163,4081628472],[1508970993,3053834265],[2453635748,2937671579],[2870763221,3664609560],[3624381080,2734883394],[310598401,1164996542],[607225278,1323610764],[1426881987,3590304994],[1925078388,4068182383],[2162078206,991336113],[2614888103,633803317],[3248222580,3479774868],[3835390401,2666613458],[4022224774,944711139],[264347078,2341262773],[604807628,2007800933],[770255983,1495990901],[1249150122,1856431235],[1555081692,3175218132],[1996064986,2198950837],[2554220882,3999719339],[2821834349,766784016],[2952996808,2566594879],[3210313671,3203337956],[3336571891,1034457026],[3584528711,2466948901],[113926993,3758326383],[338241895,168717936],[666307205,1188179964],[773529912,1546045734],[1294757372,1522805485],[1396182291,2643833823],[1695183700,2343527390],[1986661051,1014477480],[2177026350,1206759142],[2456956037,344077627],[2730485921,1290863460],[2820302411,3158454273],[3259730800,3505952657],[3345764771,106217008],[3516065817,3606008344],[3600352804,1432725776],[4094571909,1467031594],[275423344,851169720],[430227734,3100823752],[506948616,1363258195],[659060556,3750685593],[883997877,3785050280],[958139571,3318307427],[1322822218,3812723403],[1537002063,2003034995],[1747873779,3602036899],[1955562222,1575990012],[2024104815,1125592928],[2227730452,2716904306],[2361852424,442776044],[2428436474,593698344],[2756734187,3733110249],[3204031479,2999351573],[3329325298,3815920427],[3391569614,3928383900],[3515267271,566280711],[3940187606,3454069534],[4118630271,4000239992],[116418474,1914138554],[174292421,2731055270],[289380356,3203993006],[460393269,320620315],[685471733,587496836],[852142971,1086792851],[1017036298,365543100],[1126000580,2618297676],[1288033470,3409855158],[1501505948,4234509866],[1607167915,987167468],[1816402316,1246189591]],u={},u["SHA-512"]=[[1779033703,4089235720],[3144134277,2227873595],[1013904242,4271175723],[2773480762,1595750129],[1359893119,2917565137],[2600822924,725511199],[528734635,4215389547],[1541459225,327033209]],u["SHA-384"]=[[3418070365,3238371032],[1654270250,914150663],[2438529370,812702999],[355462360,4144912697],[1731405415,4290775857],[2394180231,1750603025],[3675008525,1694076839],[1203062813,3204075428]],u["SHA-512/256"]=[[573645204,4230739756],[2673172387,3360449730],[596883563,1867755857],[2520282905,1497426621],[2519219938,2827943907],[3193839141,1401305490],[721525244,746961066],[246885852,2177182882]],u["SHA-512/224"]=[[2352822216,424955298],[1944164710,2312950998],[502970286,855612546],[1738396948,1479516111],[258812777,2077511080],[2011393907,79989058],[1067287976,1780299464],[286451373,2446758561]],s=!0}function r(e,t,r){for(var n,a,i,s,u,c,l,p,f,d,h,y,g,m,v,C,E,S,T,A,I,b,B,k,N,R,w,L,_,D,U,P,V,O,x,K=r.length();K>=128;){for(_=0;16>_;++_)t[_][0]=r.getInt32()>>>0,t[_][1]=r.getInt32()>>>0;for(;80>_;++_)P=t[_-2],D=P[0],U=P[1],n=((D>>>19|U<<13)^(U>>>29|D<<3)^D>>>6)>>>0,a=((D<<13|U>>>19)^(U<<3|D>>>29)^(D<<26|U>>>6))>>>0,O=t[_-15],D=O[0],U=O[1],i=((D>>>1|U<<31)^(D>>>8|U<<24)^D>>>7)>>>0,s=((D<<31|U>>>1)^(D<<24|U>>>8)^(D<<25|U>>>7))>>>0,V=t[_-7],x=t[_-16],U=a+V[1]+s+x[1],t[_][0]=n+V[0]+i+x[0]+(U/4294967296>>>0)>>>0,t[_][1]=U>>>0;for(g=e[0][0],m=e[0][1],v=e[1][0],C=e[1][1],E=e[2][0],S=e[2][1],T=e[3][0],A=e[3][1],I=e[4][0],b=e[4][1],B=e[5][0],k=e[5][1],N=e[6][0],R=e[6][1],w=e[7][0],L=e[7][1],_=0;80>_;++_)l=((I>>>14|b<<18)^(I>>>18|b<<14)^(b>>>9|I<<23))>>>0,p=((I<<18|b>>>14)^(I<<14|b>>>18)^(b<<23|I>>>9))>>>0,f=(N^I&(B^N))>>>0,d=(R^b&(k^R))>>>0,u=((g>>>28|m<<4)^(m>>>2|g<<30)^(m>>>7|g<<25))>>>0,c=((g<<4|m>>>28)^(m<<30|g>>>2)^(m<<25|g>>>7))>>>0,h=(g&v|E&(g^v))>>>0,y=(m&C|S&(m^C))>>>0,U=L+p+d+o[_][1]+t[_][1],n=w+l+f+o[_][0]+t[_][0]+(U/4294967296>>>0)>>>0,a=U>>>0,U=c+y,i=u+h+(U/4294967296>>>0)>>>0,s=U>>>0,w=N,L=R,N=B,R=k,B=I,k=b,U=A+a,I=T+n+(U/4294967296>>>0)>>>0,b=U>>>0,T=E,A=S,E=v,S=C,v=g,C=m,U=a+s,g=n+i+(U/4294967296>>>0)>>>0,m=U>>>0;U=e[0][1]+m,e[0][0]=e[0][0]+g+(U/4294967296>>>0)>>>0,e[0][1]=U>>>0,U=e[1][1]+C,e[1][0]=e[1][0]+v+(U/4294967296>>>0)>>>0,e[1][1]=U>>>0,U=e[2][1]+S,e[2][0]=e[2][0]+E+(U/4294967296>>>0)>>>0,e[2][1]=U>>>0,U=e[3][1]+A,e[3][0]=e[3][0]+T+(U/4294967296>>>0)>>>0,e[3][1]=U>>>0,U=e[4][1]+b,e[4][0]=e[4][0]+I+(U/4294967296>>>0)>>>0,e[4][1]=U>>>0,U=e[5][1]+k,e[5][0]=e[5][0]+B+(U/4294967296>>>0)>>>0,e[5][1]=U>>>0,U=e[6][1]+R,e[6][0]=e[6][0]+N+(U/4294967296>>>0)>>>0,e[6][1]=U>>>0,U=e[7][1]+L,e[7][0]=e[7][0]+w+(U/4294967296>>>0)>>>0,e[7][1]=U>>>0,K-=128}}var n=e.sha512=e.sha512||{};e.md=e.md||{},e.md.algorithms=e.md.algorithms||{},e.md.sha512=e.md.algorithms.sha512=n;var a=e.sha384=e.sha512.sha384=e.sha512.sha384||{};a.create=function(){return n.create("SHA-384")},e.md.sha384=e.md.algorithms.sha384=a,e.sha512.sha256=e.sha512.sha256||{create:function(){return n.create("SHA-512/256")}},e.md["sha512/256"]=e.md.algorithms["sha512/256"]=e.sha512.sha256,e.sha512.sha224=e.sha512.sha224||{create:function(){return n.create("SHA-512/224")}},e.md["sha512/224"]=e.md.algorithms["sha512/224"]=e.sha512.sha224,n.create=function(n){if(s||t(),"undefined"==typeof n&&(n="SHA-512"),!(n in u))throw new Error("Invalid SHA-512 algorithm: "+n);for(var a=u[n],o=null,c=e.util.createBuffer(),l=new Array(80),p=0;80>p;++p)l[p]=new Array(2);var f={algorithm:n.replace("-","").toLowerCase(),blockLength:128,digestLength:64,messageLength:0,messageLength128:[0,0,0,0]};return f.start=function(){f.messageLength=0,f.messageLength128=[0,0,0,0],c=e.util.createBuffer(),o=new Array(a.length);for(var t=0;t<a.length;++t)o[t]=a[t].slice(0);return f},f.start(),f.update=function(t,n){"utf8"===n&&(t=e.util.encodeUtf8(t)),f.messageLength+=t.length;var a=t.length;a=[a/4294967296>>>0,a>>>0];for(var i=3;i>=0;--i)f.messageLength128[i]+=a[1],a[1]=a[0]+(f.messageLength128[i]/4294967296>>>0),f.messageLength128[i]=f.messageLength128[i]>>>0,a[0]=a[1]/4294967296>>>0;return c.putBytes(t),r(o,l,c),(c.read>2048||0===c.length())&&c.compact(),f},f.digest=function(){var t=e.util.createBuffer();t.putBytes(c.bytes()),t.putBytes(i.substr(0,128-(f.messageLength128[3]+16&127)));for(var a=[],s=0;3>s;++s)a[s]=f.messageLength128[s]<<3|f.messageLength128[s-1]>>>28;a[3]=f.messageLength128[3]<<3,t.putInt32(a[0]),t.putInt32(a[1]),t.putInt32(a[2]),t.putInt32(a[3]);for(var u=new Array(o.length),s=0;s<o.length;++s)u[s]=o[s].slice(0);r(u,l,t);var p,d=e.util.createBuffer();p="SHA-512"===n?u.length:"SHA-384"===n?u.length-2:u.length-4;for(var s=0;p>s;++s)d.putInt32(u[s][0]),(s!==p-1||"SHA-512/224"!==n)&&d.putInt32(u[s][1]);return d},f};var i=null,s=!1,o=null,u=null}var n="sha512";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/sha512",["require","module","./util"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){e.md=e.md||{},e.md.algorithms={md5:e.md5,sha1:e.sha1,sha256:e.sha256},e.md.md5=e.md5,e.md.sha1=e.sha1,e.md.sha256=e.sha256}var n="md";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/md",["require","module","./md5","./sha1","./sha256","./sha512"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){var t=e.hmac=e.hmac||{};t.create=function(){var t=null,r=null,n=null,a=null,i={};return i.start=function(i,s){if(null!==i)if("string"==typeof i){if(i=i.toLowerCase(),!(i in e.md.algorithms))throw new Error('Unknown hash algorithm "'+i+'"');r=e.md.algorithms[i].create()}else r=i;if(null===s)s=t;else{if("string"==typeof s)s=e.util.createBuffer(s);else if(e.util.isArray(s)){var o=s;s=e.util.createBuffer();for(var u=0;u<o.length;++u)s.putByte(o[u])}var c=s.length();c>r.blockLength&&(r.start(),r.update(s.bytes()),s=r.digest()),n=e.util.createBuffer(),a=e.util.createBuffer(),c=s.length();for(var u=0;c>u;++u){var o=s.at(u);n.putByte(54^o),a.putByte(92^o)}if(c<r.blockLength)for(var o=r.blockLength-c,u=0;o>u;++u)n.putByte(54),a.putByte(92);t=s,n=n.bytes(),a=a.bytes()}r.start(),r.update(n)},i.update=function(e){r.update(e)},i.getMacData=function(){var e=r.digest().bytes();return r.start(),r.update(a),r.update(e),r.digest()},i.digest=i.getMacData,i}}var n="hmac";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/hmac",["require","module","./md","./util"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function t(e){for(var t=e.name+": ",r=[],n=function(e,t){return" "+t},a=0;a<e.values.length;++a)r.push(e.values[a].replace(/^(\S+\r\n)/,n));t+=r.join(",")+"\r\n";for(var i=0,s=-1,a=0;a<t.length;++a,++i)if(i>65&&-1!==s){var o=t[s];","===o?(++s,t=t.substr(0,s)+"\r\n "+t.substr(s)):t=t.substr(0,s)+"\r\n"+o+t.substr(s+1),i=a-s-1,s=-1,++a}else(" "===t[a]||"	"===t[a]||","===t[a])&&(s=a);return t}function r(e){return e.replace(/^\s+/,"")}var n=e.pem=e.pem||{};n.encode=function(r,n){n=n||{};var a,i="-----BEGIN "+r.type+"-----\r\n";if(r.procType&&(a={name:"Proc-Type",values:[String(r.procType.version),r.procType.type]},i+=t(a)),r.contentDomain&&(a={name:"Content-Domain",values:[r.contentDomain]},i+=t(a)),r.dekInfo&&(a={name:"DEK-Info",values:[r.dekInfo.algorithm]},r.dekInfo.parameters&&a.values.push(r.dekInfo.parameters),i+=t(a)),r.headers)for(var s=0;s<r.headers.length;++s)i+=t(r.headers[s]);return r.procType&&(i+="\r\n"),i+=e.util.encode64(r.body,n.maxline||64)+"\r\n",i+="-----END "+r.type+"-----\r\n"},n.decode=function(t){for(var n,a=[],i=/\s*-----BEGIN ([A-Z0-9- ]+)-----\r?\n?([\x21-\x7e\s]+?(?:\r?\n\r?\n))?([:A-Za-z0-9+\/=\s]+?)-----END \1-----/g,s=/([\x21-\x7e]+):\s*([\x21-\x7e\s^:]+)/,o=/\r?\n/;;){if(n=i.exec(t),!n)break;var u={type:n[1],procType:null,contentDomain:null,dekInfo:null,headers:[],body:e.util.decode64(n[3])};if(a.push(u),n[2]){for(var c=n[2].split(o),l=0;n&&l<c.length;){for(var p=c[l].replace(/\s+$/,""),f=l+1;f<c.length;++f){var d=c[f];if(!/\s/.test(d[0]))break;p+=d,l=f}if(n=p.match(s)){for(var h={name:n[1],values:[]},y=n[2].split(","),g=0;g<y.length;++g)h.values.push(r(y[g]));if(u.procType)if(u.contentDomain||"Content-Domain"!==h.name)if(u.dekInfo||"DEK-Info"!==h.name)u.headers.push(h);else{if(0===h.values.length)throw new Error('Invalid PEM formatted message. The "DEK-Info" header must have at least one subfield.');u.dekInfo={algorithm:y[0],parameters:y[1]||null}}else u.contentDomain=y[0]||"";else{if("Proc-Type"!==h.name)throw new Error('Invalid PEM formatted message. The first encapsulated header must be "Proc-Type".');if(2!==h.values.length)throw new Error('Invalid PEM formatted message. The "Proc-Type" header must have two subfields.');u.procType={version:y[0],type:y[1]}}}++l}if("ENCRYPTED"===u.procType&&!u.dekInfo)throw new Error('Invalid PEM formatted message. The "DEK-Info" header must be present if "Proc-Type" is "ENCRYPTED".')}}if(0===a.length)throw new Error("Invalid PEM formatted message.");return a}}var n="pem";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/pem",["require","module","./util"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function t(t,r){var n=function(){return new e.des.Algorithm(t,r)};e.cipher.registerAlgorithm(t,n)}function r(e){for(var t,r=[0,4,536870912,536870916,65536,65540,536936448,536936452,512,516,536871424,536871428,66048,66052,536936960,536936964],n=[0,1,1048576,1048577,67108864,67108865,68157440,68157441,256,257,1048832,1048833,67109120,67109121,68157696,68157697],a=[0,8,2048,2056,16777216,16777224,16779264,16779272,0,8,2048,2056,16777216,16777224,16779264,16779272],i=[0,2097152,134217728,136314880,8192,2105344,134225920,136323072,131072,2228224,134348800,136445952,139264,2236416,134356992,136454144],s=[0,262144,16,262160,0,262144,16,262160,4096,266240,4112,266256,4096,266240,4112,266256],o=[0,1024,32,1056,0,1024,32,1056,33554432,33555456,33554464,33555488,33554432,33555456,33554464,33555488],u=[0,268435456,524288,268959744,2,268435458,524290,268959746,0,268435456,524288,268959744,2,268435458,524290,268959746],c=[0,65536,2048,67584,536870912,536936448,536872960,536938496,131072,196608,133120,198656,537001984,537067520,537004032,537069568],l=[0,262144,0,262144,2,262146,2,262146,33554432,33816576,33554432,33816576,33554434,33816578,33554434,33816578],p=[0,268435456,8,268435464,0,268435456,8,268435464,1024,268436480,1032,268436488,1024,268436480,1032,268436488],f=[0,32,0,32,1048576,1048608,1048576,1048608,8192,8224,8192,8224,1056768,1056800,1056768,1056800],d=[0,16777216,512,16777728,2097152,18874368,2097664,18874880,67108864,83886080,67109376,83886592,69206016,85983232,69206528,85983744],h=[0,4096,134217728,134221824,524288,528384,134742016,134746112,16,4112,134217744,134221840,524304,528400,134742032,134746128],y=[0,4,256,260,0,4,256,260,1,5,257,261,1,5,257,261],g=e.length()>8?3:1,m=[],v=[0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0],C=0,E=0;g>E;E++){var S=e.getInt32(),T=e.getInt32();t=252645135&(S>>>4^T),T^=t,S^=t<<4,t=65535&(T>>>-16^S),S^=t,T^=t<<-16,t=858993459&(S>>>2^T),T^=t,S^=t<<2,t=65535&(T>>>-16^S),S^=t,T^=t<<-16,t=1431655765&(S>>>1^T),T^=t,S^=t<<1,t=16711935&(T>>>8^S),S^=t,T^=t<<8,t=1431655765&(S>>>1^T),T^=t,S^=t<<1,t=S<<8|T>>>20&240,S=T<<24|T<<8&16711680|T>>>8&65280|T>>>24&240,T=t;for(var A=0;A<v.length;++A){v[A]?(S=S<<2|S>>>26,T=T<<2|T>>>26):(S=S<<1|S>>>27,T=T<<1|T>>>27),S&=-15,T&=-15;var I=r[S>>>28]|n[S>>>24&15]|a[S>>>20&15]|i[S>>>16&15]|s[S>>>12&15]|o[S>>>8&15]|u[S>>>4&15],b=c[T>>>28]|l[T>>>24&15]|p[T>>>20&15]|f[T>>>16&15]|d[T>>>12&15]|h[T>>>8&15]|y[T>>>4&15];t=65535&(b>>>16^I),m[C++]=I^t,m[C++]=b^t<<16}}return m}function n(e,t,r,n){var a,d=32===e.length?3:9;a=3===d?n?[30,-2,-2]:[0,32,2]:n?[94,62,-2,32,64,2,30,-2,-2]:[0,32,2,62,30,-2,64,96,2];var h,y=t[0],g=t[1];h=252645135&(y>>>4^g),g^=h,y^=h<<4,h=65535&(y>>>16^g),g^=h,y^=h<<16,h=858993459&(g>>>2^y),y^=h,g^=h<<2,h=16711935&(g>>>8^y),y^=h,g^=h<<8,h=1431655765&(y>>>1^g),g^=h,y^=h<<1,y=y<<1|y>>>31,g=g<<1|g>>>31;for(var m=0;d>m;m+=3){for(var v=a[m+1],C=a[m+2],E=a[m];E!=v;E+=C){var S=g^e[E],T=(g>>>4|g<<28)^e[E+1];h=y,y=g,g=h^(s[S>>>24&63]|u[S>>>16&63]|l[S>>>8&63]|f[63&S]|i[T>>>24&63]|o[T>>>16&63]|c[T>>>8&63]|p[63&T])}h=y,y=g,g=h}y=y>>>1|y<<31,g=g>>>1|g<<31,h=1431655765&(y>>>1^g),g^=h,y^=h<<1,h=16711935&(g>>>8^y),y^=h,g^=h<<8,h=858993459&(g>>>2^y),y^=h,g^=h<<2,h=65535&(y>>>16^g),g^=h,y^=h<<16,h=252645135&(y>>>4^g),g^=h,y^=h<<4,r[0]=y,r[1]=g}function a(t){t=t||{};var r,n=(t.mode||"CBC").toUpperCase(),a="DES-"+n;r=t.decrypt?e.cipher.createDecipher(a,t.key):e.cipher.createCipher(a,t.key);var i=r.start;return r.start=function(t,n){var a=null;n instanceof e.util.ByteBuffer&&(a=n,n={}),n=n||{},n.output=a,n.iv=t,i.call(r,n)},r}e.des=e.des||{},e.des.startEncrypting=function(e,t,r,n){var i=a({key:e,output:r,decrypt:!1,mode:n||(null===t?"ECB":"CBC")});return i.start(t),i},e.des.createEncryptionCipher=function(e,t){return a({key:e,output:null,decrypt:!1,mode:t})},e.des.startDecrypting=function(e,t,r,n){var i=a({key:e,output:r,decrypt:!0,mode:n||(null===t?"ECB":"CBC")});return i.start(t),i},e.des.createDecryptionCipher=function(e,t){return a({key:e,output:null,decrypt:!0,mode:t})},e.des.Algorithm=function(e,t){var r=this;r.name=e,r.mode=new t({blockSize:8,cipher:{encrypt:function(e,t){return n(r._keys,e,t,!1)},decrypt:function(e,t){return n(r._keys,e,t,!0)}}}),r._init=!1},e.des.Algorithm.prototype.initialize=function(t){if(!this._init){var n=e.util.createBuffer(t.key);if(0===this.name.indexOf("3DES")&&24!==n.length())throw new Error("Invalid Triple-DES key size: "+8*n.length());this._keys=r(n),this._init=!0}},t("DES-ECB",e.cipher.modes.ecb),t("DES-CBC",e.cipher.modes.cbc),t("DES-CFB",e.cipher.modes.cfb),t("DES-OFB",e.cipher.modes.ofb),t("DES-CTR",e.cipher.modes.ctr),t("3DES-ECB",e.cipher.modes.ecb),t("3DES-CBC",e.cipher.modes.cbc),t("3DES-CFB",e.cipher.modes.cfb),t("3DES-OFB",e.cipher.modes.ofb),t("3DES-CTR",e.cipher.modes.ctr);var i=[16843776,0,65536,16843780,16842756,66564,4,65536,1024,16843776,16843780,1024,16778244,16842756,16777216,4,1028,16778240,16778240,66560,66560,16842752,16842752,16778244,65540,16777220,16777220,65540,0,1028,66564,16777216,65536,16843780,4,16842752,16843776,16777216,16777216,1024,16842756,65536,66560,16777220,1024,4,16778244,66564,16843780,65540,16842752,16778244,16777220,1028,66564,16843776,1028,16778240,16778240,0,65540,66560,0,16842756],s=[-2146402272,-2147450880,32768,1081376,1048576,32,-2146435040,-2147450848,-2147483616,-2146402272,-2146402304,-2147483648,-2147450880,1048576,32,-2146435040,1081344,1048608,-2147450848,0,-2147483648,32768,1081376,-2146435072,1048608,-2147483616,0,1081344,32800,-2146402304,-2146435072,32800,0,1081376,-2146435040,1048576,-2147450848,-2146435072,-2146402304,32768,-2146435072,-2147450880,32,-2146402272,1081376,32,32768,-2147483648,32800,-2146402304,1048576,-2147483616,1048608,-2147450848,-2147483616,1048608,1081344,0,-2147450880,32800,-2147483648,-2146435040,-2146402272,1081344],o=[520,134349312,0,134348808,134218240,0,131592,134218240,131080,134217736,134217736,131072,134349320,131080,134348800,520,134217728,8,134349312,512,131584,134348800,134348808,131592,134218248,131584,131072,134218248,8,134349320,512,134217728,134349312,134217728,131080,520,131072,134349312,134218240,0,512,131080,134349320,134218240,134217736,512,0,134348808,134218248,131072,134217728,134349320,8,131592,131584,134217736,134348800,134218248,520,134348800,131592,8,134348808,131584],u=[8396801,8321,8321,128,8396928,8388737,8388609,8193,0,8396800,8396800,8396929,129,0,8388736,8388609,1,8192,8388608,8396801,128,8388608,8193,8320,8388737,1,8320,8388736,8192,8396928,8396929,129,8388736,8388609,8396800,8396929,129,0,0,8396800,8320,8388736,8388737,1,8396801,8321,8321,128,8396929,129,1,8192,8388609,8193,8396928,8388737,8193,8320,8388608,8396801,128,8388608,8192,8396928],c=[256,34078976,34078720,1107296512,524288,256,1073741824,34078720,1074266368,524288,33554688,1074266368,1107296512,1107820544,524544,1073741824,33554432,1074266112,1074266112,0,1073742080,1107820800,1107820800,33554688,1107820544,1073742080,0,1107296256,34078976,33554432,1107296256,524544,524288,1107296512,256,33554432,1073741824,34078720,1107296512,1074266368,33554688,1073741824,1107820544,34078976,1074266368,256,33554432,1107820544,1107820800,524544,1107296256,1107820800,34078720,0,1074266112,1107296256,524544,33554688,1073742080,524288,0,1074266112,34078976,1073742080],l=[536870928,541065216,16384,541081616,541065216,16,541081616,4194304,536887296,4210704,4194304,536870928,4194320,536887296,536870912,16400,0,4194320,536887312,16384,4210688,536887312,16,541065232,541065232,0,4210704,541081600,16400,4210688,541081600,536870912,536887296,16,541065232,4210688,541081616,4194304,16400,536870928,4194304,536887296,536870912,16400,536870928,541081616,4210688,541065216,4210704,541081600,0,541065232,16,16384,541065216,4210704,16384,4194320,536887312,0,541081600,536870912,4194320,536887312],p=[2097152,69206018,67110914,0,2048,67110914,2099202,69208064,69208066,2097152,0,67108866,2,67108864,69206018,2050,67110912,2099202,2097154,67110912,67108866,69206016,69208064,2097154,69206016,2048,2050,69208066,2099200,2,67108864,2099200,67108864,2099200,2097152,67110914,67110914,69206018,69206018,2,2097154,67108864,67110912,2097152,69208064,2050,2099202,69208064,2050,67108866,69208066,69206016,2099200,0,2,69208066,0,2099202,69206016,2048,67108866,67110912,2048,2097154],f=[268439616,4096,262144,268701760,268435456,268439616,64,268435456,262208,268697600,268701760,266240,268701696,266304,4096,64,268697600,268435520,268439552,4160,266240,262208,268697664,268701696,4160,0,0,268697664,268435520,268439552,266304,262144,266304,262144,268701696,4096,64,268697664,4096,266304,268439552,64,268435520,268697600,268697664,268435456,262144,268439616,0,268701760,262208,268435520,268697600,268439552,268439616,0,268701760,266240,266240,4160,4160,262208,268435456,268701696]}var n="des";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/des",["require","module","./cipher","./cipherModes","./util"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){var t=e.pkcs5=e.pkcs5||{};e.pbkdf2=t.pbkdf2=function(t,r,n,a,i,s){function o(){return v>p?s(null,m):(d.start(null,null),d.update(r),d.update(e.util.int32ToBytes(v)),h=g=d.digest().getBytes(),C=2,void u())}function u(){return n>=C?(d.start(null,null),d.update(g),y=d.digest().getBytes(),h=e.util.xorBytes(h,y,c),g=y,++C,e.util.setImmediate(u)):(m+=p>v?h:h.substr(0,f),++v,void o())}"function"==typeof i&&(s=i,i=null),("undefined"==typeof i||null===i)&&(i=e.md.sha1.create());var c=i.digestLength;if(a>4294967295*c){var l=new Error("Derived key is too long.");if(s)return s(l);throw l}var p=Math.ceil(a/c),f=a-(p-1)*c,d=e.hmac.create();d.start(i,t);var h,y,g,m="";if(!s){for(var v=1;p>=v;++v){d.start(null,null),d.update(r),d.update(e.util.int32ToBytes(v)),h=g=d.digest().getBytes();for(var C=2;n>=C;++C)d.start(null,null),d.update(g),y=d.digest().getBytes(),h=e.util.xorBytes(h,y,c),g=y;m+=p>v?h:h.substr(0,f)}return m}var C,v=1;o()}}var n="pbkdf2";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/pbkdf2",["require","module","./hmac","./md","./util"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){var r="undefined"!=typeof process&&process.versions&&process.versions.node,n=null;e.disableNativeCode||!r||process.versions["node-webkit"]||(n=t("crypto"));var a=e.prng=e.prng||{};a.create=function(t){function r(e){if(o.pools[0].messageLength>=32)return i(),e();var t=32-o.pools[0].messageLength<<5;o.seedFile(t,function(t,r){return t?e(t):(o.collect(r),i(),void e())})}function a(){if(o.pools[0].messageLength>=32)return i();var e=32-o.pools[0].messageLength<<5;o.collect(o.seedFileSync(e)),i()}function i(){var e=o.plugin.md.create();e.update(o.pools[0].digest().getBytes()),o.pools[0].start();for(var t=1,r=1;32>r;++r)t=31===t?2147483648:t<<2,t%o.reseeds===0&&(e.update(o.pools[r].digest().getBytes()),o.pools[r].start());var n=e.digest().getBytes();e.start(),e.update(n);var a=e.digest().getBytes();o.key=o.plugin.formatKey(n),o.seed=o.plugin.formatSeed(a),o.reseeds=4294967295===o.reseeds?0:o.reseeds+1,o.generated=0}function s(t){var r=null;if("undefined"!=typeof window){var n=window.crypto||window.msCrypto;n&&n.getRandomValues&&(r=function(e){return n.getRandomValues(e)})}var a=e.util.createBuffer();if(r)for(;a.length()<t;){var i=Math.max(1,Math.min(t-a.length(),65536)/4),s=new Uint32Array(Math.floor(i));try{r(s);for(var o=0;o<s.length;++o)a.putInt32(s[o])}catch(u){if(!("undefined"!=typeof QuotaExceededError&&u instanceof QuotaExceededError))throw u}}if(a.length()<t)for(var c,l,p,f=Math.floor(65536*Randomize());a.length()<t;){l=16807*(65535&f),c=16807*(f>>16),l+=(32767&c)<<16,l+=c>>15,l=(2147483647&l)+(l>>31),f=4294967295&l;for(var o=0;3>o;++o)p=f>>>(o<<3),p^=Math.floor(256*Randomize()),a.putByte(String.fromCharCode(255&p));
}return a.getBytes(t)}for(var o={plugin:t,key:null,seed:null,time:null,reseeds:0,generated:0},u=t.md,c=new Array(32),l=0;32>l;++l)c[l]=u.create();return o.pools=c,o.pool=0,o.generate=function(t,n){function a(p){if(p)return n(p);if(l.length()>=t)return n(null,l.getBytes(t));if(o.generated>1048575&&(o.key=null),null===o.key)return e.util.nextTick(function(){r(a)});var f=i(o.key,o.seed);o.generated+=f.length,l.putBytes(f),o.key=u(i(o.key,s(o.seed))),o.seed=c(i(o.key,o.seed)),e.util.setImmediate(a)}if(!n)return o.generateSync(t);var i=o.plugin.cipher,s=o.plugin.increment,u=o.plugin.formatKey,c=o.plugin.formatSeed,l=e.util.createBuffer();o.key=null,a()},o.generateSync=function(t){var r=o.plugin.cipher,n=o.plugin.increment,i=o.plugin.formatKey,s=o.plugin.formatSeed;o.key=null;for(var u=e.util.createBuffer();u.length()<t;){o.generated>1048575&&(o.key=null),null===o.key&&a();var c=r(o.key,o.seed);o.generated+=c.length,u.putBytes(c),o.key=i(r(o.key,n(o.seed))),o.seed=s(r(o.key,o.seed))}return u.getBytes(t)},n?(o.seedFile=function(e,t){n.randomBytes(e,function(e,r){return e?t(e):void t(null,r.toString())})},o.seedFileSync=function(e){return n.randomBytes(e).toString()}):(o.seedFile=function(e,t){try{t(null,s(e))}catch(r){t(r)}},o.seedFileSync=s),o.collect=function(e){for(var t=e.length,r=0;t>r;++r)o.pools[o.pool].update(e.substr(r,1)),o.pool=31===o.pool?0:o.pool+1},o.collectInt=function(e,t){for(var r="",n=0;t>n;n+=8)r+=String.fromCharCode(e>>n&255);o.collect(r)},o.registerWorker=function(e){if(e===self)o.seedFile=function(e,t){function r(e){var n=e.data;n.forge&&n.forge.prng&&(self.removeEventListener("message",r),t(n.forge.prng.err,n.forge.prng.bytes))}self.addEventListener("message",r),self.postMessage({forge:{prng:{needed:e}}})};else{var t=function(t){var r=t.data;r.forge&&r.forge.prng&&o.seedFile(r.forge.prng.needed,function(t,r){e.postMessage({forge:{prng:{err:t,bytes:r}}})})};e.addEventListener("message",t)}},o}}var n="prng";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/prng",["require","module","./md","./util"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){e.random&&e.random.getBytes||!function(t){function r(){var t=e.prng.create(n);return t.getBytes=function(e,r){return t.generate(e,r)},t.getBytesSync=function(e){return t.generate(e)},t}var n={},a=new Array(4),i=e.util.createBuffer();n.formatKey=function(t){var r=e.util.createBuffer(t);return t=new Array(4),t[0]=r.getInt32(),t[1]=r.getInt32(),t[2]=r.getInt32(),t[3]=r.getInt32(),e.aes._expandKey(t,!1)},n.formatSeed=function(t){var r=e.util.createBuffer(t);return t=new Array(4),t[0]=r.getInt32(),t[1]=r.getInt32(),t[2]=r.getInt32(),t[3]=r.getInt32(),t},n.cipher=function(t,r){return e.aes._updateBlock(t,r,a,!1),i.putInt32(a[0]),i.putInt32(a[1]),i.putInt32(a[2]),i.putInt32(a[3]),i.getBytes()},n.increment=function(e){return++e[3],e},n.md=e.md.sha256;var s=r(),o="undefined"!=typeof process&&process.versions&&process.versions.node,u=null;if("undefined"!=typeof window){var c=window.crypto||window.msCrypto;c&&c.getRandomValues&&(u=function(e){return c.getRandomValues(e)})}if(e.disableNativeCode||!o&&!u){if("undefined"==typeof window||void 0===window.document,s.collectInt(+new Date,32),"undefined"!=typeof navigator){var l="";for(var p in navigator)try{"string"==typeof navigator[p]&&(l+=navigator[p])}catch(f){}s.collect(l),l=null}t&&(t().mousemove(function(e){s.collectInt(e.clientX,16),s.collectInt(e.clientY,16)}),t().keypress(function(e){s.collectInt(e.charCode,8)}))}if(e.random)for(var p in s)e.random[p]=s[p];else e.random=s;e.random.createInstance=r}("undefined"!=typeof jQuery?jQuery:null)}var n="random";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/random",["require","module","./aes","./md","./prng","./util"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){var t=[217,120,249,196,25,221,181,237,40,233,253,121,74,160,216,157,198,126,55,131,43,118,83,142,98,76,100,136,68,139,251,162,23,154,89,245,135,179,79,19,97,69,109,141,9,129,125,50,189,143,64,235,134,183,123,11,240,149,33,34,92,107,78,130,84,214,101,147,206,96,178,28,115,86,192,20,167,140,241,220,18,117,202,31,59,190,228,209,66,61,212,48,163,60,182,38,111,191,14,218,70,105,7,87,39,242,29,155,188,148,67,3,248,17,199,246,144,239,62,231,6,195,213,47,200,102,30,215,8,232,234,222,128,82,238,247,132,170,114,172,53,77,106,42,150,26,210,113,90,21,73,116,75,159,208,94,4,24,164,236,194,224,65,110,15,81,203,204,36,145,175,80,161,244,112,57,153,124,58,133,35,184,180,122,252,2,54,91,37,85,151,49,45,93,250,152,227,138,146,174,5,223,41,16,103,108,186,201,211,0,230,207,225,158,168,44,99,22,1,63,88,226,137,169,13,56,52,27,171,51,255,176,187,72,12,95,185,177,205,46,197,243,219,71,229,165,156,119,10,166,32,104,254,127,193,173],r=[1,2,3,5],n=function(e,t){return e<<t&65535|(65535&e)>>16-t},a=function(e,t){return(65535&e)>>t|e<<16-t&65535};e.rc2=e.rc2||{},e.rc2.expandKey=function(r,n){"string"==typeof r&&(r=e.util.createBuffer(r)),n=n||128;var a,i=r,s=r.length(),o=n,u=Math.ceil(o/8),c=255>>(7&o);for(a=s;128>a;a++)i.putByte(t[i.at(a-1)+i.at(a-s)&255]);for(i.setAt(128-u,t[i.at(128-u)&c]),a=127-u;a>=0;a--)i.setAt(a,t[i.at(a+1)^i.at(a+u)]);return i};var i=function(t,i,s){var o,u,c,l,p=!1,f=null,d=null,h=null,y=[];for(t=e.rc2.expandKey(t,i),c=0;64>c;c++)y.push(t.getInt16Le());s?(o=function(e){for(c=0;4>c;c++)e[c]+=y[l]+(e[(c+3)%4]&e[(c+2)%4])+(~e[(c+3)%4]&e[(c+1)%4]),e[c]=n(e[c],r[c]),l++},u=function(e){for(c=0;4>c;c++)e[c]+=y[63&e[(c+3)%4]]}):(o=function(e){for(c=3;c>=0;c--)e[c]=a(e[c],r[c]),e[c]-=y[l]+(e[(c+3)%4]&e[(c+2)%4])+(~e[(c+3)%4]&e[(c+1)%4]),l--},u=function(e){for(c=3;c>=0;c--)e[c]-=y[63&e[(c+3)%4]]});var g=function(e){var t=[];for(c=0;4>c;c++){var r=f.getInt16Le();null!==h&&(s?r^=h.getInt16Le():h.putInt16Le(r)),t.push(65535&r)}l=s?0:63;for(var n=0;n<e.length;n++)for(var a=0;a<e[n][0];a++)e[n][1](t);for(c=0;4>c;c++)null!==h&&(s?h.putInt16Le(t[c]):t[c]^=h.getInt16Le()),d.putInt16Le(t[c])},m=null;return m={start:function(t,r){t&&"string"==typeof t&&(t=e.util.createBuffer(t)),p=!1,f=e.util.createBuffer(),d=r||new e.util.createBuffer,h=t,m.output=d},update:function(e){for(p||f.putBuffer(e);f.length()>=8;)g([[5,o],[1,u],[6,o],[1,u],[5,o]])},finish:function(e){var t=!0;if(s)if(e)t=e(8,f,!s);else{var r=8===f.length()?8:8-f.length();f.fillWithByte(r,r)}if(t&&(p=!0,m.update()),!s&&(t=0===f.length()))if(e)t=e(8,d,!s);else{var n=d.length(),a=d.at(n-1);a>n?t=!1:d.truncate(a)}return t}}};e.rc2.startEncrypting=function(t,r,n){var a=e.rc2.createEncryptionCipher(t,128);return a.start(r,n),a},e.rc2.createEncryptionCipher=function(e,t){return i(e,t,!0)},e.rc2.startDecrypting=function(t,r,n){var a=e.rc2.createDecryptionCipher(t,128);return a.start(r,n),a},e.rc2.createDecryptionCipher=function(e,t){return i(e,t,!1)}}var n="rc2";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/rc2",["require","module","./util"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function t(e,t,r){this.data=[],null!=e&&("number"==typeof e?this.fromNumber(e,t,r):null==t&&"string"!=typeof e?this.fromString(e,256):this.fromString(e,t))}function r(){return new t(null)}function n(e,t,r,n,a,i){for(;--i>=0;){var s=t*this.data[e++]+r.data[n]+a;a=Math.floor(s/67108864),r.data[n++]=67108863&s}return a}function a(e,t,r,n,a,i){for(var s=32767&t,o=t>>15;--i>=0;){var u=32767&this.data[e],c=this.data[e++]>>15,l=o*u+c*s;u=s*u+((32767&l)<<15)+r.data[n]+(1073741823&a),a=(u>>>30)+(l>>>15)+o*c+(a>>>30),r.data[n++]=1073741823&u}return a}function i(e,t,r,n,a,i){for(var s=16383&t,o=t>>14;--i>=0;){var u=16383&this.data[e],c=this.data[e++]>>14,l=o*u+c*s;u=s*u+((16383&l)<<14)+r.data[n]+a,a=(u>>28)+(l>>14)+o*c,r.data[n++]=268435455&u}return a}function s(e){return it.charAt(e)}function o(e,t){var r=st[e.charCodeAt(t)];return null==r?-1:r}function u(e){for(var t=this.t-1;t>=0;--t)e.data[t]=this.data[t];e.t=this.t,e.s=this.s}function c(e){this.t=1,this.s=0>e?-1:0,e>0?this.data[0]=e:-1>e?this.data[0]=e+this.DV:this.t=0}function l(e){var t=r();return t.fromInt(e),t}function p(e,r){var n;if(16==r)n=4;else if(8==r)n=3;else if(256==r)n=8;else if(2==r)n=1;else if(32==r)n=5;else{if(4!=r)return void this.fromRadix(e,r);n=2}this.t=0,this.s=0;for(var a=e.length,i=!1,s=0;--a>=0;){var u=8==n?255&e[a]:o(e,a);0>u?"-"==e.charAt(a)&&(i=!0):(i=!1,0==s?this.data[this.t++]=u:s+n>this.DB?(this.data[this.t-1]|=(u&(1<<this.DB-s)-1)<<s,this.data[this.t++]=u>>this.DB-s):this.data[this.t-1]|=u<<s,s+=n,s>=this.DB&&(s-=this.DB))}8==n&&0!=(128&e[0])&&(this.s=-1,s>0&&(this.data[this.t-1]|=(1<<this.DB-s)-1<<s)),this.clamp(),i&&t.ZERO.subTo(this,this)}function f(){for(var e=this.s&this.DM;this.t>0&&this.data[this.t-1]==e;)--this.t}function d(e){if(this.s<0)return"-"+this.negate().toString(e);var t;if(16==e)t=4;else if(8==e)t=3;else if(2==e)t=1;else if(32==e)t=5;else{if(4!=e)return this.toRadix(e);t=2}var r,n=(1<<t)-1,a=!1,i="",o=this.t,u=this.DB-o*this.DB%t;if(o-- >0)for(u<this.DB&&(r=this.data[o]>>u)>0&&(a=!0,i=s(r));o>=0;)t>u?(r=(this.data[o]&(1<<u)-1)<<t-u,r|=this.data[--o]>>(u+=this.DB-t)):(r=this.data[o]>>(u-=t)&n,0>=u&&(u+=this.DB,--o)),r>0&&(a=!0),a&&(i+=s(r));return a?i:"0"}function h(){var e=r();return t.ZERO.subTo(this,e),e}function y(){return this.s<0?this.negate():this}function g(e){var t=this.s-e.s;if(0!=t)return t;var r=this.t;if(t=r-e.t,0!=t)return this.s<0?-t:t;for(;--r>=0;)if(0!=(t=this.data[r]-e.data[r]))return t;return 0}function m(e){var t,r=1;return 0!=(t=e>>>16)&&(e=t,r+=16),0!=(t=e>>8)&&(e=t,r+=8),0!=(t=e>>4)&&(e=t,r+=4),0!=(t=e>>2)&&(e=t,r+=2),0!=(t=e>>1)&&(e=t,r+=1),r}function v(){return this.t<=0?0:this.DB*(this.t-1)+m(this.data[this.t-1]^this.s&this.DM)}function C(e,t){var r;for(r=this.t-1;r>=0;--r)t.data[r+e]=this.data[r];for(r=e-1;r>=0;--r)t.data[r]=0;t.t=this.t+e,t.s=this.s}function E(e,t){for(var r=e;r<this.t;++r)t.data[r-e]=this.data[r];t.t=Math.max(this.t-e,0),t.s=this.s}function S(e,t){var r,n=e%this.DB,a=this.DB-n,i=(1<<a)-1,s=Math.floor(e/this.DB),o=this.s<<n&this.DM;for(r=this.t-1;r>=0;--r)t.data[r+s+1]=this.data[r]>>a|o,o=(this.data[r]&i)<<n;for(r=s-1;r>=0;--r)t.data[r]=0;t.data[s]=o,t.t=this.t+s+1,t.s=this.s,t.clamp()}function T(e,t){t.s=this.s;var r=Math.floor(e/this.DB);if(r>=this.t)return void(t.t=0);var n=e%this.DB,a=this.DB-n,i=(1<<n)-1;t.data[0]=this.data[r]>>n;for(var s=r+1;s<this.t;++s)t.data[s-r-1]|=(this.data[s]&i)<<a,t.data[s-r]=this.data[s]>>n;n>0&&(t.data[this.t-r-1]|=(this.s&i)<<a),t.t=this.t-r,t.clamp()}function A(e,t){for(var r=0,n=0,a=Math.min(e.t,this.t);a>r;)n+=this.data[r]-e.data[r],t.data[r++]=n&this.DM,n>>=this.DB;if(e.t<this.t){for(n-=e.s;r<this.t;)n+=this.data[r],t.data[r++]=n&this.DM,n>>=this.DB;n+=this.s}else{for(n+=this.s;r<e.t;)n-=e.data[r],t.data[r++]=n&this.DM,n>>=this.DB;n-=e.s}t.s=0>n?-1:0,-1>n?t.data[r++]=this.DV+n:n>0&&(t.data[r++]=n),t.t=r,t.clamp()}function I(e,r){var n=this.abs(),a=e.abs(),i=n.t;for(r.t=i+a.t;--i>=0;)r.data[i]=0;for(i=0;i<a.t;++i)r.data[i+n.t]=n.am(0,a.data[i],r,i,0,n.t);r.s=0,r.clamp(),this.s!=e.s&&t.ZERO.subTo(r,r)}function b(e){for(var t=this.abs(),r=e.t=2*t.t;--r>=0;)e.data[r]=0;for(r=0;r<t.t-1;++r){var n=t.am(r,t.data[r],e,2*r,0,1);(e.data[r+t.t]+=t.am(r+1,2*t.data[r],e,2*r+1,n,t.t-r-1))>=t.DV&&(e.data[r+t.t]-=t.DV,e.data[r+t.t+1]=1)}e.t>0&&(e.data[e.t-1]+=t.am(r,t.data[r],e,2*r,0,1)),e.s=0,e.clamp()}function B(e,n,a){var i=e.abs();if(!(i.t<=0)){var s=this.abs();if(s.t<i.t)return null!=n&&n.fromInt(0),void(null!=a&&this.copyTo(a));null==a&&(a=r());var o=r(),u=this.s,c=e.s,l=this.DB-m(i.data[i.t-1]);l>0?(i.lShiftTo(l,o),s.lShiftTo(l,a)):(i.copyTo(o),s.copyTo(a));var p=o.t,f=o.data[p-1];if(0!=f){var d=f*(1<<this.F1)+(p>1?o.data[p-2]>>this.F2:0),h=this.FV/d,y=(1<<this.F1)/d,g=1<<this.F2,v=a.t,C=v-p,E=null==n?r():n;for(o.dlShiftTo(C,E),a.compareTo(E)>=0&&(a.data[a.t++]=1,a.subTo(E,a)),t.ONE.dlShiftTo(p,E),E.subTo(o,o);o.t<p;)o.data[o.t++]=0;for(;--C>=0;){var S=a.data[--v]==f?this.DM:Math.floor(a.data[v]*h+(a.data[v-1]+g)*y);if((a.data[v]+=o.am(0,S,a,C,0,p))<S)for(o.dlShiftTo(C,E),a.subTo(E,a);a.data[v]<--S;)a.subTo(E,a)}null!=n&&(a.drShiftTo(p,n),u!=c&&t.ZERO.subTo(n,n)),a.t=p,a.clamp(),l>0&&a.rShiftTo(l,a),0>u&&t.ZERO.subTo(a,a)}}}function k(e){var n=r();return this.abs().divRemTo(e,null,n),this.s<0&&n.compareTo(t.ZERO)>0&&e.subTo(n,n),n}function N(e){this.m=e}function R(e){return e.s<0||e.compareTo(this.m)>=0?e.mod(this.m):e}function w(e){return e}function L(e){e.divRemTo(this.m,null,e)}function _(e,t,r){e.multiplyTo(t,r),this.reduce(r)}function D(e,t){e.squareTo(t),this.reduce(t)}function U(){if(this.t<1)return 0;var e=this.data[0];if(0==(1&e))return 0;var t=3&e;return t=t*(2-(15&e)*t)&15,t=t*(2-(255&e)*t)&255,t=t*(2-((65535&e)*t&65535))&65535,t=t*(2-e*t%this.DV)%this.DV,t>0?this.DV-t:-t}function P(e){this.m=e,this.mp=e.invDigit(),this.mpl=32767&this.mp,this.mph=this.mp>>15,this.um=(1<<e.DB-15)-1,this.mt2=2*e.t}function V(e){var n=r();return e.abs().dlShiftTo(this.m.t,n),n.divRemTo(this.m,null,n),e.s<0&&n.compareTo(t.ZERO)>0&&this.m.subTo(n,n),n}function O(e){var t=r();return e.copyTo(t),this.reduce(t),t}function x(e){for(;e.t<=this.mt2;)e.data[e.t++]=0;for(var t=0;t<this.m.t;++t){var r=32767&e.data[t],n=r*this.mpl+((r*this.mph+(e.data[t]>>15)*this.mpl&this.um)<<15)&e.DM;for(r=t+this.m.t,e.data[r]+=this.m.am(0,n,e,t,0,this.m.t);e.data[r]>=e.DV;)e.data[r]-=e.DV,e.data[++r]++}e.clamp(),e.drShiftTo(this.m.t,e),e.compareTo(this.m)>=0&&e.subTo(this.m,e)}function K(e,t){e.squareTo(t),this.reduce(t)}function j(e,t,r){e.multiplyTo(t,r),this.reduce(r)}function q(){return 0==(this.t>0?1&this.data[0]:this.s)}function M(e,n){if(e>4294967295||1>e)return t.ONE;var a=r(),i=r(),s=n.convert(this),o=m(e)-1;for(s.copyTo(a);--o>=0;)if(n.sqrTo(a,i),(e&1<<o)>0)n.mulTo(i,s,a);else{var u=a;a=i,i=u}return n.revert(a)}function F(e,t){var r;return r=256>e||t.isEven()?new N(t):new P(t),this.exp(e,r)}function H(){var e=r();return this.copyTo(e),e}function G(){if(this.s<0){if(1==this.t)return this.data[0]-this.DV;if(0==this.t)return-1}else{if(1==this.t)return this.data[0];if(0==this.t)return 0}return(this.data[1]&(1<<32-this.DB)-1)<<this.DB|this.data[0]}function Q(){return 0==this.t?this.s:this.data[0]<<24>>24}function z(){return 0==this.t?this.s:this.data[0]<<16>>16}function X(e){return Math.floor(Math.LN2*this.DB/Math.log(e))}function W(){return this.s<0?-1:this.t<=0||1==this.t&&this.data[0]<=0?0:1}function Y(e){if(null==e&&(e=10),0==this.signum()||2>e||e>36)return"0";var t=this.chunkSize(e),n=Math.pow(e,t),a=l(n),i=r(),s=r(),o="";for(this.divRemTo(a,i,s);i.signum()>0;)o=(n+s.intValue()).toString(e).substr(1)+o,i.divRemTo(a,i,s);return s.intValue().toString(e)+o}function Z(e,r){this.fromInt(0),null==r&&(r=10);for(var n=this.chunkSize(r),a=Math.pow(r,n),i=!1,s=0,u=0,c=0;c<e.length;++c){var l=o(e,c);0>l?"-"==e.charAt(c)&&0==this.signum()&&(i=!0):(u=r*u+l,++s>=n&&(this.dMultiply(a),this.dAddOffset(u,0),s=0,u=0))}s>0&&(this.dMultiply(Math.pow(r,s)),this.dAddOffset(u,0)),i&&t.ZERO.subTo(this,this)}function $(e,r,n){if("number"==typeof r)if(2>e)this.fromInt(1);else for(this.fromNumber(e,n),this.testBit(e-1)||this.bitwiseTo(t.ONE.shiftLeft(e-1),se,this),this.isEven()&&this.dAddOffset(1,0);!this.isProbablePrime(r);)this.dAddOffset(2,0),this.bitLength()>e&&this.subTo(t.ONE.shiftLeft(e-1),this);else{var a=new Array,i=7&e;a.length=(e>>3)+1,r.nextBytes(a),i>0?a[0]&=(1<<i)-1:a[0]=0,this.fromString(a,256)}}function J(){var e=this.t,t=new Array;t[0]=this.s;var r,n=this.DB-e*this.DB%8,a=0;if(e-- >0)for(n<this.DB&&(r=this.data[e]>>n)!=(this.s&this.DM)>>n&&(t[a++]=r|this.s<<this.DB-n);e>=0;)8>n?(r=(this.data[e]&(1<<n)-1)<<8-n,r|=this.data[--e]>>(n+=this.DB-8)):(r=this.data[e]>>(n-=8)&255,0>=n&&(n+=this.DB,--e)),0!=(128&r)&&(r|=-256),0==a&&(128&this.s)!=(128&r)&&++a,(a>0||r!=this.s)&&(t[a++]=r);return t}function ee(e){return 0==this.compareTo(e)}function te(e){return this.compareTo(e)<0?this:e}function re(e){return this.compareTo(e)>0?this:e}function ne(e,t,r){var n,a,i=Math.min(e.t,this.t);for(n=0;i>n;++n)r.data[n]=t(this.data[n],e.data[n]);if(e.t<this.t){for(a=e.s&this.DM,n=i;n<this.t;++n)r.data[n]=t(this.data[n],a);r.t=this.t}else{for(a=this.s&this.DM,n=i;n<e.t;++n)r.data[n]=t(a,e.data[n]);r.t=e.t}r.s=t(this.s,e.s),r.clamp()}function ae(e,t){return e&t}function ie(e){var t=r();return this.bitwiseTo(e,ae,t),t}function se(e,t){return e|t}function oe(e){var t=r();return this.bitwiseTo(e,se,t),t}function ue(e,t){return e^t}function ce(e){var t=r();return this.bitwiseTo(e,ue,t),t}function le(e,t){return e&~t}function pe(e){var t=r();return this.bitwiseTo(e,le,t),t}function fe(){for(var e=r(),t=0;t<this.t;++t)e.data[t]=this.DM&~this.data[t];return e.t=this.t,e.s=~this.s,e}function de(e){var t=r();return 0>e?this.rShiftTo(-e,t):this.lShiftTo(e,t),t}function he(e){var t=r();return 0>e?this.lShiftTo(-e,t):this.rShiftTo(e,t),t}function ye(e){if(0==e)return-1;var t=0;return 0==(65535&e)&&(e>>=16,t+=16),0==(255&e)&&(e>>=8,t+=8),0==(15&e)&&(e>>=4,t+=4),0==(3&e)&&(e>>=2,t+=2),0==(1&e)&&++t,t}function ge(){for(var e=0;e<this.t;++e)if(0!=this.data[e])return e*this.DB+ye(this.data[e]);return this.s<0?this.t*this.DB:-1}function me(e){for(var t=0;0!=e;)e&=e-1,++t;return t}function ve(){for(var e=0,t=this.s&this.DM,r=0;r<this.t;++r)e+=me(this.data[r]^t);return e}function Ce(e){var t=Math.floor(e/this.DB);return t>=this.t?0!=this.s:0!=(this.data[t]&1<<e%this.DB)}function Ee(e,r){var n=t.ONE.shiftLeft(e);return this.bitwiseTo(n,r,n),n}function Se(e){return this.changeBit(e,se)}function Te(e){return this.changeBit(e,le)}function Ae(e){return this.changeBit(e,ue)}function Ie(e,t){for(var r=0,n=0,a=Math.min(e.t,this.t);a>r;)n+=this.data[r]+e.data[r],t.data[r++]=n&this.DM,n>>=this.DB;if(e.t<this.t){for(n+=e.s;r<this.t;)n+=this.data[r],t.data[r++]=n&this.DM,n>>=this.DB;n+=this.s}else{for(n+=this.s;r<e.t;)n+=e.data[r],t.data[r++]=n&this.DM,n>>=this.DB;n+=e.s}t.s=0>n?-1:0,n>0?t.data[r++]=n:-1>n&&(t.data[r++]=this.DV+n),t.t=r,t.clamp()}function be(e){var t=r();return this.addTo(e,t),t}function Be(e){var t=r();return this.subTo(e,t),t}function ke(e){var t=r();return this.multiplyTo(e,t),t}function Ne(e){var t=r();return this.divRemTo(e,t,null),t}function Re(e){var t=r();return this.divRemTo(e,null,t),t}function we(e){var t=r(),n=r();return this.divRemTo(e,t,n),new Array(t,n)}function Le(e){this.data[this.t]=this.am(0,e-1,this,0,0,this.t),++this.t,this.clamp()}function _e(e,t){if(0!=e){for(;this.t<=t;)this.data[this.t++]=0;for(this.data[t]+=e;this.data[t]>=this.DV;)this.data[t]-=this.DV,++t>=this.t&&(this.data[this.t++]=0),++this.data[t]}}function De(){}function Ue(e){return e}function Pe(e,t,r){e.multiplyTo(t,r)}function Ve(e,t){e.squareTo(t)}function Oe(e){return this.exp(e,new De)}function xe(e,t,r){var n=Math.min(this.t+e.t,t);for(r.s=0,r.t=n;n>0;)r.data[--n]=0;var a;for(a=r.t-this.t;a>n;++n)r.data[n+this.t]=this.am(0,e.data[n],r,n,0,this.t);for(a=Math.min(e.t,t);a>n;++n)this.am(0,e.data[n],r,n,0,t-n);r.clamp()}function Ke(e,t,r){--t;var n=r.t=this.t+e.t-t;for(r.s=0;--n>=0;)r.data[n]=0;for(n=Math.max(t-this.t,0);n<e.t;++n)r.data[this.t+n-t]=this.am(t-n,e.data[n],r,0,0,this.t+n-t);r.clamp(),r.drShiftTo(1,r)}function je(e){this.r2=r(),this.q3=r(),t.ONE.dlShiftTo(2*e.t,this.r2),this.mu=this.r2.divide(e),this.m=e}function qe(e){if(e.s<0||e.t>2*this.m.t)return e.mod(this.m);if(e.compareTo(this.m)<0)return e;var t=r();return e.copyTo(t),this.reduce(t),t}function Me(e){return e}function Fe(e){for(e.drShiftTo(this.m.t-1,this.r2),e.t>this.m.t+1&&(e.t=this.m.t+1,e.clamp()),this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3),this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);e.compareTo(this.r2)<0;)e.dAddOffset(1,this.m.t+1);for(e.subTo(this.r2,e);e.compareTo(this.m)>=0;)e.subTo(this.m,e)}function He(e,t){e.squareTo(t),this.reduce(t)}function Ge(e,t,r){e.multiplyTo(t,r),this.reduce(r)}function Qe(e,t){var n,a,i=e.bitLength(),s=l(1);if(0>=i)return s;n=18>i?1:48>i?3:144>i?4:768>i?5:6,a=8>i?new N(t):t.isEven()?new je(t):new P(t);var o=new Array,u=3,c=n-1,p=(1<<n)-1;if(o[1]=a.convert(this),n>1){var f=r();for(a.sqrTo(o[1],f);p>=u;)o[u]=r(),a.mulTo(f,o[u-2],o[u]),u+=2}var d,h,y=e.t-1,g=!0,v=r();for(i=m(e.data[y])-1;y>=0;){for(i>=c?d=e.data[y]>>i-c&p:(d=(e.data[y]&(1<<i+1)-1)<<c-i,y>0&&(d|=e.data[y-1]>>this.DB+i-c)),u=n;0==(1&d);)d>>=1,--u;if((i-=u)<0&&(i+=this.DB,--y),g)o[d].copyTo(s),g=!1;else{for(;u>1;)a.sqrTo(s,v),a.sqrTo(v,s),u-=2;u>0?a.sqrTo(s,v):(h=s,s=v,v=h),a.mulTo(v,o[d],s)}for(;y>=0&&0==(e.data[y]&1<<i);)a.sqrTo(s,v),h=s,s=v,v=h,--i<0&&(i=this.DB-1,--y)}return a.revert(s)}function ze(e){var t=this.s<0?this.negate():this.clone(),r=e.s<0?e.negate():e.clone();if(t.compareTo(r)<0){var n=t;t=r,r=n}var a=t.getLowestSetBit(),i=r.getLowestSetBit();if(0>i)return t;for(i>a&&(i=a),i>0&&(t.rShiftTo(i,t),r.rShiftTo(i,r));t.signum()>0;)(a=t.getLowestSetBit())>0&&t.rShiftTo(a,t),(a=r.getLowestSetBit())>0&&r.rShiftTo(a,r),t.compareTo(r)>=0?(t.subTo(r,t),t.rShiftTo(1,t)):(r.subTo(t,r),r.rShiftTo(1,r));return i>0&&r.lShiftTo(i,r),r}function Xe(e){if(0>=e)return 0;var t=this.DV%e,r=this.s<0?e-1:0;if(this.t>0)if(0==t)r=this.data[0]%e;else for(var n=this.t-1;n>=0;--n)r=(t*r+this.data[n])%e;return r}function We(e){var r=e.isEven();if(this.isEven()&&r||0==e.signum())return t.ZERO;for(var n=e.clone(),a=this.clone(),i=l(1),s=l(0),o=l(0),u=l(1);0!=n.signum();){for(;n.isEven();)n.rShiftTo(1,n),r?(i.isEven()&&s.isEven()||(i.addTo(this,i),s.subTo(e,s)),i.rShiftTo(1,i)):s.isEven()||s.subTo(e,s),s.rShiftTo(1,s);for(;a.isEven();)a.rShiftTo(1,a),r?(o.isEven()&&u.isEven()||(o.addTo(this,o),u.subTo(e,u)),o.rShiftTo(1,o)):u.isEven()||u.subTo(e,u),u.rShiftTo(1,u);n.compareTo(a)>=0?(n.subTo(a,n),r&&i.subTo(o,i),s.subTo(u,s)):(a.subTo(n,a),r&&o.subTo(i,o),u.subTo(s,u))}return 0!=a.compareTo(t.ONE)?t.ZERO:u.compareTo(e)>=0?u.subtract(e):u.signum()<0?(u.addTo(e,u),u.signum()<0?u.add(e):u):u}function Ye(e){var t,r=this.abs();if(1==r.t&&r.data[0]<=ot[ot.length-1]){for(t=0;t<ot.length;++t)if(r.data[0]==ot[t])return!0;return!1}if(r.isEven())return!1;for(t=1;t<ot.length;){for(var n=ot[t],a=t+1;a<ot.length&&ut>n;)n*=ot[a++];for(n=r.modInt(n);a>t;)if(n%ot[t++]==0)return!1}return r.millerRabin(e)}function Ze(e){var r=this.subtract(t.ONE),n=r.getLowestSetBit();if(0>=n)return!1;for(var a,i=r.shiftRight(n),s=$e(),o=0;e>o;++o){do a=new t(this.bitLength(),s);while(a.compareTo(t.ONE)<=0||a.compareTo(r)>=0);var u=a.modPow(i,this);if(0!=u.compareTo(t.ONE)&&0!=u.compareTo(r)){for(var c=1;c++<n&&0!=u.compareTo(r);)if(u=u.modPowInt(2,this),0==u.compareTo(t.ONE))return!1;if(0!=u.compareTo(r))return!1}}return!0}function $e(){return{nextBytes:function(e){for(var t=0;t<e.length;++t)e[t]=Math.floor(255*Randomize())}}}var Je,et=0xdeadbeefcafe,tt=15715070==(16777215&et);"undefined"==typeof navigator?(t.prototype.am=i,Je=28):tt&&"Microsoft Internet Explorer"==navigator.appName?(t.prototype.am=a,Je=30):tt&&"Netscape"!=navigator.appName?(t.prototype.am=n,Je=26):(t.prototype.am=i,Je=28),t.prototype.DB=Je,t.prototype.DM=(1<<Je)-1,t.prototype.DV=1<<Je;var rt=52;t.prototype.FV=Math.pow(2,rt),t.prototype.F1=rt-Je,t.prototype.F2=2*Je-rt;var nt,at,it="0123456789abcdefghijklmnopqrstuvwxyz",st=new Array;for(nt="0".charCodeAt(0),at=0;9>=at;++at)st[nt++]=at;for(nt="a".charCodeAt(0),at=10;36>at;++at)st[nt++]=at;for(nt="A".charCodeAt(0),at=10;36>at;++at)st[nt++]=at;N.prototype.convert=R,N.prototype.revert=w,N.prototype.reduce=L,N.prototype.mulTo=_,N.prototype.sqrTo=D,P.prototype.convert=V,P.prototype.revert=O,P.prototype.reduce=x,P.prototype.mulTo=j,P.prototype.sqrTo=K,t.prototype.copyTo=u,t.prototype.fromInt=c,t.prototype.fromString=p,t.prototype.clamp=f,t.prototype.dlShiftTo=C,t.prototype.drShiftTo=E,t.prototype.lShiftTo=S,t.prototype.rShiftTo=T,t.prototype.subTo=A,t.prototype.multiplyTo=I,t.prototype.squareTo=b,t.prototype.divRemTo=B,t.prototype.invDigit=U,t.prototype.isEven=q,t.prototype.exp=M,t.prototype.toString=d,t.prototype.negate=h,t.prototype.abs=y,t.prototype.compareTo=g,t.prototype.bitLength=v,t.prototype.mod=k,t.prototype.modPowInt=F,t.ZERO=l(0),t.ONE=l(1),De.prototype.convert=Ue,De.prototype.revert=Ue,De.prototype.mulTo=Pe,De.prototype.sqrTo=Ve,je.prototype.convert=qe,je.prototype.revert=Me,je.prototype.reduce=Fe,je.prototype.mulTo=Ge,je.prototype.sqrTo=He;var ot=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509],ut=(1<<26)/ot[ot.length-1];t.prototype.chunkSize=X,t.prototype.toRadix=Y,t.prototype.fromRadix=Z,t.prototype.fromNumber=$,t.prototype.bitwiseTo=ne,t.prototype.changeBit=Ee,t.prototype.addTo=Ie,t.prototype.dMultiply=Le,t.prototype.dAddOffset=_e,t.prototype.multiplyLowerTo=xe,t.prototype.multiplyUpperTo=Ke,t.prototype.modInt=Xe,t.prototype.millerRabin=Ze,t.prototype.clone=H,t.prototype.intValue=G,t.prototype.byteValue=Q,t.prototype.shortValue=z,t.prototype.signum=W,t.prototype.toByteArray=J,t.prototype.equals=ee,t.prototype.min=te,t.prototype.max=re,t.prototype.and=ie,t.prototype.or=oe,t.prototype.xor=ce,t.prototype.andNot=pe,t.prototype.not=fe,t.prototype.shiftLeft=de,t.prototype.shiftRight=he,t.prototype.getLowestSetBit=ge,t.prototype.bitCount=ve,t.prototype.testBit=Ce,t.prototype.setBit=Se,t.prototype.clearBit=Te,t.prototype.flipBit=Ae,t.prototype.add=be,t.prototype.subtract=Be,t.prototype.multiply=ke,t.prototype.divide=Ne,t.prototype.remainder=Re,t.prototype.divideAndRemainder=we,t.prototype.modPow=Qe,t.prototype.modInverse=We,t.prototype.pow=Oe,t.prototype.gcd=ze,t.prototype.isProbablePrime=Ye,e.jsbn=e.jsbn||{},e.jsbn.BigInteger=t}var n="jsbn";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/jsbn",["require","module"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function t(t,r,n){n||(n=e.md.sha1.create());for(var a="",i=Math.ceil(r/n.digestLength),s=0;i>s;++s){var o=String.fromCharCode(s>>24&255,s>>16&255,s>>8&255,255&s);n.start(),n.update(t+o),a+=n.digest().getBytes()}return a.substring(0,r)}var r=e.pkcs1=e.pkcs1||{};r.encode_rsa_oaep=function(r,n,a){var i,s,o,u;"string"==typeof a?(i=a,s=arguments[3]||void 0,o=arguments[4]||void 0):a&&(i=a.label||void 0,s=a.seed||void 0,o=a.md||void 0,a.mgf1&&a.mgf1.md&&(u=a.mgf1.md)),o?o.start():o=e.md.sha1.create(),u||(u=o);var c=Math.ceil(r.n.bitLength()/8),l=c-2*o.digestLength-2;if(n.length>l){var p=new Error("RSAES-OAEP input message length is too long.");throw p.length=n.length,p.maxLength=l,p}i||(i=""),o.update(i,"raw");for(var f=o.digest(),d="",h=l-n.length,y=0;h>y;y++)d+="\x00";var g=f.getBytes()+d+""+n;if(s){if(s.length!==o.digestLength){var p=new Error("Invalid RSAES-OAEP seed. The seed length must match the digest length.");throw p.seedLength=s.length,p.digestLength=o.digestLength,p}}else s=e.random.getBytes(o.digestLength);var m=t(s,c-o.digestLength-1,u),v=e.util.xorBytes(g,m,g.length),C=t(v,o.digestLength,u),E=e.util.xorBytes(s,C,s.length);return"\x00"+E+v},r.decode_rsa_oaep=function(r,n,a){var i,s,o;"string"==typeof a?(i=a,s=arguments[3]||void 0):a&&(i=a.label||void 0,s=a.md||void 0,a.mgf1&&a.mgf1.md&&(o=a.mgf1.md));var u=Math.ceil(r.n.bitLength()/8);if(n.length!==u){var c=new Error("RSAES-OAEP encoded message length is invalid.");throw c.length=n.length,c.expectedLength=u,c}if(void 0===s?s=e.md.sha1.create():s.start(),o||(o=s),u<2*s.digestLength+2)throw new Error("RSAES-OAEP key is too short for the hash function.");i||(i=""),s.update(i,"raw");for(var l=s.digest().getBytes(),p=n.charAt(0),f=n.substring(1,s.digestLength+1),d=n.substring(1+s.digestLength),h=t(d,s.digestLength,o),y=e.util.xorBytes(f,h,f.length),g=t(y,u-s.digestLength-1,o),m=e.util.xorBytes(d,g,d.length),v=m.substring(0,s.digestLength),c="\x00"!==p,C=0;C<s.digestLength;++C)c|=l.charAt(C)!==v.charAt(C);for(var E=1,S=s.digestLength,T=s.digestLength;T<m.length;T++){var A=m.charCodeAt(T),I=1&A^1,b=E?65534:0;c|=A&b,E&=I,S+=E}if(c||1!==m.charCodeAt(S))throw new Error("Invalid RSAES-OAEP padding.");return m.substring(S+1)}}var n="pkcs1";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/pkcs1",["require","module","./util","./random","./sha1"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function t(e,t,a,i){return"workers"in a?n(e,t,a,i):r(e,t,a,i)}function r(t,n,s,o){var c=a(t,n),l=0,p=i(c.bitLength());"millerRabinTests"in s&&(p=s.millerRabinTests);var f=10;"maxBlockTime"in s&&(f=s.maxBlockTime);var d=+new Date;do{if(c.bitLength()>t&&(c=a(t,n)),c.isProbablePrime(p))return o(null,c);c.dAddOffset(u[l++%8],0)}while(0>f||+new Date-d<f);e.util.setImmediate(function(){r(t,n,s,o)})}function n(t,n,i,s){function u(){function e(e){if(!h){--u;var i=e.data;if(i.found){for(var l=0;l<r.length;++l)r[l].terminate();return h=!0,s(null,new o(i.prime,16))}c.bitLength()>t&&(c=a(t,n));var d=c.toString(16);e.target.postMessage({hex:d,workLoad:p}),c.dAddOffset(f,0)}}l=Math.max(1,l);for(var r=[],i=0;l>i;++i)r[i]=new Worker(d);for(var u=l,i=0;l>i;++i)r[i].addEventListener("message",e);var h=!1}if("undefined"==typeof Worker)return r(t,n,i,s);var c=a(t,n),l=i.workers,p=i.workLoad||100,f=30*p/8,d=i.workerScript||"forge/prime.worker.js";return-1===l?e.util.estimateCores(function(e,t){e&&(t=2),l=t-1,u()}):void u();
}function a(e,t){var r=new o(e,t),n=e-1;return r.testBit(n)||r.bitwiseTo(o.ONE.shiftLeft(n),l,r),r.dAddOffset(31-r.mod(c).byteValue(),0),r}function i(e){return 100>=e?27:150>=e?18:200>=e?15:250>=e?12:300>=e?9:350>=e?8:400>=e?7:500>=e?6:600>=e?5:800>=e?4:1250>=e?3:2}if(!e.prime){var s=e.prime=e.prime||{},o=e.jsbn.BigInteger,u=[6,4,2,4,2,4,6,2],c=new o(null);c.fromInt(30);var l=function(e,t){return e|t};s.generateProbablePrime=function(r,n,a){"function"==typeof n&&(a=n,n={}),n=n||{};var i=n.algorithm||"PRIMEINC";"string"==typeof i&&(i={name:i}),i.options=i.options||{};var s=n.prng||e.random,o={nextBytes:function(e){for(var t=s.getBytesSync(e.length),r=0;r<e.length;++r)e[r]=t.charCodeAt(r)}};if("PRIMEINC"===i.name)return t(r,o,i.options,a);throw new Error("Invalid prime generation algorithm: "+i.name)}}}var n="prime";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/prime",["require","module","./util","./jsbn","./random"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function t(t,r,n){var a=e.util.createBuffer(),i=Math.ceil(r.n.bitLength()/8);if(t.length>i-11){var s=new Error("Message is too long for PKCS#1 v1.5 padding.");throw s.length=t.length,s.max=i-11,s}a.putByte(0),a.putByte(n);var o,u=i-3-t.length;if(0===n||1===n){o=0===n?0:255;for(var c=0;u>c;++c)a.putByte(o)}else for(;u>0;){for(var l=0,p=e.random.getBytes(u),c=0;u>c;++c)o=p.charCodeAt(c),0===o?++l:a.putByte(o);u=l}return a.putByte(0),a.putBytes(t),a}function r(t,r,n,a){var i=Math.ceil(r.n.bitLength()/8),s=e.util.createBuffer(t),o=s.getByte(),u=s.getByte();if(0!==o||n&&0!==u&&1!==u||!n&&2!=u||n&&0===u&&"undefined"==typeof a)throw new Error("Encryption block is invalid.");var c=0;if(0===u){c=i-3-a;for(var l=0;c>l;++l)if(0!==s.getByte())throw new Error("Encryption block is invalid.")}else if(1===u)for(c=0;s.length()>1;){if(255!==s.getByte()){--s.read;break}++c}else if(2===u)for(c=0;s.length()>1;){if(0===s.getByte()){--s.read;break}++c}var p=s.getByte();if(0!==p||c!==i-3-s.length())throw new Error("Encryption block is invalid.");return s.getBytes()}function n(t,r,n){function a(){i(t.pBits,function(e,r){return e?n(e):(t.p=r,null!==t.q?o(e,t.q):void i(t.qBits,o))})}function i(t,r){e.prime.generateProbablePrime(t,c,r)}function o(e,r){if(e)return n(e);if(t.q=r,t.p.compareTo(t.q)<0){var c=t.p;t.p=t.q,t.q=c}if(0!==t.p.subtract(s.ONE).gcd(t.e).compareTo(s.ONE))return t.p=null,void a();if(0!==t.q.subtract(s.ONE).gcd(t.e).compareTo(s.ONE))return t.q=null,void i(t.qBits,o);if(t.p1=t.p.subtract(s.ONE),t.q1=t.q.subtract(s.ONE),t.phi=t.p1.multiply(t.q1),0!==t.phi.gcd(t.e).compareTo(s.ONE))return t.p=t.q=null,void a();if(t.n=t.p.multiply(t.q),t.n.bitLength()!==t.bits)return t.q=null,void i(t.qBits,o);var l=t.e.modInverse(t.phi);t.keys={privateKey:u.rsa.setPrivateKey(t.n,t.e,l,t.p,t.q,l.mod(t.p1),l.mod(t.q1),t.q.modInverse(t.p)),publicKey:u.rsa.setPublicKey(t.n,t.e)},n(null,t.keys)}"function"==typeof r&&(n=r,r={}),r=r||{};var c={algorithm:{name:r.algorithm||"PRIMEINC",options:{workers:r.workers||2,workLoad:r.workLoad||100,workerScript:r.workerScript}}};"prng"in r&&(c.prng=r.prng),a()}function a(t){var r=t.toString(16);return r[0]>="8"&&(r="00"+r),e.util.hexToBytes(r)}function i(e){return 100>=e?27:150>=e?18:200>=e?15:250>=e?12:300>=e?9:350>=e?8:400>=e?7:500>=e?6:600>=e?5:800>=e?4:1250>=e?3:2}if("undefined"==typeof s)var s=e.jsbn.BigInteger;var o=e.asn1;e.pki=e.pki||{},e.pki.rsa=e.rsa=e.rsa||{};var u=e.pki,c=[6,4,2,4,2,4,6,2],l={name:"PrivateKeyInfo",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"PrivateKeyInfo.version",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"privateKeyVersion"},{name:"PrivateKeyInfo.privateKeyAlgorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"privateKeyOid"}]},{name:"PrivateKeyInfo",tagClass:o.Class.UNIVERSAL,type:o.Type.OCTETSTRING,constructed:!1,capture:"privateKey"}]},p={name:"RSAPrivateKey",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"RSAPrivateKey.version",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"privateKeyVersion"},{name:"RSAPrivateKey.modulus",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"privateKeyModulus"},{name:"RSAPrivateKey.publicExponent",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"privateKeyPublicExponent"},{name:"RSAPrivateKey.privateExponent",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"privateKeyPrivateExponent"},{name:"RSAPrivateKey.prime1",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"privateKeyPrime1"},{name:"RSAPrivateKey.prime2",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"privateKeyPrime2"},{name:"RSAPrivateKey.exponent1",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"privateKeyExponent1"},{name:"RSAPrivateKey.exponent2",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"privateKeyExponent2"},{name:"RSAPrivateKey.coefficient",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"privateKeyCoefficient"}]},f={name:"RSAPublicKey",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"RSAPublicKey.modulus",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"publicKeyModulus"},{name:"RSAPublicKey.exponent",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"publicKeyExponent"}]},d=e.pki.rsa.publicKeyValidator={name:"SubjectPublicKeyInfo",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,captureAsn1:"subjectPublicKeyInfo",value:[{name:"SubjectPublicKeyInfo.AlgorithmIdentifier",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"publicKeyOid"}]},{name:"SubjectPublicKeyInfo.subjectPublicKey",tagClass:o.Class.UNIVERSAL,type:o.Type.BITSTRING,constructed:!1,value:[{name:"SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,optional:!0,captureAsn1:"rsaPublicKey"}]}]},h=function(e){var t;if(!(e.algorithm in u.oids)){var r=new Error("Unknown message digest algorithm.");throw r.algorithm=e.algorithm,r}t=u.oids[e.algorithm];var n=o.oidToDer(t).getBytes(),a=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[]),i=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[]);i.value.push(o.create(o.Class.UNIVERSAL,o.Type.OID,!1,n)),i.value.push(o.create(o.Class.UNIVERSAL,o.Type.NULL,!1,""));var s=o.create(o.Class.UNIVERSAL,o.Type.OCTETSTRING,!1,e.digest().getBytes());return a.value.push(i),a.value.push(s),o.toDer(a).getBytes()},y=function(t,r,n){if(n)return t.modPow(r.e,r.n);if(!r.p||!r.q)return t.modPow(r.d,r.n);r.dP||(r.dP=r.d.mod(r.p.subtract(s.ONE))),r.dQ||(r.dQ=r.d.mod(r.q.subtract(s.ONE))),r.qInv||(r.qInv=r.q.modInverse(r.p));var a;do a=new s(e.util.bytesToHex(e.random.getBytes(r.n.bitLength()/8)),16).mod(r.n);while(a.equals(s.ZERO));t=t.multiply(a.modPow(r.e,r.n)).mod(r.n);for(var i=t.mod(r.p).modPow(r.dP,r.p),o=t.mod(r.q).modPow(r.dQ,r.q);i.compareTo(o)<0;)i=i.add(r.p);var u=i.subtract(o).multiply(r.qInv).mod(r.p).multiply(r.q).add(o);return u=u.multiply(a.modInverse(r.n)).mod(r.n)};u.rsa.encrypt=function(r,n,a){var i,o=a,u=Math.ceil(n.n.bitLength()/8);a!==!1&&a!==!0?(o=2===a,i=t(r,n,a)):(i=e.util.createBuffer(),i.putBytes(r));for(var c=new s(i.toHex(),16),l=y(c,n,o),p=l.toString(16),f=e.util.createBuffer(),d=u-Math.ceil(p.length/2);d>0;)f.putByte(0),--d;return f.putBytes(e.util.hexToBytes(p)),f.getBytes()},u.rsa.decrypt=function(t,n,a,i){var o=Math.ceil(n.n.bitLength()/8);if(t.length!==o){var u=new Error("Encrypted message length is invalid.");throw u.length=t.length,u.expected=o,u}var c=new s(e.util.createBuffer(t).toHex(),16);if(c.compareTo(n.n)>=0)throw new Error("Encrypted message is invalid.");for(var l=y(c,n,a),p=l.toString(16),f=e.util.createBuffer(),d=o-Math.ceil(p.length/2);d>0;)f.putByte(0),--d;return f.putBytes(e.util.hexToBytes(p)),i!==!1?r(f.getBytes(),n,a):f.getBytes()},u.rsa.createKeyPairGenerationState=function(t,r,n){"string"==typeof t&&(t=parseInt(t,10)),t=t||2048,n=n||{};var a,i=n.prng||e.random,o={nextBytes:function(e){for(var t=i.getBytesSync(e.length),r=0;r<e.length;++r)e[r]=t.charCodeAt(r)}},u=n.algorithm||"PRIMEINC";if("PRIMEINC"!==u)throw new Error("Invalid key generation algorithm: "+u);return a={algorithm:u,state:0,bits:t,rng:o,eInt:r||65537,e:new s(null),p:null,q:null,qBits:t>>1,pBits:t-(t>>1),pqState:0,num:null,keys:null},a.e.fromInt(a.eInt),a},u.rsa.stepKeyPairGenerationState=function(e,t){"algorithm"in e||(e.algorithm="PRIMEINC");var r=new s(null);r.fromInt(30);for(var n,a=0,o=function(e,t){return e|t},l=+new Date,p=0;null===e.keys&&(0>=t||t>p);){if(0===e.state){var f=null===e.p?e.pBits:e.qBits,d=f-1;0===e.pqState?(e.num=new s(f,e.rng),e.num.testBit(d)||e.num.bitwiseTo(s.ONE.shiftLeft(d),o,e.num),e.num.dAddOffset(31-e.num.mod(r).byteValue(),0),a=0,++e.pqState):1===e.pqState?e.num.bitLength()>f?e.pqState=0:e.num.isProbablePrime(i(e.num.bitLength()))?++e.pqState:e.num.dAddOffset(c[a++%8],0):2===e.pqState?e.pqState=0===e.num.subtract(s.ONE).gcd(e.e).compareTo(s.ONE)?3:0:3===e.pqState&&(e.pqState=0,null===e.p?e.p=e.num:e.q=e.num,null!==e.p&&null!==e.q&&++e.state,e.num=null)}else if(1===e.state)e.p.compareTo(e.q)<0&&(e.num=e.p,e.p=e.q,e.q=e.num),++e.state;else if(2===e.state)e.p1=e.p.subtract(s.ONE),e.q1=e.q.subtract(s.ONE),e.phi=e.p1.multiply(e.q1),++e.state;else if(3===e.state)0===e.phi.gcd(e.e).compareTo(s.ONE)?++e.state:(e.p=null,e.q=null,e.state=0);else if(4===e.state)e.n=e.p.multiply(e.q),e.n.bitLength()===e.bits?++e.state:(e.q=null,e.state=0);else if(5===e.state){var h=e.e.modInverse(e.phi);e.keys={privateKey:u.rsa.setPrivateKey(e.n,e.e,h,e.p,e.q,h.mod(e.p1),h.mod(e.q1),e.q.modInverse(e.p)),publicKey:u.rsa.setPublicKey(e.n,e.e)}}n=+new Date,p+=n-l,l=n}return null!==e.keys},u.rsa.generateKeyPair=function(e,t,r,a){1===arguments.length?"object"==typeof e?(r=e,e=void 0):"function"==typeof e&&(a=e,e=void 0):2===arguments.length?"number"==typeof e?"function"==typeof t?(a=t,t=void 0):"number"!=typeof t&&(r=t,t=void 0):(r=e,a=t,e=void 0,t=void 0):3===arguments.length&&("number"==typeof t?"function"==typeof r&&(a=r,r=void 0):(a=r,r=t,t=void 0)),r=r||{},void 0===e&&(e=r.bits||2048),void 0===t&&(t=r.e||65537);var i=u.rsa.createKeyPairGenerationState(e,t,r);return a?void n(i,r,a):(u.rsa.stepKeyPairGenerationState(i,0),i.keys)},u.setRsaPublicKey=u.rsa.setPublicKey=function(n,a){var i={n:n,e:a};return i.encrypt=function(r,n,a){if("string"==typeof n?n=n.toUpperCase():void 0===n&&(n="RSAES-PKCS1-V1_5"),"RSAES-PKCS1-V1_5"===n)n={encode:function(e,r,n){return t(e,r,2).getBytes()}};else if("RSA-OAEP"===n||"RSAES-OAEP"===n)n={encode:function(t,r){return e.pkcs1.encode_rsa_oaep(r,t,a)}};else if(-1!==["RAW","NONE","NULL",null].indexOf(n))n={encode:function(e){return e}};else if("string"==typeof n)throw new Error('Unsupported encryption scheme: "'+n+'".');var s=n.encode(r,i,!0);return u.rsa.encrypt(s,i,!0)},i.verify=function(e,t,n){"string"==typeof n?n=n.toUpperCase():void 0===n&&(n="RSASSA-PKCS1-V1_5"),"RSASSA-PKCS1-V1_5"===n?n={verify:function(e,t){t=r(t,i,!0);var n=o.fromDer(t);return e===n.value[1].value}}:("NONE"===n||"NULL"===n||null===n)&&(n={verify:function(e,t){return t=r(t,i,!0),e===t}});var a=u.rsa.decrypt(t,i,!0,!1);return n.verify(e,a,i.n.bitLength())},i},u.setRsaPrivateKey=u.rsa.setPrivateKey=function(t,n,a,i,s,o,c,l){var p={n:t,e:n,d:a,p:i,q:s,dP:o,dQ:c,qInv:l};return p.decrypt=function(t,n,a){"string"==typeof n?n=n.toUpperCase():void 0===n&&(n="RSAES-PKCS1-V1_5");var i=u.rsa.decrypt(t,p,!1,!1);if("RSAES-PKCS1-V1_5"===n)n={decode:r};else if("RSA-OAEP"===n||"RSAES-OAEP"===n)n={decode:function(t,r){return e.pkcs1.decode_rsa_oaep(r,t,a)}};else{if(-1===["RAW","NONE","NULL",null].indexOf(n))throw new Error('Unsupported encryption scheme: "'+n+'".');n={decode:function(e){return e}}}return n.decode(i,p,!1)},p.sign=function(e,t){var r=!1;"string"==typeof t&&(t=t.toUpperCase()),void 0===t||"RSASSA-PKCS1-V1_5"===t?(t={encode:h},r=1):("NONE"===t||"NULL"===t||null===t)&&(t={encode:function(){return e}},r=1);var n=t.encode(e,p.n.bitLength());return u.rsa.encrypt(n,p,r)},p},u.wrapRsaPrivateKey=function(e){return o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,o.integerToDer(0).getBytes()),o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(u.oids.rsaEncryption).getBytes()),o.create(o.Class.UNIVERSAL,o.Type.NULL,!1,"")]),o.create(o.Class.UNIVERSAL,o.Type.OCTETSTRING,!1,o.toDer(e).getBytes())])},u.privateKeyFromAsn1=function(t){var r={},n=[];if(o.validate(t,l,r,n)&&(t=o.fromDer(e.util.createBuffer(r.privateKey))),r={},n=[],!o.validate(t,p,r,n)){var a=new Error("Cannot read private key. ASN.1 object does not contain an RSAPrivateKey.");throw a.errors=n,a}var i,c,f,d,h,y,g,m;return i=e.util.createBuffer(r.privateKeyModulus).toHex(),c=e.util.createBuffer(r.privateKeyPublicExponent).toHex(),f=e.util.createBuffer(r.privateKeyPrivateExponent).toHex(),d=e.util.createBuffer(r.privateKeyPrime1).toHex(),h=e.util.createBuffer(r.privateKeyPrime2).toHex(),y=e.util.createBuffer(r.privateKeyExponent1).toHex(),g=e.util.createBuffer(r.privateKeyExponent2).toHex(),m=e.util.createBuffer(r.privateKeyCoefficient).toHex(),u.setRsaPrivateKey(new s(i,16),new s(c,16),new s(f,16),new s(d,16),new s(h,16),new s(y,16),new s(g,16),new s(m,16))},u.privateKeyToAsn1=u.privateKeyToRSAPrivateKey=function(e){return o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,o.integerToDer(0).getBytes()),o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,a(e.n)),o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,a(e.e)),o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,a(e.d)),o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,a(e.p)),o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,a(e.q)),o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,a(e.dP)),o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,a(e.dQ)),o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,a(e.qInv))])},u.publicKeyFromAsn1=function(t){var r={},n=[];if(o.validate(t,d,r,n)){var a=o.derToOid(r.publicKeyOid);if(a!==u.oids.rsaEncryption){var i=new Error("Cannot read public key. Unknown OID.");throw i.oid=a,i}t=r.rsaPublicKey}if(n=[],!o.validate(t,f,r,n)){var i=new Error("Cannot read public key. ASN.1 object does not contain an RSAPublicKey.");throw i.errors=n,i}var c=e.util.createBuffer(r.publicKeyModulus).toHex(),l=e.util.createBuffer(r.publicKeyExponent).toHex();return u.setRsaPublicKey(new s(c,16),new s(l,16))},u.publicKeyToAsn1=u.publicKeyToSubjectPublicKeyInfo=function(e){return o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(u.oids.rsaEncryption).getBytes()),o.create(o.Class.UNIVERSAL,o.Type.NULL,!1,"")]),o.create(o.Class.UNIVERSAL,o.Type.BITSTRING,!1,[u.publicKeyToRSAPublicKey(e)])])},u.publicKeyToRSAPublicKey=function(e){return o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,a(e.n)),o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,a(e.e))])}}var n="rsa";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/rsa",["require","module","./asn1","./jsbn","./oids","./pkcs1","./prime","./random","./util"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function t(e,t){return e.start().update(t).digest().getBytes()}if("undefined"==typeof r)var r=e.jsbn.BigInteger;var n=e.asn1,a=e.pki=e.pki||{};a.pbe=e.pbe=e.pbe||{};var i=a.oids,s={name:"EncryptedPrivateKeyInfo",tagClass:n.Class.UNIVERSAL,type:n.Type.SEQUENCE,constructed:!0,value:[{name:"EncryptedPrivateKeyInfo.encryptionAlgorithm",tagClass:n.Class.UNIVERSAL,type:n.Type.SEQUENCE,constructed:!0,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:n.Class.UNIVERSAL,type:n.Type.OID,constructed:!1,capture:"encryptionOid"},{name:"AlgorithmIdentifier.parameters",tagClass:n.Class.UNIVERSAL,type:n.Type.SEQUENCE,constructed:!0,captureAsn1:"encryptionParams"}]},{name:"EncryptedPrivateKeyInfo.encryptedData",tagClass:n.Class.UNIVERSAL,type:n.Type.OCTETSTRING,constructed:!1,capture:"encryptedData"}]},o={name:"PBES2Algorithms",tagClass:n.Class.UNIVERSAL,type:n.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.keyDerivationFunc",tagClass:n.Class.UNIVERSAL,type:n.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.keyDerivationFunc.oid",tagClass:n.Class.UNIVERSAL,type:n.Type.OID,constructed:!1,capture:"kdfOid"},{name:"PBES2Algorithms.params",tagClass:n.Class.UNIVERSAL,type:n.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.params.salt",tagClass:n.Class.UNIVERSAL,type:n.Type.OCTETSTRING,constructed:!1,capture:"kdfSalt"},{name:"PBES2Algorithms.params.iterationCount",tagClass:n.Class.UNIVERSAL,type:n.Type.INTEGER,onstructed:!0,capture:"kdfIterationCount"}]}]},{name:"PBES2Algorithms.encryptionScheme",tagClass:n.Class.UNIVERSAL,type:n.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.encryptionScheme.oid",tagClass:n.Class.UNIVERSAL,type:n.Type.OID,constructed:!1,capture:"encOid"},{name:"PBES2Algorithms.encryptionScheme.iv",tagClass:n.Class.UNIVERSAL,type:n.Type.OCTETSTRING,constructed:!1,capture:"encIv"}]}]},u={name:"pkcs-12PbeParams",tagClass:n.Class.UNIVERSAL,type:n.Type.SEQUENCE,constructed:!0,value:[{name:"pkcs-12PbeParams.salt",tagClass:n.Class.UNIVERSAL,type:n.Type.OCTETSTRING,constructed:!1,capture:"salt"},{name:"pkcs-12PbeParams.iterations",tagClass:n.Class.UNIVERSAL,type:n.Type.INTEGER,constructed:!1,capture:"iterations"}]};a.encryptPrivateKeyInfo=function(t,r,s){s=s||{},s.saltSize=s.saltSize||8,s.count=s.count||2048,s.algorithm=s.algorithm||"aes128";var o,u,c,l=e.random.getBytesSync(s.saltSize),p=s.count,f=n.integerToDer(p);if(0===s.algorithm.indexOf("aes")||"des"===s.algorithm){var d,h,y;switch(s.algorithm){case"aes128":o=16,d=16,h=i["aes128-CBC"],y=e.aes.createEncryptionCipher;break;case"aes192":o=24,d=16,h=i["aes192-CBC"],y=e.aes.createEncryptionCipher;break;case"aes256":o=32,d=16,h=i["aes256-CBC"],y=e.aes.createEncryptionCipher;break;case"des":o=8,d=8,h=i.desCBC,y=e.des.createEncryptionCipher;break;default:var g=new Error("Cannot encrypt private key. Unknown encryption algorithm.");throw g.algorithm=s.algorithm,g}var m=e.pkcs5.pbkdf2(r,l,p,o),v=e.random.getBytesSync(d),C=y(m);C.start(v),C.update(n.toDer(t)),C.finish(),c=C.output.getBytes(),u=n.create(n.Class.UNIVERSAL,n.Type.SEQUENCE,!0,[n.create(n.Class.UNIVERSAL,n.Type.OID,!1,n.oidToDer(i.pkcs5PBES2).getBytes()),n.create(n.Class.UNIVERSAL,n.Type.SEQUENCE,!0,[n.create(n.Class.UNIVERSAL,n.Type.SEQUENCE,!0,[n.create(n.Class.UNIVERSAL,n.Type.OID,!1,n.oidToDer(i.pkcs5PBKDF2).getBytes()),n.create(n.Class.UNIVERSAL,n.Type.SEQUENCE,!0,[n.create(n.Class.UNIVERSAL,n.Type.OCTETSTRING,!1,l),n.create(n.Class.UNIVERSAL,n.Type.INTEGER,!1,f.getBytes())])]),n.create(n.Class.UNIVERSAL,n.Type.SEQUENCE,!0,[n.create(n.Class.UNIVERSAL,n.Type.OID,!1,n.oidToDer(h).getBytes()),n.create(n.Class.UNIVERSAL,n.Type.OCTETSTRING,!1,v)])])])}else{if("3des"!==s.algorithm){var g=new Error("Cannot encrypt private key. Unknown encryption algorithm.");throw g.algorithm=s.algorithm,g}o=24;var E=new e.util.ByteBuffer(l),m=a.pbe.generatePkcs12Key(r,E,1,p,o),v=a.pbe.generatePkcs12Key(r,E,2,p,o),C=e.des.createEncryptionCipher(m);C.start(v),C.update(n.toDer(t)),C.finish(),c=C.output.getBytes(),u=n.create(n.Class.UNIVERSAL,n.Type.SEQUENCE,!0,[n.create(n.Class.UNIVERSAL,n.Type.OID,!1,n.oidToDer(i["pbeWithSHAAnd3-KeyTripleDES-CBC"]).getBytes()),n.create(n.Class.UNIVERSAL,n.Type.SEQUENCE,!0,[n.create(n.Class.UNIVERSAL,n.Type.OCTETSTRING,!1,l),n.create(n.Class.UNIVERSAL,n.Type.INTEGER,!1,f.getBytes())])])}var S=n.create(n.Class.UNIVERSAL,n.Type.SEQUENCE,!0,[u,n.create(n.Class.UNIVERSAL,n.Type.OCTETSTRING,!1,c)]);return S},a.decryptPrivateKeyInfo=function(t,r){var i=null,o={},u=[];if(!n.validate(t,s,o,u)){var c=new Error("Cannot read encrypted private key. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");throw c.errors=u,c}var l=n.derToOid(o.encryptionOid),p=a.pbe.getCipher(l,o.encryptionParams,r),f=e.util.createBuffer(o.encryptedData);return p.update(f),p.finish()&&(i=n.fromDer(p.output)),i},a.encryptedPrivateKeyToPem=function(t,r){var a={type:"ENCRYPTED PRIVATE KEY",body:n.toDer(t).getBytes()};return e.pem.encode(a,{maxline:r})},a.encryptedPrivateKeyFromPem=function(t){var r=e.pem.decode(t)[0];if("ENCRYPTED PRIVATE KEY"!==r.type){var a=new Error('Could not convert encrypted private key from PEM; PEM header type is "ENCRYPTED PRIVATE KEY".');throw a.headerType=r.type,a}if(r.procType&&"ENCRYPTED"===r.procType.type)throw new Error("Could not convert encrypted private key from PEM; PEM is encrypted.");return n.fromDer(r.body)},a.encryptRsaPrivateKey=function(t,r,i){if(i=i||{},!i.legacy){var s=a.wrapRsaPrivateKey(a.privateKeyToAsn1(t));return s=a.encryptPrivateKeyInfo(s,r,i),a.encryptedPrivateKeyToPem(s)}var o,u,c,l;switch(i.algorithm){case"aes128":o="AES-128-CBC",c=16,u=e.random.getBytesSync(16),l=e.aes.createEncryptionCipher;break;case"aes192":o="AES-192-CBC",c=24,u=e.random.getBytesSync(16),l=e.aes.createEncryptionCipher;break;case"aes256":o="AES-256-CBC",c=32,u=e.random.getBytesSync(16),l=e.aes.createEncryptionCipher;break;case"3des":o="DES-EDE3-CBC",c=24,u=e.random.getBytesSync(8),l=e.des.createEncryptionCipher;break;case"des":o="DES-CBC",c=8,u=e.random.getBytesSync(8),l=e.des.createEncryptionCipher;break;default:var p=new Error('Could not encrypt RSA private key; unsupported encryption algorithm "'+i.algorithm+'".');throw p.algorithm=i.algorithm,p}var f=e.pbe.opensslDeriveBytes(r,u.substr(0,8),c),d=l(f);d.start(u),d.update(n.toDer(a.privateKeyToAsn1(t))),d.finish();var h={type:"RSA PRIVATE KEY",procType:{version:"4",type:"ENCRYPTED"},dekInfo:{algorithm:o,parameters:e.util.bytesToHex(u).toUpperCase()},body:d.output.getBytes()};return e.pem.encode(h)},a.decryptRsaPrivateKey=function(t,r){var i=null,s=e.pem.decode(t)[0];if("ENCRYPTED PRIVATE KEY"!==s.type&&"PRIVATE KEY"!==s.type&&"RSA PRIVATE KEY"!==s.type){var o=new Error('Could not convert private key from PEM; PEM header type is not "ENCRYPTED PRIVATE KEY", "PRIVATE KEY", or "RSA PRIVATE KEY".');throw o.headerType=o,o}if(s.procType&&"ENCRYPTED"===s.procType.type){var u,c;switch(s.dekInfo.algorithm){case"DES-CBC":u=8,c=e.des.createDecryptionCipher;break;case"DES-EDE3-CBC":u=24,c=e.des.createDecryptionCipher;break;case"AES-128-CBC":u=16,c=e.aes.createDecryptionCipher;break;case"AES-192-CBC":u=24,c=e.aes.createDecryptionCipher;break;case"AES-256-CBC":u=32,c=e.aes.createDecryptionCipher;break;case"RC2-40-CBC":u=5,c=function(t){return e.rc2.createDecryptionCipher(t,40)};break;case"RC2-64-CBC":u=8,c=function(t){return e.rc2.createDecryptionCipher(t,64)};break;case"RC2-128-CBC":u=16,c=function(t){return e.rc2.createDecryptionCipher(t,128)};break;default:var o=new Error('Could not decrypt private key; unsupported encryption algorithm "'+s.dekInfo.algorithm+'".');throw o.algorithm=s.dekInfo.algorithm,o}var l=e.util.hexToBytes(s.dekInfo.parameters),p=e.pbe.opensslDeriveBytes(r,l.substr(0,8),u),f=c(p);if(f.start(l),f.update(e.util.createBuffer(s.body)),!f.finish())return i;i=f.output.getBytes()}else i=s.body;return i="ENCRYPTED PRIVATE KEY"===s.type?a.decryptPrivateKeyInfo(n.fromDer(i),r):n.fromDer(i),null!==i&&(i=a.privateKeyFromAsn1(i)),i},a.pbe.generatePkcs12Key=function(t,r,n,a,i,s){var o,u;("undefined"==typeof s||null===s)&&(s=e.md.sha1.create());var c=s.digestLength,l=s.blockLength,p=new e.util.ByteBuffer,f=new e.util.ByteBuffer;if(null!==t&&void 0!==t){for(u=0;u<t.length;u++)f.putInt16(t.charCodeAt(u));f.putInt16(0)}var d=f.length(),h=r.length(),y=new e.util.ByteBuffer;y.fillWithByte(n,l);var g=l*Math.ceil(h/l),m=new e.util.ByteBuffer;for(u=0;g>u;u++)m.putByte(r.at(u%h));var v=l*Math.ceil(d/l),C=new e.util.ByteBuffer;for(u=0;v>u;u++)C.putByte(f.at(u%d));var E=m;E.putBuffer(C);for(var S=Math.ceil(i/c),T=1;S>=T;T++){var A=new e.util.ByteBuffer;A.putBytes(y.bytes()),A.putBytes(E.bytes());for(var I=0;a>I;I++)s.start(),s.update(A.getBytes()),A=s.digest();var b=new e.util.ByteBuffer;for(u=0;l>u;u++)b.putByte(A.at(u%c));var B=Math.ceil(h/l)+Math.ceil(d/l),k=new e.util.ByteBuffer;for(o=0;B>o;o++){var N=new e.util.ByteBuffer(E.getBytes(l)),R=511;for(u=b.length()-1;u>=0;u--)R>>=8,R+=b.at(u)+N.at(u),N.setAt(u,255&R);k.putBuffer(N)}E=k,p.putBuffer(A)}return p.truncate(p.length()-i),p},a.pbe.getCipher=function(e,t,r){switch(e){case a.oids.pkcs5PBES2:return a.pbe.getCipherForPBES2(e,t,r);case a.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]:case a.oids["pbewithSHAAnd40BitRC2-CBC"]:return a.pbe.getCipherForPKCS12PBE(e,t,r);default:var n=new Error("Cannot read encrypted PBE data block. Unsupported OID.");throw n.oid=e,n.supportedOids=["pkcs5PBES2","pbeWithSHAAnd3-KeyTripleDES-CBC","pbewithSHAAnd40BitRC2-CBC"],n}},a.pbe.getCipherForPBES2=function(t,r,i){var s={},u=[];if(!n.validate(r,o,s,u)){var c=new Error("Cannot read password-based-encryption algorithm parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");throw c.errors=u,c}if(t=n.derToOid(s.kdfOid),t!==a.oids.pkcs5PBKDF2){var c=new Error("Cannot read encrypted private key. Unsupported key derivation function OID.");throw c.oid=t,c.supportedOids=["pkcs5PBKDF2"],c}if(t=n.derToOid(s.encOid),t!==a.oids["aes128-CBC"]&&t!==a.oids["aes192-CBC"]&&t!==a.oids["aes256-CBC"]&&t!==a.oids["des-EDE3-CBC"]&&t!==a.oids.desCBC){var c=new Error("Cannot read encrypted private key. Unsupported encryption scheme OID.");throw c.oid=t,c.supportedOids=["aes128-CBC","aes192-CBC","aes256-CBC","des-EDE3-CBC","desCBC"],c}var l=s.kdfSalt,p=e.util.createBuffer(s.kdfIterationCount);p=p.getInt(p.length()<<3);var f,d;switch(a.oids[t]){case"aes128-CBC":f=16,d=e.aes.createDecryptionCipher;break;case"aes192-CBC":f=24,d=e.aes.createDecryptionCipher;break;case"aes256-CBC":f=32,d=e.aes.createDecryptionCipher;break;case"des-EDE3-CBC":f=24,d=e.des.createDecryptionCipher;break;case"desCBC":f=8,d=e.des.createDecryptionCipher}var h=e.pkcs5.pbkdf2(i,l,p,f),y=s.encIv,g=d(h);return g.start(y),g},a.pbe.getCipherForPKCS12PBE=function(t,r,i){var s={},o=[];if(!n.validate(r,u,s,o)){var c=new Error("Cannot read password-based-encryption algorithm parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");throw c.errors=o,c}var l=e.util.createBuffer(s.salt),p=e.util.createBuffer(s.iterations);p=p.getInt(p.length()<<3);var f,d,h;switch(t){case a.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]:f=24,d=8,h=e.des.startDecrypting;break;case a.oids["pbewithSHAAnd40BitRC2-CBC"]:f=5,d=8,h=function(t,r){var n=e.rc2.createDecryptionCipher(t,40);return n.start(r,null),n};break;default:var c=new Error("Cannot read PKCS #12 PBE data block. Unsupported OID.");throw c.oid=t,c}var y=a.pbe.generatePkcs12Key(i,l,1,p,f),g=a.pbe.generatePkcs12Key(i,l,2,p,d);return h(y,g)},a.pbe.opensslDeriveBytes=function(r,n,a,i){("undefined"==typeof i||null===i)&&(i=e.md.md5.create()),null===n&&(n="");for(var s=[t(i,r+n)],o=16,u=1;a>o;++u,o+=16)s.push(t(i,s[u-1]+r+n));return s.join("").substr(0,a)}}var n="pbe";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/pbe",["require","module","./aes","./asn1","./des","./md","./oids","./pem","./pbkdf2","./random","./rc2","./rsa","./util"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){var t=e.asn1,r=e.pkcs7asn1=e.pkcs7asn1||{};e.pkcs7=e.pkcs7||{},e.pkcs7.asn1=r;var n={name:"ContentInfo",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"ContentInfo.ContentType",tagClass:t.Class.UNIVERSAL,type:t.Type.OID,constructed:!1,capture:"contentType"},{name:"ContentInfo.content",tagClass:t.Class.CONTEXT_SPECIFIC,type:0,constructed:!0,optional:!0,captureAsn1:"content"}]};r.contentInfoValidator=n;var a={name:"EncryptedContentInfo",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"EncryptedContentInfo.contentType",tagClass:t.Class.UNIVERSAL,type:t.Type.OID,constructed:!1,capture:"contentType"},{name:"EncryptedContentInfo.contentEncryptionAlgorithm",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"EncryptedContentInfo.contentEncryptionAlgorithm.algorithm",tagClass:t.Class.UNIVERSAL,type:t.Type.OID,constructed:!1,capture:"encAlgorithm"},{name:"EncryptedContentInfo.contentEncryptionAlgorithm.parameter",tagClass:t.Class.UNIVERSAL,captureAsn1:"encParameter"}]},{name:"EncryptedContentInfo.encryptedContent",tagClass:t.Class.CONTEXT_SPECIFIC,type:0,capture:"encryptedContent",captureAsn1:"encryptedContentAsn1"}]};r.envelopedDataValidator={name:"EnvelopedData",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"EnvelopedData.Version",tagClass:t.Class.UNIVERSAL,type:t.Type.INTEGER,constructed:!1,capture:"version"},{name:"EnvelopedData.RecipientInfos",tagClass:t.Class.UNIVERSAL,type:t.Type.SET,constructed:!0,captureAsn1:"recipientInfos"}].concat(a)},r.encryptedDataValidator={name:"EncryptedData",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"EncryptedData.Version",tagClass:t.Class.UNIVERSAL,type:t.Type.INTEGER,constructed:!1,capture:"version"}].concat(a)};var i={name:"SignerInfo",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"SignerInfo.Version",tagClass:t.Class.UNIVERSAL,type:t.Type.INTEGER,constructed:!1},{name:"SignerInfo.IssuerAndSerialNumber",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0},{name:"SignerInfo.DigestAlgorithm",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0},{name:"SignerInfo.AuthenticatedAttributes",tagClass:t.Class.CONTEXT_SPECIFIC,type:0,constructed:!0,optional:!0,capture:"authenticatedAttributes"},{name:"SignerInfo.DigestEncryptionAlgorithm",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0},{name:"SignerInfo.EncryptedDigest",tagClass:t.Class.UNIVERSAL,type:t.Type.OCTETSTRING,constructed:!1,capture:"signature"},{name:"SignerInfo.UnauthenticatedAttributes",tagClass:t.Class.CONTEXT_SPECIFIC,type:1,constructed:!0,optional:!0}]};r.signedDataValidator={name:"SignedData",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"SignedData.Version",
    tagClass:t.Class.UNIVERSAL,type:t.Type.INTEGER,constructed:!1,capture:"version"},{name:"SignedData.DigestAlgorithms",tagClass:t.Class.UNIVERSAL,type:t.Type.SET,constructed:!0,captureAsn1:"digestAlgorithms"},n,{name:"SignedData.Certificates",tagClass:t.Class.CONTEXT_SPECIFIC,type:0,optional:!0,captureAsn1:"certificates"},{name:"SignedData.CertificateRevocationLists",tagClass:t.Class.CONTEXT_SPECIFIC,type:1,optional:!0,captureAsn1:"crls"},{name:"SignedData.SignerInfos",tagClass:t.Class.UNIVERSAL,type:t.Type.SET,capture:"signerInfos",optional:!0,value:[i]}]},r.recipientInfoValidator={name:"RecipientInfo",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"RecipientInfo.version",tagClass:t.Class.UNIVERSAL,type:t.Type.INTEGER,constructed:!1,capture:"version"},{name:"RecipientInfo.issuerAndSerial",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"RecipientInfo.issuerAndSerial.issuer",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,captureAsn1:"issuer"},{name:"RecipientInfo.issuerAndSerial.serialNumber",tagClass:t.Class.UNIVERSAL,type:t.Type.INTEGER,constructed:!1,capture:"serial"}]},{name:"RecipientInfo.keyEncryptionAlgorithm",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"RecipientInfo.keyEncryptionAlgorithm.algorithm",tagClass:t.Class.UNIVERSAL,type:t.Type.OID,constructed:!1,capture:"encAlgorithm"},{name:"RecipientInfo.keyEncryptionAlgorithm.parameter",tagClass:t.Class.UNIVERSAL,constructed:!1,captureAsn1:"encParameter"}]},{name:"RecipientInfo.encryptedKey",tagClass:t.Class.UNIVERSAL,type:t.Type.OCTETSTRING,constructed:!1,capture:"encKey"}]}}var n="pkcs7asn1";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/pkcs7asn1",["require","module","./asn1","./util"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){e.mgf=e.mgf||{};var t=e.mgf.mgf1=e.mgf1=e.mgf1||{};t.create=function(t){var r={generate:function(r,n){for(var a=new e.util.ByteBuffer,i=Math.ceil(n/t.digestLength),s=0;i>s;s++){var o=new e.util.ByteBuffer;o.putInt32(s),t.start(),t.update(r+o.getBytes()),a.putBuffer(t.digest())}return a.truncate(a.length()-n),a.getBytes()}};return r}}var n="mgf1";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/mgf1",["require","module","./util"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){e.mgf=e.mgf||{},e.mgf.mgf1=e.mgf1}var n="mgf";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/mgf",["require","module","./mgf1"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){var t=e.pss=e.pss||{};t.create=function(t){3===arguments.length&&(t={md:arguments[0],mgf:arguments[1],saltLength:arguments[2]});var r=t.md,n=t.mgf,a=r.digestLength,i=t.salt||null;"string"==typeof i&&(i=e.util.createBuffer(i));var s;if("saltLength"in t)s=t.saltLength;else{if(null===i)throw new Error("Salt length not specified or specific salt not given.");s=i.length()}if(null!==i&&i.length()!==s)throw new Error("Given salt length does not match length of given salt.");var o=t.prng||e.random,u={};return u.encode=function(t,u){var c,l=u-1,p=Math.ceil(l/8),f=t.digest().getBytes();if(a+s+2>p)throw new Error("Message is too long to encrypt.");var d;d=null===i?o.getBytesSync(s):i.bytes();var h=new e.util.ByteBuffer;h.fillWithByte(0,8),h.putBytes(f),h.putBytes(d),r.start(),r.update(h.getBytes());var y=r.digest().getBytes(),g=new e.util.ByteBuffer;g.fillWithByte(0,p-s-a-2),g.putByte(1),g.putBytes(d);var m=g.getBytes(),v=p-a-1,C=n.generate(y,v),E="";for(c=0;v>c;c++)E+=String.fromCharCode(m.charCodeAt(c)^C.charCodeAt(c));var S=65280>>8*p-l&255;return E=String.fromCharCode(E.charCodeAt(0)&~S)+E.substr(1),E+y+String.fromCharCode(188)},u.verify=function(t,i,o){var u,c=o-1,l=Math.ceil(c/8);if(i=i.substr(-l),a+s+2>l)throw new Error("Inconsistent parameters to PSS signature verification.");if(188!==i.charCodeAt(l-1))throw new Error("Encoded message does not end in 0xBC.");var p=l-a-1,f=i.substr(0,p),d=i.substr(p,a),h=65280>>8*l-c&255;if(0!==(f.charCodeAt(0)&h))throw new Error("Bits beyond keysize not zero as expected.");var y=n.generate(d,p),g="";for(u=0;p>u;u++)g+=String.fromCharCode(f.charCodeAt(u)^y.charCodeAt(u));g=String.fromCharCode(g.charCodeAt(0)&~h)+g.substr(1);var m=l-a-s-2;for(u=0;m>u;u++)if(0!==g.charCodeAt(u))throw new Error("Leftmost octets not zero as expected");if(1!==g.charCodeAt(m))throw new Error("Inconsistent PSS signature, 0x01 marker not found");var v=g.substr(-s),C=new e.util.ByteBuffer;C.fillWithByte(0,8),C.putBytes(t),C.putBytes(v),r.start(),r.update(C.getBytes());var E=r.digest().getBytes();return d===E},u}}var n="pss";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/pss",["require","module","./random","./util"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function t(e,t){"string"==typeof t&&(t={shortName:t});for(var r,n=null,a=0;null===n&&a<e.attributes.length;++a)r=e.attributes[a],t.type&&t.type===r.type?n=r:t.name&&t.name===r.name?n=r:t.shortName&&t.shortName===r.shortName&&(n=r);return n}function r(t){for(var r,n,a=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[]),i=t.attributes,s=0;s<i.length;++s){r=i[s];var u=r.value,c=o.Type.PRINTABLESTRING;"valueTagClass"in r&&(c=r.valueTagClass,c===o.Type.UTF8&&(u=e.util.encodeUtf8(u))),n=o.create(o.Class.UNIVERSAL,o.Type.SET,!0,[o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(r.type).getBytes()),o.create(o.Class.UNIVERSAL,c,!1,u)])]),a.value.push(n)}return a}function n(e){for(var t,r=0;r<e.length;++r){if(t=e[r],"undefined"==typeof t.name&&(t.type&&t.type in u.oids?t.name=u.oids[t.type]:t.shortName&&t.shortName in l&&(t.name=u.oids[l[t.shortName]])),"undefined"==typeof t.type){if(!(t.name&&t.name in u.oids)){var n=new Error("Attribute type not specified.");throw n.attribute=t,n}t.type=u.oids[t.name]}if("undefined"==typeof t.shortName&&t.name&&t.name in l&&(t.shortName=l[t.name]),t.type===c.extensionRequest&&(t.valueConstructed=!0,t.valueTagClass=o.Type.SEQUENCE,!t.value&&t.extensions)){t.value=[];for(var i=0;i<t.extensions.length;++i)t.value.push(u.certificateExtensionToAsn1(a(t.extensions[i])))}if("undefined"==typeof t.value){var n=new Error("Attribute value not specified.");throw n.attribute=t,n}}}function a(t,r){if(r=r||{},"undefined"==typeof t.name&&t.id&&t.id in u.oids&&(t.name=u.oids[t.id]),"undefined"==typeof t.id){if(!(t.name&&t.name in u.oids)){var n=new Error("Extension ID not specified.");throw n.extension=t,n}t.id=u.oids[t.name]}if("undefined"==typeof t.value){if("keyUsage"===t.name){var a=0,i=0,s=0;t.digitalSignature&&(i|=128,a=7),t.nonRepudiation&&(i|=64,a=6),t.keyEncipherment&&(i|=32,a=5),t.dataEncipherment&&(i|=16,a=4),t.keyAgreement&&(i|=8,a=3),t.keyCertSign&&(i|=4,a=2),t.cRLSign&&(i|=2,a=1),t.encipherOnly&&(i|=1,a=0),t.decipherOnly&&(s|=128,a=7);var l=String.fromCharCode(a);0!==s?l+=String.fromCharCode(i)+String.fromCharCode(s):0!==i&&(l+=String.fromCharCode(i)),t.value=o.create(o.Class.UNIVERSAL,o.Type.BITSTRING,!1,l)}else if("basicConstraints"===t.name)t.value=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[]),t.cA&&t.value.value.push(o.create(o.Class.UNIVERSAL,o.Type.BOOLEAN,!1,String.fromCharCode(255))),"pathLenConstraint"in t&&t.value.value.push(o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,o.integerToDer(t.pathLenConstraint).getBytes()));else if("extKeyUsage"===t.name){t.value=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[]);var p=t.value.value;for(var f in t)t[f]===!0&&(f in c?p.push(o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(c[f]).getBytes())):-1!==f.indexOf(".")&&p.push(o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(f).getBytes())))}else if("nsCertType"===t.name){var a=0,i=0;t.client&&(i|=128,a=7),t.server&&(i|=64,a=6),t.email&&(i|=32,a=5),t.objsign&&(i|=16,a=4),t.reserved&&(i|=8,a=3),t.sslCA&&(i|=4,a=2),t.emailCA&&(i|=2,a=1),t.objCA&&(i|=1,a=0);var l=String.fromCharCode(a);0!==i&&(l+=String.fromCharCode(i)),t.value=o.create(o.Class.UNIVERSAL,o.Type.BITSTRING,!1,l)}else if("subjectAltName"===t.name||"issuerAltName"===t.name){t.value=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[]);for(var d,h=0;h<t.altNames.length;++h){d=t.altNames[h];var l=d.value;if(7===d.type&&d.ip){if(l=e.util.bytesFromIP(d.ip),null===l){var n=new Error('Extension "ip" value is not a valid IPv4 or IPv6 address.');throw n.extension=t,n}}else 8===d.type&&(l=d.oid?o.oidToDer(o.oidToDer(d.oid)):o.oidToDer(l));t.value.value.push(o.create(o.Class.CONTEXT_SPECIFIC,d.type,!1,l))}}else if("subjectKeyIdentifier"===t.name&&r.cert){var y=r.cert.generateSubjectKeyIdentifier();t.subjectKeyIdentifier=y.toHex(),t.value=o.create(o.Class.UNIVERSAL,o.Type.OCTETSTRING,!1,y.getBytes())}if("undefined"==typeof t.value){var n=new Error("Extension value not specified.");throw n.extension=t,n}return t}}function i(e,t){switch(e){case c["RSASSA-PSS"]:var r=[];return void 0!==t.hash.algorithmOid&&r.push(o.create(o.Class.CONTEXT_SPECIFIC,0,!0,[o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(t.hash.algorithmOid).getBytes()),o.create(o.Class.UNIVERSAL,o.Type.NULL,!1,"")])])),void 0!==t.mgf.algorithmOid&&r.push(o.create(o.Class.CONTEXT_SPECIFIC,1,!0,[o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(t.mgf.algorithmOid).getBytes()),o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(t.mgf.hash.algorithmOid).getBytes()),o.create(o.Class.UNIVERSAL,o.Type.NULL,!1,"")])])])),void 0!==t.saltLength&&r.push(o.create(o.Class.CONTEXT_SPECIFIC,2,!0,[o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,o.integerToDer(t.saltLength).getBytes())])),o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,r);default:return o.create(o.Class.UNIVERSAL,o.Type.NULL,!1,"")}}function s(t){var r=o.create(o.Class.CONTEXT_SPECIFIC,0,!0,[]);if(0===t.attributes.length)return r;for(var n=t.attributes,a=0;a<n.length;++a){var i=n[a],s=i.value,u=o.Type.UTF8;"valueTagClass"in i&&(u=i.valueTagClass),u===o.Type.UTF8&&(s=e.util.encodeUtf8(s));var c=!1;"valueConstructed"in i&&(c=i.valueConstructed);var l=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(i.type).getBytes()),o.create(o.Class.UNIVERSAL,o.Type.SET,!0,[o.create(o.Class.UNIVERSAL,u,c,s)])]);r.value.push(l)}return r}var o=e.asn1,u=e.pki=e.pki||{},c=u.oids,l={};l.CN=c.commonName,l.commonName="CN",l.C=c.countryName,l.countryName="C",l.L=c.localityName,l.localityName="L",l.ST=c.stateOrProvinceName,l.stateOrProvinceName="ST",l.O=c.organizationName,l.organizationName="O",l.OU=c.organizationalUnitName,l.organizationalUnitName="OU",l.E=c.emailAddress,l.emailAddress="E";var p=e.pki.rsa.publicKeyValidator,f={name:"Certificate",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"Certificate.TBSCertificate",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,captureAsn1:"tbsCertificate",value:[{name:"Certificate.TBSCertificate.version",tagClass:o.Class.CONTEXT_SPECIFIC,type:0,constructed:!0,optional:!0,value:[{name:"Certificate.TBSCertificate.version.integer",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"certVersion"}]},{name:"Certificate.TBSCertificate.serialNumber",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"certSerialNumber"},{name:"Certificate.TBSCertificate.signature",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"Certificate.TBSCertificate.signature.algorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"certinfoSignatureOid"},{name:"Certificate.TBSCertificate.signature.parameters",tagClass:o.Class.UNIVERSAL,optional:!0,captureAsn1:"certinfoSignatureParams"}]},{name:"Certificate.TBSCertificate.issuer",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,captureAsn1:"certIssuer"},{name:"Certificate.TBSCertificate.validity",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"Certificate.TBSCertificate.validity.notBefore (utc)",tagClass:o.Class.UNIVERSAL,type:o.Type.UTCTIME,constructed:!1,optional:!0,capture:"certValidity1UTCTime"},{name:"Certificate.TBSCertificate.validity.notBefore (generalized)",tagClass:o.Class.UNIVERSAL,type:o.Type.GENERALIZEDTIME,constructed:!1,optional:!0,capture:"certValidity2GeneralizedTime"},{name:"Certificate.TBSCertificate.validity.notAfter (utc)",tagClass:o.Class.UNIVERSAL,type:o.Type.UTCTIME,constructed:!1,optional:!0,capture:"certValidity3UTCTime"},{name:"Certificate.TBSCertificate.validity.notAfter (generalized)",tagClass:o.Class.UNIVERSAL,type:o.Type.GENERALIZEDTIME,constructed:!1,optional:!0,capture:"certValidity4GeneralizedTime"}]},{name:"Certificate.TBSCertificate.subject",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,captureAsn1:"certSubject"},p,{name:"Certificate.TBSCertificate.issuerUniqueID",tagClass:o.Class.CONTEXT_SPECIFIC,type:1,constructed:!0,optional:!0,value:[{name:"Certificate.TBSCertificate.issuerUniqueID.id",tagClass:o.Class.UNIVERSAL,type:o.Type.BITSTRING,constructed:!1,capture:"certIssuerUniqueId"}]},{name:"Certificate.TBSCertificate.subjectUniqueID",tagClass:o.Class.CONTEXT_SPECIFIC,type:2,constructed:!0,optional:!0,value:[{name:"Certificate.TBSCertificate.subjectUniqueID.id",tagClass:o.Class.UNIVERSAL,type:o.Type.BITSTRING,constructed:!1,capture:"certSubjectUniqueId"}]},{name:"Certificate.TBSCertificate.extensions",tagClass:o.Class.CONTEXT_SPECIFIC,type:3,constructed:!0,captureAsn1:"certExtensions",optional:!0}]},{name:"Certificate.signatureAlgorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"Certificate.signatureAlgorithm.algorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"certSignatureOid"},{name:"Certificate.TBSCertificate.signature.parameters",tagClass:o.Class.UNIVERSAL,optional:!0,captureAsn1:"certSignatureParams"}]},{name:"Certificate.signatureValue",tagClass:o.Class.UNIVERSAL,type:o.Type.BITSTRING,constructed:!1,capture:"certSignature"}]},d={name:"rsapss",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"rsapss.hashAlgorithm",tagClass:o.Class.CONTEXT_SPECIFIC,type:0,constructed:!0,value:[{name:"rsapss.hashAlgorithm.AlgorithmIdentifier",tagClass:o.Class.UNIVERSAL,type:o.Class.SEQUENCE,constructed:!0,optional:!0,value:[{name:"rsapss.hashAlgorithm.AlgorithmIdentifier.algorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"hashOid"}]}]},{name:"rsapss.maskGenAlgorithm",tagClass:o.Class.CONTEXT_SPECIFIC,type:1,constructed:!0,value:[{name:"rsapss.maskGenAlgorithm.AlgorithmIdentifier",tagClass:o.Class.UNIVERSAL,type:o.Class.SEQUENCE,constructed:!0,optional:!0,value:[{name:"rsapss.maskGenAlgorithm.AlgorithmIdentifier.algorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"maskGenOid"},{name:"rsapss.maskGenAlgorithm.AlgorithmIdentifier.params",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"rsapss.maskGenAlgorithm.AlgorithmIdentifier.params.algorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"maskGenHashOid"}]}]}]},{name:"rsapss.saltLength",tagClass:o.Class.CONTEXT_SPECIFIC,type:2,optional:!0,value:[{name:"rsapss.saltLength.saltLength",tagClass:o.Class.UNIVERSAL,type:o.Class.INTEGER,constructed:!1,capture:"saltLength"}]},{name:"rsapss.trailerField",tagClass:o.Class.CONTEXT_SPECIFIC,type:3,optional:!0,value:[{name:"rsapss.trailer.trailer",tagClass:o.Class.UNIVERSAL,type:o.Class.INTEGER,constructed:!1,capture:"trailer"}]}]},h={name:"CertificationRequestInfo",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,captureAsn1:"certificationRequestInfo",value:[{name:"CertificationRequestInfo.integer",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"certificationRequestInfoVersion"},{name:"CertificationRequestInfo.subject",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,captureAsn1:"certificationRequestInfoSubject"},p,{name:"CertificationRequestInfo.attributes",tagClass:o.Class.CONTEXT_SPECIFIC,type:0,constructed:!0,optional:!0,capture:"certificationRequestInfoAttributes",value:[{name:"CertificationRequestInfo.attributes",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"CertificationRequestInfo.attributes.type",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1},{name:"CertificationRequestInfo.attributes.value",tagClass:o.Class.UNIVERSAL,type:o.Type.SET,constructed:!0}]}]}]},y={name:"CertificationRequest",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,captureAsn1:"csr",value:[h,{name:"CertificationRequest.signatureAlgorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"CertificationRequest.signatureAlgorithm.algorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"csrSignatureOid"},{name:"CertificationRequest.signatureAlgorithm.parameters",tagClass:o.Class.UNIVERSAL,optional:!0,captureAsn1:"csrSignatureParams"}]},{name:"CertificationRequest.signature",tagClass:o.Class.UNIVERSAL,type:o.Type.BITSTRING,constructed:!1,capture:"csrSignature"}]};u.RDNAttributesAsArray=function(e,t){for(var r,n,a,i=[],s=0;s<e.value.length;++s){r=e.value[s];for(var u=0;u<r.value.length;++u)a={},n=r.value[u],a.type=o.derToOid(n.value[0].value),a.value=n.value[1].value,a.valueTagClass=n.value[1].type,a.type in c&&(a.name=c[a.type],a.name in l&&(a.shortName=l[a.name])),t&&(t.update(a.type),t.update(a.value)),i.push(a)}return i},u.CRIAttributesAsArray=function(e){for(var t=[],r=0;r<e.length;++r)for(var n=e[r],a=o.derToOid(n.value[0].value),i=n.value[1].value,s=0;s<i.length;++s){var p={};if(p.type=a,p.value=i[s].value,p.valueTagClass=i[s].type,p.type in c&&(p.name=c[p.type],p.name in l&&(p.shortName=l[p.name])),p.type===c.extensionRequest){p.extensions=[];for(var f=0;f<p.value.length;++f)p.extensions.push(u.certificateExtensionFromAsn1(p.value[f]))}t.push(p)}return t};var g=function(e,t,r){var n={};if(e!==c["RSASSA-PSS"])return n;r&&(n={hash:{algorithmOid:c.sha1},mgf:{algorithmOid:c.mgf1,hash:{algorithmOid:c.sha1}},saltLength:20});var a={},i=[];if(!o.validate(t,d,a,i)){var s=new Error("Cannot read RSASSA-PSS parameter block.");throw s.errors=i,s}return void 0!==a.hashOid&&(n.hash=n.hash||{},n.hash.algorithmOid=o.derToOid(a.hashOid)),void 0!==a.maskGenOid&&(n.mgf=n.mgf||{},n.mgf.algorithmOid=o.derToOid(a.maskGenOid),n.mgf.hash=n.mgf.hash||{},n.mgf.hash.algorithmOid=o.derToOid(a.maskGenHashOid)),void 0!==a.saltLength&&(n.saltLength=a.saltLength.charCodeAt(0)),n};u.certificateFromPem=function(t,r,n){var a=e.pem.decode(t)[0];if("CERTIFICATE"!==a.type&&"X509 CERTIFICATE"!==a.type&&"TRUSTED CERTIFICATE"!==a.type){var i=new Error('Could not convert certificate from PEM; PEM header type is not "CERTIFICATE", "X509 CERTIFICATE", or "TRUSTED CERTIFICATE".');throw i.headerType=a.type,i}if(a.procType&&"ENCRYPTED"===a.procType.type)throw new Error("Could not convert certificate from PEM; PEM is encrypted.");var s=o.fromDer(a.body,n);return u.certificateFromAsn1(s,r)},u.certificateToPem=function(t,r){var n={type:"CERTIFICATE",body:o.toDer(u.certificateToAsn1(t)).getBytes()};return e.pem.encode(n,{maxline:r})},u.publicKeyFromPem=function(t){var r=e.pem.decode(t)[0];if("PUBLIC KEY"!==r.type&&"RSA PUBLIC KEY"!==r.type){var n=new Error('Could not convert public key from PEM; PEM header type is not "PUBLIC KEY" or "RSA PUBLIC KEY".');throw n.headerType=r.type,n}if(r.procType&&"ENCRYPTED"===r.procType.type)throw new Error("Could not convert public key from PEM; PEM is encrypted.");var a=o.fromDer(r.body);return u.publicKeyFromAsn1(a)},u.publicKeyToPem=function(t,r){var n={type:"PUBLIC KEY",body:o.toDer(u.publicKeyToAsn1(t)).getBytes()};return e.pem.encode(n,{maxline:r})},u.publicKeyToRSAPublicKeyPem=function(t,r){var n={type:"RSA PUBLIC KEY",body:o.toDer(u.publicKeyToRSAPublicKey(t)).getBytes()};return e.pem.encode(n,{maxline:r})},u.getPublicKeyFingerprint=function(t,r){r=r||{};var n,a=r.md||e.md.sha1.create(),i=r.type||"RSAPublicKey";switch(i){case"RSAPublicKey":n=o.toDer(u.publicKeyToRSAPublicKey(t)).getBytes();break;case"SubjectPublicKeyInfo":n=o.toDer(u.publicKeyToAsn1(t)).getBytes();break;default:throw new Error('Unknown fingerprint type "'+r.type+'".')}a.start(),a.update(n);var s=a.digest();if("hex"===r.encoding){var c=s.toHex();return r.delimiter?c.match(/.{2}/g).join(r.delimiter):c}if("binary"===r.encoding)return s.getBytes();if(r.encoding)throw new Error('Unknown encoding "'+r.encoding+'".');return s},u.certificationRequestFromPem=function(t,r,n){var a=e.pem.decode(t)[0];if("CERTIFICATE REQUEST"!==a.type){var i=new Error('Could not convert certification request from PEM; PEM header type is not "CERTIFICATE REQUEST".');throw i.headerType=a.type,i}if(a.procType&&"ENCRYPTED"===a.procType.type)throw new Error("Could not convert certification request from PEM; PEM is encrypted.");var s=o.fromDer(a.body,n);return u.certificationRequestFromAsn1(s,r)},u.certificationRequestToPem=function(t,r){var n={type:"CERTIFICATE REQUEST",body:o.toDer(u.certificationRequestToAsn1(t)).getBytes()};return e.pem.encode(n,{maxline:r})},u.createCertificate=function(){var r={};return r.version=2,r.serialNumber="00",r.signatureOid=null,r.signature=null,r.siginfo={},r.siginfo.algorithmOid=null,r.validity={},r.validity.notBefore=new Date,r.validity.notAfter=new Date,r.issuer={},r.issuer.getField=function(e){return t(r.issuer,e)},r.issuer.addField=function(e){n([e]),r.issuer.attributes.push(e)},r.issuer.attributes=[],r.issuer.hash=null,r.subject={},r.subject.getField=function(e){return t(r.subject,e)},r.subject.addField=function(e){n([e]),r.subject.attributes.push(e)},r.subject.attributes=[],r.subject.hash=null,r.extensions=[],r.publicKey=null,r.md=null,r.setSubject=function(e,t){n(e),r.subject.attributes=e,delete r.subject.uniqueId,t&&(r.subject.uniqueId=t),r.subject.hash=null},r.setIssuer=function(e,t){n(e),r.issuer.attributes=e,delete r.issuer.uniqueId,t&&(r.issuer.uniqueId=t),r.issuer.hash=null},r.setExtensions=function(e){for(var t=0;t<e.length;++t)a(e[t],{cert:r});r.extensions=e},r.getExtension=function(e){"string"==typeof e&&(e={name:e});for(var t,n=null,a=0;null===n&&a<r.extensions.length;++a)t=r.extensions[a],e.id&&t.id===e.id?n=t:e.name&&t.name===e.name&&(n=t);return n},r.sign=function(t,n){r.md=n||e.md.sha1.create();var a=c[r.md.algorithm+"WithRSAEncryption"];if(!a){var i=new Error("Could not compute certificate digest. Unknown message digest algorithm OID.");throw i.algorithm=r.md.algorithm,i}r.signatureOid=r.siginfo.algorithmOid=a,r.tbsCertificate=u.getTBSCertificate(r);var s=o.toDer(r.tbsCertificate);r.md.update(s.getBytes()),r.signature=t.sign(r.md)},r.verify=function(t){var n=!1;if(!r.issued(t)){var a=t.issuer,i=r.subject,s=new Error("The parent certificate did not issue the given child certificate; the child certificate's issuer does not match the parent's subject.");throw s.expectedIssuer=a.attributes,s.actualIssuer=i.attributes,s}var l=t.md;if(null===l){if(t.signatureOid in c){var p=c[t.signatureOid];switch(p){case"sha1WithRSAEncryption":l=e.md.sha1.create();break;case"md5WithRSAEncryption":l=e.md.md5.create();break;case"sha256WithRSAEncryption":l=e.md.sha256.create();break;case"RSASSA-PSS":l=e.md.sha256.create()}}if(null===l){var s=new Error("Could not compute certificate digest. Unknown signature OID.");throw s.signatureOid=t.signatureOid,s}var f=t.tbsCertificate||u.getTBSCertificate(t),d=o.toDer(f);l.update(d.getBytes())}if(null!==l){var h;switch(t.signatureOid){case c.sha1WithRSAEncryption:h=void 0;break;case c["RSASSA-PSS"]:var y,g;if(y=c[t.signatureParameters.mgf.hash.algorithmOid],void 0===y||void 0===e.md[y]){var s=new Error("Unsupported MGF hash function.");throw s.oid=t.signatureParameters.mgf.hash.algorithmOid,s.name=y,s}if(g=c[t.signatureParameters.mgf.algorithmOid],void 0===g||void 0===e.mgf[g]){var s=new Error("Unsupported MGF function.");throw s.oid=t.signatureParameters.mgf.algorithmOid,s.name=g,s}if(g=e.mgf[g].create(e.md[y].create()),y=c[t.signatureParameters.hash.algorithmOid],void 0===y||void 0===e.md[y])throw{message:"Unsupported RSASSA-PSS hash function.",oid:t.signatureParameters.hash.algorithmOid,name:y};h=e.pss.create(e.md[y].create(),g,t.signatureParameters.saltLength)}n=r.publicKey.verify(l.digest().getBytes(),t.signature,h)}return n},r.isIssuer=function(e){var t=!1,n=r.issuer,a=e.subject;if(n.hash&&a.hash)t=n.hash===a.hash;else if(n.attributes.length===a.attributes.length){t=!0;for(var i,s,o=0;t&&o<n.attributes.length;++o)i=n.attributes[o],s=a.attributes[o],(i.type!==s.type||i.value!==s.value)&&(t=!1)}return t},r.issued=function(e){return e.isIssuer(r)},r.generateSubjectKeyIdentifier=function(){return u.getPublicKeyFingerprint(r.publicKey,{type:"RSAPublicKey"})},r.verifySubjectKeyIdentifier=function(){for(var t=c.subjectKeyIdentifier,n=0;n<r.extensions.length;++n){var a=r.extensions[n];if(a.id===t){var i=r.generateSubjectKeyIdentifier().getBytes();return e.util.hexToBytes(a.subjectKeyIdentifier)===i}}return!1},r},u.certificateFromAsn1=function(r,a){var i={},s=[];if(!o.validate(r,f,i,s)){var l=new Error("Cannot read X.509 certificate. ASN.1 object is not an X509v3 Certificate.");throw l.errors=s,l}if("string"!=typeof i.certSignature){for(var p="\x00",d=0;d<i.certSignature.length;++d)p+=o.toDer(i.certSignature[d]).getBytes();i.certSignature=p}var h=o.derToOid(i.publicKeyOid);if(h!==u.oids.rsaEncryption)throw new Error("Cannot read public key. OID is not RSA.");var y=u.createCertificate();y.version=i.certVersion?i.certVersion.charCodeAt(0):0;var m=e.util.createBuffer(i.certSerialNumber);y.serialNumber=m.toHex(),y.signatureOid=e.asn1.derToOid(i.certSignatureOid),y.signatureParameters=g(y.signatureOid,i.certSignatureParams,!0),y.siginfo.algorithmOid=e.asn1.derToOid(i.certinfoSignatureOid),y.siginfo.parameters=g(y.siginfo.algorithmOid,i.certinfoSignatureParams,!1);var v=e.util.createBuffer(i.certSignature);++v.read,y.signature=v.getBytes();var C=[];if(void 0!==i.certValidity1UTCTime&&C.push(o.utcTimeToDate(i.certValidity1UTCTime)),void 0!==i.certValidity2GeneralizedTime&&C.push(o.generalizedTimeToDate(i.certValidity2GeneralizedTime)),void 0!==i.certValidity3UTCTime&&C.push(o.utcTimeToDate(i.certValidity3UTCTime)),void 0!==i.certValidity4GeneralizedTime&&C.push(o.generalizedTimeToDate(i.certValidity4GeneralizedTime)),C.length>2)throw new Error("Cannot read notBefore/notAfter validity times; more than two times were provided in the certificate.");if(C.length<2)throw new Error("Cannot read notBefore/notAfter validity times; they were not provided as either UTCTime or GeneralizedTime.");if(y.validity.notBefore=C[0],y.validity.notAfter=C[1],y.tbsCertificate=i.tbsCertificate,a){if(y.md=null,y.signatureOid in c){var h=c[y.signatureOid];switch(h){case"sha1WithRSAEncryption":y.md=e.md.sha1.create();break;case"md5WithRSAEncryption":y.md=e.md.md5.create();break;case"sha256WithRSAEncryption":y.md=e.md.sha256.create();break;case"RSASSA-PSS":y.md=e.md.sha256.create()}}if(null===y.md){var l=new Error("Could not compute certificate digest. Unknown signature OID.");throw l.signatureOid=y.signatureOid,l}var E=o.toDer(y.tbsCertificate);y.md.update(E.getBytes())}var S=e.md.sha1.create();y.issuer.getField=function(e){return t(y.issuer,e)},y.issuer.addField=function(e){n([e]),y.issuer.attributes.push(e)},y.issuer.attributes=u.RDNAttributesAsArray(i.certIssuer,S),i.certIssuerUniqueId&&(y.issuer.uniqueId=i.certIssuerUniqueId),y.issuer.hash=S.digest().toHex();var T=e.md.sha1.create();return y.subject.getField=function(e){return t(y.subject,e)},y.subject.addField=function(e){n([e]),y.subject.attributes.push(e)},y.subject.attributes=u.RDNAttributesAsArray(i.certSubject,T),i.certSubjectUniqueId&&(y.subject.uniqueId=i.certSubjectUniqueId),y.subject.hash=T.digest().toHex(),i.certExtensions?y.extensions=u.certificateExtensionsFromAsn1(i.certExtensions):y.extensions=[],y.publicKey=u.publicKeyFromAsn1(i.subjectPublicKeyInfo),y},u.certificateExtensionsFromAsn1=function(e){for(var t=[],r=0;r<e.value.length;++r)for(var n=e.value[r],a=0;a<n.value.length;++a)t.push(u.certificateExtensionFromAsn1(n.value[a]));return t},u.certificateExtensionFromAsn1=function(t){var r={};if(r.id=o.derToOid(t.value[0].value),r.critical=!1,t.value[1].type===o.Type.BOOLEAN?(r.critical=0!==t.value[1].value.charCodeAt(0),r.value=t.value[2].value):r.value=t.value[1].value,r.id in c)if(r.name=c[r.id],"keyUsage"===r.name){var n=o.fromDer(r.value),a=0,i=0;n.value.length>1&&(a=n.value.charCodeAt(1),i=n.value.length>2?n.value.charCodeAt(2):0),r.digitalSignature=128===(128&a),r.nonRepudiation=64===(64&a),r.keyEncipherment=32===(32&a),r.dataEncipherment=16===(16&a),r.keyAgreement=8===(8&a),r.keyCertSign=4===(4&a),r.cRLSign=2===(2&a),r.encipherOnly=1===(1&a),r.decipherOnly=128===(128&i)}else if("basicConstraints"===r.name){var n=o.fromDer(r.value);n.value.length>0&&n.value[0].type===o.Type.BOOLEAN?r.cA=0!==n.value[0].value.charCodeAt(0):r.cA=!1;var s=null;n.value.length>0&&n.value[0].type===o.Type.INTEGER?s=n.value[0].value:n.value.length>1&&(s=n.value[1].value),null!==s&&(r.pathLenConstraint=o.derToInteger(s))}else if("extKeyUsage"===r.name)for(var n=o.fromDer(r.value),u=0;u<n.value.length;++u){var l=o.derToOid(n.value[u].value);l in c?r[c[l]]=!0:r[l]=!0}else if("nsCertType"===r.name){var n=o.fromDer(r.value),a=0;n.value.length>1&&(a=n.value.charCodeAt(1)),r.client=128===(128&a),r.server=64===(64&a),r.email=32===(32&a),r.objsign=16===(16&a),r.reserved=8===(8&a),r.sslCA=4===(4&a),r.emailCA=2===(2&a),r.objCA=1===(1&a)}else if("subjectAltName"===r.name||"issuerAltName"===r.name){r.altNames=[];for(var p,n=o.fromDer(r.value),f=0;f<n.value.length;++f){p=n.value[f];var d={type:p.type,value:p.value};switch(r.altNames.push(d),p.type){case 1:case 2:
    case 6:break;case 7:d.ip=e.util.bytesToIP(p.value);break;case 8:d.oid=o.derToOid(p.value)}}}else if("subjectKeyIdentifier"===r.name){var n=o.fromDer(r.value);r.subjectKeyIdentifier=e.util.bytesToHex(n.value)}return r},u.certificationRequestFromAsn1=function(r,a){var i={},s=[];if(!o.validate(r,y,i,s)){var l=new Error("Cannot read PKCS#10 certificate request. ASN.1 object is not a PKCS#10 CertificationRequest.");throw l.errors=s,l}if("string"!=typeof i.csrSignature){for(var p="\x00",f=0;f<i.csrSignature.length;++f)p+=o.toDer(i.csrSignature[f]).getBytes();i.csrSignature=p}var d=o.derToOid(i.publicKeyOid);if(d!==u.oids.rsaEncryption)throw new Error("Cannot read public key. OID is not RSA.");var h=u.createCertificationRequest();h.version=i.csrVersion?i.csrVersion.charCodeAt(0):0,h.signatureOid=e.asn1.derToOid(i.csrSignatureOid),h.signatureParameters=g(h.signatureOid,i.csrSignatureParams,!0),h.siginfo.algorithmOid=e.asn1.derToOid(i.csrSignatureOid),h.siginfo.parameters=g(h.siginfo.algorithmOid,i.csrSignatureParams,!1);var m=e.util.createBuffer(i.csrSignature);if(++m.read,h.signature=m.getBytes(),h.certificationRequestInfo=i.certificationRequestInfo,a){if(h.md=null,h.signatureOid in c){var d=c[h.signatureOid];switch(d){case"sha1WithRSAEncryption":h.md=e.md.sha1.create();break;case"md5WithRSAEncryption":h.md=e.md.md5.create();break;case"sha256WithRSAEncryption":h.md=e.md.sha256.create();break;case"RSASSA-PSS":h.md=e.md.sha256.create()}}if(null===h.md){var l=new Error("Could not compute certification request digest. Unknown signature OID.");throw l.signatureOid=h.signatureOid,l}var v=o.toDer(h.certificationRequestInfo);h.md.update(v.getBytes())}var C=e.md.sha1.create();return h.subject.getField=function(e){return t(h.subject,e)},h.subject.addField=function(e){n([e]),h.subject.attributes.push(e)},h.subject.attributes=u.RDNAttributesAsArray(i.certificationRequestInfoSubject,C),h.subject.hash=C.digest().toHex(),h.publicKey=u.publicKeyFromAsn1(i.subjectPublicKeyInfo),h.getAttribute=function(e){return t(h,e)},h.addAttribute=function(e){n([e]),h.attributes.push(e)},h.attributes=u.CRIAttributesAsArray(i.certificationRequestInfoAttributes||[]),h},u.createCertificationRequest=function(){var r={};return r.version=0,r.signatureOid=null,r.signature=null,r.siginfo={},r.siginfo.algorithmOid=null,r.subject={},r.subject.getField=function(e){return t(r.subject,e)},r.subject.addField=function(e){n([e]),r.subject.attributes.push(e)},r.subject.attributes=[],r.subject.hash=null,r.publicKey=null,r.attributes=[],r.getAttribute=function(e){return t(r,e)},r.addAttribute=function(e){n([e]),r.attributes.push(e)},r.md=null,r.setSubject=function(e){n(e),r.subject.attributes=e,r.subject.hash=null},r.setAttributes=function(e){n(e),r.attributes=e},r.sign=function(t,n){r.md=n||e.md.sha1.create();var a=c[r.md.algorithm+"WithRSAEncryption"];if(!a){var i=new Error("Could not compute certification request digest. Unknown message digest algorithm OID.");throw i.algorithm=r.md.algorithm,i}r.signatureOid=r.siginfo.algorithmOid=a,r.certificationRequestInfo=u.getCertificationRequestInfo(r);var s=o.toDer(r.certificationRequestInfo);r.md.update(s.getBytes()),r.signature=t.sign(r.md)},r.verify=function(){var t=!1,n=r.md;if(null===n){if(r.signatureOid in c){var a=c[r.signatureOid];switch(a){case"sha1WithRSAEncryption":n=e.md.sha1.create();break;case"md5WithRSAEncryption":n=e.md.md5.create();break;case"sha256WithRSAEncryption":n=e.md.sha256.create();break;case"RSASSA-PSS":n=e.md.sha256.create()}}if(null===n){var i=new Error("Could not compute certification request digest. Unknown signature OID.");throw i.signatureOid=r.signatureOid,i}var s=r.certificationRequestInfo||u.getCertificationRequestInfo(r),l=o.toDer(s);n.update(l.getBytes())}if(null!==n){var p;switch(r.signatureOid){case c.sha1WithRSAEncryption:break;case c["RSASSA-PSS"]:var f,d;if(f=c[r.signatureParameters.mgf.hash.algorithmOid],void 0===f||void 0===e.md[f]){var i=new Error("Unsupported MGF hash function.");throw i.oid=r.signatureParameters.mgf.hash.algorithmOid,i.name=f,i}if(d=c[r.signatureParameters.mgf.algorithmOid],void 0===d||void 0===e.mgf[d]){var i=new Error("Unsupported MGF function.");throw i.oid=r.signatureParameters.mgf.algorithmOid,i.name=d,i}if(d=e.mgf[d].create(e.md[f].create()),f=c[r.signatureParameters.hash.algorithmOid],void 0===f||void 0===e.md[f]){var i=new Error("Unsupported RSASSA-PSS hash function.");throw i.oid=r.signatureParameters.hash.algorithmOid,i.name=f,i}p=e.pss.create(e.md[f].create(),d,r.signatureParameters.saltLength)}t=r.publicKey.verify(n.digest().getBytes(),r.signature,p)}return t},r},u.getTBSCertificate=function(t){var n=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.CONTEXT_SPECIFIC,0,!0,[o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,o.integerToDer(t.version).getBytes())]),o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,e.util.hexToBytes(t.serialNumber)),o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(t.siginfo.algorithmOid).getBytes()),i(t.siginfo.algorithmOid,t.siginfo.parameters)]),r(t.issuer),o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.UTCTIME,!1,o.dateToUtcTime(t.validity.notBefore)),o.create(o.Class.UNIVERSAL,o.Type.UTCTIME,!1,o.dateToUtcTime(t.validity.notAfter))]),r(t.subject),u.publicKeyToAsn1(t.publicKey)]);return t.issuer.uniqueId&&n.value.push(o.create(o.Class.CONTEXT_SPECIFIC,1,!0,[o.create(o.Class.UNIVERSAL,o.Type.BITSTRING,!1,String.fromCharCode(0)+t.issuer.uniqueId)])),t.subject.uniqueId&&n.value.push(o.create(o.Class.CONTEXT_SPECIFIC,2,!0,[o.create(o.Class.UNIVERSAL,o.Type.BITSTRING,!1,String.fromCharCode(0)+t.subject.uniqueId)])),t.extensions.length>0&&n.value.push(u.certificateExtensionsToAsn1(t.extensions)),n},u.getCertificationRequestInfo=function(e){var t=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,o.integerToDer(e.version).getBytes()),r(e.subject),u.publicKeyToAsn1(e.publicKey),s(e)]);return t},u.distinguishedNameToAsn1=function(e){return r(e)},u.certificateToAsn1=function(e){var t=e.tbsCertificate||u.getTBSCertificate(e);return o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[t,o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(e.signatureOid).getBytes()),i(e.signatureOid,e.signatureParameters)]),o.create(o.Class.UNIVERSAL,o.Type.BITSTRING,!1,String.fromCharCode(0)+e.signature)])},u.certificateExtensionsToAsn1=function(e){var t=o.create(o.Class.CONTEXT_SPECIFIC,3,!0,[]),r=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[]);t.value.push(r);for(var n=0;n<e.length;++n)r.value.push(u.certificateExtensionToAsn1(e[n]));return t},u.certificateExtensionToAsn1=function(e){var t=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[]);t.value.push(o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(e.id).getBytes())),e.critical&&t.value.push(o.create(o.Class.UNIVERSAL,o.Type.BOOLEAN,!1,String.fromCharCode(255)));var r=e.value;return"string"!=typeof e.value&&(r=o.toDer(r).getBytes()),t.value.push(o.create(o.Class.UNIVERSAL,o.Type.OCTETSTRING,!1,r)),t},u.certificationRequestToAsn1=function(e){var t=e.certificationRequestInfo||u.getCertificationRequestInfo(e);return o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[t,o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(e.signatureOid).getBytes()),i(e.signatureOid,e.signatureParameters)]),o.create(o.Class.UNIVERSAL,o.Type.BITSTRING,!1,String.fromCharCode(0)+e.signature)])},u.createCaStore=function(t){function n(t){if(!t.hash){var n=e.md.sha1.create();t.attributes=u.RDNAttributesAsArray(r(t),n),t.hash=n.digest().toHex()}return a.certs[t.hash]||null}var a={certs:{}};if(a.getIssuer=function(e){var t=n(e.issuer);return t},a.addCertificate=function(t){if("string"==typeof t&&(t=e.pki.certificateFromPem(t)),!t.subject.hash){var n=e.md.sha1.create();t.subject.attributes=u.RDNAttributesAsArray(r(t.subject),n),t.subject.hash=n.digest().toHex()}if(t.subject.hash in a.certs){var i=a.certs[t.subject.hash];e.util.isArray(i)||(i=[i]),i.push(t)}else a.certs[t.subject.hash]=t},a.hasCertificate=function(t){var r=n(t.subject);if(!r)return!1;e.util.isArray(r)||(r=[r]);for(var a=o.toDer(u.certificateToAsn1(t)).getBytes(),i=0;i<r.length;++i){var s=o.toDer(u.certificateToAsn1(r[i])).getBytes();if(a===s)return!0}return!1},t)for(var i=0;i<t.length;++i){var s=t[i];a.addCertificate(s)}return a},u.certificateError={bad_certificate:"forge.pki.BadCertificate",unsupported_certificate:"forge.pki.UnsupportedCertificate",certificate_revoked:"forge.pki.CertificateRevoked",certificate_expired:"forge.pki.CertificateExpired",certificate_unknown:"forge.pki.CertificateUnknown",unknown_ca:"forge.pki.UnknownCertificateAuthority"},u.verifyCertificateChain=function(t,r,n){r=r.slice(0);var a=r.slice(0),i=new Date,s=!0,o=null,c=0;do{var l=r.shift(),p=null,f=!1;if((i<l.validity.notBefore||i>l.validity.notAfter)&&(o={message:"Certificate is not valid yet or has expired.",error:u.certificateError.certificate_expired,notBefore:l.validity.notBefore,notAfter:l.validity.notAfter,now:i}),null===o){if(p=r[0]||t.getIssuer(l),null===p&&l.isIssuer(l)&&(f=!0,p=l),p){var d=p;e.util.isArray(d)||(d=[d]);for(var h=!1;!h&&d.length>0;){p=d.shift();try{h=p.verify(l)}catch(y){}}h||(o={message:"Certificate signature is invalid.",error:u.certificateError.bad_certificate})}null!==o||p&&!f||t.hasCertificate(l)||(o={message:"Certificate is not trusted.",error:u.certificateError.unknown_ca})}if(null===o&&p&&!l.isIssuer(p)&&(o={message:"Certificate issuer is invalid.",error:u.certificateError.bad_certificate}),null===o)for(var g={keyUsage:!0,basicConstraints:!0},m=0;null===o&&m<l.extensions.length;++m){var v=l.extensions[m];!v.critical||v.name in g||(o={message:"Certificate has an unsupported critical extension.",error:u.certificateError.unsupported_certificate})}if(null===o&&(!s||0===r.length&&(!p||f))){var C=l.getExtension("basicConstraints"),E=l.getExtension("keyUsage");if(null!==E&&(E.keyCertSign&&null!==C||(o={message:"Certificate keyUsage or basicConstraints conflict or indicate that the certificate is not a CA. If the certificate is the only one in the chain or isn't the first then the certificate must be a valid CA.",error:u.certificateError.bad_certificate})),null!==o||null===C||C.cA||(o={message:"Certificate basicConstraints indicates the certificate is not a CA.",error:u.certificateError.bad_certificate}),null===o&&null!==E&&"pathLenConstraint"in C){var S=c-1;S>C.pathLenConstraint&&(o={message:"Certificate basicConstraints pathLenConstraint violated.",error:u.certificateError.bad_certificate})}}var T=null===o?!0:o.error,A=n?n(T,c,a):T;if(A!==!0)throw T===!0&&(o={message:"The application rejected the certificate.",error:u.certificateError.bad_certificate}),(A||0===A)&&("object"!=typeof A||e.util.isArray(A)?"string"==typeof A&&(o.error=A):(A.message&&(o.message=A.message),A.error&&(o.error=A.error))),o;o=null,s=!1,++c}while(r.length>0);return!0}}var n="x509";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r.pki}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/x509",["require","module","./aes","./asn1","./des","./md","./mgf","./oids","./pem","./pss","./rsa","./util"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function t(e,t,r,n){for(var a=[],i=0;i<e.length;i++)for(var s=0;s<e[i].safeBags.length;s++){var o=e[i].safeBags[s];(void 0===n||o.type===n)&&(null!==t?void 0!==o.attributes[t]&&o.attributes[t].indexOf(r)>=0&&a.push(o):a.push(o))}return a}function r(t){if(t.composed||t.constructed){for(var r=e.util.createBuffer(),n=0;n<t.value.length;++n)r.putBytes(t.value[n].value);t.composed=t.constructed=!1,t.value=r.getBytes()}return t}function n(e,t,n,s){if(t=o.fromDer(t,n),t.tagClass!==o.Class.UNIVERSAL||t.type!==o.Type.SEQUENCE||t.constructed!==!0)throw new Error("PKCS#12 AuthenticatedSafe expected to be a SEQUENCE OF ContentInfo");for(var c=0;c<t.value.length;c++){var p=t.value[c],f={},d=[];if(!o.validate(p,l,f,d)){var h=new Error("Cannot read ContentInfo.");throw h.errors=d,h}var y={encrypted:!1},g=null,m=f.content.value[0];switch(o.derToOid(f.contentType)){case u.oids.data:if(m.tagClass!==o.Class.UNIVERSAL||m.type!==o.Type.OCTETSTRING)throw new Error("PKCS#12 SafeContents Data is not an OCTET STRING.");g=r(m).value;break;case u.oids.encryptedData:g=a(m,s),y.encrypted=!0;break;default:var h=new Error("Unsupported PKCS#12 contentType.");throw h.contentType=o.derToOid(f.contentType),h}y.safeBags=i(g,n,s),e.safeContents.push(y)}}function a(t,n){var a={},i=[];if(!o.validate(t,e.pkcs7.asn1.encryptedDataValidator,a,i)){var s=new Error("Cannot read EncryptedContentInfo.");throw s.errors=i,s}var c=o.derToOid(a.contentType);if(c!==u.oids.data){var s=new Error("PKCS#12 EncryptedContentInfo ContentType is not Data.");throw s.oid=c,s}c=o.derToOid(a.encAlgorithm);var l=u.pbe.getCipher(c,a.encParameter,n),p=r(a.encryptedContentAsn1),f=e.util.createBuffer(p.value);if(l.update(f),!l.finish())throw new Error("Failed to decrypt PKCS#12 SafeContents.");return l.output.getBytes()}function i(e,t,r){if(!t&&0===e.length)return[];if(e=o.fromDer(e,t),e.tagClass!==o.Class.UNIVERSAL||e.type!==o.Type.SEQUENCE||e.constructed!==!0)throw new Error("PKCS#12 SafeContents expected to be a SEQUENCE OF SafeBag.");for(var n=[],a=0;a<e.value.length;a++){var i=e.value[a],c={},l=[];if(!o.validate(i,f,c,l)){var p=new Error("Cannot read SafeBag.");throw p.errors=l,p}var d={type:o.derToOid(c.bagId),attributes:s(c.bagAttributes)};n.push(d);var y,g,m=c.bagValue.value[0];switch(d.type){case u.oids.pkcs8ShroudedKeyBag:if(m=u.decryptPrivateKeyInfo(m,r),null===m)throw new Error("Unable to decrypt PKCS#8 ShroudedKeyBag, wrong password?");case u.oids.keyBag:d.key=u.privateKeyFromAsn1(m);continue;case u.oids.certBag:y=h,g=function(){if(o.derToOid(c.certId)!==u.oids.x509Certificate){var e=new Error("Unsupported certificate type, only X.509 supported.");throw e.oid=o.derToOid(c.certId),e}d.cert=u.certificateFromAsn1(o.fromDer(c.cert,t),!0)};break;default:var p=new Error("Unsupported PKCS#12 SafeBag type.");throw p.oid=d.type,p}if(void 0!==y&&!o.validate(m,y,c,l)){var p=new Error("Cannot read PKCS#12 "+y.name);throw p.errors=l,p}g()}return n}function s(e){var t={};if(void 0!==e)for(var r=0;r<e.length;++r){var n={},a=[];if(!o.validate(e[r],d,n,a)){var i=new Error("Cannot read PKCS#12 BagAttribute.");throw i.errors=a,i}var s=o.derToOid(n.oid);if(void 0!==u.oids[s]){t[u.oids[s]]=[];for(var c=0;c<n.values.length;++c)t[u.oids[s]].push(n.values[c].value)}}return t}var o=e.asn1,u=e.pki,c=e.pkcs12=e.pkcs12||{},l={name:"ContentInfo",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"ContentInfo.contentType",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"contentType"},{name:"ContentInfo.content",tagClass:o.Class.CONTEXT_SPECIFIC,constructed:!0,captureAsn1:"content"}]},p={name:"PFX",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"PFX.version",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,capture:"version"},l,{name:"PFX.macData",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,optional:!0,captureAsn1:"mac",value:[{name:"PFX.macData.mac",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"PFX.macData.mac.digestAlgorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"PFX.macData.mac.digestAlgorithm.algorithm",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"macAlgorithm"},{name:"PFX.macData.mac.digestAlgorithm.parameters",tagClass:o.Class.UNIVERSAL,captureAsn1:"macAlgorithmParameters"}]},{name:"PFX.macData.mac.digest",tagClass:o.Class.UNIVERSAL,type:o.Type.OCTETSTRING,constructed:!1,capture:"macDigest"}]},{name:"PFX.macData.macSalt",tagClass:o.Class.UNIVERSAL,type:o.Type.OCTETSTRING,constructed:!1,capture:"macSalt"},{name:"PFX.macData.iterations",tagClass:o.Class.UNIVERSAL,type:o.Type.INTEGER,constructed:!1,optional:!0,capture:"macIterations"}]}]},f={name:"SafeBag",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"SafeBag.bagId",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"bagId"},{name:"SafeBag.bagValue",tagClass:o.Class.CONTEXT_SPECIFIC,constructed:!0,captureAsn1:"bagValue"},{name:"SafeBag.bagAttributes",tagClass:o.Class.UNIVERSAL,type:o.Type.SET,constructed:!0,optional:!0,capture:"bagAttributes"}]},d={name:"Attribute",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"Attribute.attrId",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"oid"},{name:"Attribute.attrValues",tagClass:o.Class.UNIVERSAL,type:o.Type.SET,constructed:!0,capture:"values"}]},h={name:"CertBag",tagClass:o.Class.UNIVERSAL,type:o.Type.SEQUENCE,constructed:!0,value:[{name:"CertBag.certId",tagClass:o.Class.UNIVERSAL,type:o.Type.OID,constructed:!1,capture:"certId"},{name:"CertBag.certValue",tagClass:o.Class.CONTEXT_SPECIFIC,constructed:!0,value:[{name:"CertBag.certValue[0]",tagClass:o.Class.UNIVERSAL,type:o.Class.OCTETSTRING,constructed:!1,capture:"cert"}]}]};c.pkcs12FromAsn1=function(a,i,s){"string"==typeof i?(s=i,i=!0):void 0===i&&(i=!0);var l={},f=[];if(!o.validate(a,p,l,f)){var d=new Error("Cannot read PKCS#12 PFX. ASN.1 object is not an PKCS#12 PFX.");throw d.errors=d,d}var h={version:l.version.charCodeAt(0),safeContents:[],getBags:function(r){var n,a={};return"localKeyId"in r?n=r.localKeyId:"localKeyIdHex"in r&&(n=e.util.hexToBytes(r.localKeyIdHex)),void 0===n&&!("friendlyName"in r)&&"bagType"in r&&(a[r.bagType]=t(h.safeContents,null,null,r.bagType)),void 0!==n&&(a.localKeyId=t(h.safeContents,"localKeyId",n,r.bagType)),"friendlyName"in r&&(a.friendlyName=t(h.safeContents,"friendlyName",r.friendlyName,r.bagType)),a},getBagsByFriendlyName:function(e,r){return t(h.safeContents,"friendlyName",e,r)},getBagsByLocalKeyId:function(e,r){return t(h.safeContents,"localKeyId",e,r)}};if(3!==l.version.charCodeAt(0)){var d=new Error("PKCS#12 PFX of version other than 3 not supported.");throw d.version=l.version.charCodeAt(0),d}if(o.derToOid(l.contentType)!==u.oids.data){var d=new Error("Only PKCS#12 PFX in password integrity mode supported.");throw d.oid=o.derToOid(l.contentType),d}var y=l.content.value[0];if(y.tagClass!==o.Class.UNIVERSAL||y.type!==o.Type.OCTETSTRING)throw new Error("PKCS#12 authSafe content data is not an OCTET STRING.");if(y=r(y),l.mac){var g=null,m=0,v=o.derToOid(l.macAlgorithm);switch(v){case u.oids.sha1:g=e.md.sha1.create(),m=20;break;case u.oids.sha256:g=e.md.sha256.create(),m=32;break;case u.oids.sha384:g=e.md.sha384.create(),m=48;break;case u.oids.sha512:g=e.md.sha512.create(),m=64;break;case u.oids.md5:g=e.md.md5.create(),m=16}if(null===g)throw new Error("PKCS#12 uses unsupported MAC algorithm: "+v);var C=new e.util.ByteBuffer(l.macSalt),E="macIterations"in l?parseInt(e.util.bytesToHex(l.macIterations),16):1,S=c.generateKey(s,C,3,E,m,g),T=e.hmac.create();T.start(g,S),T.update(y.value);var A=T.getMacData();if(A.getBytes()!==l.macDigest)throw new Error("PKCS#12 MAC could not be verified. Invalid password?")}return n(h,y.value,i,s),h},c.toPkcs12Asn1=function(t,r,n,a){a=a||{},a.saltSize=a.saltSize||8,a.count=a.count||2048,a.algorithm=a.algorithm||a.encAlgorithm||"aes128","useMac"in a||(a.useMac=!0),"localKeyId"in a||(a.localKeyId=null),"generateLocalKeyId"in a||(a.generateLocalKeyId=!0);var i,s=a.localKeyId;if(null!==s)s=e.util.hexToBytes(s);else if(a.generateLocalKeyId)if(r){var l=e.util.isArray(r)?r[0]:r;"string"==typeof l&&(l=u.certificateFromPem(l));var p=e.md.sha1.create();p.update(o.toDer(u.certificateToAsn1(l)).getBytes()),s=p.digest().getBytes()}else s=e.random.getBytes(20);var f=[];null!==s&&f.push(o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(u.oids.localKeyId).getBytes()),o.create(o.Class.UNIVERSAL,o.Type.SET,!0,[o.create(o.Class.UNIVERSAL,o.Type.OCTETSTRING,!1,s)])])),"friendlyName"in a&&f.push(o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(u.oids.friendlyName).getBytes()),o.create(o.Class.UNIVERSAL,o.Type.SET,!0,[o.create(o.Class.UNIVERSAL,o.Type.BMPSTRING,!1,a.friendlyName)])])),f.length>0&&(i=o.create(o.Class.UNIVERSAL,o.Type.SET,!0,f));var d=[],h=[];null!==r&&(h=e.util.isArray(r)?r:[r]);for(var y=[],g=0;g<h.length;++g){r=h[g],"string"==typeof r&&(r=u.certificateFromPem(r));var m=0===g?i:void 0,v=u.certificateToAsn1(r),C=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(u.oids.certBag).getBytes()),o.create(o.Class.CONTEXT_SPECIFIC,0,!0,[o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(u.oids.x509Certificate).getBytes()),o.create(o.Class.CONTEXT_SPECIFIC,0,!0,[o.create(o.Class.UNIVERSAL,o.Type.OCTETSTRING,!1,o.toDer(v).getBytes())])])]),m]);y.push(C)}if(y.length>0){var E=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,y),S=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(u.oids.data).getBytes()),o.create(o.Class.CONTEXT_SPECIFIC,0,!0,[o.create(o.Class.UNIVERSAL,o.Type.OCTETSTRING,!1,o.toDer(E).getBytes())])]);d.push(S)}var T=null;if(null!==t){var A=u.wrapRsaPrivateKey(u.privateKeyToAsn1(t));T=null===n?o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(u.oids.keyBag).getBytes()),o.create(o.Class.CONTEXT_SPECIFIC,0,!0,[A]),i]):o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(u.oids.pkcs8ShroudedKeyBag).getBytes()),o.create(o.Class.CONTEXT_SPECIFIC,0,!0,[u.encryptPrivateKeyInfo(A,n,a)]),i]);var I=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[T]),b=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(u.oids.data).getBytes()),o.create(o.Class.CONTEXT_SPECIFIC,0,!0,[o.create(o.Class.UNIVERSAL,o.Type.OCTETSTRING,!1,o.toDer(I).getBytes())])]);d.push(b)}var B,k=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,d);if(a.useMac){var p=e.md.sha1.create(),N=new e.util.ByteBuffer(e.random.getBytes(a.saltSize)),R=a.count,t=c.generateKey(n,N,3,R,20),w=e.hmac.create();w.start(p,t),w.update(o.toDer(k).getBytes());var L=w.getMacData();B=o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(u.oids.sha1).getBytes()),o.create(o.Class.UNIVERSAL,o.Type.NULL,!1,"")]),o.create(o.Class.UNIVERSAL,o.Type.OCTETSTRING,!1,L.getBytes())]),o.create(o.Class.UNIVERSAL,o.Type.OCTETSTRING,!1,N.getBytes()),o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,o.integerToDer(R).getBytes())])}return o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.INTEGER,!1,o.integerToDer(3).getBytes()),o.create(o.Class.UNIVERSAL,o.Type.SEQUENCE,!0,[o.create(o.Class.UNIVERSAL,o.Type.OID,!1,o.oidToDer(u.oids.data).getBytes()),o.create(o.Class.CONTEXT_SPECIFIC,0,!0,[o.create(o.Class.UNIVERSAL,o.Type.OCTETSTRING,!1,o.toDer(k).getBytes())])]),B])},c.generateKey=e.pbe.generatePkcs12Key}var n="pkcs12";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/pkcs12",["require","module","./asn1","./hmac","./oids","./pkcs7asn1","./pbe","./random","./rsa","./sha1","./util","./x509"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){var t=e.asn1,r=e.pki=e.pki||{};r.pemToDer=function(t){var r=e.pem.decode(t)[0];if(r.procType&&"ENCRYPTED"===r.procType.type)throw new Error("Could not convert PEM to DER; PEM is encrypted.");return e.util.createBuffer(r.body)},r.privateKeyFromPem=function(n){var a=e.pem.decode(n)[0];if("PRIVATE KEY"!==a.type&&"RSA PRIVATE KEY"!==a.type){var i=new Error('Could not convert private key from PEM; PEM header type is not "PRIVATE KEY" or "RSA PRIVATE KEY".');throw i.headerType=a.type,i}if(a.procType&&"ENCRYPTED"===a.procType.type)throw new Error("Could not convert private key from PEM; PEM is encrypted.");var s=t.fromDer(a.body);return r.privateKeyFromAsn1(s)},r.privateKeyToPem=function(n,a){var i={type:"RSA PRIVATE KEY",body:t.toDer(r.privateKeyToAsn1(n)).getBytes()};return e.pem.encode(i,{maxline:a})},r.privateKeyInfoToPem=function(r,n){var a={type:"PRIVATE KEY",body:t.toDer(r).getBytes()};return e.pem.encode(a,{maxline:n})}}var n="pki";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/pki",["require","module","./asn1","./oids","./pbe","./pem","./pbkdf2","./pkcs12","./pss","./rsa","./util","./x509"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){var t=function(t,r,n,a){var i=e.util.createBuffer(),s=t.length>>1,o=s+(1&t.length),u=t.substr(0,o),c=t.substr(s,o),l=e.util.createBuffer(),p=e.hmac.create();n=r+n;var f=Math.ceil(a/16),d=Math.ceil(a/20);p.start("MD5",u);var h=e.util.createBuffer();l.putBytes(n);for(var y=0;f>y;++y)p.start(null,null),p.update(l.getBytes()),l.putBuffer(p.digest()),p.start(null,null),p.update(l.bytes()+n),h.putBuffer(p.digest());p.start("SHA1",c);var g=e.util.createBuffer();l.clear(),l.putBytes(n);for(var y=0;d>y;++y)p.start(null,null),p.update(l.getBytes()),l.putBuffer(p.digest()),p.start(null,null),p.update(l.bytes()+n),g.putBuffer(p.digest());return i.putBytes(e.util.xorBytes(h.getBytes(),g.getBytes(),a)),i},r=function(t,r,n){var a=e.hmac.create();a.start("SHA1",t);var i=e.util.createBuffer();return i.putInt32(r[0]),i.putInt32(r[1]),i.putByte(n.type),i.putByte(n.version.major),i.putByte(n.version.minor),i.putInt16(n.length),i.putBytes(n.fragment.bytes()),a.update(i.getBytes()),a.digest().getBytes()},n=function(t,r,n){var a=!1;try{var i=t.deflate(r.fragment.getBytes());r.fragment=e.util.createBuffer(i),r.length=i.length,a=!0}catch(s){}return a},a=function(t,r,n){var a=!1;try{var i=t.inflate(r.fragment.getBytes());r.fragment=e.util.createBuffer(i),r.length=i.length,a=!0}catch(s){}return a},i=function(t,r){var n=0;switch(r){case 1:n=t.getByte();break;case 2:n=t.getInt16();break;case 3:n=t.getInt24();break;case 4:n=t.getInt32()}return e.util.createBuffer(t.getBytes(n))},s=function(e,t,r){e.putInt(r.length(),t<<3),e.putBuffer(r)},o={};o.Versions={TLS_1_0:{major:3,minor:1},TLS_1_1:{major:3,minor:2},TLS_1_2:{major:3,minor:3}},o.SupportedVersions=[o.Versions.TLS_1_1,o.Versions.TLS_1_0],o.Version=o.SupportedVersions[0],o.MaxFragment=15360,o.ConnectionEnd={server:0,client:1},o.PRFAlgorithm={tls_prf_sha256:0},o.BulkCipherAlgorithm={none:null,rc4:0,des3:1,aes:2},o.CipherType={stream:0,block:1,aead:2},o.MACAlgorithm={none:null,hmac_md5:0,hmac_sha1:1,hmac_sha256:2,hmac_sha384:3,hmac_sha512:4},o.CompressionMethod={none:0,deflate:1},o.ContentType={change_cipher_spec:20,alert:21,handshake:22,application_data:23,heartbeat:24},o.HandshakeType={hello_request:0,client_hello:1,server_hello:2,certificate:11,server_key_exchange:12,certificate_request:13,server_hello_done:14,certificate_verify:15,client_key_exchange:16,finished:20},o.Alert={},o.Alert.Level={warning:1,fatal:2},o.Alert.Description={close_notify:0,unexpected_message:10,bad_record_mac:20,decryption_failed:21,record_overflow:22,decompression_failure:30,handshake_failure:40,bad_certificate:42,unsupported_certificate:43,certificate_revoked:44,certificate_expired:45,certificate_unknown:46,illegal_parameter:47,unknown_ca:48,access_denied:49,decode_error:50,decrypt_error:51,export_restriction:60,protocol_version:70,insufficient_security:71,internal_error:80,user_canceled:90,no_renegotiation:100},o.HeartbeatMessageType={heartbeat_request:1,heartbeat_response:2},o.CipherSuites={},o.getCipherSuite=function(e){var t=null;for(var r in o.CipherSuites){var n=o.CipherSuites[r];if(n.id[0]===e.charCodeAt(0)&&n.id[1]===e.charCodeAt(1)){t=n;break}}return t},o.handleUnexpected=function(e,t){var r=!e.open&&e.entity===o.ConnectionEnd.client;r||e.error(e,{message:"Unexpected message. Received TLS record out of order.",send:!0,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.unexpected_message}})},o.handleHelloRequest=function(e,t,r){!e.handshaking&&e.handshakes>0&&(o.queue(e,o.createAlert(e,{level:o.Alert.Level.warning,description:o.Alert.Description.no_renegotiation})),o.flush(e)),e.process()},o.parseHelloMessage=function(t,r,n){var a=null,s=t.entity===o.ConnectionEnd.client;if(38>n)t.error(t,{message:s?"Invalid ServerHello message. Message too short.":"Invalid ClientHello message. Message too short.",send:!0,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.illegal_parameter}});else{var u=r.fragment,c=u.length();if(a={version:{major:u.getByte(),minor:u.getByte()},random:e.util.createBuffer(u.getBytes(32)),session_id:i(u,1),extensions:[]},s?(a.cipher_suite=u.getBytes(2),a.compression_method=u.getByte()):(a.cipher_suites=i(u,2),a.compression_methods=i(u,1)),c=n-(c-u.length()),c>0){for(var l=i(u,2);l.length()>0;)a.extensions.push({type:[l.getByte(),l.getByte()],data:i(l,2)});if(!s)for(var p=0;p<a.extensions.length;++p){var f=a.extensions[p];if(0===f.type[0]&&0===f.type[1])for(var d=i(f.data,2);d.length()>0;){var h=d.getByte();if(0!==h)break;t.session.extensions.server_name.serverNameList.push(i(d,2).getBytes())}}}if(t.session.version&&(a.version.major!==t.session.version.major||a.version.minor!==t.session.version.minor))return t.error(t,{message:"TLS version change is disallowed during renegotiation.",send:!0,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.protocol_version}});if(s)t.session.cipherSuite=o.getCipherSuite(a.cipher_suite);else for(var y=e.util.createBuffer(a.cipher_suites.bytes());y.length()>0&&(t.session.cipherSuite=o.getCipherSuite(y.getBytes(2)),null===t.session.cipherSuite););if(null===t.session.cipherSuite)return t.error(t,{message:"No cipher suites in common.",send:!0,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.handshake_failure},cipherSuite:e.util.bytesToHex(a.cipher_suite)});s?t.session.compressionMethod=a.compression_method:t.session.compressionMethod=o.CompressionMethod.none}return a},o.createSecurityParameters=function(e,t){var r=e.entity===o.ConnectionEnd.client,n=t.random.bytes(),a=r?e.session.sp.client_random:n,i=r?n:o.createRandom().getBytes();e.session.sp={entity:e.entity,prf_algorithm:o.PRFAlgorithm.tls_prf_sha256,bulk_cipher_algorithm:null,cipher_type:null,enc_key_length:null,block_length:null,fixed_iv_length:null,record_iv_length:null,mac_algorithm:null,
    mac_length:null,mac_key_length:null,compression_algorithm:e.session.compressionMethod,pre_master_secret:null,master_secret:null,client_random:a,server_random:i}},o.handleServerHello=function(e,t,r){var n=o.parseHelloMessage(e,t,r);if(!e.fail){if(!(n.version.minor<=e.version.minor))return e.error(e,{message:"Incompatible TLS version.",send:!0,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.protocol_version}});e.version.minor=n.version.minor,e.session.version=e.version;var a=n.session_id.bytes();a.length>0&&a===e.session.id?(e.expect=d,e.session.resuming=!0,e.session.sp.server_random=n.random.bytes()):(e.expect=c,e.session.resuming=!1,o.createSecurityParameters(e,n)),e.session.id=a,e.process()}},o.handleClientHello=function(t,r,n){var a=o.parseHelloMessage(t,r,n);if(!t.fail){var i=a.session_id.bytes(),s=null;if(t.sessionCache&&(s=t.sessionCache.getSession(i),null===s?i="":(s.version.major!==a.version.major||s.version.minor>a.version.minor)&&(s=null,i="")),0===i.length&&(i=e.random.getBytes(32)),t.session.id=i,t.session.clientHelloVersion=a.version,t.session.sp={},s)t.version=t.session.version=s.version,t.session.sp=s.sp;else{for(var u,c=1;c<o.SupportedVersions.length&&(u=o.SupportedVersions[c],!(u.minor<=a.version.minor));++c);t.version={major:u.major,minor:u.minor},t.session.version=t.version}null!==s?(t.expect=S,t.session.resuming=!0,t.session.sp.client_random=a.random.bytes()):(t.expect=t.verifyClient!==!1?v:C,t.session.resuming=!1,o.createSecurityParameters(t,a)),t.open=!0,o.queue(t,o.createRecord(t,{type:o.ContentType.handshake,data:o.createServerHello(t)})),t.session.resuming?(o.queue(t,o.createRecord(t,{type:o.ContentType.change_cipher_spec,data:o.createChangeCipherSpec()})),t.state.pending=o.createConnectionState(t),t.state.current.write=t.state.pending.write,o.queue(t,o.createRecord(t,{type:o.ContentType.handshake,data:o.createFinished(t)}))):(o.queue(t,o.createRecord(t,{type:o.ContentType.handshake,data:o.createCertificate(t)})),t.fail||(o.queue(t,o.createRecord(t,{type:o.ContentType.handshake,data:o.createServerKeyExchange(t)})),t.verifyClient!==!1&&o.queue(t,o.createRecord(t,{type:o.ContentType.handshake,data:o.createCertificateRequest(t)})),o.queue(t,o.createRecord(t,{type:o.ContentType.handshake,data:o.createServerHelloDone(t)})))),o.flush(t),t.process()}},o.handleCertificate=function(t,r,n){if(3>n)return t.error(t,{message:"Invalid Certificate message. Message too short.",send:!0,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.illegal_parameter}});var a,s,u=r.fragment,c={certificate_list:i(u,3)},p=[];try{for(;c.certificate_list.length()>0;)a=i(c.certificate_list,3),s=e.asn1.fromDer(a),a=e.pki.certificateFromAsn1(s,!0),p.push(a)}catch(f){return t.error(t,{message:"Could not parse certificate list.",cause:f,send:!0,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.bad_certificate}})}var d=t.entity===o.ConnectionEnd.client;!d&&t.verifyClient!==!0||0!==p.length?0===p.length?t.expect=d?l:C:(d?t.session.serverCertificate=p[0]:t.session.clientCertificate=p[0],o.verifyCertificateChain(t,p)&&(t.expect=d?l:C)):t.error(t,{message:d?"No server certificate provided.":"No client certificate provided.",send:!0,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.illegal_parameter}}),t.process()},o.handleServerKeyExchange=function(e,t,r){return r>0?e.error(e,{message:"Invalid key parameters. Only RSA is supported.",send:!0,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.unsupported_certificate}}):(e.expect=p,void e.process())},o.handleClientKeyExchange=function(t,r,n){if(48>n)return t.error(t,{message:"Invalid key parameters. Only RSA is supported.",send:!0,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.unsupported_certificate}});var a=r.fragment,s={enc_pre_master_secret:i(a,2).getBytes()},u=null;if(t.getPrivateKey)try{u=t.getPrivateKey(t,t.session.serverCertificate),u=e.pki.privateKeyFromPem(u)}catch(c){t.error(t,{message:"Could not get private key.",cause:c,send:!0,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.internal_error}})}if(null===u)return t.error(t,{message:"No private key set.",send:!0,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.internal_error}});try{var l=t.session.sp;l.pre_master_secret=u.decrypt(s.enc_pre_master_secret);var p=t.session.clientHelloVersion;if(p.major!==l.pre_master_secret.charCodeAt(0)||p.minor!==l.pre_master_secret.charCodeAt(1))throw new Error("TLS version rollback attack detected.")}catch(c){l.pre_master_secret=e.random.getBytes(48)}t.expect=S,null!==t.session.clientCertificate&&(t.expect=E),t.process()},o.handleCertificateRequest=function(e,t,r){if(3>r)return e.error(e,{message:"Invalid CertificateRequest. Message too short.",send:!0,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.illegal_parameter}});var n=t.fragment,a={certificate_types:i(n,1),certificate_authorities:i(n,2)};e.session.certificateRequest=a,e.expect=f,e.process()},o.handleCertificateVerify=function(t,r,n){if(2>n)return t.error(t,{message:"Invalid CertificateVerify. Message too short.",send:!0,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.illegal_parameter}});var a=r.fragment;a.read-=4;var s=a.bytes();a.read+=4;var u={signature:i(a,2).getBytes()},c=e.util.createBuffer();c.putBuffer(t.session.md5.digest()),c.putBuffer(t.session.sha1.digest()),c=c.getBytes();try{var l=t.session.clientCertificate;if(!l.publicKey.verify(c,u.signature,"NONE"))throw new Error("CertificateVerify signature does not match.");t.session.md5.update(s),t.session.sha1.update(s)}catch(p){return t.error(t,{message:"Bad signature in CertificateVerify.",send:!0,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.handshake_failure}})}t.expect=S,t.process()},o.handleServerHelloDone=function(t,r,n){if(n>0)return t.error(t,{message:"Invalid ServerHelloDone message. Invalid length.",send:!0,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.record_overflow}});if(null===t.serverCertificate){var a={message:"No server certificate provided. Not enough security.",send:!0,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.insufficient_security}},i=0,s=t.verify(t,a.alert.description,i,[]);if(s!==!0)return(s||0===s)&&("object"!=typeof s||e.util.isArray(s)?"number"==typeof s&&(a.alert.description=s):(s.message&&(a.message=s.message),s.alert&&(a.alert.description=s.alert))),t.error(t,a)}null!==t.session.certificateRequest&&(r=o.createRecord(t,{type:o.ContentType.handshake,data:o.createCertificate(t)}),o.queue(t,r)),r=o.createRecord(t,{type:o.ContentType.handshake,data:o.createClientKeyExchange(t)}),o.queue(t,r),t.expect=g;var u=function(e,t){null!==e.session.certificateRequest&&null!==e.session.clientCertificate&&o.queue(e,o.createRecord(e,{type:o.ContentType.handshake,data:o.createCertificateVerify(e,t)})),o.queue(e,o.createRecord(e,{type:o.ContentType.change_cipher_spec,data:o.createChangeCipherSpec()})),e.state.pending=o.createConnectionState(e),e.state.current.write=e.state.pending.write,o.queue(e,o.createRecord(e,{type:o.ContentType.handshake,data:o.createFinished(e)})),e.expect=d,o.flush(e),e.process()};return null===t.session.certificateRequest||null===t.session.clientCertificate?u(t,null):void o.getClientSignature(t,u)},o.handleChangeCipherSpec=function(e,t){if(1!==t.fragment.getByte())return e.error(e,{message:"Invalid ChangeCipherSpec message received.",send:!0,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.illegal_parameter}});var r=e.entity===o.ConnectionEnd.client;(e.session.resuming&&r||!e.session.resuming&&!r)&&(e.state.pending=o.createConnectionState(e)),e.state.current.read=e.state.pending.read,(!e.session.resuming&&r||e.session.resuming&&!r)&&(e.state.pending=null),e.expect=r?h:T,e.process()},o.handleFinished=function(r,n,a){var i=n.fragment;i.read-=4;var s=i.bytes();i.read+=4;var u=n.fragment.getBytes();i=e.util.createBuffer(),i.putBuffer(r.session.md5.digest()),i.putBuffer(r.session.sha1.digest());var c=r.entity===o.ConnectionEnd.client,l=c?"server finished":"client finished",p=r.session.sp,f=12,d=t;return i=d(p.master_secret,l,i.getBytes(),f),i.getBytes()!==u?r.error(r,{message:"Invalid verify_data in Finished message.",send:!0,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.decrypt_error}}):(r.session.md5.update(s),r.session.sha1.update(s),(r.session.resuming&&c||!r.session.resuming&&!c)&&(o.queue(r,o.createRecord(r,{type:o.ContentType.change_cipher_spec,data:o.createChangeCipherSpec()})),r.state.current.write=r.state.pending.write,r.state.pending=null,o.queue(r,o.createRecord(r,{type:o.ContentType.handshake,data:o.createFinished(r)}))),r.expect=c?y:A,r.handshaking=!1,++r.handshakes,r.peerCertificate=c?r.session.serverCertificate:r.session.clientCertificate,o.flush(r),r.isConnected=!0,r.connected(r),void r.process())},o.handleAlert=function(e,t){var r,n=t.fragment,a={level:n.getByte(),description:n.getByte()};switch(a.description){case o.Alert.Description.close_notify:r="Connection closed.";break;case o.Alert.Description.unexpected_message:r="Unexpected message.";break;case o.Alert.Description.bad_record_mac:r="Bad record MAC.";break;case o.Alert.Description.decryption_failed:r="Decryption failed.";break;case o.Alert.Description.record_overflow:r="Record overflow.";break;case o.Alert.Description.decompression_failure:r="Decompression failed.";break;case o.Alert.Description.handshake_failure:r="Handshake failure.";break;case o.Alert.Description.bad_certificate:r="Bad certificate.";break;case o.Alert.Description.unsupported_certificate:r="Unsupported certificate.";break;case o.Alert.Description.certificate_revoked:r="Certificate revoked.";break;case o.Alert.Description.certificate_expired:r="Certificate expired.";break;case o.Alert.Description.certificate_unknown:r="Certificate unknown.";break;case o.Alert.Description.illegal_parameter:r="Illegal parameter.";break;case o.Alert.Description.unknown_ca:r="Unknown certificate authority.";break;case o.Alert.Description.access_denied:r="Access denied.";break;case o.Alert.Description.decode_error:r="Decode error.";break;case o.Alert.Description.decrypt_error:r="Decrypt error.";break;case o.Alert.Description.export_restriction:r="Export restriction.";break;case o.Alert.Description.protocol_version:r="Unsupported protocol version.";break;case o.Alert.Description.insufficient_security:r="Insufficient security.";break;case o.Alert.Description.internal_error:r="Internal error.";break;case o.Alert.Description.user_canceled:r="User canceled.";break;case o.Alert.Description.no_renegotiation:r="Renegotiation not supported.";break;default:r="Unknown error."}return a.description===o.Alert.Description.close_notify?e.close():(e.error(e,{message:r,send:!1,origin:e.entity===o.ConnectionEnd.client?"server":"client",alert:a}),void e.process())},o.handleHandshake=function(t,r){var n=r.fragment,a=n.getByte(),i=n.getInt24();if(i>n.length())return t.fragmented=r,r.fragment=e.util.createBuffer(),n.read-=4,t.process();t.fragmented=null,n.read-=4;var s=n.bytes(i+4);n.read+=4,a in x[t.entity][t.expect]?(t.entity!==o.ConnectionEnd.server||t.open||t.fail||(t.handshaking=!0,t.session={version:null,extensions:{server_name:{serverNameList:[]}},cipherSuite:null,compressionMethod:null,serverCertificate:null,clientCertificate:null,md5:e.md.md5.create(),sha1:e.md.sha1.create()}),a!==o.HandshakeType.hello_request&&a!==o.HandshakeType.certificate_verify&&a!==o.HandshakeType.finished&&(t.session.md5.update(s),t.session.sha1.update(s)),x[t.entity][t.expect][a](t,r,i)):o.handleUnexpected(t,r)},o.handleApplicationData=function(e,t){e.data.putBuffer(t.fragment),e.dataReady(e),e.process()},o.handleHeartbeat=function(t,r){var n=r.fragment,a=n.getByte(),i=n.getInt16(),s=n.getBytes(i);if(a===o.HeartbeatMessageType.heartbeat_request){if(t.handshaking||i>s.length)return t.process();o.queue(t,o.createRecord(t,{type:o.ContentType.heartbeat,data:o.createHeartbeat(o.HeartbeatMessageType.heartbeat_response,s)})),o.flush(t)}else if(a===o.HeartbeatMessageType.heartbeat_response){if(s!==t.expectedHeartbeatPayload)return t.process();t.heartbeatReceived&&t.heartbeatReceived(t,e.util.createBuffer(s))}t.process()};var u=0,c=1,l=2,p=3,f=4,d=5,h=6,y=7,g=8,m=0,v=1,C=2,E=3,S=4,T=5,A=6,I=o.handleUnexpected,b=o.handleChangeCipherSpec,B=o.handleAlert,k=o.handleHandshake,N=o.handleApplicationData,R=o.handleHeartbeat,w=[];w[o.ConnectionEnd.client]=[[I,B,k,I,R],[I,B,k,I,R],[I,B,k,I,R],[I,B,k,I,R],[I,B,k,I,R],[b,B,I,I,R],[I,B,k,I,R],[I,B,k,N,R],[I,B,k,I,R]],w[o.ConnectionEnd.server]=[[I,B,k,I,R],[I,B,k,I,R],[I,B,k,I,R],[I,B,k,I,R],[b,B,I,I,R],[I,B,k,I,R],[I,B,k,N,R],[I,B,k,I,R]];var L=o.handleHelloRequest,_=o.handleServerHello,D=o.handleCertificate,U=o.handleServerKeyExchange,P=o.handleCertificateRequest,V=o.handleServerHelloDone,O=o.handleFinished,x=[];x[o.ConnectionEnd.client]=[[I,I,_,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I],[L,I,I,I,I,I,I,I,I,I,I,D,U,P,V,I,I,I,I,I,I],[L,I,I,I,I,I,I,I,I,I,I,I,U,P,V,I,I,I,I,I,I],[L,I,I,I,I,I,I,I,I,I,I,I,I,P,V,I,I,I,I,I,I],[L,I,I,I,I,I,I,I,I,I,I,I,I,I,V,I,I,I,I,I,I],[L,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I],[L,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,O],[L,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I],[L,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I]];var K=o.handleClientHello,j=o.handleClientKeyExchange,q=o.handleCertificateVerify;x[o.ConnectionEnd.server]=[[I,K,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I],[I,I,I,I,I,I,I,I,I,I,I,D,I,I,I,I,I,I,I,I,I],[I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,j,I,I,I,I],[I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,q,I,I,I,I,I],[I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I],[I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,O],[I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I],[I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I,I]],o.generateKeys=function(e,r){var n=t,a=r.client_random+r.server_random;e.session.resuming||(r.master_secret=n(r.pre_master_secret,"master secret",a,48).bytes(),r.pre_master_secret=null),a=r.server_random+r.client_random;var i=2*r.mac_key_length+2*r.enc_key_length,s=e.version.major===o.Versions.TLS_1_0.major&&e.version.minor===o.Versions.TLS_1_0.minor;s&&(i+=2*r.fixed_iv_length);var u=n(r.master_secret,"key expansion",a,i),c={client_write_MAC_key:u.getBytes(r.mac_key_length),server_write_MAC_key:u.getBytes(r.mac_key_length),client_write_key:u.getBytes(r.enc_key_length),server_write_key:u.getBytes(r.enc_key_length)};return s&&(c.client_write_IV=u.getBytes(r.fixed_iv_length),c.server_write_IV=u.getBytes(r.fixed_iv_length)),c},o.createConnectionState=function(e){var t=e.entity===o.ConnectionEnd.client,r=function(){var e={sequenceNumber:[0,0],macKey:null,macLength:0,macFunction:null,cipherState:null,cipherFunction:function(e){return!0},compressionState:null,compressFunction:function(e){return!0},updateSequenceNumber:function(){4294967295===e.sequenceNumber[1]?(e.sequenceNumber[1]=0,++e.sequenceNumber[0]):++e.sequenceNumber[1]}};return e},i={read:r(),write:r()};if(i.read.update=function(e,t){return i.read.cipherFunction(t,i.read)?i.read.compressFunction(e,t,i.read)||e.error(e,{message:"Could not decompress record.",send:!0,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.decompression_failure}}):e.error(e,{message:"Could not decrypt record or bad MAC.",send:!0,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.bad_record_mac}}),!e.fail},i.write.update=function(e,t){return i.write.compressFunction(e,t,i.write)?i.write.cipherFunction(t,i.write)||e.error(e,{message:"Could not encrypt record.",send:!1,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.internal_error}}):e.error(e,{message:"Could not compress record.",send:!1,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.internal_error}}),!e.fail},e.session){var s=e.session.sp;switch(e.session.cipherSuite.initSecurityParameters(s),s.keys=o.generateKeys(e,s),i.read.macKey=t?s.keys.server_write_MAC_key:s.keys.client_write_MAC_key,i.write.macKey=t?s.keys.client_write_MAC_key:s.keys.server_write_MAC_key,e.session.cipherSuite.initConnectionState(i,e,s),s.compression_algorithm){case o.CompressionMethod.none:break;case o.CompressionMethod.deflate:i.read.compressFunction=a,i.write.compressFunction=n;break;default:throw new Error("Unsupported compression algorithm.")}}return i},o.createRandom=function(){var t=new Date,r=+t+6e4*t.getTimezoneOffset(),n=e.util.createBuffer();return n.putInt32(r),n.putBytes(e.random.getBytes(28)),n},o.createRecord=function(e,t){if(!t.data)return null;var r={type:t.type,version:{major:e.version.major,minor:e.version.minor},length:t.data.length(),fragment:t.data};return r},o.createAlert=function(t,r){var n=e.util.createBuffer();return n.putByte(r.level),n.putByte(r.description),o.createRecord(t,{type:o.ContentType.alert,data:n})},o.createClientHello=function(t){t.session.clientHelloVersion={major:t.version.major,minor:t.version.minor};for(var r=e.util.createBuffer(),n=0;n<t.cipherSuites.length;++n){var a=t.cipherSuites[n];r.putByte(a.id[0]),r.putByte(a.id[1])}var i=r.length(),u=e.util.createBuffer();u.putByte(o.CompressionMethod.none);var c=u.length(),l=e.util.createBuffer();if(t.virtualHost){var p=e.util.createBuffer();p.putByte(0),p.putByte(0);var f=e.util.createBuffer();f.putByte(0),s(f,2,e.util.createBuffer(t.virtualHost));var d=e.util.createBuffer();s(d,2,f),s(p,2,d),l.putBuffer(p)}var h=l.length();h>0&&(h+=2);var y=t.session.id,g=y.length+1+2+4+28+2+i+1+c+h,m=e.util.createBuffer();return m.putByte(o.HandshakeType.client_hello),m.putInt24(g),m.putByte(t.version.major),m.putByte(t.version.minor),m.putBytes(t.session.sp.client_random),s(m,1,e.util.createBuffer(y)),s(m,2,r),s(m,1,u),h>0&&s(m,2,l),m},o.createServerHello=function(t){var r=t.session.id,n=r.length+1+2+4+28+2+1,a=e.util.createBuffer();return a.putByte(o.HandshakeType.server_hello),a.putInt24(n),a.putByte(t.version.major),a.putByte(t.version.minor),a.putBytes(t.session.sp.server_random),s(a,1,e.util.createBuffer(r)),a.putByte(t.session.cipherSuite.id[0]),a.putByte(t.session.cipherSuite.id[1]),a.putByte(t.session.compressionMethod),a},o.createCertificate=function(t){var r=t.entity===o.ConnectionEnd.client,n=null;if(t.getCertificate){var a;a=r?t.session.certificateRequest:t.session.extensions.server_name.serverNameList,n=t.getCertificate(t,a)}var i=e.util.createBuffer();if(null!==n)try{e.util.isArray(n)||(n=[n]);for(var u=null,c=0;c<n.length;++c){var l=e.pem.decode(n[c])[0];if("CERTIFICATE"!==l.type&&"X509 CERTIFICATE"!==l.type&&"TRUSTED CERTIFICATE"!==l.type){var p=new Error('Could not convert certificate from PEM; PEM header type is not "CERTIFICATE", "X509 CERTIFICATE", or "TRUSTED CERTIFICATE".');throw p.headerType=l.type,p}if(l.procType&&"ENCRYPTED"===l.procType.type)throw new Error("Could not convert certificate from PEM; PEM is encrypted.");var f=e.util.createBuffer(l.body);null===u&&(u=e.asn1.fromDer(f.bytes(),!1));var d=e.util.createBuffer();s(d,3,f),i.putBuffer(d)}n=e.pki.certificateFromAsn1(u),r?t.session.clientCertificate=n:t.session.serverCertificate=n}catch(h){return t.error(t,{message:"Could not send certificate list.",cause:h,send:!0,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.bad_certificate}})}var y=3+i.length(),g=e.util.createBuffer();return g.putByte(o.HandshakeType.certificate),g.putInt24(y),s(g,3,i),g},o.createClientKeyExchange=function(t){var r=e.util.createBuffer();r.putByte(t.session.clientHelloVersion.major),r.putByte(t.session.clientHelloVersion.minor),r.putBytes(e.random.getBytes(46));var n=t.session.sp;n.pre_master_secret=r.getBytes();var a=t.session.serverCertificate.publicKey;r=a.encrypt(n.pre_master_secret);var i=r.length+2,s=e.util.createBuffer();return s.putByte(o.HandshakeType.client_key_exchange),s.putInt24(i),s.putInt16(r.length),s.putBytes(r),s},o.createServerKeyExchange=function(t){var r=0,n=e.util.createBuffer();return r>0&&(n.putByte(o.HandshakeType.server_key_exchange),n.putInt24(r)),n},o.getClientSignature=function(t,r){var n=e.util.createBuffer();n.putBuffer(t.session.md5.digest()),n.putBuffer(t.session.sha1.digest()),n=n.getBytes(),t.getSignature=t.getSignature||function(t,r,n){var a=null;if(t.getPrivateKey)try{a=t.getPrivateKey(t,t.session.clientCertificate),a=e.pki.privateKeyFromPem(a)}catch(i){t.error(t,{message:"Could not get private key.",cause:i,send:!0,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.internal_error}})}null===a?t.error(t,{message:"No private key set.",send:!0,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.internal_error}}):r=a.sign(r,null),n(t,r)},t.getSignature(t,n,r)},o.createCertificateVerify=function(t,r){var n=r.length+2,a=e.util.createBuffer();return a.putByte(o.HandshakeType.certificate_verify),a.putInt24(n),a.putInt16(r.length),a.putBytes(r),a},o.createCertificateRequest=function(t){var r=e.util.createBuffer();r.putByte(1);var n=e.util.createBuffer();for(var a in t.caStore.certs){var i=t.caStore.certs[a],u=e.pki.distinguishedNameToAsn1(i.subject);n.putBuffer(e.asn1.toDer(u))}var c=1+r.length()+2+n.length(),l=e.util.createBuffer();return l.putByte(o.HandshakeType.certificate_request),l.putInt24(c),s(l,1,r),s(l,2,n),l},o.createServerHelloDone=function(t){var r=e.util.createBuffer();return r.putByte(o.HandshakeType.server_hello_done),r.putInt24(0),r},o.createChangeCipherSpec=function(){var t=e.util.createBuffer();return t.putByte(1),t},o.createFinished=function(r){var n=e.util.createBuffer();n.putBuffer(r.session.md5.digest()),n.putBuffer(r.session.sha1.digest());var a=r.entity===o.ConnectionEnd.client,i=r.session.sp,s=12,u=t,c=a?"client finished":"server finished";n=u(i.master_secret,c,n.getBytes(),s);var l=e.util.createBuffer();return l.putByte(o.HandshakeType.finished),l.putInt24(n.length()),l.putBuffer(n),l},o.createHeartbeat=function(t,r,n){"undefined"==typeof n&&(n=r.length);var a=e.util.createBuffer();a.putByte(t),a.putInt16(n),a.putBytes(r);var i=a.length(),s=Math.max(16,i-n-3);return a.putBytes(e.random.getBytes(s)),a},o.queue=function(t,r){if(r){if(r.type===o.ContentType.handshake){var n=r.fragment.bytes();t.session.md5.update(n),t.session.sha1.update(n),n=null}var a;if(r.fragment.length()<=o.MaxFragment)a=[r];else{a=[];for(var i=r.fragment.bytes();i.length>o.MaxFragment;)a.push(o.createRecord(t,{type:r.type,data:e.util.createBuffer(i.slice(0,o.MaxFragment))})),i=i.slice(o.MaxFragment);i.length>0&&a.push(o.createRecord(t,{type:r.type,data:e.util.createBuffer(i)}))}for(var s=0;s<a.length&&!t.fail;++s){var u=a[s],c=t.state.current.write;c.update(t,u)&&t.records.push(u)}}},o.flush=function(e){for(var t=0;t<e.records.length;++t){var r=e.records[t];e.tlsData.putByte(r.type),e.tlsData.putByte(r.version.major),e.tlsData.putByte(r.version.minor),e.tlsData.putInt16(r.fragment.length()),e.tlsData.putBuffer(e.records[t].fragment)}return e.records=[],e.tlsDataReady(e)};var M=function(t){switch(t){case!0:return!0;case e.pki.certificateError.bad_certificate:return o.Alert.Description.bad_certificate;case e.pki.certificateError.unsupported_certificate:return o.Alert.Description.unsupported_certificate;case e.pki.certificateError.certificate_revoked:return o.Alert.Description.certificate_revoked;case e.pki.certificateError.certificate_expired:return o.Alert.Description.certificate_expired;case e.pki.certificateError.certificate_unknown:return o.Alert.Description.certificate_unknown;case e.pki.certificateError.unknown_ca:return o.Alert.Description.unknown_ca;default:return o.Alert.Description.bad_certificate}},F=function(t){switch(t){case!0:return!0;case o.Alert.Description.bad_certificate:return e.pki.certificateError.bad_certificate;case o.Alert.Description.unsupported_certificate:return e.pki.certificateError.unsupported_certificate;case o.Alert.Description.certificate_revoked:return e.pki.certificateError.certificate_revoked;case o.Alert.Description.certificate_expired:return e.pki.certificateError.certificate_expired;case o.Alert.Description.certificate_unknown:return e.pki.certificateError.certificate_unknown;case o.Alert.Description.unknown_ca:return e.pki.certificateError.unknown_ca;default:return e.pki.certificateError.bad_certificate}};o.verifyCertificateChain=function(t,r){try{e.pki.verifyCertificateChain(t.caStore,r,function(r,n,a){var i=(M(r),t.verify(t,r,n,a));if(i!==!0){if("object"==typeof i&&!e.util.isArray(i)){var s=new Error("The application rejected the certificate.");throw s.send=!0,s.alert={level:o.Alert.Level.fatal,description:o.Alert.Description.bad_certificate},i.message&&(s.message=i.message),i.alert&&(s.alert.description=i.alert),s}i!==r&&(i=F(i))}return i})}catch(n){var a=n;("object"!=typeof a||e.util.isArray(a))&&(a={send:!0,alert:{level:o.Alert.Level.fatal,description:M(n)}}),"send"in a||(a.send=!0),"alert"in a||(a.alert={level:o.Alert.Level.fatal,description:M(a.error)}),t.error(t,a)}return!t.fail},o.createSessionCache=function(t,r){var n=null;if(t&&t.getSession&&t.setSession&&t.order)n=t;else{n={},n.cache=t||{},n.capacity=Math.max(r||100,1),n.order=[];for(var a in t)n.order.length<=r?n.order.push(a):delete t[a];n.getSession=function(t){var r=null,a=null;if(t?a=e.util.bytesToHex(t):n.order.length>0&&(a=n.order[0]),null!==a&&a in n.cache){r=n.cache[a],delete n.cache[a];for(var i in n.order)if(n.order[i]===a){n.order.splice(i,1);break}}return r},n.setSession=function(t,r){if(n.order.length===n.capacity){var a=n.order.shift();delete n.cache[a]}var a=e.util.bytesToHex(t);n.order.push(a),n.cache[a]=r}}return n},o.createConnection=function(t){var r=null;r=t.caStore?e.util.isArray(t.caStore)?e.pki.createCaStore(t.caStore):t.caStore:e.pki.createCaStore();var n=t.cipherSuites||null;if(null===n){n=[];for(var a in o.CipherSuites)n.push(o.CipherSuites[a])}var i=t.server?o.ConnectionEnd.server:o.ConnectionEnd.client,s=t.sessionCache?o.createSessionCache(t.sessionCache):null,c={version:{major:o.Version.major,minor:o.Version.minor},entity:i,sessionId:t.sessionId,caStore:r,sessionCache:s,cipherSuites:n,connected:t.connected,virtualHost:t.virtualHost||null,verifyClient:t.verifyClient||!1,verify:t.verify||function(e,t,r,n){return t},getCertificate:t.getCertificate||null,getPrivateKey:t.getPrivateKey||null,getSignature:t.getSignature||null,input:e.util.createBuffer(),tlsData:e.util.createBuffer(),data:e.util.createBuffer(),tlsDataReady:t.tlsDataReady,dataReady:t.dataReady,heartbeatReceived:t.heartbeatReceived,closed:t.closed,error:function(e,r){r.origin=r.origin||(e.entity===o.ConnectionEnd.client?"client":"server"),r.send&&(o.queue(e,o.createAlert(e,r.alert)),o.flush(e));var n=r.fatal!==!1;n&&(e.fail=!0),t.error(e,r),n&&e.close(!1)},deflate:t.deflate||null,inflate:t.inflate||null};c.reset=function(e){c.version={major:o.Version.major,minor:o.Version.minor},c.record=null,c.session=null,c.peerCertificate=null,c.state={pending:null,current:null},c.expect=c.entity===o.ConnectionEnd.client?u:m,c.fragmented=null,c.records=[],c.open=!1,c.handshakes=0,c.handshaking=!1,c.isConnected=!1,c.fail=!(e||"undefined"==typeof e),c.input.clear(),c.tlsData.clear(),c.data.clear(),c.state.current=o.createConnectionState(c)},c.reset();var l=function(e,t){var r=t.type-o.ContentType.change_cipher_spec,n=w[e.entity][e.expect];r in n?n[r](e,t):o.handleUnexpected(e,t)},p=function(t){var r=0,n=t.input,a=n.length();if(5>a)r=5-a;else{t.record={type:n.getByte(),version:{major:n.getByte(),minor:n.getByte()},length:n.getInt16(),fragment:e.util.createBuffer(),ready:!1};var i=t.record.version.major===t.version.major;i&&t.session&&t.session.version&&(i=t.record.version.minor===t.version.minor),i||t.error(t,{message:"Incompatible TLS version.",send:!0,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.protocol_version}})}return r},f=function(e){var t=0,r=e.input,n=r.length();if(n<e.record.length)t=e.record.length-n;else{e.record.fragment.putBytes(r.getBytes(e.record.length)),r.compact();var a=e.state.current.read;a.update(e,e.record)&&(null!==e.fragmented&&(e.fragmented.type===e.record.type?(e.fragmented.fragment.putBuffer(e.record.fragment),e.record=e.fragmented):e.error(e,{message:"Invalid fragmented record.",send:!0,alert:{level:o.Alert.Level.fatal,description:o.Alert.Description.unexpected_message}})),e.record.ready=!0)}return t};return c.handshake=function(t){if(c.entity!==o.ConnectionEnd.client)c.error(c,{message:"Cannot initiate handshake as a server.",fatal:!1});else if(c.handshaking)c.error(c,{message:"Handshake already in progress.",fatal:!1});else{c.fail&&!c.open&&0===c.handshakes&&(c.fail=!1),c.handshaking=!0,t=t||"";var r=null;t.length>0&&(c.sessionCache&&(r=c.sessionCache.getSession(t)),null===r&&(t="")),0===t.length&&c.sessionCache&&(r=c.sessionCache.getSession(),null!==r&&(t=r.id)),c.session={id:t,version:null,cipherSuite:null,compressionMethod:null,serverCertificate:null,certificateRequest:null,clientCertificate:null,sp:{},md5:e.md.md5.create(),sha1:e.md.sha1.create()},r&&(c.version=r.version,c.session.sp=r.sp),c.session.sp.client_random=o.createRandom().getBytes(),c.open=!0,o.queue(c,o.createRecord(c,{type:o.ContentType.handshake,data:o.createClientHello(c)})),o.flush(c)}},c.process=function(e){var t=0;return e&&c.input.putBytes(e),c.fail||(null!==c.record&&c.record.ready&&c.record.fragment.isEmpty()&&(c.record=null),null===c.record&&(t=p(c)),c.fail||null===c.record||c.record.ready||(t=f(c)),!c.fail&&null!==c.record&&c.record.ready&&l(c,c.record)),t},c.prepare=function(t){return o.queue(c,o.createRecord(c,{type:o.ContentType.application_data,data:e.util.createBuffer(t)})),o.flush(c)},c.prepareHeartbeatRequest=function(t,r){return t instanceof e.util.ByteBuffer&&(t=t.bytes()),"undefined"==typeof r&&(r=t.length),c.expectedHeartbeatPayload=t,o.queue(c,o.createRecord(c,{type:o.ContentType.heartbeat,data:o.createHeartbeat(o.HeartbeatMessageType.heartbeat_request,t,r)})),o.flush(c)},c.close=function(e){if(!c.fail&&c.sessionCache&&c.session){var t={id:c.session.id,version:c.session.version,sp:c.session.sp};t.sp.keys=null,c.sessionCache.setSession(t.id,t)}c.open&&(c.open=!1,c.input.clear(),(c.isConnected||c.handshaking)&&(c.isConnected=c.handshaking=!1,o.queue(c,o.createAlert(c,{level:o.Alert.Level.warning,description:o.Alert.Description.close_notify})),o.flush(c)),c.closed(c)),c.reset(e)},c},e.tls=e.tls||{};for(var H in o)"function"!=typeof o[H]&&(e.tls[H]=o[H]);e.tls.prf_tls1=t,e.tls.hmac_sha1=r,e.tls.createSessionCache=o.createSessionCache,e.tls.createConnection=o.createConnection}var n="tls";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/tls",["require","module","./asn1","./hmac","./md","./pem","./pki","./random","./util"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function t(t,n,a){var o=n.entity===e.tls.ConnectionEnd.client;t.read.cipherState={init:!1,cipher:e.cipher.createDecipher("AES-CBC",o?a.keys.server_write_key:a.keys.client_write_key),iv:o?a.keys.server_write_IV:a.keys.client_write_IV},t.write.cipherState={init:!1,cipher:e.cipher.createCipher("AES-CBC",o?a.keys.client_write_key:a.keys.server_write_key),iv:o?a.keys.client_write_IV:a.keys.server_write_IV},t.read.cipherFunction=i,t.write.cipherFunction=r,t.read.macLength=t.write.macLength=a.mac_length,t.read.macFunction=t.write.macFunction=s.hmac_sha1}function r(t,r){var a=!1,i=r.macFunction(r.macKey,r.sequenceNumber,t);t.fragment.putBytes(i),r.updateSequenceNumber();var o;o=t.version.minor===s.Versions.TLS_1_0.minor?r.cipherState.init?null:r.cipherState.iv:e.random.getBytesSync(16),r.cipherState.init=!0;var u=r.cipherState.cipher;return u.start({iv:o
}),t.version.minor>=s.Versions.TLS_1_1.minor&&u.output.putBytes(o),u.update(t.fragment),u.finish(n)&&(t.fragment=u.output,t.length=t.fragment.length(),a=!0),a}function n(e,t,r){if(!r){var n=e-t.length()%e;t.fillWithByte(n-1,n)}return!0}function a(e,t,r){var n=!0;if(r){for(var a=t.length(),i=t.last(),s=a-1-i;a-1>s;++s)n=n&&t.at(s)==i;n&&t.truncate(i+1)}return n}function i(t,r){var n=!1;++o;var i;i=t.version.minor===s.Versions.TLS_1_0.minor?r.cipherState.init?null:r.cipherState.iv:t.fragment.getBytes(16),r.cipherState.init=!0;var u=r.cipherState.cipher;u.start({iv:i}),u.update(t.fragment),n=u.finish(a);for(var c=r.macLength,l="",p=0;c>p;++p)l+=String.fromCharCode(0);var f=u.output.length();f>=c?(t.fragment=u.output.getBytes(f-c),l=u.output.getBytes(c)):t.fragment=u.output.getBytes(),t.fragment=e.util.createBuffer(t.fragment),t.length=t.fragment.length();var d=r.macFunction(r.macKey,r.sequenceNumber,t);return r.updateSequenceNumber(),n=d===l&&n}var s=e.tls;s.CipherSuites.TLS_RSA_WITH_AES_128_CBC_SHA={id:[0,47],name:"TLS_RSA_WITH_AES_128_CBC_SHA",initSecurityParameters:function(e){e.bulk_cipher_algorithm=s.BulkCipherAlgorithm.aes,e.cipher_type=s.CipherType.block,e.enc_key_length=16,e.block_length=16,e.fixed_iv_length=16,e.record_iv_length=16,e.mac_algorithm=s.MACAlgorithm.hmac_sha1,e.mac_length=20,e.mac_key_length=20},initConnectionState:t},s.CipherSuites.TLS_RSA_WITH_AES_256_CBC_SHA={id:[0,53],name:"TLS_RSA_WITH_AES_256_CBC_SHA",initSecurityParameters:function(e){e.bulk_cipher_algorithm=s.BulkCipherAlgorithm.aes,e.cipher_type=s.CipherType.block,e.enc_key_length=32,e.block_length=16,e.fixed_iv_length=16,e.record_iv_length=16,e.mac_algorithm=s.MACAlgorithm.hmac_sha1,e.mac_length=20,e.mac_key_length=20},initConnectionState:t};var o=0}var n="aesCipherSuites";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/aesCipherSuites",["require","module","./aes","./tls"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){e.debug=e.debug||{},e.debug.storage={},e.debug.get=function(t,r){var n;return"undefined"==typeof t?n=e.debug.storage:t in e.debug.storage&&(n="undefined"==typeof r?e.debug.storage[t]:e.debug.storage[t][r]),n},e.debug.set=function(t,r,n){t in e.debug.storage||(e.debug.storage[t]={}),e.debug.storage[t][r]=n},e.debug.clear=function(t,r){"undefined"==typeof t?e.debug.storage={}:t in e.debug.storage&&("undefined"==typeof r?delete e.debug.storage[t]:delete e.debug.storage[t][r])}}var n="debug";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/debug",["require","module"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function t(t,r,n,a){t.generate=function(t,i){for(var s=new e.util.ByteBuffer,o=Math.ceil(i/a)+n,u=new e.util.ByteBuffer,c=n;o>c;++c){u.putInt32(c),r.start(),r.update(t+u.getBytes());var l=r.digest();s.putBytes(l.getBytes(a))}return s.truncate(s.length()-i),s.getBytes()}}e.kem=e.kem||{};var r=e.jsbn.BigInteger;e.kem.rsa={},e.kem.rsa.create=function(t,n){n=n||{};var a=n.prng||e.random,i={};return i.encrypt=function(n,i){var s,o=Math.ceil(n.n.bitLength()/8);do s=new r(e.util.bytesToHex(a.getBytesSync(o)),16).mod(n.n);while(s.equals(r.ZERO));s=e.util.hexToBytes(s.toString(16));var u=o-s.length;u>0&&(s=e.util.fillString(String.fromCharCode(0),u)+s);var c=n.encrypt(s,"NONE"),l=t.generate(s,i);return{encapsulation:c,key:l}},i.decrypt=function(e,r,n){var a=e.decrypt(r,"NONE");return t.generate(a,n)},i},e.kem.kdf1=function(e,r){t(this,e,0,r||e.digestLength)},e.kem.kdf2=function(e,r){t(this,e,1,r||e.digestLength)}}var n="kem";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/kem",["require","module","./util","./random","./jsbn"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){e.log=e.log||{},e.log.levels=["none","error","warning","info","debug","verbose","max"];var t={},r=[],n=null;e.log.LEVEL_LOCKED=2,e.log.NO_LEVEL_CHECK=4,e.log.INTERPOLATE=8;for(var a=0;a<e.log.levels.length;++a){var i=e.log.levels[a];t[i]={index:a,name:i.toUpperCase()}}e.log.logMessage=function(n){for(var a=t[n.level].index,i=0;i<r.length;++i){var s=r[i];if(s.flags&e.log.NO_LEVEL_CHECK)s.f(n);else{var o=t[s.level].index;o>=a&&s.f(s,n)}}},e.log.prepareStandard=function(e){"standard"in e||(e.standard=t[e.level].name+" ["+e.category+"] "+e.message)},e.log.prepareFull=function(t){if(!("full"in t)){var r=[t.message];r=r.concat([]||t.arguments),t.full=e.util.format.apply(this,r)}},e.log.prepareStandardFull=function(t){"standardFull"in t||(e.log.prepareStandard(t),t.standardFull=t.standard)};for(var s=["error","warning","info","debug","verbose"],a=0;a<s.length;++a)!function(t){e.log[t]=function(r,n){var a=Array.prototype.slice.call(arguments).slice(2),i={timestamp:new Date,level:t,category:r,message:n,arguments:a};e.log.logMessage(i)}}(s[a]);if(e.log.makeLogger=function(t){var r={flags:0,f:t};return e.log.setLevel(r,"none"),r},e.log.setLevel=function(t,r){var n=!1;if(t&&!(t.flags&e.log.LEVEL_LOCKED))for(var a=0;a<e.log.levels.length;++a){var i=e.log.levels[a];if(r==i){t.level=r,n=!0;break}}return n},e.log.lock=function(t,r){"undefined"==typeof r||r?t.flags|=e.log.LEVEL_LOCKED:t.flags&=~e.log.LEVEL_LOCKED},e.log.addLogger=function(e){r.push(e)},"undefined"!=typeof console&&"log"in console){var o;if(console.error&&console.warn&&console.info&&console.debug){var u={error:console.error,warning:console.warn,info:console.info,debug:console.debug,verbose:console.debug},c=function(t,r){e.log.prepareStandard(r);var n=u[r.level],a=[r.standard];a=a.concat(r.arguments.slice()),n.apply(console,a)};o=e.log.makeLogger(c)}else{var c=function(t,r){e.log.prepareStandardFull(r),console.log(r.standardFull)};o=e.log.makeLogger(c)}e.log.setLevel(o,"debug"),e.log.addLogger(o),n=o}else console={log:function(){}};if(null!==n){var l=e.util.getQueryVariables();if("console.level"in l&&e.log.setLevel(n,l["console.level"].slice(-1)[0]),"console.lock"in l){var p=l["console.lock"].slice(-1)[0];"true"==p&&e.log.lock(n)}}e.log.consoleLogger=n}var n="log";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/log",["require","module","./util"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){var t=e.asn1,r=e.pkcs7=e.pkcs7||{};r.messageFromPem=function(n){var a=e.pem.decode(n)[0];if("PKCS7"!==a.type){var i=new Error('Could not convert PKCS#7 message from PEM; PEM header type is not "PKCS#7".');throw i.headerType=a.type,i}if(a.procType&&"ENCRYPTED"===a.procType.type)throw new Error("Could not convert PKCS#7 message from PEM; PEM is encrypted.");var s=t.fromDer(a.body);return r.messageFromAsn1(s)},r.messageToPem=function(r,n){var a={type:"PKCS7",body:t.toDer(r.toAsn1()).getBytes()};return e.pem.encode(a,{maxline:n})},r.messageFromAsn1=function(n){var a={},i=[];if(!t.validate(n,r.asn1.contentInfoValidator,a,i)){var s=new Error("Cannot read PKCS#7 message. ASN.1 object is not an PKCS#7 ContentInfo.");throw s.errors=i,s}var o,u=t.derToOid(a.contentType);switch(u){case e.pki.oids.envelopedData:o=r.createEnvelopedData();break;case e.pki.oids.encryptedData:o=r.createEncryptedData();break;case e.pki.oids.signedData:o=r.createSignedData();break;default:throw new Error("Cannot read PKCS#7 message. ContentType with OID "+u+" is not (yet) supported.")}return o.fromAsn1(a.content.value[0]),o};var n=function(n){var a={},i=[];if(!t.validate(n,r.asn1.recipientInfoValidator,a,i)){var s=new Error("Cannot read PKCS#7 message. ASN.1 object is not an PKCS#7 EnvelopedData.");throw s.errors=i,s}return{version:a.version.charCodeAt(0),issuer:e.pki.RDNAttributesAsArray(a.issuer),serialNumber:e.util.createBuffer(a.serial).toHex(),encryptedContent:{algorithm:t.derToOid(a.encAlgorithm),parameter:a.encParameter.value,content:a.encKey}}},a=function(r){return t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.INTEGER,!1,t.integerToDer(r.version).getBytes()),t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[e.pki.distinguishedNameToAsn1({attributes:r.issuer}),t.create(t.Class.UNIVERSAL,t.Type.INTEGER,!1,e.util.hexToBytes(r.serialNumber))]),t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(r.encryptedContent.algorithm).getBytes()),t.create(t.Class.UNIVERSAL,t.Type.NULL,!1,"")]),t.create(t.Class.UNIVERSAL,t.Type.OCTETSTRING,!1,r.encryptedContent.content)])},i=function(e){for(var t=[],r=0;r<e.length;r++)t.push(n(e[r]));return t},s=function(e){for(var t=[],r=0;r<e.length;r++)t.push(a(e[r]));return t},o=function(r){return[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(e.pki.oids.data).getBytes()),t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(r.algorithm).getBytes()),t.create(t.Class.UNIVERSAL,t.Type.OCTETSTRING,!1,r.parameter.getBytes())]),t.create(t.Class.CONTEXT_SPECIFIC,0,!0,[t.create(t.Class.UNIVERSAL,t.Type.OCTETSTRING,!1,r.content.getBytes())])]},u=function(r,n,a){var i={},s=[];if(!t.validate(n,a,i,s)){var o=new Error("Cannot read PKCS#7 message. ASN.1 object is not a supported PKCS#7 message.");throw o.errors=o,o}var u=t.derToOid(i.contentType);if(u!==e.pki.oids.data)throw new Error("Unsupported PKCS#7 message. Only wrapped ContentType Data supported.");if(i.encryptedContent){var c="";if(e.util.isArray(i.encryptedContent))for(var l=0;l<i.encryptedContent.length;++l){if(i.encryptedContent[l].type!==t.Type.OCTETSTRING)throw new Error("Malformed PKCS#7 message, expecting encrypted content constructed of only OCTET STRING objects.");c+=i.encryptedContent[l].value}else c=i.encryptedContent;r.encryptedContent={algorithm:t.derToOid(i.encAlgorithm),parameter:e.util.createBuffer(i.encParameter.value),content:e.util.createBuffer(c)}}if(i.content){var c="";if(e.util.isArray(i.content))for(var l=0;l<i.content.length;++l){if(i.content[l].type!==t.Type.OCTETSTRING)throw new Error("Malformed PKCS#7 message, expecting content constructed of only OCTET STRING objects.");c+=i.content[l].value}else c=i.content;r.content=e.util.createBuffer(c)}return r.version=i.version.charCodeAt(0),r.rawCapture=i,i},c=function(t){if(void 0===t.encryptedContent.key)throw new Error("Symmetric key not available.");if(void 0===t.content){var r;switch(t.encryptedContent.algorithm){case e.pki.oids["aes128-CBC"]:case e.pki.oids["aes192-CBC"]:case e.pki.oids["aes256-CBC"]:r=e.aes.createDecryptionCipher(t.encryptedContent.key);break;case e.pki.oids.desCBC:case e.pki.oids["des-EDE3-CBC"]:r=e.des.createDecryptionCipher(t.encryptedContent.key);break;default:throw new Error("Unsupported symmetric cipher, OID "+t.encryptedContent.algorithm)}if(r.start(t.encryptedContent.parameter),r.update(t.encryptedContent.content),!r.finish())throw new Error("Symmetric decryption failed.");t.content=r.output}};r.createSignedData=function(){var n=null;return n={type:e.pki.oids.signedData,version:1,certificates:[],crls:[],digestAlgorithmIdentifiers:[],contentInfo:null,signerInfos:[],fromAsn1:function(t){u(n,t,r.asn1.signedDataValidator),n.certificates=[],n.crls=[],n.digestAlgorithmIdentifiers=[],n.contentInfo=null,n.signerInfos=[];for(var a=n.rawCapture.certificates.value,i=0;i<a.length;++i)n.certificates.push(e.pki.certificateFromAsn1(a[i]))},toAsn1:function(){if("content"in n)throw new Error("Signing PKCS#7 content not yet implemented.");n.contentInfo||n.sign();for(var r=[],a=0;a<n.certificates.length;++a)r.push(e.pki.certificateToAsn1(n.certificates[0]));var i=[];return t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(n.type).getBytes()),t.create(t.Class.CONTEXT_SPECIFIC,0,!0,[t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.INTEGER,!1,t.integerToDer(n.version).getBytes()),t.create(t.Class.UNIVERSAL,t.Type.SET,!0,n.digestAlgorithmIdentifiers),n.contentInfo,t.create(t.Class.CONTEXT_SPECIFIC,0,!0,r),t.create(t.Class.CONTEXT_SPECIFIC,1,!0,i),t.create(t.Class.UNIVERSAL,t.Type.SET,!0,n.signerInfos)])])])},sign:function(r){if("content"in n)throw new Error("PKCS#7 signing not yet implemented.");"object"!=typeof n.content&&(n.contentInfo=t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(e.pki.oids.data).getBytes())]),"content"in n&&n.contentInfo.value.push(t.create(t.Class.CONTEXT_SPECIFIC,0,!0,[t.create(t.Class.UNIVERSAL,t.Type.OCTETSTRING,!1,n.content)])))},verify:function(){throw new Error("PKCS#7 signature verification not yet implemented.")},addCertificate:function(t){"string"==typeof t&&(t=e.pki.certificateFromPem(t)),n.certificates.push(t)},addCertificateRevokationList:function(e){throw new Error("PKCS#7 CRL support not yet implemented.")}}},r.createEncryptedData=function(){var t=null;return t={type:e.pki.oids.encryptedData,version:0,encryptedContent:{algorithm:e.pki.oids["aes256-CBC"]},fromAsn1:function(e){u(t,e,r.asn1.encryptedDataValidator)},decrypt:function(e){void 0!==e&&(t.encryptedContent.key=e),c(t)}}},r.createEnvelopedData=function(){var n=null;return n={type:e.pki.oids.envelopedData,version:0,recipients:[],encryptedContent:{algorithm:e.pki.oids["aes256-CBC"]},fromAsn1:function(e){var t=u(n,e,r.asn1.envelopedDataValidator);n.recipients=i(t.recipientInfos.value)},toAsn1:function(){return t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(n.type).getBytes()),t.create(t.Class.CONTEXT_SPECIFIC,0,!0,[t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.INTEGER,!1,t.integerToDer(n.version).getBytes()),t.create(t.Class.UNIVERSAL,t.Type.SET,!0,s(n.recipients)),t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,o(n.encryptedContent))])])])},findRecipient:function(e){for(var t=e.issuer.attributes,r=0;r<n.recipients.length;++r){var a=n.recipients[r],i=a.issuer;if(a.serialNumber===e.serialNumber&&i.length===t.length){for(var s=!0,o=0;o<t.length;++o)if(i[o].type!==t[o].type||i[o].value!==t[o].value){s=!1;break}if(s)return a}}return null},decrypt:function(t,r){if(void 0===n.encryptedContent.key&&void 0!==t&&void 0!==r)switch(t.encryptedContent.algorithm){case e.pki.oids.rsaEncryption:case e.pki.oids.desCBC:var a=r.decrypt(t.encryptedContent.content);n.encryptedContent.key=e.util.createBuffer(a);break;default:throw new Error("Unsupported asymmetric cipher, OID "+t.encryptedContent.algorithm)}c(n)},addRecipient:function(t){n.recipients.push({version:0,issuer:t.issuer.attributes,serialNumber:t.serialNumber,encryptedContent:{algorithm:e.pki.oids.rsaEncryption,key:t.publicKey}})},encrypt:function(t,r){if(void 0===n.encryptedContent.content){r=r||n.encryptedContent.algorithm,t=t||n.encryptedContent.key;var a,i,s;switch(r){case e.pki.oids["aes128-CBC"]:a=16,i=16,s=e.aes.createEncryptionCipher;break;case e.pki.oids["aes192-CBC"]:a=24,i=16,s=e.aes.createEncryptionCipher;break;case e.pki.oids["aes256-CBC"]:a=32,i=16,s=e.aes.createEncryptionCipher;break;case e.pki.oids["des-EDE3-CBC"]:a=24,i=8,s=e.des.createEncryptionCipher;break;default:throw new Error("Unsupported symmetric cipher, OID "+r)}if(void 0===t)t=e.util.createBuffer(e.random.getBytes(a));else if(t.length()!=a)throw new Error("Symmetric key has wrong length; got "+t.length()+" bytes, expected "+a+".");n.encryptedContent.algorithm=r,n.encryptedContent.key=t,n.encryptedContent.parameter=e.util.createBuffer(e.random.getBytes(i));var o=s(t);if(o.start(n.encryptedContent.parameter.copy()),o.update(n.content),!o.finish())throw new Error("Symmetric encryption failed.");n.encryptedContent.content=o.output}for(var u=0;u<n.recipients.length;u++){var c=n.recipients[u];if(void 0===c.encryptedContent.content)switch(c.encryptedContent.algorithm){case e.pki.oids.rsaEncryption:c.encryptedContent.content=c.encryptedContent.key.encrypt(n.encryptedContent.key.data);break;default:throw new Error("Unsupported asymmetric cipher, OID "+c.encryptedContent.algorithm)}}}}}}var n="pkcs7";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/pkcs7",["require","module","./aes","./asn1","./des","./oids","./pem","./pkcs7asn1","./random","./util","./x509"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function t(t,r){var n=r.toString(16);n[0]>="8"&&(n="00"+n);var a=e.util.hexToBytes(n);t.putInt32(a.length),t.putBytes(a)}function r(e,t){e.putInt32(t.length),e.putString(t)}function n(){for(var t=e.md.sha1.create(),r=arguments.length,n=0;r>n;++n)t.update(arguments[n]);return t.digest()}var a=e.ssh=e.ssh||{};a.privateKeyToPutty=function(a,i,s){s=s||"",i=i||"";var o="ssh-rsa",u=""===i?"none":"aes256-cbc",c="PuTTY-User-Key-File-2: "+o+"\r\n";c+="Encryption: "+u+"\r\n",c+="Comment: "+s+"\r\n";var l=e.util.createBuffer();r(l,o),t(l,a.e),t(l,a.n);var p=e.util.encode64(l.bytes(),64),f=Math.floor(p.length/66)+1;c+="Public-Lines: "+f+"\r\n",c+=p;var d=e.util.createBuffer();t(d,a.d),t(d,a.p),t(d,a.q),t(d,a.qInv);var h;if(i){var y=d.length()+16-1;y-=y%16;var g=n(d.bytes());g.truncate(g.length()-y+d.length()),d.putBuffer(g);var m=e.util.createBuffer();m.putBuffer(n("\x00\x00\x00\x00",i)),m.putBuffer(n("\x00\x00\x00",i));var v=e.aes.createEncryptionCipher(m.truncate(8),"CBC");v.start(e.util.createBuffer().fillWithByte(0,16)),v.update(d.copy()),v.finish();var C=v.output;C.truncate(16),h=e.util.encode64(C.bytes(),64)}else h=e.util.encode64(d.bytes(),64);f=Math.floor(h.length/66)+1,c+="\r\nPrivate-Lines: "+f+"\r\n",c+=h;var E=n("putty-private-key-file-mac-key",i),S=e.util.createBuffer();r(S,o),r(S,u),r(S,s),S.putInt32(l.length()),S.putBuffer(l),S.putInt32(d.length()),S.putBuffer(d);var T=e.hmac.create();return T.start("sha1",E),T.update(S.bytes()),c+="\r\nPrivate-MAC: "+T.digest().toHex()+"\r\n"},a.publicKeyToOpenSSH=function(n,a){var i="ssh-rsa";a=a||"";var s=e.util.createBuffer();return r(s,i),t(s,n.e),t(s,n.n),i+" "+e.util.encode64(s.bytes())+" "+a},a.privateKeyToOpenSSH=function(t,r){return r?e.pki.encryptRsaPrivateKey(t,r,{legacy:!0,algorithm:"aes128"}):e.pki.privateKeyToPem(t)},a.getPublicKeyFingerprint=function(n,a){a=a||{};var i=a.md||e.md.md5.create(),s="ssh-rsa",o=e.util.createBuffer();r(o,s),t(o,n.e),t(o,n.n),i.start(),i.update(o.getBytes());var u=i.digest();if("hex"===a.encoding){var c=u.toHex();return a.delimiter?c.match(/.{2}/g).join(a.delimiter):c}if("binary"===a.encoding)return u.getBytes();if(a.encoding)throw new Error('Unknown encoding "'+a.encoding+'".');return u}}var n="ssh";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/ssh",["require","module","./aes","./hmac","./md5","./sha1","./util"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){var t="forge.task",r=0,n={},a=0;e.debug.set(t,"tasks",n);var i={};e.debug.set(t,"queues",i);var s="?",o=30,u=20,c="ready",l="running",p="blocked",f="sleeping",d="done",h="error",y="stop",g="start",m="block",v="unblock",C="sleep",E="wakeup",S="cancel",T="fail",A={};A[c]={},A[c][y]=c,A[c][g]=l,A[c][S]=d,A[c][T]=h,A[l]={},A[l][y]=c,A[l][g]=l,A[l][m]=p,A[l][v]=l,A[l][C]=f,A[l][E]=l,A[l][S]=d,A[l][T]=h,A[p]={},A[p][y]=p,A[p][g]=p,A[p][m]=p,A[p][v]=p,A[p][C]=p,A[p][E]=p,A[p][S]=d,A[p][T]=h,A[f]={},A[f][y]=f,A[f][g]=f,A[f][m]=f,A[f][v]=f,A[f][C]=f,A[f][E]=f,A[f][S]=d,A[f][T]=h,A[d]={},A[d][y]=d,A[d][g]=d,A[d][m]=d,A[d][v]=d,A[d][C]=d,A[d][E]=d,A[d][S]=d,A[d][T]=h,A[h]={},A[h][y]=h,A[h][g]=h,A[h][m]=h,A[h][v]=h,A[h][C]=h,A[h][E]=h,A[h][S]=h,A[h][T]=h;var I=function(i){this.id=-1,this.name=i.name||s,this.parent=i.parent||null,this.run=i.run,this.subtasks=[],this.error=!1,this.state=c,this.blocks=0,this.timeoutId=null,this.swapTime=null,this.userData=null,this.id=a++,n[this.id]=this,r>=1&&e.log.verbose(t,"[%s][%s] init",this.id,this.name,this)};I.prototype.debug=function(r){r=r||"",e.log.debug(t,r,"[%s][%s] task:",this.id,this.name,this,"subtasks:",this.subtasks.length,"queue:",i)},I.prototype.next=function(e,t){"function"==typeof e&&(t=e,e=this.name);var r=new I({run:t,name:e,parent:this});return r.state=l,r.type=this.type,r.successCallback=this.successCallback||null,r.failureCallback=this.failureCallback||null,this.subtasks.push(r),this},I.prototype.parallel=function(t,r){return e.util.isArray(t)&&(r=t,t=this.name),this.next(t,function(n){var a=n;a.block(r.length);for(var i=function(t,n){e.task.start({type:t,run:function(e){r[n](e)},success:function(e){a.unblock()},failure:function(e){a.unblock()}})},s=0;s<r.length;s++){var o=t+"__parallel-"+n.id+"-"+s,u=s;i(o,u)}})},I.prototype.stop=function(){this.state=A[this.state][y]},I.prototype.start=function(){this.error=!1,this.state=A[this.state][g],this.state===l&&(this.start=new Date,this.run(this),B(this,0))},I.prototype.block=function(e){e="undefined"==typeof e?1:e,this.blocks+=e,this.blocks>0&&(this.state=A[this.state][m])},I.prototype.unblock=function(e){return e="undefined"==typeof e?1:e,this.blocks-=e,0===this.blocks&&this.state!==d&&(this.state=l,B(this,0)),this.blocks},I.prototype.sleep=function(e){e="undefined"==typeof e?0:e,this.state=A[this.state][C];var t=this;this.timeoutId=setTimeout(function(){t.timeoutId=null,t.state=l,B(t,0)},e)},I.prototype.wait=function(e){e.wait(this)},I.prototype.wakeup=function(){this.state===f&&(cancelTimeout(this.timeoutId),this.timeoutId=null,this.state=l,B(this,0))},I.prototype.cancel=function(){this.state=A[this.state][S],this.permitsNeeded=0,null!==this.timeoutId&&(cancelTimeout(this.timeoutId),this.timeoutId=null),this.subtasks=[]},I.prototype.fail=function(e){if(this.error=!0,k(this,!0),e)e.error=this.error,e.swapTime=this.swapTime,e.userData=this.userData,B(e,0);else{if(null!==this.parent){for(var t=this.parent;null!==t.parent;)t.error=this.error,t.swapTime=this.swapTime,t.userData=this.userData,t=t.parent;k(t,!0)}this.failureCallback&&this.failureCallback(this)}};var b=function(e){e.error=!1,e.state=A[e.state][g],setTimeout(function(){e.state===l&&(e.swapTime=+new Date,e.run(e),B(e,0))},0)},B=function(e,t){var r=t>o||+new Date-e.swapTime>u,n=function(t){if(t++,e.state===l)if(r&&(e.swapTime=+new Date),e.subtasks.length>0){var n=e.subtasks.shift();n.error=e.error,n.swapTime=e.swapTime,n.userData=e.userData,n.run(n),n.error||B(n,t)}else k(e),e.error||null!==e.parent&&(e.parent.error=e.error,e.parent.swapTime=e.swapTime,e.parent.userData=e.userData,B(e.parent,t))};r?setTimeout(n,0):n(t)},k=function(a,s){a.state=d,delete n[a.id],r>=1&&e.log.verbose(t,"[%s][%s] finish",a.id,a.name,a),null===a.parent&&(a.type in i?0===i[a.type].length?e.log.error(t,"[%s][%s] task queue empty [%s]",a.id,a.name,a.type):i[a.type][0]!==a?e.log.error(t,"[%s][%s] task not first in queue [%s]",a.id,a.name,a.type):(i[a.type].shift(),0===i[a.type].length?(r>=1&&e.log.verbose(t,"[%s][%s] delete queue [%s]",a.id,a.name,a.type),delete i[a.type]):(r>=1&&e.log.verbose(t,"[%s][%s] queue start next [%s] remain:%s",a.id,a.name,a.type,i[a.type].length),i[a.type][0].start())):e.log.error(t,"[%s][%s] task queue missing [%s]",a.id,a.name,a.type),s||(a.error&&a.failureCallback?a.failureCallback(a):!a.error&&a.successCallback&&a.successCallback(a)))};e.task=e.task||{},e.task.start=function(n){var a=new I({run:n.run,name:n.name||s});a.type=n.type,a.successCallback=n.success||null,a.failureCallback=n.failure||null,a.type in i?i[n.type].push(a):(r>=1&&e.log.verbose(t,"[%s][%s] create queue [%s]",a.id,a.name,a.type),i[a.type]=[a],b(a))},e.task.cancel=function(e){e in i&&(i[e]=[i[e][0]])},e.task.createCondition=function(){var e={tasks:{}};return e.wait=function(t){t.id in e.tasks||(t.block(),e.tasks[t.id]=t)},e.notify=function(){var t=e.tasks;e.tasks={};for(var r in t)t[r].unblock()},e}}var n="task";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return"undefined"==typeof forge&&(forge={}),e(forge);var a=!0;r=function(e,r){r(t,module)}}var i,s=function(t,r){r.exports=function(r){var a=i.map(function(e){return t(e)}).concat(e);if(r=r||{},r.defined=r.defined||{},r.defined[n])return r[n];r.defined[n]=!0;for(var s=0;s<a.length;++s)a[s](r);return r[n]}},o=r;(r=function(e,t){return i="string"==typeof e?t.slice(2):e.slice(2),a?(delete r,o.apply(null,Array.prototype.slice.call(arguments,0))):(r=o,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/task",["require","module","./debug","./log","./util"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){var e="forge";if("function"!=typeof r){if("object"!=typeof module||!module.exports)return void("undefined"==typeof forge&&(forge={disableNativeCode:!1}));var n=!0;r=function(e,r){r(t,module)}}var a,i=function(t,r){r.exports=function(r){var n=a.map(function(e){return t(e)});if(r=r||{},r.defined=r.defined||{},r.defined[e])return r[e];r.defined[e]=!0;for(var i=0;i<n.length;++i)n[i](r);return r},r.exports.disableNativeCode=!1,r.exports(r.exports)},s=r;(r=function(e,t){return a="string"==typeof e?t.slice(2):e.slice(2),n?(delete r,s.apply(null,Array.prototype.slice.call(arguments,0))):(r=s,r.apply(null,Array.prototype.slice.call(arguments,0)))})("js/forge",["require","module","./aes","./aesCipherSuites","./asn1","./cipher","./cipherModes","./debug","./des","./hmac","./kem","./log","./md","./mgf1","./pbkdf2","./pem","./pkcs7","./pkcs1","./pkcs12","./pki","./prime","./prng","./pss","./random","./rc2","./ssh","./task","./tls","./util"],function(){i.apply(null,Array.prototype.slice.call(arguments,0))})}(),t("js/forge")});
(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (global){
//     Backbone.js 1.3.3

//     (c) 2010-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Backbone may be freely distributed under the MIT license.
//     For all details and documentation:
//     http://backbonejs.org

(function(factory) {

  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.
  // We use `self` instead of `window` for `WebWorker` support.
  var root = (typeof self == 'object' && self.self === self && self) ||
            (typeof global == 'object' && global.global === global && global);

  // Set up Backbone appropriately for the environment. Start with AMD.
  if (typeof define === 'function' && define.amd) {
    define(['underscore', 'jquery', 'exports'], function(_, $, exports) {
      // Export global even in AMD case in case this script is loaded with
      // others that may still expect a global Backbone.
      root.Backbone = factory(root, exports, _, $);
    });

  // Next for Node.js or CommonJS. jQuery may not be needed as a module.
  } else if (typeof exports !== 'undefined') {
    var _ = require('underscore'), $;
    try { $ = require('jquery'); } catch (e) {}
    factory(root, exports, _, $);

  // Finally, as a browser global.
  } else {
    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));
  }

})(function(root, Backbone, _, $) {

  // Initial Setup
  // -------------

  // Save the previous value of the `Backbone` variable, so that it can be
  // restored later on, if `noConflict` is used.
  var previousBackbone = root.Backbone;

  // Create a local reference to a common array method we'll want to use later.
  var slice = Array.prototype.slice;

  // Current version of the library. Keep in sync with `package.json`.
  Backbone.VERSION = '1.3.3';

  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns
  // the `$` variable.
  Backbone.$ = $;

  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable
  // to its previous owner. Returns a reference to this Backbone object.
  Backbone.noConflict = function() {
    root.Backbone = previousBackbone;
    return this;
  };

  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option
  // will fake `"PATCH"`, `"PUT"` and `"DELETE"` requests via the `_method` parameter and
  // set a `X-Http-Method-Override` header.
  Backbone.emulateHTTP = false;

  // Turn on `emulateJSON` to support legacy servers that can't deal with direct
  // `application/json` requests ... this will encode the body as
  // `application/x-www-form-urlencoded` instead and will send the model in a
  // form param named `model`.
  Backbone.emulateJSON = false;

  // Proxy Backbone class methods to Underscore functions, wrapping the model's
  // `attributes` object or collection's `models` array behind the scenes.
  //
  // collection.filter(function(model) { return model.get('age') > 10 });
  // collection.each(this.addView);
  //
  // `Function#apply` can be slow so we use the method's arg count, if we know it.
  var addMethod = function(length, method, attribute) {
    switch (length) {
      case 1: return function() {
        return _[method](this[attribute]);
      };
      case 2: return function(value) {
        return _[method](this[attribute], value);
      };
      case 3: return function(iteratee, context) {
        return _[method](this[attribute], cb(iteratee, this), context);
      };
      case 4: return function(iteratee, defaultVal, context) {
        return _[method](this[attribute], cb(iteratee, this), defaultVal, context);
      };
      default: return function() {
        var args = slice.call(arguments);
        args.unshift(this[attribute]);
        return _[method].apply(_, args);
      };
    }
  };
  var addUnderscoreMethods = function(Class, methods, attribute) {
    _.each(methods, function(length, method) {
      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);
    });
  };

  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.
  var cb = function(iteratee, instance) {
    if (_.isFunction(iteratee)) return iteratee;
    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);
    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };
    return iteratee;
  };
  var modelMatcher = function(attrs) {
    var matcher = _.matches(attrs);
    return function(model) {
      return matcher(model.attributes);
    };
  };

  // Backbone.Events
  // ---------------

  // A module that can be mixed in to *any object* in order to provide it with
  // a custom event channel. You may bind a callback to an event with `on` or
  // remove with `off`; `trigger`-ing an event fires all callbacks in
  // succession.
  //
  //     var object = {};
  //     _.extend(object, Backbone.Events);
  //     object.on('expand', function(){ alert('expanded'); });
  //     object.trigger('expand');
  //
  var Events = Backbone.Events = {};

  // Regular expression used to split event strings.
  var eventSplitter = /\s+/;

  // Iterates over the standard `event, callback` (as well as the fancy multiple
  // space-separated events `"change blur", callback` and jQuery-style event
  // maps `{event: callback}`).
  var eventsApi = function(iteratee, events, name, callback, opts) {
    var i = 0, names;
    if (name && typeof name === 'object') {
      // Handle event maps.
      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;
      for (names = _.keys(name); i < names.length ; i++) {
        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);
      }
    } else if (name && eventSplitter.test(name)) {
      // Handle space-separated event names by delegating them individually.
      for (names = name.split(eventSplitter); i < names.length; i++) {
        events = iteratee(events, names[i], callback, opts);
      }
    } else {
      // Finally, standard events.
      events = iteratee(events, name, callback, opts);
    }
    return events;
  };

  // Bind an event to a `callback` function. Passing `"all"` will bind
  // the callback to all events fired.
  Events.on = function(name, callback, context) {
    return internalOn(this, name, callback, context);
  };

  // Guard the `listening` argument from the public API.
  var internalOn = function(obj, name, callback, context, listening) {
    obj._events = eventsApi(onApi, obj._events || {}, name, callback, {
      context: context,
      ctx: obj,
      listening: listening
    });

    if (listening) {
      var listeners = obj._listeners || (obj._listeners = {});
      listeners[listening.id] = listening;
    }

    return obj;
  };

  // Inversion-of-control versions of `on`. Tell *this* object to listen to
  // an event in another object... keeping track of what it's listening to
  // for easier unbinding later.
  Events.listenTo = function(obj, name, callback) {
    if (!obj) return this;
    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));
    var listeningTo = this._listeningTo || (this._listeningTo = {});
    var listening = listeningTo[id];

    // This object is not listening to any other events on `obj` yet.
    // Setup the necessary references to track the listening callbacks.
    if (!listening) {
      var thisId = this._listenId || (this._listenId = _.uniqueId('l'));
      listening = listeningTo[id] = {obj: obj, objId: id, id: thisId, listeningTo: listeningTo, count: 0};
    }

    // Bind callbacks on obj, and keep track of them on listening.
    internalOn(obj, name, callback, this, listening);
    return this;
  };

  // The reducing API that adds a callback to the `events` object.
  var onApi = function(events, name, callback, options) {
    if (callback) {
      var handlers = events[name] || (events[name] = []);
      var context = options.context, ctx = options.ctx, listening = options.listening;
      if (listening) listening.count++;

      handlers.push({callback: callback, context: context, ctx: context || ctx, listening: listening});
    }
    return events;
  };

  // Remove one or many callbacks. If `context` is null, removes all
  // callbacks with that function. If `callback` is null, removes all
  // callbacks for the event. If `name` is null, removes all bound
  // callbacks for all events.
  Events.off = function(name, callback, context) {
    if (!this._events) return this;
    this._events = eventsApi(offApi, this._events, name, callback, {
      context: context,
      listeners: this._listeners
    });
    return this;
  };

  // Tell this object to stop listening to either specific events ... or
  // to every object it's currently listening to.
  Events.stopListening = function(obj, name, callback) {
    var listeningTo = this._listeningTo;
    if (!listeningTo) return this;

    var ids = obj ? [obj._listenId] : _.keys(listeningTo);

    for (var i = 0; i < ids.length; i++) {
      var listening = listeningTo[ids[i]];

      // If listening doesn't exist, this object is not currently
      // listening to obj. Break out early.
      if (!listening) break;

      listening.obj.off(name, callback, this);
    }

    return this;
  };

  // The reducing API that removes a callback from the `events` object.
  var offApi = function(events, name, callback, options) {
    if (!events) return;

    var i = 0, listening;
    var context = options.context, listeners = options.listeners;

    // Delete all events listeners and "drop" events.
    if (!name && !callback && !context) {
      var ids = _.keys(listeners);
      for (; i < ids.length; i++) {
        listening = listeners[ids[i]];
        delete listeners[listening.id];
        delete listening.listeningTo[listening.objId];
      }
      return;
    }

    var names = name ? [name] : _.keys(events);
    for (; i < names.length; i++) {
      name = names[i];
      var handlers = events[name];

      // Bail out if there are no events stored.
      if (!handlers) break;

      // Replace events if there are any remaining.  Otherwise, clean up.
      var remaining = [];
      for (var j = 0; j < handlers.length; j++) {
        var handler = handlers[j];
        if (
          callback && callback !== handler.callback &&
            callback !== handler.callback._callback ||
              context && context !== handler.context
        ) {
          remaining.push(handler);
        } else {
          listening = handler.listening;
          if (listening && --listening.count === 0) {
            delete listeners[listening.id];
            delete listening.listeningTo[listening.objId];
          }
        }
      }

      // Update tail event if the list has any events.  Otherwise, clean up.
      if (remaining.length) {
        events[name] = remaining;
      } else {
        delete events[name];
      }
    }
    return events;
  };

  // Bind an event to only be triggered a single time. After the first time
  // the callback is invoked, its listener will be removed. If multiple events
  // are passed in using the space-separated syntax, the handler will fire
  // once for each event, not once for a combination of all events.
  Events.once = function(name, callback, context) {
    // Map the event into a `{event: once}` object.
    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));
    if (typeof name === 'string' && context == null) callback = void 0;
    return this.on(events, callback, context);
  };

  // Inversion-of-control versions of `once`.
  Events.listenToOnce = function(obj, name, callback) {
    // Map the event into a `{event: once}` object.
    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));
    return this.listenTo(obj, events);
  };

  // Reduces the event callbacks into a map of `{event: onceWrapper}`.
  // `offer` unbinds the `onceWrapper` after it has been called.
  var onceMap = function(map, name, callback, offer) {
    if (callback) {
      var once = map[name] = _.once(function() {
        offer(name, once);
        callback.apply(this, arguments);
      });
      once._callback = callback;
    }
    return map;
  };

  // Trigger one or many events, firing all bound callbacks. Callbacks are
  // passed the same arguments as `trigger` is, apart from the event name
  // (unless you're listening on `"all"`, which will cause your callback to
  // receive the true name of the event as the first argument).
  Events.trigger = function(name) {
    if (!this._events) return this;

    var length = Math.max(0, arguments.length - 1);
    var args = Array(length);
    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];

    eventsApi(triggerApi, this._events, name, void 0, args);
    return this;
  };

  // Handles triggering the appropriate event callbacks.
  var triggerApi = function(objEvents, name, callback, args) {
    if (objEvents) {
      var events = objEvents[name];
      var allEvents = objEvents.all;
      if (events && allEvents) allEvents = allEvents.slice();
      if (events) triggerEvents(events, args);
      if (allEvents) triggerEvents(allEvents, [name].concat(args));
    }
    return objEvents;
  };

  // A difficult-to-believe, but optimized internal dispatch function for
  // triggering events. Tries to keep the usual cases speedy (most internal
  // Backbone events have 3 arguments).
  var triggerEvents = function(events, args) {
    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];
    switch (args.length) {
      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;
      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;
      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;
      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;
      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;
    }
  };

  // Aliases for backwards compatibility.
  Events.bind   = Events.on;
  Events.unbind = Events.off;

  // Allow the `Backbone` object to serve as a global event bus, for folks who
  // want global "pubsub" in a convenient place.
  _.extend(Backbone, Events);

  // Backbone.Model
  // --------------

  // Backbone **Models** are the basic data object in the framework --
  // frequently representing a row in a table in a database on your server.
  // A discrete chunk of data and a bunch of useful, related methods for
  // performing computations and transformations on that data.

  // Create a new model with the specified attributes. A client id (`cid`)
  // is automatically generated and assigned for you.
  var Model = Backbone.Model = function(attributes, options) {
    var attrs = attributes || {};
    options || (options = {});
    this.cid = _.uniqueId(this.cidPrefix);
    this.attributes = {};
    if (options.collection) this.collection = options.collection;
    if (options.parse) attrs = this.parse(attrs, options) || {};
    var defaults = _.result(this, 'defaults');
    attrs = _.defaults(_.extend({}, defaults, attrs), defaults);
    this.set(attrs, options);
    this.changed = {};
    this.initialize.apply(this, arguments);
  };

  // Attach all inheritable methods to the Model prototype.
  _.extend(Model.prototype, Events, {

    // A hash of attributes whose current and previous value differ.
    changed: null,

    // The value returned during the last failed validation.
    validationError: null,

    // The default name for the JSON `id` attribute is `"id"`. MongoDB and
    // CouchDB users may want to set this to `"_id"`.
    idAttribute: 'id',

    // The prefix is used to create the client id which is used to identify models locally.
    // You may want to override this if you're experiencing name clashes with model ids.
    cidPrefix: 'c',

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // Return a copy of the model's `attributes` object.
    toJSON: function(options) {
      return _.clone(this.attributes);
    },

    // Proxy `Backbone.sync` by default -- but override this if you need
    // custom syncing semantics for *this* particular model.
    sync: function() {
      return Backbone.sync.apply(this, arguments);
    },

    // Get the value of an attribute.
    get: function(attr) {
      return this.attributes[attr];
    },

    // Get the HTML-escaped value of an attribute.
    escape: function(attr) {
      return _.escape(this.get(attr));
    },

    // Returns `true` if the attribute contains a value that is not null
    // or undefined.
    has: function(attr) {
      return this.get(attr) != null;
    },

    // Special-cased proxy to underscore's `_.matches` method.
    matches: function(attrs) {
      return !!_.iteratee(attrs, this)(this.attributes);
    },

    // Set a hash of model attributes on the object, firing `"change"`. This is
    // the core primitive operation of a model, updating the data and notifying
    // anyone who needs to know about the change in state. The heart of the beast.
    set: function(key, val, options) {
      if (key == null) return this;

      // Handle both `"key", value` and `{key: value}` -style arguments.
      var attrs;
      if (typeof key === 'object') {
        attrs = key;
        options = val;
      } else {
        (attrs = {})[key] = val;
      }

      options || (options = {});

      // Run validation.
      if (!this._validate(attrs, options)) return false;

      // Extract attributes and options.
      var unset      = options.unset;
      var silent     = options.silent;
      var changes    = [];
      var changing   = this._changing;
      this._changing = true;

      if (!changing) {
        this._previousAttributes = _.clone(this.attributes);
        this.changed = {};
      }

      var current = this.attributes;
      var changed = this.changed;
      var prev    = this._previousAttributes;

      // For each `set` attribute, update or delete the current value.
      for (var attr in attrs) {
        val = attrs[attr];
        if (!_.isEqual(current[attr], val)) changes.push(attr);
        if (!_.isEqual(prev[attr], val)) {
          changed[attr] = val;
        } else {
          delete changed[attr];
        }
        unset ? delete current[attr] : current[attr] = val;
      }

      // Update the `id`.
      if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);

      // Trigger all relevant attribute changes.
      if (!silent) {
        if (changes.length) this._pending = options;
        for (var i = 0; i < changes.length; i++) {
          this.trigger('change:' + changes[i], this, current[changes[i]], options);
        }
      }

      // You might be wondering why there's a `while` loop here. Changes can
      // be recursively nested within `"change"` events.
      if (changing) return this;
      if (!silent) {
        while (this._pending) {
          options = this._pending;
          this._pending = false;
          this.trigger('change', this, options);
        }
      }
      this._pending = false;
      this._changing = false;
      return this;
    },

    // Remove an attribute from the model, firing `"change"`. `unset` is a noop
    // if the attribute doesn't exist.
    unset: function(attr, options) {
      return this.set(attr, void 0, _.extend({}, options, {unset: true}));
    },

    // Clear all attributes on the model, firing `"change"`.
    clear: function(options) {
      var attrs = {};
      for (var key in this.attributes) attrs[key] = void 0;
      return this.set(attrs, _.extend({}, options, {unset: true}));
    },

    // Determine if the model has changed since the last `"change"` event.
    // If you specify an attribute name, determine if that attribute has changed.
    hasChanged: function(attr) {
      if (attr == null) return !_.isEmpty(this.changed);
      return _.has(this.changed, attr);
    },

    // Return an object containing all the attributes that have changed, or
    // false if there are no changed attributes. Useful for determining what
    // parts of a view need to be updated and/or what attributes need to be
    // persisted to the server. Unset attributes will be set to undefined.
    // You can also pass an attributes object to diff against the model,
    // determining if there *would be* a change.
    changedAttributes: function(diff) {
      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;
      var old = this._changing ? this._previousAttributes : this.attributes;
      var changed = {};
      for (var attr in diff) {
        var val = diff[attr];
        if (_.isEqual(old[attr], val)) continue;
        changed[attr] = val;
      }
      return _.size(changed) ? changed : false;
    },

    // Get the previous value of an attribute, recorded at the time the last
    // `"change"` event was fired.
    previous: function(attr) {
      if (attr == null || !this._previousAttributes) return null;
      return this._previousAttributes[attr];
    },

    // Get all of the attributes of the model at the time of the previous
    // `"change"` event.
    previousAttributes: function() {
      return _.clone(this._previousAttributes);
    },

    // Fetch the model from the server, merging the response with the model's
    // local attributes. Any changed attributes will trigger a "change" event.
    fetch: function(options) {
      options = _.extend({parse: true}, options);
      var model = this;
      var success = options.success;
      options.success = function(resp) {
        var serverAttrs = options.parse ? model.parse(resp, options) : resp;
        if (!model.set(serverAttrs, options)) return false;
        if (success) success.call(options.context, model, resp, options);
        model.trigger('sync', model, resp, options);
      };
      wrapError(this, options);
      return this.sync('read', this, options);
    },

    // Set a hash of model attributes, and sync the model to the server.
    // If the server returns an attributes hash that differs, the model's
    // state will be `set` again.
    save: function(key, val, options) {
      // Handle both `"key", value` and `{key: value}` -style arguments.
      var attrs;
      if (key == null || typeof key === 'object') {
        attrs = key;
        options = val;
      } else {
        (attrs = {})[key] = val;
      }

      options = _.extend({validate: true, parse: true}, options);
      var wait = options.wait;

      // If we're not waiting and attributes exist, save acts as
      // `set(attr).save(null, opts)` with validation. Otherwise, check if
      // the model will be valid when the attributes, if any, are set.
      if (attrs && !wait) {
        if (!this.set(attrs, options)) return false;
      } else if (!this._validate(attrs, options)) {
        return false;
      }

      // After a successful server-side save, the client is (optionally)
      // updated with the server-side state.
      var model = this;
      var success = options.success;
      var attributes = this.attributes;
      options.success = function(resp) {
        // Ensure attributes are restored during synchronous saves.
        model.attributes = attributes;
        var serverAttrs = options.parse ? model.parse(resp, options) : resp;
        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);
        if (serverAttrs && !model.set(serverAttrs, options)) return false;
        if (success) success.call(options.context, model, resp, options);
        model.trigger('sync', model, resp, options);
      };
      wrapError(this, options);

      // Set temporary attributes if `{wait: true}` to properly find new ids.
      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);

      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');
      if (method === 'patch' && !options.attrs) options.attrs = attrs;
      var xhr = this.sync(method, this, options);

      // Restore attributes.
      this.attributes = attributes;

      return xhr;
    },

    // Destroy this model on the server if it was already persisted.
    // Optimistically removes the model from its collection, if it has one.
    // If `wait: true` is passed, waits for the server to respond before removal.
    destroy: function(options) {
      options = options ? _.clone(options) : {};
      var model = this;
      var success = options.success;
      var wait = options.wait;

      var destroy = function() {
        model.stopListening();
        model.trigger('destroy', model, model.collection, options);
      };

      options.success = function(resp) {
        if (wait) destroy();
        if (success) success.call(options.context, model, resp, options);
        if (!model.isNew()) model.trigger('sync', model, resp, options);
      };

      var xhr = false;
      if (this.isNew()) {
        _.defer(options.success);
      } else {
        wrapError(this, options);
        xhr = this.sync('delete', this, options);
      }
      if (!wait) destroy();
      return xhr;
    },

    // Default URL for the model's representation on the server -- if you're
    // using Backbone's restful methods, override this to change the endpoint
    // that will be called.
    url: function() {
      var base =
        _.result(this, 'urlRoot') ||
        _.result(this.collection, 'url') ||
        urlError();
      if (this.isNew()) return base;
      var id = this.get(this.idAttribute);
      return base.replace(/[^\/]$/, '$&/') + encodeURIComponent(id);
    },

    // **parse** converts a response into the hash of attributes to be `set` on
    // the model. The default implementation is just to pass the response along.
    parse: function(resp, options) {
      return resp;
    },

    // Create a new model with identical attributes to this one.
    clone: function() {
      return new this.constructor(this.attributes);
    },

    // A model is new if it has never been saved to the server, and lacks an id.
    isNew: function() {
      return !this.has(this.idAttribute);
    },

    // Check if the model is currently in a valid state.
    isValid: function(options) {
      return this._validate({}, _.extend({}, options, {validate: true}));
    },

    // Run validation against the next complete set of model attributes,
    // returning `true` if all is well. Otherwise, fire an `"invalid"` event.
    _validate: function(attrs, options) {
      if (!options.validate || !this.validate) return true;
      attrs = _.extend({}, this.attributes, attrs);
      var error = this.validationError = this.validate(attrs, options) || null;
      if (!error) return true;
      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));
      return false;
    }

  });

  // Underscore methods that we want to implement on the Model, mapped to the
  // number of arguments they take.
  var modelMethods = {keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,
      omit: 0, chain: 1, isEmpty: 1};

  // Mix in each Underscore method as a proxy to `Model#attributes`.
  addUnderscoreMethods(Model, modelMethods, 'attributes');

  // Backbone.Collection
  // -------------------

  // If models tend to represent a single row of data, a Backbone Collection is
  // more analogous to a table full of data ... or a small slice or page of that
  // table, or a collection of rows that belong together for a particular reason
  // -- all of the messages in this particular folder, all of the documents
  // belonging to this particular author, and so on. Collections maintain
  // indexes of their models, both in order, and for lookup by `id`.

  // Create a new **Collection**, perhaps to contain a specific type of `model`.
  // If a `comparator` is specified, the Collection will maintain
  // its models in sort order, as they're added and removed.
  var Collection = Backbone.Collection = function(models, options) {
    options || (options = {});
    if (options.model) this.model = options.model;
    if (options.comparator !== void 0) this.comparator = options.comparator;
    this._reset();
    this.initialize.apply(this, arguments);
    if (models) this.reset(models, _.extend({silent: true}, options));
  };

  // Default options for `Collection#set`.
  var setOptions = {add: true, remove: true, merge: true};
  var addOptions = {add: true, remove: false};

  // Splices `insert` into `array` at index `at`.
  var splice = function(array, insert, at) {
    at = Math.min(Math.max(at, 0), array.length);
    var tail = Array(array.length - at);
    var length = insert.length;
    var i;
    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];
    for (i = 0; i < length; i++) array[i + at] = insert[i];
    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];
  };

  // Define the Collection's inheritable methods.
  _.extend(Collection.prototype, Events, {

    // The default model for a collection is just a **Backbone.Model**.
    // This should be overridden in most cases.
    model: Model,

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // The JSON representation of a Collection is an array of the
    // models' attributes.
    toJSON: function(options) {
      return this.map(function(model) { return model.toJSON(options); });
    },

    // Proxy `Backbone.sync` by default.
    sync: function() {
      return Backbone.sync.apply(this, arguments);
    },

    // Add a model, or list of models to the set. `models` may be Backbone
    // Models or raw JavaScript objects to be converted to Models, or any
    // combination of the two.
    add: function(models, options) {
      return this.set(models, _.extend({merge: false}, options, addOptions));
    },

    // Remove a model, or a list of models from the set.
    remove: function(models, options) {
      options = _.extend({}, options);
      var singular = !_.isArray(models);
      models = singular ? [models] : models.slice();
      var removed = this._removeModels(models, options);
      if (!options.silent && removed.length) {
        options.changes = {added: [], merged: [], removed: removed};
        this.trigger('update', this, options);
      }
      return singular ? removed[0] : removed;
    },

    // Update a collection by `set`-ing a new list of models, adding new ones,
    // removing models that are no longer present, and merging models that
    // already exist in the collection, as necessary. Similar to **Model#set**,
    // the core operation for updating the data contained by the collection.
    set: function(models, options) {
      if (models == null) return;

      options = _.extend({}, setOptions, options);
      if (options.parse && !this._isModel(models)) {
        models = this.parse(models, options) || [];
      }

      var singular = !_.isArray(models);
      models = singular ? [models] : models.slice();

      var at = options.at;
      if (at != null) at = +at;
      if (at > this.length) at = this.length;
      if (at < 0) at += this.length + 1;

      var set = [];
      var toAdd = [];
      var toMerge = [];
      var toRemove = [];
      var modelMap = {};

      var add = options.add;
      var merge = options.merge;
      var remove = options.remove;

      var sort = false;
      var sortable = this.comparator && at == null && options.sort !== false;
      var sortAttr = _.isString(this.comparator) ? this.comparator : null;

      // Turn bare objects into model references, and prevent invalid models
      // from being added.
      var model, i;
      for (i = 0; i < models.length; i++) {
        model = models[i];

        // If a duplicate is found, prevent it from being added and
        // optionally merge it into the existing model.
        var existing = this.get(model);
        if (existing) {
          if (merge && model !== existing) {
            var attrs = this._isModel(model) ? model.attributes : model;
            if (options.parse) attrs = existing.parse(attrs, options);
            existing.set(attrs, options);
            toMerge.push(existing);
            if (sortable && !sort) sort = existing.hasChanged(sortAttr);
          }
          if (!modelMap[existing.cid]) {
            modelMap[existing.cid] = true;
            set.push(existing);
          }
          models[i] = existing;

        // If this is a new, valid model, push it to the `toAdd` list.
        } else if (add) {
          model = models[i] = this._prepareModel(model, options);
          if (model) {
            toAdd.push(model);
            this._addReference(model, options);
            modelMap[model.cid] = true;
            set.push(model);
          }
        }
      }

      // Remove stale models.
      if (remove) {
        for (i = 0; i < this.length; i++) {
          model = this.models[i];
          if (!modelMap[model.cid]) toRemove.push(model);
        }
        if (toRemove.length) this._removeModels(toRemove, options);
      }

      // See if sorting is needed, update `length` and splice in new models.
      var orderChanged = false;
      var replace = !sortable && add && remove;
      if (set.length && replace) {
        orderChanged = this.length !== set.length || _.some(this.models, function(m, index) {
          return m !== set[index];
        });
        this.models.length = 0;
        splice(this.models, set, 0);
        this.length = this.models.length;
      } else if (toAdd.length) {
        if (sortable) sort = true;
        splice(this.models, toAdd, at == null ? this.length : at);
        this.length = this.models.length;
      }

      // Silently sort the collection if appropriate.
      if (sort) this.sort({silent: true});

      // Unless silenced, it's time to fire all appropriate add/sort/update events.
      if (!options.silent) {
        for (i = 0; i < toAdd.length; i++) {
          if (at != null) options.index = at + i;
          model = toAdd[i];
          model.trigger('add', model, this, options);
        }
        if (sort || orderChanged) this.trigger('sort', this, options);
        if (toAdd.length || toRemove.length || toMerge.length) {
          options.changes = {
            added: toAdd,
            removed: toRemove,
            merged: toMerge
          };
          this.trigger('update', this, options);
        }
      }

      // Return the added (or merged) model (or models).
      return singular ? models[0] : models;
    },

    // When you have more items than you want to add or remove individually,
    // you can reset the entire set with a new list of models, without firing
    // any granular `add` or `remove` events. Fires `reset` when finished.
    // Useful for bulk operations and optimizations.
    reset: function(models, options) {
      options = options ? _.clone(options) : {};
      for (var i = 0; i < this.models.length; i++) {
        this._removeReference(this.models[i], options);
      }
      options.previousModels = this.models;
      this._reset();
      models = this.add(models, _.extend({silent: true}, options));
      if (!options.silent) this.trigger('reset', this, options);
      return models;
    },

    // Add a model to the end of the collection.
    push: function(model, options) {
      return this.add(model, _.extend({at: this.length}, options));
    },

    // Remove a model from the end of the collection.
    pop: function(options) {
      var model = this.at(this.length - 1);
      return this.remove(model, options);
    },

    // Add a model to the beginning of the collection.
    unshift: function(model, options) {
      return this.add(model, _.extend({at: 0}, options));
    },

    // Remove a model from the beginning of the collection.
    shift: function(options) {
      var model = this.at(0);
      return this.remove(model, options);
    },

    // Slice out a sub-array of models from the collection.
    slice: function() {
      return slice.apply(this.models, arguments);
    },

    // Get a model from the set by id, cid, model object with id or cid
    // properties, or an attributes object that is transformed through modelId.
    get: function(obj) {
      if (obj == null) return void 0;
      return this._byId[obj] ||
        this._byId[this.modelId(obj.attributes || obj)] ||
        obj.cid && this._byId[obj.cid];
    },

    // Returns `true` if the model is in the collection.
    has: function(obj) {
      return this.get(obj) != null;
    },

    // Get the model at the given index.
    at: function(index) {
      if (index < 0) index += this.length;
      return this.models[index];
    },

    // Return models with matching attributes. Useful for simple cases of
    // `filter`.
    where: function(attrs, first) {
      return this[first ? 'find' : 'filter'](attrs);
    },

    // Return the first model with matching attributes. Useful for simple cases
    // of `find`.
    findWhere: function(attrs) {
      return this.where(attrs, true);
    },

    // Force the collection to re-sort itself. You don't need to call this under
    // normal circumstances, as the set will maintain sort order as each item
    // is added.
    sort: function(options) {
      var comparator = this.comparator;
      if (!comparator) throw new Error('Cannot sort a set without a comparator');
      options || (options = {});

      var length = comparator.length;
      if (_.isFunction(comparator)) comparator = _.bind(comparator, this);

      // Run sort based on type of `comparator`.
      if (length === 1 || _.isString(comparator)) {
        this.models = this.sortBy(comparator);
      } else {
        this.models.sort(comparator);
      }
      if (!options.silent) this.trigger('sort', this, options);
      return this;
    },

    // Pluck an attribute from each model in the collection.
    pluck: function(attr) {
      return this.map(attr + '');
    },

    // Fetch the default set of models for this collection, resetting the
    // collection when they arrive. If `reset: true` is passed, the response
    // data will be passed through the `reset` method instead of `set`.
    fetch: function(options) {
      options = _.extend({parse: true}, options);
      var success = options.success;
      var collection = this;
      options.success = function(resp) {
        var method = options.reset ? 'reset' : 'set';
        collection[method](resp, options);
        if (success) success.call(options.context, collection, resp, options);
        collection.trigger('sync', collection, resp, options);
      };
      wrapError(this, options);
      return this.sync('read', this, options);
    },

    // Create a new instance of a model in this collection. Add the model to the
    // collection immediately, unless `wait: true` is passed, in which case we
    // wait for the server to agree.
    create: function(model, options) {
      options = options ? _.clone(options) : {};
      var wait = options.wait;
      model = this._prepareModel(model, options);
      if (!model) return false;
      if (!wait) this.add(model, options);
      var collection = this;
      var success = options.success;
      options.success = function(m, resp, callbackOpts) {
        if (wait) collection.add(m, callbackOpts);
        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);
      };
      model.save(null, options);
      return model;
    },

    // **parse** converts a response into a list of models to be added to the
    // collection. The default implementation is just to pass it through.
    parse: function(resp, options) {
      return resp;
    },

    // Create a new collection with an identical list of models as this one.
    clone: function() {
      return new this.constructor(this.models, {
        model: this.model,
        comparator: this.comparator
      });
    },

    // Define how to uniquely identify models in the collection.
    modelId: function(attrs) {
      return attrs[this.model.prototype.idAttribute || 'id'];
    },

    // Private method to reset all internal state. Called when the collection
    // is first initialized or reset.
    _reset: function() {
      this.length = 0;
      this.models = [];
      this._byId  = {};
    },

    // Prepare a hash of attributes (or other model) to be added to this
    // collection.
    _prepareModel: function(attrs, options) {
      if (this._isModel(attrs)) {
        if (!attrs.collection) attrs.collection = this;
        return attrs;
      }
      options = options ? _.clone(options) : {};
      options.collection = this;
      var model = new this.model(attrs, options);
      if (!model.validationError) return model;
      this.trigger('invalid', this, model.validationError, options);
      return false;
    },

    // Internal method called by both remove and set.
    _removeModels: function(models, options) {
      var removed = [];
      for (var i = 0; i < models.length; i++) {
        var model = this.get(models[i]);
        if (!model) continue;

        var index = this.indexOf(model);
        this.models.splice(index, 1);
        this.length--;

        // Remove references before triggering 'remove' event to prevent an
        // infinite loop. #3693
        delete this._byId[model.cid];
        var id = this.modelId(model.attributes);
        if (id != null) delete this._byId[id];

        if (!options.silent) {
          options.index = index;
          model.trigger('remove', model, this, options);
        }

        removed.push(model);
        this._removeReference(model, options);
      }
      return removed;
    },

    // Method for checking whether an object should be considered a model for
    // the purposes of adding to the collection.
    _isModel: function(model) {
      return model instanceof Model;
    },

    // Internal method to create a model's ties to a collection.
    _addReference: function(model, options) {
      this._byId[model.cid] = model;
      var id = this.modelId(model.attributes);
      if (id != null) this._byId[id] = model;
      model.on('all', this._onModelEvent, this);
    },

    // Internal method to sever a model's ties to a collection.
    _removeReference: function(model, options) {
      delete this._byId[model.cid];
      var id = this.modelId(model.attributes);
      if (id != null) delete this._byId[id];
      if (this === model.collection) delete model.collection;
      model.off('all', this._onModelEvent, this);
    },

    // Internal method called every time a model in the set fires an event.
    // Sets need to update their indexes when models change ids. All other
    // events simply proxy through. "add" and "remove" events that originate
    // in other collections are ignored.
    _onModelEvent: function(event, model, collection, options) {
      if (model) {
        if ((event === 'add' || event === 'remove') && collection !== this) return;
        if (event === 'destroy') this.remove(model, options);
        if (event === 'change') {
          var prevId = this.modelId(model.previousAttributes());
          var id = this.modelId(model.attributes);
          if (prevId !== id) {
            if (prevId != null) delete this._byId[prevId];
            if (id != null) this._byId[id] = model;
          }
        }
      }
      this.trigger.apply(this, arguments);
    }

  });

  // Underscore methods that we want to implement on the Collection.
  // 90% of the core usefulness of Backbone Collections is actually implemented
  // right here:
  var collectionMethods = {forEach: 3, each: 3, map: 3, collect: 3, reduce: 0,
      foldl: 0, inject: 0, reduceRight: 0, foldr: 0, find: 3, detect: 3, filter: 3,
      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,
      contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,
      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,
      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,
      isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,
      sortBy: 3, indexBy: 3, findIndex: 3, findLastIndex: 3};

  // Mix in each Underscore method as a proxy to `Collection#models`.
  addUnderscoreMethods(Collection, collectionMethods, 'models');

  // Backbone.View
  // -------------

  // Backbone Views are almost more convention than they are actual code. A View
  // is simply a JavaScript object that represents a logical chunk of UI in the
  // DOM. This might be a single item, an entire list, a sidebar or panel, or
  // even the surrounding frame which wraps your whole app. Defining a chunk of
  // UI as a **View** allows you to define your DOM events declaratively, without
  // having to worry about render order ... and makes it easy for the view to
  // react to specific changes in the state of your models.

  // Creating a Backbone.View creates its initial element outside of the DOM,
  // if an existing element is not provided...
  var View = Backbone.View = function(options) {
    this.cid = _.uniqueId('view');
    _.extend(this, _.pick(options, viewOptions));
    this._ensureElement();
    this.initialize.apply(this, arguments);
  };

  // Cached regex to split keys for `delegate`.
  var delegateEventSplitter = /^(\S+)\s*(.*)$/;

  // List of view options to be set as properties.
  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];

  // Set up all inheritable **Backbone.View** properties and methods.
  _.extend(View.prototype, Events, {

    // The default `tagName` of a View's element is `"div"`.
    tagName: 'div',

    // jQuery delegate for element lookup, scoped to DOM elements within the
    // current view. This should be preferred to global lookups where possible.
    $: function(selector) {
      return this.$el.find(selector);
    },

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // **render** is the core function that your view should override, in order
    // to populate its element (`this.el`), with the appropriate HTML. The
    // convention is for **render** to always return `this`.
    render: function() {
      return this;
    },

    // Remove this view by taking the element out of the DOM, and removing any
    // applicable Backbone.Events listeners.
    remove: function() {
      this._removeElement();
      this.stopListening();
      return this;
    },

    // Remove this view's element from the document and all event listeners
    // attached to it. Exposed for subclasses using an alternative DOM
    // manipulation API.
    _removeElement: function() {
      this.$el.remove();
    },

    // Change the view's element (`this.el` property) and re-delegate the
    // view's events on the new element.
    setElement: function(element) {
      this.undelegateEvents();
      this._setElement(element);
      this.delegateEvents();
      return this;
    },

    // Creates the `this.el` and `this.$el` references for this view using the
    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery
    // context or an element. Subclasses can override this to utilize an
    // alternative DOM manipulation API and are only required to set the
    // `this.el` property.
    _setElement: function(el) {
      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);
      this.el = this.$el[0];
    },

    // Set callbacks, where `this.events` is a hash of
    //
    // *{"event selector": "callback"}*
    //
    //     {
    //       'mousedown .title':  'edit',
    //       'click .button':     'save',
    //       'click .open':       function(e) { ... }
    //     }
    //
    // pairs. Callbacks will be bound to the view, with `this` set properly.
    // Uses event delegation for efficiency.
    // Omitting the selector binds the event to `this.el`.
    delegateEvents: function(events) {
      events || (events = _.result(this, 'events'));
      if (!events) return this;
      this.undelegateEvents();
      for (var key in events) {
        var method = events[key];
        if (!_.isFunction(method)) method = this[method];
        if (!method) continue;
        var match = key.match(delegateEventSplitter);
        this.delegate(match[1], match[2], _.bind(method, this));
      }
      return this;
    },

    // Add a single event listener to the view's element (or a child element
    // using `selector`). This only works for delegate-able events: not `focus`,
    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.
    delegate: function(eventName, selector, listener) {
      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);
      return this;
    },

    // Clears all callbacks previously bound to the view by `delegateEvents`.
    // You usually don't need to use this, but may wish to if you have multiple
    // Backbone views attached to the same DOM element.
    undelegateEvents: function() {
      if (this.$el) this.$el.off('.delegateEvents' + this.cid);
      return this;
    },

    // A finer-grained `undelegateEvents` for removing a single delegated event.
    // `selector` and `listener` are both optional.
    undelegate: function(eventName, selector, listener) {
      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);
      return this;
    },

    // Produces a DOM element to be assigned to your view. Exposed for
    // subclasses using an alternative DOM manipulation API.
    _createElement: function(tagName) {
      return document.createElement(tagName);
    },

    // Ensure that the View has a DOM element to render into.
    // If `this.el` is a string, pass it through `$()`, take the first
    // matching element, and re-assign it to `el`. Otherwise, create
    // an element from the `id`, `className` and `tagName` properties.
    _ensureElement: function() {
      if (!this.el) {
        var attrs = _.extend({}, _.result(this, 'attributes'));
        if (this.id) attrs.id = _.result(this, 'id');
        if (this.className) attrs['class'] = _.result(this, 'className');
        this.setElement(this._createElement(_.result(this, 'tagName')));
        this._setAttributes(attrs);
      } else {
        this.setElement(_.result(this, 'el'));
      }
    },

    // Set attributes from a hash on this view's element.  Exposed for
    // subclasses using an alternative DOM manipulation API.
    _setAttributes: function(attributes) {
      this.$el.attr(attributes);
    }

  });

  // Backbone.sync
  // -------------

  // Override this function to change the manner in which Backbone persists
  // models to the server. You will be passed the type of request, and the
  // model in question. By default, makes a RESTful Ajax request
  // to the model's `url()`. Some possible customizations could be:
  //
  // * Use `setTimeout` to batch rapid-fire updates into a single request.
  // * Send up the models as XML instead of JSON.
  // * Persist models via WebSockets instead of Ajax.
  //
  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests
  // as `POST`, with a `_method` parameter containing the true HTTP method,
  // as well as all requests with the body as `application/x-www-form-urlencoded`
  // instead of `application/json` with the model in a param named `model`.
  // Useful when interfacing with server-side languages like **PHP** that make
  // it difficult to read the body of `PUT` requests.
  Backbone.sync = function(method, model, options) {
    var type = methodMap[method];

    // Default options, unless specified.
    _.defaults(options || (options = {}), {
      emulateHTTP: Backbone.emulateHTTP,
      emulateJSON: Backbone.emulateJSON
    });

    // Default JSON-request options.
    var params = {type: type, dataType: 'json'};

    // Ensure that we have a URL.
    if (!options.url) {
      params.url = _.result(model, 'url') || urlError();
    }

    // Ensure that we have the appropriate request data.
    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {
      params.contentType = 'application/json';
      params.data = JSON.stringify(options.attrs || model.toJSON(options));
    }

    // For older servers, emulate JSON by encoding the request into an HTML-form.
    if (options.emulateJSON) {
      params.contentType = 'application/x-www-form-urlencoded';
      params.data = params.data ? {model: params.data} : {};
    }

    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`
    // And an `X-HTTP-Method-Override` header.
    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {
      params.type = 'POST';
      if (options.emulateJSON) params.data._method = type;
      var beforeSend = options.beforeSend;
      options.beforeSend = function(xhr) {
        xhr.setRequestHeader('X-HTTP-Method-Override', type);
        if (beforeSend) return beforeSend.apply(this, arguments);
      };
    }

    // Don't process data on a non-GET request.
    if (params.type !== 'GET' && !options.emulateJSON) {
      params.processData = false;
    }

    // Pass along `textStatus` and `errorThrown` from jQuery.
    var error = options.error;
    options.error = function(xhr, textStatus, errorThrown) {
      options.textStatus = textStatus;
      options.errorThrown = errorThrown;
      if (error) error.call(options.context, xhr, textStatus, errorThrown);
    };

    // Make the request, allowing the user to override any Ajax options.
    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));
    model.trigger('request', model, xhr, options);
    return xhr;
  };

  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.
  var methodMap = {
    'create': 'POST',
    'update': 'PUT',
    'patch': 'PATCH',
    'delete': 'DELETE',
    'read': 'GET'
  };

  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.
  // Override this if you'd like to use a different library.
  Backbone.ajax = function() {
    return Backbone.$.ajax.apply(Backbone.$, arguments);
  };

  // Backbone.Router
  // ---------------

  // Routers map faux-URLs to actions, and fire events when routes are
  // matched. Creating a new one sets its `routes` hash, if not set statically.
  var Router = Backbone.Router = function(options) {
    options || (options = {});
    if (options.routes) this.routes = options.routes;
    this._bindRoutes();
    this.initialize.apply(this, arguments);
  };

  // Cached regular expressions for matching named param parts and splatted
  // parts of route strings.
  var optionalParam = /\((.*?)\)/g;
  var namedParam    = /(\(\?)?:\w+/g;
  var splatParam    = /\*\w+/g;
  var escapeRegExp  = /[\-{}\[\]+?.,\\\^$|#\s]/g;

  // Set up all inheritable **Backbone.Router** properties and methods.
  _.extend(Router.prototype, Events, {

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // Manually bind a single named route to a callback. For example:
    //
    //     this.route('search/:query/p:num', 'search', function(query, num) {
    //       ...
    //     });
    //
    route: function(route, name, callback) {
      if (!_.isRegExp(route)) route = this._routeToRegExp(route);
      if (_.isFunction(name)) {
        callback = name;
        name = '';
      }
      if (!callback) callback = this[name];
      var router = this;
      Backbone.history.route(route, function(fragment) {
        var args = router._extractParameters(route, fragment);
        if (router.execute(callback, args, name) !== false) {
          router.trigger.apply(router, ['route:' + name].concat(args));
          router.trigger('route', name, args);
          Backbone.history.trigger('route', router, name, args);
        }
      });
      return this;
    },

    // Execute a route handler with the provided parameters.  This is an
    // excellent place to do pre-route setup or post-route cleanup.
    execute: function(callback, args, name) {
      if (callback) callback.apply(this, args);
    },

    // Simple proxy to `Backbone.history` to save a fragment into the history.
    navigate: function(fragment, options) {
      Backbone.history.navigate(fragment, options);
      return this;
    },

    // Bind all defined routes to `Backbone.history`. We have to reverse the
    // order of the routes here to support behavior where the most general
    // routes can be defined at the bottom of the route map.
    _bindRoutes: function() {
      if (!this.routes) return;
      this.routes = _.result(this, 'routes');
      var route, routes = _.keys(this.routes);
      while ((route = routes.pop()) != null) {
        this.route(route, this.routes[route]);
      }
    },

    // Convert a route string into a regular expression, suitable for matching
    // against the current location hash.
    _routeToRegExp: function(route) {
      route = route.replace(escapeRegExp, '\\$&')
                   .replace(optionalParam, '(?:$1)?')
                   .replace(namedParam, function(match, optional) {
                     return optional ? match : '([^/?]+)';
                   })
                   .replace(splatParam, '([^?]*?)');
      return new RegExp('^' + route + '(?:\\?([\\s\\S]*))?$');
    },

    // Given a route, and a URL fragment that it matches, return the array of
    // extracted decoded parameters. Empty or unmatched parameters will be
    // treated as `null` to normalize cross-browser behavior.
    _extractParameters: function(route, fragment) {
      var params = route.exec(fragment).slice(1);
      return _.map(params, function(param, i) {
        // Don't decode the search params.
        if (i === params.length - 1) return param || null;
        return param ? decodeURIComponent(param) : null;
      });
    }

  });

  // Backbone.History
  // ----------------

  // Handles cross-browser history management, based on either
  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or
  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)
  // and URL fragments. If the browser supports neither (old IE, natch),
  // falls back to polling.
  var History = Backbone.History = function() {
    this.handlers = [];
    this.checkUrl = _.bind(this.checkUrl, this);

    // Ensure that `History` can be used outside of the browser.
    if (typeof window !== 'undefined') {
      this.location = window.location;
      this.history = window.history;
    }
  };

  // Cached regex for stripping a leading hash/slash and trailing space.
  var routeStripper = /^[#\/]|\s+$/g;

  // Cached regex for stripping leading and trailing slashes.
  var rootStripper = /^\/+|\/+$/g;

  // Cached regex for stripping urls of hash.
  var pathStripper = /#.*$/;

  // Has the history handling already been started?
  History.started = false;

  // Set up all inheritable **Backbone.History** properties and methods.
  _.extend(History.prototype, Events, {

    // The default interval to poll for hash changes, if necessary, is
    // twenty times a second.
    interval: 50,

    // Are we at the app root?
    atRoot: function() {
      var path = this.location.pathname.replace(/[^\/]$/, '$&/');
      return path === this.root && !this.getSearch();
    },

    // Does the pathname match the root?
    matchRoot: function() {
      var path = this.decodeFragment(this.location.pathname);
      var rootPath = path.slice(0, this.root.length - 1) + '/';
      return rootPath === this.root;
    },

    // Unicode characters in `location.pathname` are percent encoded so they're
    // decoded for comparison. `%25` should not be decoded since it may be part
    // of an encoded parameter.
    decodeFragment: function(fragment) {
      return decodeURI(fragment.replace(/%25/g, '%2525'));
    },

    // In IE6, the hash fragment and search params are incorrect if the
    // fragment contains `?`.
    getSearch: function() {
      var match = this.location.href.replace(/#.*/, '').match(/\?.+/);
      return match ? match[0] : '';
    },

    // Gets the true hash value. Cannot use location.hash directly due to bug
    // in Firefox where location.hash will always be decoded.
    getHash: function(window) {
      var match = (window || this).location.href.match(/#(.*)$/);
      return match ? match[1] : '';
    },

    // Get the pathname and search params, without the root.
    getPath: function() {
      var path = this.decodeFragment(
        this.location.pathname + this.getSearch()
      ).slice(this.root.length - 1);
      return path.charAt(0) === '/' ? path.slice(1) : path;
    },

    // Get the cross-browser normalized URL fragment from the path or hash.
    getFragment: function(fragment) {
      if (fragment == null) {
        if (this._usePushState || !this._wantsHashChange) {
          fragment = this.getPath();
        } else {
          fragment = this.getHash();
        }
      }
      return fragment.replace(routeStripper, '');
    },

    // Start the hash change handling, returning `true` if the current URL matches
    // an existing route, and `false` otherwise.
    start: function(options) {
      if (History.started) throw new Error('Backbone.history has already been started');
      History.started = true;

      // Figure out the initial configuration. Do we need an iframe?
      // Is pushState desired ... is it available?
      this.options          = _.extend({root: '/'}, this.options, options);
      this.root             = this.options.root;
      this._wantsHashChange = this.options.hashChange !== false;
      this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);
      this._useHashChange   = this._wantsHashChange && this._hasHashChange;
      this._wantsPushState  = !!this.options.pushState;
      this._hasPushState    = !!(this.history && this.history.pushState);
      this._usePushState    = this._wantsPushState && this._hasPushState;
      this.fragment         = this.getFragment();

      // Normalize root to always include a leading and trailing slash.
      this.root = ('/' + this.root + '/').replace(rootStripper, '/');

      // Transition from hashChange to pushState or vice versa if both are
      // requested.
      if (this._wantsHashChange && this._wantsPushState) {

        // If we've started off with a route from a `pushState`-enabled
        // browser, but we're currently in a browser that doesn't support it...
        if (!this._hasPushState && !this.atRoot()) {
          var rootPath = this.root.slice(0, -1) || '/';
          this.location.replace(rootPath + '#' + this.getPath());
          // Return immediately as browser will do redirect to new url
          return true;

        // Or if we've started out with a hash-based route, but we're currently
        // in a browser where it could be `pushState`-based instead...
        } else if (this._hasPushState && this.atRoot()) {
          this.navigate(this.getHash(), {replace: true});
        }

      }

      // Proxy an iframe to handle location events if the browser doesn't
      // support the `hashchange` event, HTML5 history, or the user wants
      // `hashChange` but not `pushState`.
      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {
        this.iframe = document.createElement('iframe');
        this.iframe.src = 'javascript:0';
        this.iframe.style.display = 'none';
        this.iframe.tabIndex = -1;
        var body = document.body;
        // Using `appendChild` will throw on IE < 9 if the document is not ready.
        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;
        iWindow.document.open();
        iWindow.document.close();
        iWindow.location.hash = '#' + this.fragment;
      }

      // Add a cross-platform `addEventListener` shim for older browsers.
      var addEventListener = window.addEventListener || function(eventName, listener) {
        return attachEvent('on' + eventName, listener);
      };

      // Depending on whether we're using pushState or hashes, and whether
      // 'onhashchange' is supported, determine how we check the URL state.
      if (this._usePushState) {
        addEventListener('popstate', this.checkUrl, false);
      } else if (this._useHashChange && !this.iframe) {
        addEventListener('hashchange', this.checkUrl, false);
      } else if (this._wantsHashChange) {
        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);
      }

      if (!this.options.silent) return this.loadUrl();
    },

    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,
    // but possibly useful for unit testing Routers.
    stop: function() {
      // Add a cross-platform `removeEventListener` shim for older browsers.
      var removeEventListener = window.removeEventListener || function(eventName, listener) {
        return detachEvent('on' + eventName, listener);
      };

      // Remove window listeners.
      if (this._usePushState) {
        removeEventListener('popstate', this.checkUrl, false);
      } else if (this._useHashChange && !this.iframe) {
        removeEventListener('hashchange', this.checkUrl, false);
      }

      // Clean up the iframe if necessary.
      if (this.iframe) {
        document.body.removeChild(this.iframe);
        this.iframe = null;
      }

      // Some environments will throw when clearing an undefined interval.
      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);
      History.started = false;
    },

    // Add a route to be tested when the fragment changes. Routes added later
    // may override previous routes.
    route: function(route, callback) {
      this.handlers.unshift({route: route, callback: callback});
    },

    // Checks the current URL to see if it has changed, and if it has,
    // calls `loadUrl`, normalizing across the hidden iframe.
    checkUrl: function(e) {
      var current = this.getFragment();

      // If the user pressed the back button, the iframe's hash will have
      // changed and we should use that for comparison.
      if (current === this.fragment && this.iframe) {
        current = this.getHash(this.iframe.contentWindow);
      }

      if (current === this.fragment) return false;
      if (this.iframe) this.navigate(current);
      this.loadUrl();
    },

    // Attempt to load the current URL fragment. If a route succeeds with a
    // match, returns `true`. If no defined routes matches the fragment,
    // returns `false`.
    loadUrl: function(fragment) {
      // If the root doesn't match, no routes can match either.
      if (!this.matchRoot()) return false;
      fragment = this.fragment = this.getFragment(fragment);
      return _.some(this.handlers, function(handler) {
        if (handler.route.test(fragment)) {
          handler.callback(fragment);
          return true;
        }
      });
    },

    // Save a fragment into the hash history, or replace the URL state if the
    // 'replace' option is passed. You are responsible for properly URL-encoding
    // the fragment in advance.
    //
    // The options object can contain `trigger: true` if you wish to have the
    // route callback be fired (not usually desirable), or `replace: true`, if
    // you wish to modify the current URL without adding an entry to the history.
    navigate: function(fragment, options) {
      if (!History.started) return false;
      if (!options || options === true) options = {trigger: !!options};

      // Normalize the fragment.
      fragment = this.getFragment(fragment || '');

      // Don't include a trailing slash on the root.
      var rootPath = this.root;
      if (fragment === '' || fragment.charAt(0) === '?') {
        rootPath = rootPath.slice(0, -1) || '/';
      }
      var url = rootPath + fragment;

      // Strip the hash and decode for matching.
      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));

      if (this.fragment === fragment) return;
      this.fragment = fragment;

      // If pushState is available, we use it to set the fragment as a real URL.
      if (this._usePushState) {
        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);

      // If hash changes haven't been explicitly disabled, update the hash
      // fragment to store history.
      } else if (this._wantsHashChange) {
        this._updateHash(this.location, fragment, options.replace);
        if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {
          var iWindow = this.iframe.contentWindow;

          // Opening and closing the iframe tricks IE7 and earlier to push a
          // history entry on hash-tag change.  When replace is true, we don't
          // want this.
          if (!options.replace) {
            iWindow.document.open();
            iWindow.document.close();
          }

          this._updateHash(iWindow.location, fragment, options.replace);
        }

      // If you've told us that you explicitly don't want fallback hashchange-
      // based history, then `navigate` becomes a page refresh.
      } else {
        return this.location.assign(url);
      }
      if (options.trigger) return this.loadUrl(fragment);
    },

    // Update the hash location, either replacing the current entry, or adding
    // a new one to the browser history.
    _updateHash: function(location, fragment, replace) {
      if (replace) {
        var href = location.href.replace(/(javascript:|#).*$/, '');
        location.replace(href + '#' + fragment);
      } else {
        // Some browsers require that `hash` contains a leading #.
        location.hash = '#' + fragment;
      }
    }

  });

  // Create the default Backbone.history.
  Backbone.history = new History;

  // Helpers
  // -------

  // Helper function to correctly set up the prototype chain for subclasses.
  // Similar to `goog.inherits`, but uses a hash of prototype properties and
  // class properties to be extended.
  var extend = function(protoProps, staticProps) {
    var parent = this;
    var child;

    // The constructor function for the new subclass is either defined by you
    // (the "constructor" property in your `extend` definition), or defaulted
    // by us to simply call the parent constructor.
    if (protoProps && _.has(protoProps, 'constructor')) {
      child = protoProps.constructor;
    } else {
      child = function(){ return parent.apply(this, arguments); };
    }

    // Add static properties to the constructor function, if supplied.
    _.extend(child, parent, staticProps);

    // Set the prototype chain to inherit from `parent`, without calling
    // `parent`'s constructor function and add the prototype properties.
    child.prototype = _.create(parent.prototype, protoProps);
    child.prototype.constructor = child;

    // Set a convenience property in case the parent's prototype is needed
    // later.
    child.__super__ = parent.prototype;

    return child;
  };

  // Set up inheritance for the model, collection, router, view and history.
  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;

  // Throw an error when a URL is needed, and none is supplied.
  var urlError = function() {
    throw new Error('A "url" property or function must be specified');
  };

  // Wrap an optional error callback with a fallback error event.
  var wrapError = function(model, options) {
    var error = options.error;
    options.error = function(resp) {
      if (error) error.call(options.context, model, resp, options);
      model.trigger('error', model, resp, options);
    };
  };

  return Backbone;
});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"jquery":28,"underscore":32}],2:[function(require,module,exports){
(function (global){
/*!
 * VERSION: 1.18.6
 * DATE: 2016-07-08
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2016, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 */
var _gsScope = (typeof(module) !== "undefined" && module.exports && typeof(global) !== "undefined") ? global : this || window; //helps ensure compatibility with AMD/RequireJS and CommonJS/Node
(_gsScope._gsQueue || (_gsScope._gsQueue = [])).push( function() {

	"use strict";

	_gsScope._gsDefine("TimelineLite", ["core.Animation","core.SimpleTimeline","TweenLite"], function(Animation, SimpleTimeline, TweenLite) {

		var TimelineLite = function(vars) {
				SimpleTimeline.call(this, vars);
				this._labels = {};
				this.autoRemoveChildren = (this.vars.autoRemoveChildren === true);
				this.smoothChildTiming = (this.vars.smoothChildTiming === true);
				this._sortChildren = true;
				this._onUpdate = this.vars.onUpdate;
				var v = this.vars,
					val, p;
				for (p in v) {
					val = v[p];
					if (_isArray(val)) if (val.join("").indexOf("{self}") !== -1) {
						v[p] = this._swapSelfInParams(val);
					}
				}
				if (_isArray(v.tweens)) {
					this.add(v.tweens, 0, v.align, v.stagger);
				}
			},
			_tinyNum = 0.0000000001,
			TweenLiteInternals = TweenLite._internals,
			_internals = TimelineLite._internals = {},
			_isSelector = TweenLiteInternals.isSelector,
			_isArray = TweenLiteInternals.isArray,
			_lazyTweens = TweenLiteInternals.lazyTweens,
			_lazyRender = TweenLiteInternals.lazyRender,
			_globals = _gsScope._gsDefine.globals,
			_copy = function(vars) {
				var copy = {}, p;
				for (p in vars) {
					copy[p] = vars[p];
				}
				return copy;
			},
			_applyCycle = function(vars, targets, i) {
				var alt = vars.cycle,
					p, val;
				for (p in alt) {
					val = alt[p];
					vars[p] = (typeof(val) === "function") ? val(i, targets[i]) : val[i % val.length];
				}
				delete vars.cycle;
			},
			_pauseCallback = _internals.pauseCallback = function() {},
			_slice = function(a) { //don't use [].slice because that doesn't work in IE8 with a NodeList that's returned by querySelectorAll()
				var b = [],
					l = a.length,
					i;
				for (i = 0; i !== l; b.push(a[i++]));
				return b;
			},
			p = TimelineLite.prototype = new SimpleTimeline();

		TimelineLite.version = "1.19.0";
		p.constructor = TimelineLite;
		p.kill()._gc = p._forcingPlayhead = p._hasPause = false;

		/* might use later...
		//translates a local time inside an animation to the corresponding time on the root/global timeline, factoring in all nesting and timeScales.
		function localToGlobal(time, animation) {
			while (animation) {
				time = (time / animation._timeScale) + animation._startTime;
				animation = animation.timeline;
			}
			return time;
		}

		//translates the supplied time on the root/global timeline into the corresponding local time inside a particular animation, factoring in all nesting and timeScales
		function globalToLocal(time, animation) {
			var scale = 1;
			time -= localToGlobal(0, animation);
			while (animation) {
				scale *= animation._timeScale;
				animation = animation.timeline;
			}
			return time * scale;
		}
		*/

		p.to = function(target, duration, vars, position) {
			var Engine = (vars.repeat && _globals.TweenMax) || TweenLite;
			return duration ? this.add( new Engine(target, duration, vars), position) : this.set(target, vars, position);
		};

		p.from = function(target, duration, vars, position) {
			return this.add( ((vars.repeat && _globals.TweenMax) || TweenLite).from(target, duration, vars), position);
		};

		p.fromTo = function(target, duration, fromVars, toVars, position) {
			var Engine = (toVars.repeat && _globals.TweenMax) || TweenLite;
			return duration ? this.add( Engine.fromTo(target, duration, fromVars, toVars), position) : this.set(target, toVars, position);
		};

		p.staggerTo = function(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {
			var tl = new TimelineLite({onComplete:onCompleteAll, onCompleteParams:onCompleteAllParams, callbackScope:onCompleteAllScope, smoothChildTiming:this.smoothChildTiming}),
				cycle = vars.cycle,
				copy, i;
			if (typeof(targets) === "string") {
				targets = TweenLite.selector(targets) || targets;
			}
			targets = targets || [];
			if (_isSelector(targets)) { //senses if the targets object is a selector. If it is, we should translate it into an array.
				targets = _slice(targets);
			}
			stagger = stagger || 0;
			if (stagger < 0) {
				targets = _slice(targets);
				targets.reverse();
				stagger *= -1;
			}
			for (i = 0; i < targets.length; i++) {
				copy = _copy(vars);
				if (copy.startAt) {
					copy.startAt = _copy(copy.startAt);
					if (copy.startAt.cycle) {
						_applyCycle(copy.startAt, targets, i);
					}
				}
				if (cycle) {
					_applyCycle(copy, targets, i);
					if (copy.duration != null) {
						duration = copy.duration;
						delete copy.duration;
					}
				}
				tl.to(targets[i], duration, copy, i * stagger);
			}
			return this.add(tl, position);
		};

		p.staggerFrom = function(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {
			vars.immediateRender = (vars.immediateRender != false);
			vars.runBackwards = true;
			return this.staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope);
		};

		p.staggerFromTo = function(targets, duration, fromVars, toVars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {
			toVars.startAt = fromVars;
			toVars.immediateRender = (toVars.immediateRender != false && fromVars.immediateRender != false);
			return this.staggerTo(targets, duration, toVars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope);
		};

		p.call = function(callback, params, scope, position) {
			return this.add( TweenLite.delayedCall(0, callback, params, scope), position);
		};

		p.set = function(target, vars, position) {
			position = this._parseTimeOrLabel(position, 0, true);
			if (vars.immediateRender == null) {
				vars.immediateRender = (position === this._time && !this._paused);
			}
			return this.add( new TweenLite(target, 0, vars), position);
		};

		TimelineLite.exportRoot = function(vars, ignoreDelayedCalls) {
			vars = vars || {};
			if (vars.smoothChildTiming == null) {
				vars.smoothChildTiming = true;
			}
			var tl = new TimelineLite(vars),
				root = tl._timeline,
				tween, next;
			if (ignoreDelayedCalls == null) {
				ignoreDelayedCalls = true;
			}
			root._remove(tl, true);
			tl._startTime = 0;
			tl._rawPrevTime = tl._time = tl._totalTime = root._time;
			tween = root._first;
			while (tween) {
				next = tween._next;
				if (!ignoreDelayedCalls || !(tween instanceof TweenLite && tween.target === tween.vars.onComplete)) {
					tl.add(tween, tween._startTime - tween._delay);
				}
				tween = next;
			}
			root.add(tl, 0);
			return tl;
		};

		p.add = function(value, position, align, stagger) {
			var curTime, l, i, child, tl, beforeRawTime;
			if (typeof(position) !== "number") {
				position = this._parseTimeOrLabel(position, 0, true, value);
			}
			if (!(value instanceof Animation)) {
				if ((value instanceof Array) || (value && value.push && _isArray(value))) {
					align = align || "normal";
					stagger = stagger || 0;
					curTime = position;
					l = value.length;
					for (i = 0; i < l; i++) {
						if (_isArray(child = value[i])) {
							child = new TimelineLite({tweens:child});
						}
						this.add(child, curTime);
						if (typeof(child) !== "string" && typeof(child) !== "function") {
							if (align === "sequence") {
								curTime = child._startTime + (child.totalDuration() / child._timeScale);
							} else if (align === "start") {
								child._startTime -= child.delay();
							}
						}
						curTime += stagger;
					}
					return this._uncache(true);
				} else if (typeof(value) === "string") {
					return this.addLabel(value, position);
				} else if (typeof(value) === "function") {
					value = TweenLite.delayedCall(0, value);
				} else {
					throw("Cannot add " + value + " into the timeline; it is not a tween, timeline, function, or string.");
				}
			}

			SimpleTimeline.prototype.add.call(this, value, position);

			//if the timeline has already ended but the inserted tween/timeline extends the duration, we should enable this timeline again so that it renders properly. We should also align the playhead with the parent timeline's when appropriate.
			if (this._gc || this._time === this._duration) if (!this._paused) if (this._duration < this.duration()) {
				//in case any of the ancestors had completed but should now be enabled...
				tl = this;
				beforeRawTime = (tl.rawTime() > value._startTime); //if the tween is placed on the timeline so that it starts BEFORE the current rawTime, we should align the playhead (move the timeline). This is because sometimes users will create a timeline, let it finish, and much later append a tween and expect it to run instead of jumping to its end state. While technically one could argue that it should jump to its end state, that's not what users intuitively expect.
				while (tl._timeline) {
					if (beforeRawTime && tl._timeline.smoothChildTiming) {
						tl.totalTime(tl._totalTime, true); //moves the timeline (shifts its startTime) if necessary, and also enables it.
					} else if (tl._gc) {
						tl._enabled(true, false);
					}
					tl = tl._timeline;
				}
			}

			return this;
		};

		p.remove = function(value) {
			if (value instanceof Animation) {
				this._remove(value, false);
				var tl = value._timeline = value.vars.useFrames ? Animation._rootFramesTimeline : Animation._rootTimeline; //now that it's removed, default it to the root timeline so that if it gets played again, it doesn't jump back into this timeline.
				value._startTime = (value._paused ? value._pauseTime : tl._time) - ((!value._reversed ? value._totalTime : value.totalDuration() - value._totalTime) / value._timeScale); //ensure that if it gets played again, the timing is correct.
				return this;
			} else if (value instanceof Array || (value && value.push && _isArray(value))) {
				var i = value.length;
				while (--i > -1) {
					this.remove(value[i]);
				}
				return this;
			} else if (typeof(value) === "string") {
				return this.removeLabel(value);
			}
			return this.kill(null, value);
		};

		p._remove = function(tween, skipDisable) {
			SimpleTimeline.prototype._remove.call(this, tween, skipDisable);
			var last = this._last;
			if (!last) {
				this._time = this._totalTime = this._duration = this._totalDuration = 0;
			} else if (this._time > last._startTime + last._totalDuration / last._timeScale) {
				this._time = this.duration();
				this._totalTime = this._totalDuration;
			}
			return this;
		};

		p.append = function(value, offsetOrLabel) {
			return this.add(value, this._parseTimeOrLabel(null, offsetOrLabel, true, value));
		};

		p.insert = p.insertMultiple = function(value, position, align, stagger) {
			return this.add(value, position || 0, align, stagger);
		};

		p.appendMultiple = function(tweens, offsetOrLabel, align, stagger) {
			return this.add(tweens, this._parseTimeOrLabel(null, offsetOrLabel, true, tweens), align, stagger);
		};

		p.addLabel = function(label, position) {
			this._labels[label] = this._parseTimeOrLabel(position);
			return this;
		};

		p.addPause = function(position, callback, params, scope) {
			var t = TweenLite.delayedCall(0, _pauseCallback, params, scope || this);
			t.vars.onComplete = t.vars.onReverseComplete = callback;
			t.data = "isPause";
			this._hasPause = true;
			return this.add(t, position);
		};

		p.removeLabel = function(label) {
			delete this._labels[label];
			return this;
		};

		p.getLabelTime = function(label) {
			return (this._labels[label] != null) ? this._labels[label] : -1;
		};

		p._parseTimeOrLabel = function(timeOrLabel, offsetOrLabel, appendIfAbsent, ignore) {
			var i;
			//if we're about to add a tween/timeline (or an array of them) that's already a child of this timeline, we should remove it first so that it doesn't contaminate the duration().
			if (ignore instanceof Animation && ignore.timeline === this) {
				this.remove(ignore);
			} else if (ignore && ((ignore instanceof Array) || (ignore.push && _isArray(ignore)))) {
				i = ignore.length;
				while (--i > -1) {
					if (ignore[i] instanceof Animation && ignore[i].timeline === this) {
						this.remove(ignore[i]);
					}
				}
			}
			if (typeof(offsetOrLabel) === "string") {
				return this._parseTimeOrLabel(offsetOrLabel, (appendIfAbsent && typeof(timeOrLabel) === "number" && this._labels[offsetOrLabel] == null) ? timeOrLabel - this.duration() : 0, appendIfAbsent);
			}
			offsetOrLabel = offsetOrLabel || 0;
			if (typeof(timeOrLabel) === "string" && (isNaN(timeOrLabel) || this._labels[timeOrLabel] != null)) { //if the string is a number like "1", check to see if there's a label with that name, otherwise interpret it as a number (absolute value).
				i = timeOrLabel.indexOf("=");
				if (i === -1) {
					if (this._labels[timeOrLabel] == null) {
						return appendIfAbsent ? (this._labels[timeOrLabel] = this.duration() + offsetOrLabel) : offsetOrLabel;
					}
					return this._labels[timeOrLabel] + offsetOrLabel;
				}
				offsetOrLabel = parseInt(timeOrLabel.charAt(i-1) + "1", 10) * Number(timeOrLabel.substr(i+1));
				timeOrLabel = (i > 1) ? this._parseTimeOrLabel(timeOrLabel.substr(0, i-1), 0, appendIfAbsent) : this.duration();
			} else if (timeOrLabel == null) {
				timeOrLabel = this.duration();
			}
			return Number(timeOrLabel) + offsetOrLabel;
		};

		p.seek = function(position, suppressEvents) {
			return this.totalTime((typeof(position) === "number") ? position : this._parseTimeOrLabel(position), (suppressEvents !== false));
		};

		p.stop = function() {
			return this.paused(true);
		};

		p.gotoAndPlay = function(position, suppressEvents) {
			return this.play(position, suppressEvents);
		};

		p.gotoAndStop = function(position, suppressEvents) {
			return this.pause(position, suppressEvents);
		};

		p.render = function(time, suppressEvents, force) {
			if (this._gc) {
				this._enabled(true, false);
			}
			var totalDur = (!this._dirty) ? this._totalDuration : this.totalDuration(),
				prevTime = this._time,
				prevStart = this._startTime,
				prevTimeScale = this._timeScale,
				prevPaused = this._paused,
				tween, isComplete, next, callback, internalForce, pauseTween, curTime;
			if (time >= totalDur - 0.0000001) { //to work around occasional floating point math artifacts.
				this._totalTime = this._time = totalDur;
				if (!this._reversed) if (!this._hasPausedChild()) {
					isComplete = true;
					callback = "onComplete";
					internalForce = !!this._timeline.autoRemoveChildren; //otherwise, if the animation is unpaused/activated after it's already finished, it doesn't get removed from the parent timeline.
					if (this._duration === 0) if ((time <= 0 && time >= -0.0000001) || this._rawPrevTime < 0 || this._rawPrevTime === _tinyNum) if (this._rawPrevTime !== time && this._first) {
						internalForce = true;
						if (this._rawPrevTime > _tinyNum) {
							callback = "onReverseComplete";
						}
					}
				}
				this._rawPrevTime = (this._duration || !suppressEvents || time || this._rawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline or tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.
				time = totalDur + 0.0001; //to avoid occasional floating point rounding errors - sometimes child tweens/timelines were not being fully completed (their progress might be 0.999999999999998 instead of 1 because when _time - tween._startTime is performed, floating point errors would return a value that was SLIGHTLY off). Try (999999999999.7 - 999999999999) * 1 = 0.699951171875 instead of 0.7.

			} else if (time < 0.0000001) { //to work around occasional floating point math artifacts, round super small values to 0.
				this._totalTime = this._time = 0;
				if (prevTime !== 0 || (this._duration === 0 && this._rawPrevTime !== _tinyNum && (this._rawPrevTime > 0 || (time < 0 && this._rawPrevTime >= 0)))) {
					callback = "onReverseComplete";
					isComplete = this._reversed;
				}
				if (time < 0) {
					this._active = false;
					if (this._timeline.autoRemoveChildren && this._reversed) { //ensures proper GC if a timeline is resumed after it's finished reversing.
						internalForce = isComplete = true;
						callback = "onReverseComplete";
					} else if (this._rawPrevTime >= 0 && this._first) { //when going back beyond the start, force a render so that zero-duration tweens that sit at the very beginning render their start values properly. Otherwise, if the parent timeline's playhead lands exactly at this timeline's startTime, and then moves backwards, the zero-duration tweens at the beginning would still be at their end state.
						internalForce = true;
					}
					this._rawPrevTime = time;
				} else {
					this._rawPrevTime = (this._duration || !suppressEvents || time || this._rawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline or tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.
					if (time === 0 && isComplete) { //if there's a zero-duration tween at the very beginning of a timeline and the playhead lands EXACTLY at time 0, that tween will correctly render its end values, but we need to keep the timeline alive for one more render so that the beginning values render properly as the parent's playhead keeps moving beyond the begining. Imagine obj.x starts at 0 and then we do tl.set(obj, {x:100}).to(obj, 1, {x:200}) and then later we tl.reverse()...the goal is to have obj.x revert to 0. If the playhead happens to land on exactly 0, without this chunk of code, it'd complete the timeline and remove it from the rendering queue (not good).
						tween = this._first;
						while (tween && tween._startTime === 0) {
							if (!tween._duration) {
								isComplete = false;
							}
							tween = tween._next;
						}
					}
					time = 0; //to avoid occasional floating point rounding errors (could cause problems especially with zero-duration tweens at the very beginning of the timeline)
					if (!this._initted) {
						internalForce = true;
					}
				}

			} else {

				if (this._hasPause && !this._forcingPlayhead && !suppressEvents) {
					if (time >= prevTime) {
						tween = this._first;
						while (tween && tween._startTime <= time && !pauseTween) {
							if (!tween._duration) if (tween.data === "isPause" && !tween.ratio && !(tween._startTime === 0 && this._rawPrevTime === 0)) {
								pauseTween = tween;
							}
							tween = tween._next;
						}
					} else {
						tween = this._last;
						while (tween && tween._startTime >= time && !pauseTween) {
							if (!tween._duration) if (tween.data === "isPause" && tween._rawPrevTime > 0) {
								pauseTween = tween;
							}
							tween = tween._prev;
						}
					}
					if (pauseTween) {
						this._time = time = pauseTween._startTime;
						this._totalTime = time + (this._cycle * (this._totalDuration + this._repeatDelay));
					}
				}

				this._totalTime = this._time = this._rawPrevTime = time;
			}
			if ((this._time === prevTime || !this._first) && !force && !internalForce && !pauseTween) {
				return;
			} else if (!this._initted) {
				this._initted = true;
			}

			if (!this._active) if (!this._paused && this._time !== prevTime && time > 0) {
				this._active = true;  //so that if the user renders the timeline (as opposed to the parent timeline rendering it), it is forced to re-render and align it with the proper time/frame on the next rendering cycle. Maybe the timeline already finished but the user manually re-renders it as halfway done, for example.
			}

			if (prevTime === 0) if (this.vars.onStart) if (this._time !== 0 || !this._duration) if (!suppressEvents) {
				this._callback("onStart");
			}

			curTime = this._time;
			if (curTime >= prevTime) {
				tween = this._first;
				while (tween) {
					next = tween._next; //record it here because the value could change after rendering...
					if (curTime !== this._time || (this._paused && !prevPaused)) { //in case a tween pauses or seeks the timeline when rendering, like inside of an onUpdate/onComplete
						break;
					} else if (tween._active || (tween._startTime <= curTime && !tween._paused && !tween._gc)) {
						if (pauseTween === tween) {
							this.pause();
						}
						if (!tween._reversed) {
							tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);
						} else {
							tween.render(((!tween._dirty) ? tween._totalDuration : tween.totalDuration()) - ((time - tween._startTime) * tween._timeScale), suppressEvents, force);
						}
					}
					tween = next;
				}
			} else {
				tween = this._last;
				while (tween) {
					next = tween._prev; //record it here because the value could change after rendering...
					if (curTime !== this._time || (this._paused && !prevPaused)) { //in case a tween pauses or seeks the timeline when rendering, like inside of an onUpdate/onComplete
						break;
					} else if (tween._active || (tween._startTime <= prevTime && !tween._paused && !tween._gc)) {
						if (pauseTween === tween) {
							pauseTween = tween._prev; //the linked list is organized by _startTime, thus it's possible that a tween could start BEFORE the pause and end after it, in which case it would be positioned before the pause tween in the linked list, but we should render it before we pause() the timeline and cease rendering. This is only a concern when going in reverse.
							while (pauseTween && pauseTween.endTime() > this._time) {
								pauseTween.render( (pauseTween._reversed ? pauseTween.totalDuration() - ((time - pauseTween._startTime) * pauseTween._timeScale) : (time - pauseTween._startTime) * pauseTween._timeScale), suppressEvents, force);
								pauseTween = pauseTween._prev;
							}
							pauseTween = null;
							this.pause();
						}
						if (!tween._reversed) {
							tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);
						} else {
							tween.render(((!tween._dirty) ? tween._totalDuration : tween.totalDuration()) - ((time - tween._startTime) * tween._timeScale), suppressEvents, force);
						}
					}
					tween = next;
				}
			}

			if (this._onUpdate) if (!suppressEvents) {
				if (_lazyTweens.length) { //in case rendering caused any tweens to lazy-init, we should render them because typically when a timeline finishes, users expect things to have rendered fully. Imagine an onUpdate on a timeline that reports/checks tweened values.
					_lazyRender();
				}
				this._callback("onUpdate");
			}

			if (callback) if (!this._gc) if (prevStart === this._startTime || prevTimeScale !== this._timeScale) if (this._time === 0 || totalDur >= this.totalDuration()) { //if one of the tweens that was rendered altered this timeline's startTime (like if an onComplete reversed the timeline), it probably isn't complete. If it is, don't worry, because whatever call altered the startTime would complete if it was necessary at the new time. The only exception is the timeScale property. Also check _gc because there's a chance that kill() could be called in an onUpdate
				if (isComplete) {
					if (_lazyTweens.length) { //in case rendering caused any tweens to lazy-init, we should render them because typically when a timeline finishes, users expect things to have rendered fully. Imagine an onComplete on a timeline that reports/checks tweened values.
						_lazyRender();
					}
					if (this._timeline.autoRemoveChildren) {
						this._enabled(false, false);
					}
					this._active = false;
				}
				if (!suppressEvents && this.vars[callback]) {
					this._callback(callback);
				}
			}
		};

		p._hasPausedChild = function() {
			var tween = this._first;
			while (tween) {
				if (tween._paused || ((tween instanceof TimelineLite) && tween._hasPausedChild())) {
					return true;
				}
				tween = tween._next;
			}
			return false;
		};

		p.getChildren = function(nested, tweens, timelines, ignoreBeforeTime) {
			ignoreBeforeTime = ignoreBeforeTime || -9999999999;
			var a = [],
				tween = this._first,
				cnt = 0;
			while (tween) {
				if (tween._startTime < ignoreBeforeTime) {
					//do nothing
				} else if (tween instanceof TweenLite) {
					if (tweens !== false) {
						a[cnt++] = tween;
					}
				} else {
					if (timelines !== false) {
						a[cnt++] = tween;
					}
					if (nested !== false) {
						a = a.concat(tween.getChildren(true, tweens, timelines));
						cnt = a.length;
					}
				}
				tween = tween._next;
			}
			return a;
		};

		p.getTweensOf = function(target, nested) {
			var disabled = this._gc,
				a = [],
				cnt = 0,
				tweens, i;
			if (disabled) {
				this._enabled(true, true); //getTweensOf() filters out disabled tweens, and we have to mark them as _gc = true when the timeline completes in order to allow clean garbage collection, so temporarily re-enable the timeline here.
			}
			tweens = TweenLite.getTweensOf(target);
			i = tweens.length;
			while (--i > -1) {
				if (tweens[i].timeline === this || (nested && this._contains(tweens[i]))) {
					a[cnt++] = tweens[i];
				}
			}
			if (disabled) {
				this._enabled(false, true);
			}
			return a;
		};

		p.recent = function() {
			return this._recent;
		};

		p._contains = function(tween) {
			var tl = tween.timeline;
			while (tl) {
				if (tl === this) {
					return true;
				}
				tl = tl.timeline;
			}
			return false;
		};

		p.shiftChildren = function(amount, adjustLabels, ignoreBeforeTime) {
			ignoreBeforeTime = ignoreBeforeTime || 0;
			var tween = this._first,
				labels = this._labels,
				p;
			while (tween) {
				if (tween._startTime >= ignoreBeforeTime) {
					tween._startTime += amount;
				}
				tween = tween._next;
			}
			if (adjustLabels) {
				for (p in labels) {
					if (labels[p] >= ignoreBeforeTime) {
						labels[p] += amount;
					}
				}
			}
			return this._uncache(true);
		};

		p._kill = function(vars, target) {
			if (!vars && !target) {
				return this._enabled(false, false);
			}
			var tweens = (!target) ? this.getChildren(true, true, false) : this.getTweensOf(target),
				i = tweens.length,
				changed = false;
			while (--i > -1) {
				if (tweens[i]._kill(vars, target)) {
					changed = true;
				}
			}
			return changed;
		};

		p.clear = function(labels) {
			var tweens = this.getChildren(false, true, true),
				i = tweens.length;
			this._time = this._totalTime = 0;
			while (--i > -1) {
				tweens[i]._enabled(false, false);
			}
			if (labels !== false) {
				this._labels = {};
			}
			return this._uncache(true);
		};

		p.invalidate = function() {
			var tween = this._first;
			while (tween) {
				tween.invalidate();
				tween = tween._next;
			}
			return Animation.prototype.invalidate.call(this);;
		};

		p._enabled = function(enabled, ignoreTimeline) {
			if (enabled === this._gc) {
				var tween = this._first;
				while (tween) {
					tween._enabled(enabled, true);
					tween = tween._next;
				}
			}
			return SimpleTimeline.prototype._enabled.call(this, enabled, ignoreTimeline);
		};

		p.totalTime = function(time, suppressEvents, uncapped) {
			this._forcingPlayhead = true;
			var val = Animation.prototype.totalTime.apply(this, arguments);
			this._forcingPlayhead = false;
			return val;
		};

		p.duration = function(value) {
			if (!arguments.length) {
				if (this._dirty) {
					this.totalDuration(); //just triggers recalculation
				}
				return this._duration;
			}
			if (this.duration() !== 0 && value !== 0) {
				this.timeScale(this._duration / value);
			}
			return this;
		};

		p.totalDuration = function(value) {
			if (!arguments.length) {
				if (this._dirty) {
					var max = 0,
						tween = this._last,
						prevStart = 999999999999,
						prev, end;
					while (tween) {
						prev = tween._prev; //record it here in case the tween changes position in the sequence...
						if (tween._dirty) {
							tween.totalDuration(); //could change the tween._startTime, so make sure the tween's cache is clean before analyzing it.
						}
						if (tween._startTime > prevStart && this._sortChildren && !tween._paused) { //in case one of the tweens shifted out of order, it needs to be re-inserted into the correct position in the sequence
							this.add(tween, tween._startTime - tween._delay);
						} else {
							prevStart = tween._startTime;
						}
						if (tween._startTime < 0 && !tween._paused) { //children aren't allowed to have negative startTimes unless smoothChildTiming is true, so adjust here if one is found.
							max -= tween._startTime;
							if (this._timeline.smoothChildTiming) {
								this._startTime += tween._startTime / this._timeScale;
							}
							this.shiftChildren(-tween._startTime, false, -9999999999);
							prevStart = 0;
						}
						end = tween._startTime + (tween._totalDuration / tween._timeScale);
						if (end > max) {
							max = end;
						}
						tween = prev;
					}
					this._duration = this._totalDuration = max;
					this._dirty = false;
				}
				return this._totalDuration;
			}
			return (value && this.totalDuration()) ? this.timeScale(this._totalDuration / value) : this;
		};

		p.paused = function(value) {
			if (!value) { //if there's a pause directly at the spot from where we're unpausing, skip it.
				var tween = this._first,
					time = this._time;
				while (tween) {
					if (tween._startTime === time && tween.data === "isPause") {
						tween._rawPrevTime = 0; //remember, _rawPrevTime is how zero-duration tweens/callbacks sense directionality and determine whether or not to fire. If _rawPrevTime is the same as _startTime on the next render, it won't fire.
					}
					tween = tween._next;
				}
			}
			return Animation.prototype.paused.apply(this, arguments);
		};

		p.usesFrames = function() {
			var tl = this._timeline;
			while (tl._timeline) {
				tl = tl._timeline;
			}
			return (tl === Animation._rootFramesTimeline);
		};

		p.rawTime = function() {
			return this._paused ? this._totalTime : (this._timeline.rawTime() - this._startTime) * this._timeScale;
		};

		return TimelineLite;

	}, true);


}); if (_gsScope._gsDefine) { _gsScope._gsQueue.pop()(); }

//export to AMD/RequireJS and CommonJS/Node (precursor to full modular build system coming at a later date)
(function(name) {
	"use strict";
	var getGlobal = function() {
		return (_gsScope.GreenSockGlobals || _gsScope)[name];
	};
	if (typeof(define) === "function" && define.amd) { //AMD
		define(["TweenLite"], getGlobal);
	} else if (typeof(module) !== "undefined" && module.exports) { //node
		require("./TweenLite.js"); //dependency
		module.exports = getGlobal();
	}
}("TimelineLite"));

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./TweenLite.js":3}],3:[function(require,module,exports){
(function (global){
/*!
 * VERSION: 1.19.0
 * DATE: 2016-07-16
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2016, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 */
(function(window, moduleName) {

		"use strict";
		var _exports = {},
			_globals = window.GreenSockGlobals = window.GreenSockGlobals || window;
		if (_globals.TweenLite) {
			return; //in case the core set of classes is already loaded, don't instantiate twice.
		}
		var _namespace = function(ns) {
				var a = ns.split("."),
					p = _globals, i;
				for (i = 0; i < a.length; i++) {
					p[a[i]] = p = p[a[i]] || {};
				}
				return p;
			},
			gs = _namespace("com.greensock"),
			_tinyNum = 0.0000000001,
			_slice = function(a) { //don't use Array.prototype.slice.call(target, 0) because that doesn't work in IE8 with a NodeList that's returned by querySelectorAll()
				var b = [],
					l = a.length,
					i;
				for (i = 0; i !== l; b.push(a[i++])) {}
				return b;
			},
			_emptyFunc = function() {},
			_isArray = (function() { //works around issues in iframe environments where the Array global isn't shared, thus if the object originates in a different window/iframe, "(obj instanceof Array)" will evaluate false. We added some speed optimizations to avoid Object.prototype.toString.call() unless it's absolutely necessary because it's VERY slow (like 20x slower)
				var toString = Object.prototype.toString,
					array = toString.call([]);
				return function(obj) {
					return obj != null && (obj instanceof Array || (typeof(obj) === "object" && !!obj.push && toString.call(obj) === array));
				};
			}()),
			a, i, p, _ticker, _tickerActive,
			_defLookup = {},

			/**
			 * @constructor
			 * Defines a GreenSock class, optionally with an array of dependencies that must be instantiated first and passed into the definition.
			 * This allows users to load GreenSock JS files in any order even if they have interdependencies (like CSSPlugin extends TweenPlugin which is
			 * inside TweenLite.js, but if CSSPlugin is loaded first, it should wait to run its code until TweenLite.js loads and instantiates TweenPlugin
			 * and then pass TweenPlugin to CSSPlugin's definition). This is all done automatically and internally.
			 *
			 * Every definition will be added to a "com.greensock" global object (typically window, but if a window.GreenSockGlobals object is found,
			 * it will go there as of v1.7). For example, TweenLite will be found at window.com.greensock.TweenLite and since it's a global class that should be available anywhere,
			 * it is ALSO referenced at window.TweenLite. However some classes aren't considered global, like the base com.greensock.core.Animation class, so
			 * those will only be at the package like window.com.greensock.core.Animation. Again, if you define a GreenSockGlobals object on the window, everything
			 * gets tucked neatly inside there instead of on the window directly. This allows you to do advanced things like load multiple versions of GreenSock
			 * files and put them into distinct objects (imagine a banner ad uses a newer version but the main site uses an older one). In that case, you could
			 * sandbox the banner one like:
			 *
			 * <script>
			 *     var gs = window.GreenSockGlobals = {}; //the newer version we're about to load could now be referenced in a "gs" object, like gs.TweenLite.to(...). Use whatever alias you want as long as it's unique, "gs" or "banner" or whatever.
			 * </script>
			 * <script src="js/greensock/v1.7/TweenMax.js"></script>
			 * <script>
			 *     window.GreenSockGlobals = window._gsQueue = window._gsDefine = null; //reset it back to null (along with the special _gsQueue variable) so that the next load of TweenMax affects the window and we can reference things directly like TweenLite.to(...)
			 * </script>
			 * <script src="js/greensock/v1.6/TweenMax.js"></script>
			 * <script>
			 *     gs.TweenLite.to(...); //would use v1.7
			 *     TweenLite.to(...); //would use v1.6
			 * </script>
			 *
			 * @param {!string} ns The namespace of the class definition, leaving off "com.greensock." as that's assumed. For example, "TweenLite" or "plugins.CSSPlugin" or "easing.Back".
			 * @param {!Array.<string>} dependencies An array of dependencies (described as their namespaces minus "com.greensock." prefix). For example ["TweenLite","plugins.TweenPlugin","core.Animation"]
			 * @param {!function():Object} func The function that should be called and passed the resolved dependencies which will return the actual class for this definition.
			 * @param {boolean=} global If true, the class will be added to the global scope (typically window unless you define a window.GreenSockGlobals object)
			 */
			Definition = function(ns, dependencies, func, global) {
				this.sc = (_defLookup[ns]) ? _defLookup[ns].sc : []; //subclasses
				_defLookup[ns] = this;
				this.gsClass = null;
				this.func = func;
				var _classes = [];
				this.check = function(init) {
					var i = dependencies.length,
						missing = i,
						cur, a, n, cl, hasModule;
					while (--i > -1) {
						if ((cur = _defLookup[dependencies[i]] || new Definition(dependencies[i], [])).gsClass) {
							_classes[i] = cur.gsClass;
							missing--;
						} else if (init) {
							cur.sc.push(this);
						}
					}
					if (missing === 0 && func) {
						a = ("com.greensock." + ns).split(".");
						n = a.pop();
						cl = _namespace(a.join("."))[n] = this.gsClass = func.apply(func, _classes);

						//exports to multiple environments
						if (global) {
							_globals[n] = _exports[n] = cl; //provides a way to avoid global namespace pollution. By default, the main classes like TweenLite, Power1, Strong, etc. are added to window unless a GreenSockGlobals is defined. So if you want to have things added to a custom object instead, just do something like window.GreenSockGlobals = {} before loading any GreenSock files. You can even set up an alias like window.GreenSockGlobals = windows.gs = {} so that you can access everything like gs.TweenLite. Also remember that ALL classes are added to the window.com.greensock object (in their respective packages, like com.greensock.easing.Power1, com.greensock.TweenLite, etc.)
							hasModule = (typeof(module) !== "undefined" && module.exports);
							if (!hasModule && typeof(define) === "function" && define.amd){ //AMD
								define((window.GreenSockAMDPath ? window.GreenSockAMDPath + "/" : "") + ns.split(".").pop(), [], function() { return cl; });
							} else if (hasModule){ //node
								if (ns === moduleName) {
									module.exports = _exports[moduleName] = cl;
									for (i in _exports) {
										cl[i] = _exports[i];
									}
								} else if (_exports[moduleName]) {
									_exports[moduleName][n] = cl;
								}
							}
						}
						for (i = 0; i < this.sc.length; i++) {
							this.sc[i].check();
						}
					}
				};
				this.check(true);
			},

			//used to create Definition instances (which basically registers a class that has dependencies).
			_gsDefine = window._gsDefine = function(ns, dependencies, func, global) {
				return new Definition(ns, dependencies, func, global);
			},

			//a quick way to create a class that doesn't have any dependencies. Returns the class, but first registers it in the GreenSock namespace so that other classes can grab it (other classes might be dependent on the class).
			_class = gs._class = function(ns, func, global) {
				func = func || function() {};
				_gsDefine(ns, [], function(){ return func; }, global);
				return func;
			};

		_gsDefine.globals = _globals;



/*
 * ----------------------------------------------------------------
 * Ease
 * ----------------------------------------------------------------
 */
		var _baseParams = [0, 0, 1, 1],
			_blankArray = [],
			Ease = _class("easing.Ease", function(func, extraParams, type, power) {
				this._func = func;
				this._type = type || 0;
				this._power = power || 0;
				this._params = extraParams ? _baseParams.concat(extraParams) : _baseParams;
			}, true),
			_easeMap = Ease.map = {},
			_easeReg = Ease.register = function(ease, names, types, create) {
				var na = names.split(","),
					i = na.length,
					ta = (types || "easeIn,easeOut,easeInOut").split(","),
					e, name, j, type;
				while (--i > -1) {
					name = na[i];
					e = create ? _class("easing."+name, null, true) : gs.easing[name] || {};
					j = ta.length;
					while (--j > -1) {
						type = ta[j];
						_easeMap[name + "." + type] = _easeMap[type + name] = e[type] = ease.getRatio ? ease : ease[type] || new ease();
					}
				}
			};

		p = Ease.prototype;
		p._calcEnd = false;
		p.getRatio = function(p) {
			if (this._func) {
				this._params[0] = p;
				return this._func.apply(null, this._params);
			}
			var t = this._type,
				pw = this._power,
				r = (t === 1) ? 1 - p : (t === 2) ? p : (p < 0.5) ? p * 2 : (1 - p) * 2;
			if (pw === 1) {
				r *= r;
			} else if (pw === 2) {
				r *= r * r;
			} else if (pw === 3) {
				r *= r * r * r;
			} else if (pw === 4) {
				r *= r * r * r * r;
			}
			return (t === 1) ? 1 - r : (t === 2) ? r : (p < 0.5) ? r / 2 : 1 - (r / 2);
		};

		//create all the standard eases like Linear, Quad, Cubic, Quart, Quint, Strong, Power0, Power1, Power2, Power3, and Power4 (each with easeIn, easeOut, and easeInOut)
		a = ["Linear","Quad","Cubic","Quart","Quint,Strong"];
		i = a.length;
		while (--i > -1) {
			p = a[i]+",Power"+i;
			_easeReg(new Ease(null,null,1,i), p, "easeOut", true);
			_easeReg(new Ease(null,null,2,i), p, "easeIn" + ((i === 0) ? ",easeNone" : ""));
			_easeReg(new Ease(null,null,3,i), p, "easeInOut");
		}
		_easeMap.linear = gs.easing.Linear.easeIn;
		_easeMap.swing = gs.easing.Quad.easeInOut; //for jQuery folks


/*
 * ----------------------------------------------------------------
 * EventDispatcher
 * ----------------------------------------------------------------
 */
		var EventDispatcher = _class("events.EventDispatcher", function(target) {
			this._listeners = {};
			this._eventTarget = target || this;
		});
		p = EventDispatcher.prototype;

		p.addEventListener = function(type, callback, scope, useParam, priority) {
			priority = priority || 0;
			var list = this._listeners[type],
				index = 0,
				listener, i;
			if (this === _ticker && !_tickerActive) {
				_ticker.wake();
			}
			if (list == null) {
				this._listeners[type] = list = [];
			}
			i = list.length;
			while (--i > -1) {
				listener = list[i];
				if (listener.c === callback && listener.s === scope) {
					list.splice(i, 1);
				} else if (index === 0 && listener.pr < priority) {
					index = i + 1;
				}
			}
			list.splice(index, 0, {c:callback, s:scope, up:useParam, pr:priority});
		};

		p.removeEventListener = function(type, callback) {
			var list = this._listeners[type], i;
			if (list) {
				i = list.length;
				while (--i > -1) {
					if (list[i].c === callback) {
						list.splice(i, 1);
						return;
					}
				}
			}
		};

		p.dispatchEvent = function(type) {
			var list = this._listeners[type],
				i, t, listener;
			if (list) {
				i = list.length;
				if (i > 1) { 
					list = list.slice(0); //in case addEventListener() is called from within a listener/callback (otherwise the index could change, resulting in a skip)
				}
				t = this._eventTarget;
				while (--i > -1) {
					listener = list[i];
					if (listener) {
						if (listener.up) {
							listener.c.call(listener.s || t, {type:type, target:t});
						} else {
							listener.c.call(listener.s || t);
						}
					}
				}
			}
		};


/*
 * ----------------------------------------------------------------
 * Ticker
 * ----------------------------------------------------------------
 */
 		var _reqAnimFrame = window.requestAnimationFrame,
			_cancelAnimFrame = window.cancelAnimationFrame,
			_getTime = Date.now || function() {return new Date().getTime();},
			_lastUpdate = _getTime();

		//now try to determine the requestAnimationFrame and cancelAnimationFrame functions and if none are found, we'll use a setTimeout()/clearTimeout() polyfill.
		a = ["ms","moz","webkit","o"];
		i = a.length;
		while (--i > -1 && !_reqAnimFrame) {
			_reqAnimFrame = window[a[i] + "RequestAnimationFrame"];
			_cancelAnimFrame = window[a[i] + "CancelAnimationFrame"] || window[a[i] + "CancelRequestAnimationFrame"];
		}

		_class("Ticker", function(fps, useRAF) {
			var _self = this,
				_startTime = _getTime(),
				_useRAF = (useRAF !== false && _reqAnimFrame) ? "auto" : false,
				_lagThreshold = 500,
				_adjustedLag = 33,
				_tickWord = "tick", //helps reduce gc burden
				_fps, _req, _id, _gap, _nextTime,
				_tick = function(manual) {
					var elapsed = _getTime() - _lastUpdate,
						overlap, dispatch;
					if (elapsed > _lagThreshold) {
						_startTime += elapsed - _adjustedLag;
					}
					_lastUpdate += elapsed;
					_self.time = (_lastUpdate - _startTime) / 1000;
					overlap = _self.time - _nextTime;
					if (!_fps || overlap > 0 || manual === true) {
						_self.frame++;
						_nextTime += overlap + (overlap >= _gap ? 0.004 : _gap - overlap);
						dispatch = true;
					}
					if (manual !== true) { //make sure the request is made before we dispatch the "tick" event so that timing is maintained. Otherwise, if processing the "tick" requires a bunch of time (like 15ms) and we're using a setTimeout() that's based on 16.7ms, it'd technically take 31.7ms between frames otherwise.
						_id = _req(_tick);
					}
					if (dispatch) {
						_self.dispatchEvent(_tickWord);
					}
				};

			EventDispatcher.call(_self);
			_self.time = _self.frame = 0;
			_self.tick = function() {
				_tick(true);
			};

			_self.lagSmoothing = function(threshold, adjustedLag) {
				_lagThreshold = threshold || (1 / _tinyNum); //zero should be interpreted as basically unlimited
				_adjustedLag = Math.min(adjustedLag, _lagThreshold, 0);
			};

			_self.sleep = function() {
				if (_id == null) {
					return;
				}
				if (!_useRAF || !_cancelAnimFrame) {
					clearTimeout(_id);
				} else {
					_cancelAnimFrame(_id);
				}
				_req = _emptyFunc;
				_id = null;
				if (_self === _ticker) {
					_tickerActive = false;
				}
			};

			_self.wake = function(seamless) {
				if (_id !== null) {
					_self.sleep();
				} else if (seamless) {
					_startTime += -_lastUpdate + (_lastUpdate = _getTime());
				} else if (_self.frame > 10) { //don't trigger lagSmoothing if we're just waking up, and make sure that at least 10 frames have elapsed because of the iOS bug that we work around below with the 1.5-second setTimout().
					_lastUpdate = _getTime() - _lagThreshold + 5;
				}
				_req = (_fps === 0) ? _emptyFunc : (!_useRAF || !_reqAnimFrame) ? function(f) { return setTimeout(f, ((_nextTime - _self.time) * 1000 + 1) | 0); } : _reqAnimFrame;
				if (_self === _ticker) {
					_tickerActive = true;
				}
				_tick(2);
			};

			_self.fps = function(value) {
				if (!arguments.length) {
					return _fps;
				}
				_fps = value;
				_gap = 1 / (_fps || 60);
				_nextTime = this.time + _gap;
				_self.wake();
			};

			_self.useRAF = function(value) {
				if (!arguments.length) {
					return _useRAF;
				}
				_self.sleep();
				_useRAF = value;
				_self.fps(_fps);
			};
			_self.fps(fps);

			//a bug in iOS 6 Safari occasionally prevents the requestAnimationFrame from working initially, so we use a 1.5-second timeout that automatically falls back to setTimeout() if it senses this condition.
			setTimeout(function() {
				if (_useRAF === "auto" && _self.frame < 5 && document.visibilityState !== "hidden") {
					_self.useRAF(false);
				}
			}, 1500);
		});

		p = gs.Ticker.prototype = new gs.events.EventDispatcher();
		p.constructor = gs.Ticker;


/*
 * ----------------------------------------------------------------
 * Animation
 * ----------------------------------------------------------------
 */
		var Animation = _class("core.Animation", function(duration, vars) {
				this.vars = vars = vars || {};
				this._duration = this._totalDuration = duration || 0;
				this._delay = Number(vars.delay) || 0;
				this._timeScale = 1;
				this._active = (vars.immediateRender === true);
				this.data = vars.data;
				this._reversed = (vars.reversed === true);

				if (!_rootTimeline) {
					return;
				}
				if (!_tickerActive) { //some browsers (like iOS 6 Safari) shut down JavaScript execution when the tab is disabled and they [occasionally] neglect to start up requestAnimationFrame again when returning - this code ensures that the engine starts up again properly.
					_ticker.wake();
				}

				var tl = this.vars.useFrames ? _rootFramesTimeline : _rootTimeline;
				tl.add(this, tl._time);

				if (this.vars.paused) {
					this.paused(true);
				}
			});

		_ticker = Animation.ticker = new gs.Ticker();
		p = Animation.prototype;
		p._dirty = p._gc = p._initted = p._paused = false;
		p._totalTime = p._time = 0;
		p._rawPrevTime = -1;
		p._next = p._last = p._onUpdate = p._timeline = p.timeline = null;
		p._paused = false;


		//some browsers (like iOS) occasionally drop the requestAnimationFrame event when the user switches to a different tab and then comes back again, so we use a 2-second setTimeout() to sense if/when that condition occurs and then wake() the ticker.
		var _checkTimeout = function() {
				if (_tickerActive && _getTime() - _lastUpdate > 2000) {
					_ticker.wake();
				}
				setTimeout(_checkTimeout, 2000);
			};
		_checkTimeout();


		p.play = function(from, suppressEvents) {
			if (from != null) {
				this.seek(from, suppressEvents);
			}
			return this.reversed(false).paused(false);
		};

		p.pause = function(atTime, suppressEvents) {
			if (atTime != null) {
				this.seek(atTime, suppressEvents);
			}
			return this.paused(true);
		};

		p.resume = function(from, suppressEvents) {
			if (from != null) {
				this.seek(from, suppressEvents);
			}
			return this.paused(false);
		};

		p.seek = function(time, suppressEvents) {
			return this.totalTime(Number(time), suppressEvents !== false);
		};

		p.restart = function(includeDelay, suppressEvents) {
			return this.reversed(false).paused(false).totalTime(includeDelay ? -this._delay : 0, (suppressEvents !== false), true);
		};

		p.reverse = function(from, suppressEvents) {
			if (from != null) {
				this.seek((from || this.totalDuration()), suppressEvents);
			}
			return this.reversed(true).paused(false);
		};

		p.render = function(time, suppressEvents, force) {
			//stub - we override this method in subclasses.
		};

		p.invalidate = function() {
			this._time = this._totalTime = 0;
			this._initted = this._gc = false;
			this._rawPrevTime = -1;
			if (this._gc || !this.timeline) {
				this._enabled(true);
			}
			return this;
		};

		p.isActive = function() {
			var tl = this._timeline, //the 2 root timelines won't have a _timeline; they're always active.
				startTime = this._startTime,
				rawTime;
			return (!tl || (!this._gc && !this._paused && tl.isActive() && (rawTime = tl.rawTime()) >= startTime && rawTime < startTime + this.totalDuration() / this._timeScale));
		};

		p._enabled = function (enabled, ignoreTimeline) {
			if (!_tickerActive) {
				_ticker.wake();
			}
			this._gc = !enabled;
			this._active = this.isActive();
			if (ignoreTimeline !== true) {
				if (enabled && !this.timeline) {
					this._timeline.add(this, this._startTime - this._delay);
				} else if (!enabled && this.timeline) {
					this._timeline._remove(this, true);
				}
			}
			return false;
		};


		p._kill = function(vars, target) {
			return this._enabled(false, false);
		};

		p.kill = function(vars, target) {
			this._kill(vars, target);
			return this;
		};

		p._uncache = function(includeSelf) {
			var tween = includeSelf ? this : this.timeline;
			while (tween) {
				tween._dirty = true;
				tween = tween.timeline;
			}
			return this;
		};

		p._swapSelfInParams = function(params) {
			var i = params.length,
				copy = params.concat();
			while (--i > -1) {
				if (params[i] === "{self}") {
					copy[i] = this;
				}
			}
			return copy;
		};

		p._callback = function(type) {
			var v = this.vars,
				callback = v[type],
				params = v[type + "Params"],
				scope = v[type + "Scope"] || v.callbackScope || this,
				l = params ? params.length : 0;
			switch (l) { //speed optimization; call() is faster than apply() so use it when there are only a few parameters (which is by far most common). Previously we simply did var v = this.vars; v[type].apply(v[type + "Scope"] || v.callbackScope || this, v[type + "Params"] || _blankArray);
				case 0: callback.call(scope); break;
				case 1: callback.call(scope, params[0]); break;
				case 2: callback.call(scope, params[0], params[1]); break;
				default: callback.apply(scope, params);
			}
		};

//----Animation getters/setters --------------------------------------------------------

		p.eventCallback = function(type, callback, params, scope) {
			if ((type || "").substr(0,2) === "on") {
				var v = this.vars;
				if (arguments.length === 1) {
					return v[type];
				}
				if (callback == null) {
					delete v[type];
				} else {
					v[type] = callback;
					v[type + "Params"] = (_isArray(params) && params.join("").indexOf("{self}") !== -1) ? this._swapSelfInParams(params) : params;
					v[type + "Scope"] = scope;
				}
				if (type === "onUpdate") {
					this._onUpdate = callback;
				}
			}
			return this;
		};

		p.delay = function(value) {
			if (!arguments.length) {
				return this._delay;
			}
			if (this._timeline.smoothChildTiming) {
				this.startTime( this._startTime + value - this._delay );
			}
			this._delay = value;
			return this;
		};

		p.duration = function(value) {
			if (!arguments.length) {
				this._dirty = false;
				return this._duration;
			}
			this._duration = this._totalDuration = value;
			this._uncache(true); //true in case it's a TweenMax or TimelineMax that has a repeat - we'll need to refresh the totalDuration.
			if (this._timeline.smoothChildTiming) if (this._time > 0) if (this._time < this._duration) if (value !== 0) {
				this.totalTime(this._totalTime * (value / this._duration), true);
			}
			return this;
		};

		p.totalDuration = function(value) {
			this._dirty = false;
			return (!arguments.length) ? this._totalDuration : this.duration(value);
		};

		p.time = function(value, suppressEvents) {
			if (!arguments.length) {
				return this._time;
			}
			if (this._dirty) {
				this.totalDuration();
			}
			return this.totalTime((value > this._duration) ? this._duration : value, suppressEvents);
		};

		p.totalTime = function(time, suppressEvents, uncapped) {
			if (!_tickerActive) {
				_ticker.wake();
			}
			if (!arguments.length) {
				return this._totalTime;
			}
			if (this._timeline) {
				if (time < 0 && !uncapped) {
					time += this.totalDuration();
				}
				if (this._timeline.smoothChildTiming) {
					if (this._dirty) {
						this.totalDuration();
					}
					var totalDuration = this._totalDuration,
						tl = this._timeline;
					if (time > totalDuration && !uncapped) {
						time = totalDuration;
					}
					this._startTime = (this._paused ? this._pauseTime : tl._time) - ((!this._reversed ? time : totalDuration - time) / this._timeScale);
					if (!tl._dirty) { //for performance improvement. If the parent's cache is already dirty, it already took care of marking the ancestors as dirty too, so skip the function call here.
						this._uncache(false);
					}
					//in case any of the ancestor timelines had completed but should now be enabled, we should reset their totalTime() which will also ensure that they're lined up properly and enabled. Skip for animations that are on the root (wasteful). Example: a TimelineLite.exportRoot() is performed when there's a paused tween on the root, the export will not complete until that tween is unpaused, but imagine a child gets restarted later, after all [unpaused] tweens have completed. The startTime of that child would get pushed out, but one of the ancestors may have completed.
					if (tl._timeline) {
						while (tl._timeline) {
							if (tl._timeline._time !== (tl._startTime + tl._totalTime) / tl._timeScale) {
								tl.totalTime(tl._totalTime, true);
							}
							tl = tl._timeline;
						}
					}
				}
				if (this._gc) {
					this._enabled(true, false);
				}
				if (this._totalTime !== time || this._duration === 0) {
					if (_lazyTweens.length) {
						_lazyRender();
					}
					this.render(time, suppressEvents, false);
					if (_lazyTweens.length) { //in case rendering caused any tweens to lazy-init, we should render them because typically when someone calls seek() or time() or progress(), they expect an immediate render.
						_lazyRender();
					}
				}
			}
			return this;
		};

		p.progress = p.totalProgress = function(value, suppressEvents) {
			var duration = this.duration();
			return (!arguments.length) ? (duration ? this._time / duration : this.ratio) : this.totalTime(duration * value, suppressEvents);
		};

		p.startTime = function(value) {
			if (!arguments.length) {
				return this._startTime;
			}
			if (value !== this._startTime) {
				this._startTime = value;
				if (this.timeline) if (this.timeline._sortChildren) {
					this.timeline.add(this, value - this._delay); //ensures that any necessary re-sequencing of Animations in the timeline occurs to make sure the rendering order is correct.
				}
			}
			return this;
		};

		p.endTime = function(includeRepeats) {
			return this._startTime + ((includeRepeats != false) ? this.totalDuration() : this.duration()) / this._timeScale;
		};

		p.timeScale = function(value) {
			if (!arguments.length) {
				return this._timeScale;
			}
			value = value || _tinyNum; //can't allow zero because it'll throw the math off
			if (this._timeline && this._timeline.smoothChildTiming) {
				var pauseTime = this._pauseTime,
					t = (pauseTime || pauseTime === 0) ? pauseTime : this._timeline.totalTime();
				this._startTime = t - ((t - this._startTime) * this._timeScale / value);
			}
			this._timeScale = value;
			return this._uncache(false);
		};

		p.reversed = function(value) {
			if (!arguments.length) {
				return this._reversed;
			}
			if (value != this._reversed) {
				this._reversed = value;
				this.totalTime(((this._timeline && !this._timeline.smoothChildTiming) ? this.totalDuration() - this._totalTime : this._totalTime), true);
			}
			return this;
		};

		p.paused = function(value) {
			if (!arguments.length) {
				return this._paused;
			}
			var tl = this._timeline,
				raw, elapsed;
			if (value != this._paused) if (tl) {
				if (!_tickerActive && !value) {
					_ticker.wake();
				}
				raw = tl.rawTime();
				elapsed = raw - this._pauseTime;
				if (!value && tl.smoothChildTiming) {
					this._startTime += elapsed;
					this._uncache(false);
				}
				this._pauseTime = value ? raw : null;
				this._paused = value;
				this._active = this.isActive();
				if (!value && elapsed !== 0 && this._initted && this.duration()) {
					raw = tl.smoothChildTiming ? this._totalTime : (raw - this._startTime) / this._timeScale;
					this.render(raw, (raw === this._totalTime), true); //in case the target's properties changed via some other tween or manual update by the user, we should force a render.
				}
			}
			if (this._gc && !value) {
				this._enabled(true, false);
			}
			return this;
		};


/*
 * ----------------------------------------------------------------
 * SimpleTimeline
 * ----------------------------------------------------------------
 */
		var SimpleTimeline = _class("core.SimpleTimeline", function(vars) {
			Animation.call(this, 0, vars);
			this.autoRemoveChildren = this.smoothChildTiming = true;
		});

		p = SimpleTimeline.prototype = new Animation();
		p.constructor = SimpleTimeline;
		p.kill()._gc = false;
		p._first = p._last = p._recent = null;
		p._sortChildren = false;

		p.add = p.insert = function(child, position, align, stagger) {
			var prevTween, st;
			child._startTime = Number(position || 0) + child._delay;
			if (child._paused) if (this !== child._timeline) { //we only adjust the _pauseTime if it wasn't in this timeline already. Remember, sometimes a tween will be inserted again into the same timeline when its startTime is changed so that the tweens in the TimelineLite/Max are re-ordered properly in the linked list (so everything renders in the proper order).
				child._pauseTime = child._startTime + ((this.rawTime() - child._startTime) / child._timeScale);
			}
			if (child.timeline) {
				child.timeline._remove(child, true); //removes from existing timeline so that it can be properly added to this one.
			}
			child.timeline = child._timeline = this;
			if (child._gc) {
				child._enabled(true, true);
			}
			prevTween = this._last;
			if (this._sortChildren) {
				st = child._startTime;
				while (prevTween && prevTween._startTime > st) {
					prevTween = prevTween._prev;
				}
			}
			if (prevTween) {
				child._next = prevTween._next;
				prevTween._next = child;
			} else {
				child._next = this._first;
				this._first = child;
			}
			if (child._next) {
				child._next._prev = child;
			} else {
				this._last = child;
			}
			child._prev = prevTween;
			this._recent = child;
			if (this._timeline) {
				this._uncache(true);
			}
			return this;
		};

		p._remove = function(tween, skipDisable) {
			if (tween.timeline === this) {
				if (!skipDisable) {
					tween._enabled(false, true);
				}

				if (tween._prev) {
					tween._prev._next = tween._next;
				} else if (this._first === tween) {
					this._first = tween._next;
				}
				if (tween._next) {
					tween._next._prev = tween._prev;
				} else if (this._last === tween) {
					this._last = tween._prev;
				}
				tween._next = tween._prev = tween.timeline = null;
				if (tween === this._recent) {
					this._recent = this._last;
				}

				if (this._timeline) {
					this._uncache(true);
				}
			}
			return this;
		};

		p.render = function(time, suppressEvents, force) {
			var tween = this._first,
				next;
			this._totalTime = this._time = this._rawPrevTime = time;
			while (tween) {
				next = tween._next; //record it here because the value could change after rendering...
				if (tween._active || (time >= tween._startTime && !tween._paused)) {
					if (!tween._reversed) {
						tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);
					} else {
						tween.render(((!tween._dirty) ? tween._totalDuration : tween.totalDuration()) - ((time - tween._startTime) * tween._timeScale), suppressEvents, force);
					}
				}
				tween = next;
			}
		};

		p.rawTime = function() {
			if (!_tickerActive) {
				_ticker.wake();
			}
			return this._totalTime;
		};

/*
 * ----------------------------------------------------------------
 * TweenLite
 * ----------------------------------------------------------------
 */
		var TweenLite = _class("TweenLite", function(target, duration, vars) {
				Animation.call(this, duration, vars);
				this.render = TweenLite.prototype.render; //speed optimization (avoid prototype lookup on this "hot" method)

				if (target == null) {
					throw "Cannot tween a null target.";
				}

				this.target = target = (typeof(target) !== "string") ? target : TweenLite.selector(target) || target;

				var isSelector = (target.jquery || (target.length && target !== window && target[0] && (target[0] === window || (target[0].nodeType && target[0].style && !target.nodeType)))),
					overwrite = this.vars.overwrite,
					i, targ, targets;

				this._overwrite = overwrite = (overwrite == null) ? _overwriteLookup[TweenLite.defaultOverwrite] : (typeof(overwrite) === "number") ? overwrite >> 0 : _overwriteLookup[overwrite];

				if ((isSelector || target instanceof Array || (target.push && _isArray(target))) && typeof(target[0]) !== "number") {
					this._targets = targets = _slice(target);  //don't use Array.prototype.slice.call(target, 0) because that doesn't work in IE8 with a NodeList that's returned by querySelectorAll()
					this._propLookup = [];
					this._siblings = [];
					for (i = 0; i < targets.length; i++) {
						targ = targets[i];
						if (!targ) {
							targets.splice(i--, 1);
							continue;
						} else if (typeof(targ) === "string") {
							targ = targets[i--] = TweenLite.selector(targ); //in case it's an array of strings
							if (typeof(targ) === "string") {
								targets.splice(i+1, 1); //to avoid an endless loop (can't imagine why the selector would return a string, but just in case)
							}
							continue;
						} else if (targ.length && targ !== window && targ[0] && (targ[0] === window || (targ[0].nodeType && targ[0].style && !targ.nodeType))) { //in case the user is passing in an array of selector objects (like jQuery objects), we need to check one more level and pull things out if necessary. Also note that <select> elements pass all the criteria regarding length and the first child having style, so we must also check to ensure the target isn't an HTML node itself.
							targets.splice(i--, 1);
							this._targets = targets = targets.concat(_slice(targ));
							continue;
						}
						this._siblings[i] = _register(targ, this, false);
						if (overwrite === 1) if (this._siblings[i].length > 1) {
							_applyOverwrite(targ, this, null, 1, this._siblings[i]);
						}
					}

				} else {
					this._propLookup = {};
					this._siblings = _register(target, this, false);
					if (overwrite === 1) if (this._siblings.length > 1) {
						_applyOverwrite(target, this, null, 1, this._siblings);
					}
				}
				if (this.vars.immediateRender || (duration === 0 && this._delay === 0 && this.vars.immediateRender !== false)) {
					this._time = -_tinyNum; //forces a render without having to set the render() "force" parameter to true because we want to allow lazying by default (using the "force" parameter always forces an immediate full render)
					this.render(Math.min(0, -this._delay)); //in case delay is negative
				}
			}, true),
			_isSelector = function(v) {
				return (v && v.length && v !== window && v[0] && (v[0] === window || (v[0].nodeType && v[0].style && !v.nodeType))); //we cannot check "nodeType" if the target is window from within an iframe, otherwise it will trigger a security error in some browsers like Firefox.
			},
			_autoCSS = function(vars, target) {
				var css = {},
					p;
				for (p in vars) {
					if (!_reservedProps[p] && (!(p in target) || p === "transform" || p === "x" || p === "y" || p === "width" || p === "height" || p === "className" || p === "border") && (!_plugins[p] || (_plugins[p] && _plugins[p]._autoCSS))) { //note: <img> elements contain read-only "x" and "y" properties. We should also prioritize editing css width/height rather than the element's properties.
						css[p] = vars[p];
						delete vars[p];
					}
				}
				vars.css = css;
			};

		p = TweenLite.prototype = new Animation();
		p.constructor = TweenLite;
		p.kill()._gc = false;

//----TweenLite defaults, overwrite management, and root updates ----------------------------------------------------

		p.ratio = 0;
		p._firstPT = p._targets = p._overwrittenProps = p._startAt = null;
		p._notifyPluginsOfEnabled = p._lazy = false;

		TweenLite.version = "1.19.0";
		TweenLite.defaultEase = p._ease = new Ease(null, null, 1, 1);
		TweenLite.defaultOverwrite = "auto";
		TweenLite.ticker = _ticker;
		TweenLite.autoSleep = 120;
		TweenLite.lagSmoothing = function(threshold, adjustedLag) {
			_ticker.lagSmoothing(threshold, adjustedLag);
		};

		TweenLite.selector = window.$ || window.jQuery || function(e) {
			var selector = window.$ || window.jQuery;
			if (selector) {
				TweenLite.selector = selector;
				return selector(e);
			}
			return (typeof(document) === "undefined") ? e : (document.querySelectorAll ? document.querySelectorAll(e) : document.getElementById((e.charAt(0) === "#") ? e.substr(1) : e));
		};

		var _lazyTweens = [],
			_lazyLookup = {},
			_numbersExp = /(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/ig,
			//_nonNumbersExp = /(?:([\-+](?!(\d|=)))|[^\d\-+=e]|(e(?![\-+][\d])))+/ig,
			_setRatio = function(v) {
				var pt = this._firstPT,
					min = 0.000001,
					val;
				while (pt) {
					val = !pt.blob ? pt.c * v + pt.s : v ? this.join("") : this.start;
					if (pt.m) {
						val = pt.m(val, this._target || pt.t);
					} else if (val < min) if (val > -min) { //prevents issues with converting very small numbers to strings in the browser
						val = 0;
					}
					if (!pt.f) {
						pt.t[pt.p] = val;
					} else if (pt.fp) {
						pt.t[pt.p](pt.fp, val);
					} else {
						pt.t[pt.p](val);
					}
					pt = pt._next;
				}
			},
			//compares two strings (start/end), finds the numbers that are different and spits back an array representing the whole value but with the changing values isolated as elements. For example, "rgb(0,0,0)" and "rgb(100,50,0)" would become ["rgb(", 0, ",", 50, ",0)"]. Notice it merges the parts that are identical (performance optimization). The array also has a linked list of PropTweens attached starting with _firstPT that contain the tweening data (t, p, s, c, f, etc.). It also stores the starting value as a "start" property so that we can revert to it if/when necessary, like when a tween rewinds fully. If the quantity of numbers differs between the start and end, it will always prioritize the end value(s). The pt parameter is optional - it's for a PropTween that will be appended to the end of the linked list and is typically for actually setting the value after all of the elements have been updated (with array.join("")).
			_blobDif = function(start, end, filter, pt) {
				var a = [start, end],
					charIndex = 0,
					s = "",
					color = 0,
					startNums, endNums, num, i, l, nonNumbers, currentNum;
				a.start = start;
				if (filter) {
					filter(a); //pass an array with the starting and ending values and let the filter do whatever it needs to the values.
					start = a[0];
					end = a[1];
				}
				a.length = 0;
				startNums = start.match(_numbersExp) || [];
				endNums = end.match(_numbersExp) || [];
				if (pt) {
					pt._next = null;
					pt.blob = 1;
					a._firstPT = a._applyPT = pt; //apply last in the linked list (which means inserting it first)
				}
				l = endNums.length;
				for (i = 0; i < l; i++) {
					currentNum = endNums[i];
					nonNumbers = end.substr(charIndex, end.indexOf(currentNum, charIndex)-charIndex);
					s += (nonNumbers || !i) ? nonNumbers : ","; //note: SVG spec allows omission of comma/space when a negative sign is wedged between two numbers, like 2.5-5.3 instead of 2.5,-5.3 but when tweening, the negative value may switch to positive, so we insert the comma just in case.
					charIndex += nonNumbers.length;
					if (color) { //sense rgba() values and round them.
						color = (color + 1) % 5;
					} else if (nonNumbers.substr(-5) === "rgba(") {
						color = 1;
					}
					if (currentNum === startNums[i] || startNums.length <= i) {
						s += currentNum;
					} else {
						if (s) {
							a.push(s);
							s = "";
						}
						num = parseFloat(startNums[i]);
						a.push(num);
						a._firstPT = {_next: a._firstPT, t:a, p: a.length-1, s:num, c:((currentNum.charAt(1) === "=") ? parseInt(currentNum.charAt(0) + "1", 10) * parseFloat(currentNum.substr(2)) : (parseFloat(currentNum) - num)) || 0, f:0, m:(color && color < 4) ? Math.round : 0};
						//note: we don't set _prev because we'll never need to remove individual PropTweens from this list.
					}
					charIndex += currentNum.length;
				}
				s += end.substr(charIndex);
				if (s) {
					a.push(s);
				}
				a.setRatio = _setRatio;
				return a;
			},
			//note: "funcParam" is only necessary for function-based getters/setters that require an extra parameter like getAttribute("width") and setAttribute("width", value). In this example, funcParam would be "width". Used by AttrPlugin for example.
			_addPropTween = function(target, prop, start, end, overwriteProp, mod, funcParam, stringFilter, index) {
				if (typeof(end) === "function") {
					end = end(index || 0, target);
				}
				var s = (start === "get") ? target[prop] : start,
					type = typeof(target[prop]),
					isRelative = (typeof(end) === "string" && end.charAt(1) === "="),
					pt = {t:target, p:prop, s:s, f:(type === "function"), pg:0, n:overwriteProp || prop, m:(!mod ? 0 : (typeof(mod) === "function") ? mod : Math.round), pr:0, c:isRelative ? parseInt(end.charAt(0) + "1", 10) * parseFloat(end.substr(2)) : (parseFloat(end) - s) || 0},
					blob, getterName;
				if (type !== "number") {
					if (type === "function" && start === "get") {
						getterName = ((prop.indexOf("set") || typeof(target["get" + prop.substr(3)]) !== "function") ? prop : "get" + prop.substr(3));
						pt.s = s = funcParam ? target[getterName](funcParam) : target[getterName]();
					}
					if (typeof(s) === "string" && (funcParam || isNaN(s))) {
						//a blob (string that has multiple numbers in it)
						pt.fp = funcParam;
						blob = _blobDif(s, end, stringFilter || TweenLite.defaultStringFilter, pt);
						pt = {t:blob, p:"setRatio", s:0, c:1, f:2, pg:0, n:overwriteProp || prop, pr:0, m:0}; //"2" indicates it's a Blob property tween. Needed for RoundPropsPlugin for example.
					} else if (!isRelative) {
						pt.s = parseFloat(s);
						pt.c = (parseFloat(end) - pt.s) || 0;
					}
				}
				if (pt.c) { //only add it to the linked list if there's a change.
					if ((pt._next = this._firstPT)) {
						pt._next._prev = pt;
					}
					this._firstPT = pt;
					return pt;
				}
			},
			_internals = TweenLite._internals = {isArray:_isArray, isSelector:_isSelector, lazyTweens:_lazyTweens, blobDif:_blobDif}, //gives us a way to expose certain private values to other GreenSock classes without contaminating tha main TweenLite object.
			_plugins = TweenLite._plugins = {},
			_tweenLookup = _internals.tweenLookup = {},
			_tweenLookupNum = 0,
			_reservedProps = _internals.reservedProps = {ease:1, delay:1, overwrite:1, onComplete:1, onCompleteParams:1, onCompleteScope:1, useFrames:1, runBackwards:1, startAt:1, onUpdate:1, onUpdateParams:1, onUpdateScope:1, onStart:1, onStartParams:1, onStartScope:1, onReverseComplete:1, onReverseCompleteParams:1, onReverseCompleteScope:1, onRepeat:1, onRepeatParams:1, onRepeatScope:1, easeParams:1, yoyo:1, immediateRender:1, repeat:1, repeatDelay:1, data:1, paused:1, reversed:1, autoCSS:1, lazy:1, onOverwrite:1, callbackScope:1, stringFilter:1, id:1},
			_overwriteLookup = {none:0, all:1, auto:2, concurrent:3, allOnStart:4, preexisting:5, "true":1, "false":0},
			_rootFramesTimeline = Animation._rootFramesTimeline = new SimpleTimeline(),
			_rootTimeline = Animation._rootTimeline = new SimpleTimeline(),
			_nextGCFrame = 30,
			_lazyRender = _internals.lazyRender = function() {
				var i = _lazyTweens.length,
					tween;
				_lazyLookup = {};
				while (--i > -1) {
					tween = _lazyTweens[i];
					if (tween && tween._lazy !== false) {
						tween.render(tween._lazy[0], tween._lazy[1], true);
						tween._lazy = false;
					}
				}
				_lazyTweens.length = 0;
			};

		_rootTimeline._startTime = _ticker.time;
		_rootFramesTimeline._startTime = _ticker.frame;
		_rootTimeline._active = _rootFramesTimeline._active = true;
		setTimeout(_lazyRender, 1); //on some mobile devices, there isn't a "tick" before code runs which means any lazy renders wouldn't run before the next official "tick".

		Animation._updateRoot = TweenLite.render = function() {
				var i, a, p;
				if (_lazyTweens.length) { //if code is run outside of the requestAnimationFrame loop, there may be tweens queued AFTER the engine refreshed, so we need to ensure any pending renders occur before we refresh again.
					_lazyRender();
				}
				_rootTimeline.render((_ticker.time - _rootTimeline._startTime) * _rootTimeline._timeScale, false, false);
				_rootFramesTimeline.render((_ticker.frame - _rootFramesTimeline._startTime) * _rootFramesTimeline._timeScale, false, false);
				if (_lazyTweens.length) {
					_lazyRender();
				}
				if (_ticker.frame >= _nextGCFrame) { //dump garbage every 120 frames or whatever the user sets TweenLite.autoSleep to
					_nextGCFrame = _ticker.frame + (parseInt(TweenLite.autoSleep, 10) || 120);
					for (p in _tweenLookup) {
						a = _tweenLookup[p].tweens;
						i = a.length;
						while (--i > -1) {
							if (a[i]._gc) {
								a.splice(i, 1);
							}
						}
						if (a.length === 0) {
							delete _tweenLookup[p];
						}
					}
					//if there are no more tweens in the root timelines, or if they're all paused, make the _timer sleep to reduce load on the CPU slightly
					p = _rootTimeline._first;
					if (!p || p._paused) if (TweenLite.autoSleep && !_rootFramesTimeline._first && _ticker._listeners.tick.length === 1) {
						while (p && p._paused) {
							p = p._next;
						}
						if (!p) {
							_ticker.sleep();
						}
					}
				}
			};

		_ticker.addEventListener("tick", Animation._updateRoot);

		var _register = function(target, tween, scrub) {
				var id = target._gsTweenID, a, i;
				if (!_tweenLookup[id || (target._gsTweenID = id = "t" + (_tweenLookupNum++))]) {
					_tweenLookup[id] = {target:target, tweens:[]};
				}
				if (tween) {
					a = _tweenLookup[id].tweens;
					a[(i = a.length)] = tween;
					if (scrub) {
						while (--i > -1) {
							if (a[i] === tween) {
								a.splice(i, 1);
							}
						}
					}
				}
				return _tweenLookup[id].tweens;
			},
			_onOverwrite = function(overwrittenTween, overwritingTween, target, killedProps) {
				var func = overwrittenTween.vars.onOverwrite, r1, r2;
				if (func) {
					r1 = func(overwrittenTween, overwritingTween, target, killedProps);
				}
				func = TweenLite.onOverwrite;
				if (func) {
					r2 = func(overwrittenTween, overwritingTween, target, killedProps);
				}
				return (r1 !== false && r2 !== false);
			},
			_applyOverwrite = function(target, tween, props, mode, siblings) {
				var i, changed, curTween, l;
				if (mode === 1 || mode >= 4) {
					l = siblings.length;
					for (i = 0; i < l; i++) {
						if ((curTween = siblings[i]) !== tween) {
							if (!curTween._gc) {
								if (curTween._kill(null, target, tween)) {
									changed = true;
								}
							}
						} else if (mode === 5) {
							break;
						}
					}
					return changed;
				}
				//NOTE: Add 0.0000000001 to overcome floating point errors that can cause the startTime to be VERY slightly off (when a tween's time() is set for example)
				var startTime = tween._startTime + _tinyNum,
					overlaps = [],
					oCount = 0,
					zeroDur = (tween._duration === 0),
					globalStart;
				i = siblings.length;
				while (--i > -1) {
					if ((curTween = siblings[i]) === tween || curTween._gc || curTween._paused) {
						//ignore
					} else if (curTween._timeline !== tween._timeline) {
						globalStart = globalStart || _checkOverlap(tween, 0, zeroDur);
						if (_checkOverlap(curTween, globalStart, zeroDur) === 0) {
							overlaps[oCount++] = curTween;
						}
					} else if (curTween._startTime <= startTime) if (curTween._startTime + curTween.totalDuration() / curTween._timeScale > startTime) if (!((zeroDur || !curTween._initted) && startTime - curTween._startTime <= 0.0000000002)) {
						overlaps[oCount++] = curTween;
					}
				}

				i = oCount;
				while (--i > -1) {
					curTween = overlaps[i];
					if (mode === 2) if (curTween._kill(props, target, tween)) {
						changed = true;
					}
					if (mode !== 2 || (!curTween._firstPT && curTween._initted)) {
						if (mode !== 2 && !_onOverwrite(curTween, tween)) {
							continue;
						}
						if (curTween._enabled(false, false)) { //if all property tweens have been overwritten, kill the tween.
							changed = true;
						}
					}
				}
				return changed;
			},
			_checkOverlap = function(tween, reference, zeroDur) {
				var tl = tween._timeline,
					ts = tl._timeScale,
					t = tween._startTime;
				while (tl._timeline) {
					t += tl._startTime;
					ts *= tl._timeScale;
					if (tl._paused) {
						return -100;
					}
					tl = tl._timeline;
				}
				t /= ts;
				return (t > reference) ? t - reference : ((zeroDur && t === reference) || (!tween._initted && t - reference < 2 * _tinyNum)) ? _tinyNum : ((t += tween.totalDuration() / tween._timeScale / ts) > reference + _tinyNum) ? 0 : t - reference - _tinyNum;
			};


//---- TweenLite instance methods -----------------------------------------------------------------------------

		p._init = function() {
			var v = this.vars,
				op = this._overwrittenProps,
				dur = this._duration,
				immediate = !!v.immediateRender,
				ease = v.ease,
				i, initPlugins, pt, p, startVars, l;
			if (v.startAt) {
				if (this._startAt) {
					this._startAt.render(-1, true); //if we've run a startAt previously (when the tween instantiated), we should revert it so that the values re-instantiate correctly particularly for relative tweens. Without this, a TweenLite.fromTo(obj, 1, {x:"+=100"}, {x:"-=100"}), for example, would actually jump to +=200 because the startAt would run twice, doubling the relative change.
					this._startAt.kill();
				}
				startVars = {};
				for (p in v.startAt) { //copy the properties/values into a new object to avoid collisions, like var to = {x:0}, from = {x:500}; timeline.fromTo(e, 1, from, to).fromTo(e, 1, to, from);
					startVars[p] = v.startAt[p];
				}
				startVars.overwrite = false;
				startVars.immediateRender = true;
				startVars.lazy = (immediate && v.lazy !== false);
				startVars.startAt = startVars.delay = null; //no nesting of startAt objects allowed (otherwise it could cause an infinite loop).
				this._startAt = TweenLite.to(this.target, 0, startVars);
				if (immediate) {
					if (this._time > 0) {
						this._startAt = null; //tweens that render immediately (like most from() and fromTo() tweens) shouldn't revert when their parent timeline's playhead goes backward past the startTime because the initial render could have happened anytime and it shouldn't be directly correlated to this tween's startTime. Imagine setting up a complex animation where the beginning states of various objects are rendered immediately but the tween doesn't happen for quite some time - if we revert to the starting values as soon as the playhead goes backward past the tween's startTime, it will throw things off visually. Reversion should only happen in TimelineLite/Max instances where immediateRender was false (which is the default in the convenience methods like from()).
					} else if (dur !== 0) {
						return; //we skip initialization here so that overwriting doesn't occur until the tween actually begins. Otherwise, if you create several immediateRender:true tweens of the same target/properties to drop into a TimelineLite or TimelineMax, the last one created would overwrite the first ones because they didn't get placed into the timeline yet before the first render occurs and kicks in overwriting.
					}
				}
			} else if (v.runBackwards && dur !== 0) {
				//from() tweens must be handled uniquely: their beginning values must be rendered but we don't want overwriting to occur yet (when time is still 0). Wait until the tween actually begins before doing all the routines like overwriting. At that time, we should render at the END of the tween to ensure that things initialize correctly (remember, from() tweens go backwards)
				if (this._startAt) {
					this._startAt.render(-1, true);
					this._startAt.kill();
					this._startAt = null;
				} else {
					if (this._time !== 0) { //in rare cases (like if a from() tween runs and then is invalidate()-ed), immediateRender could be true but the initial forced-render gets skipped, so there's no need to force the render in this context when the _time is greater than 0
						immediate = false;
					}
					pt = {};
					for (p in v) { //copy props into a new object and skip any reserved props, otherwise onComplete or onUpdate or onStart could fire. We should, however, permit autoCSS to go through.
						if (!_reservedProps[p] || p === "autoCSS") {
							pt[p] = v[p];
						}
					}
					pt.overwrite = 0;
					pt.data = "isFromStart"; //we tag the tween with as "isFromStart" so that if [inside a plugin] we need to only do something at the very END of a tween, we have a way of identifying this tween as merely the one that's setting the beginning values for a "from()" tween. For example, clearProps in CSSPlugin should only get applied at the very END of a tween and without this tag, from(...{height:100, clearProps:"height", delay:1}) would wipe the height at the beginning of the tween and after 1 second, it'd kick back in.
					pt.lazy = (immediate && v.lazy !== false);
					pt.immediateRender = immediate; //zero-duration tweens render immediately by default, but if we're not specifically instructed to render this tween immediately, we should skip this and merely _init() to record the starting values (rendering them immediately would push them to completion which is wasteful in that case - we'd have to render(-1) immediately after)
					this._startAt = TweenLite.to(this.target, 0, pt);
					if (!immediate) {
						this._startAt._init(); //ensures that the initial values are recorded
						this._startAt._enabled(false); //no need to have the tween render on the next cycle. Disable it because we'll always manually control the renders of the _startAt tween.
						if (this.vars.immediateRender) {
							this._startAt = null;
						}
					} else if (this._time === 0) {
						return;
					}
				}
			}
			this._ease = ease = (!ease) ? TweenLite.defaultEase : (ease instanceof Ease) ? ease : (typeof(ease) === "function") ? new Ease(ease, v.easeParams) : _easeMap[ease] || TweenLite.defaultEase;
			if (v.easeParams instanceof Array && ease.config) {
				this._ease = ease.config.apply(ease, v.easeParams);
			}
			this._easeType = this._ease._type;
			this._easePower = this._ease._power;
			this._firstPT = null;

			if (this._targets) {
				l = this._targets.length;
				for (i = 0; i < l; i++) {
					if ( this._initProps( this._targets[i], (this._propLookup[i] = {}), this._siblings[i], (op ? op[i] : null), i) ) {
						initPlugins = true;
					}
				}
			} else {
				initPlugins = this._initProps(this.target, this._propLookup, this._siblings, op, 0);
			}

			if (initPlugins) {
				TweenLite._onPluginEvent("_onInitAllProps", this); //reorders the array in order of priority. Uses a static TweenPlugin method in order to minimize file size in TweenLite
			}
			if (op) if (!this._firstPT) if (typeof(this.target) !== "function") { //if all tweening properties have been overwritten, kill the tween. If the target is a function, it's probably a delayedCall so let it live.
				this._enabled(false, false);
			}
			if (v.runBackwards) {
				pt = this._firstPT;
				while (pt) {
					pt.s += pt.c;
					pt.c = -pt.c;
					pt = pt._next;
				}
			}
			this._onUpdate = v.onUpdate;
			this._initted = true;
		};

		p._initProps = function(target, propLookup, siblings, overwrittenProps, index) {
			var p, i, initPlugins, plugin, pt, v;
			if (target == null) {
				return false;
			}

			if (_lazyLookup[target._gsTweenID]) {
				_lazyRender(); //if other tweens of the same target have recently initted but haven't rendered yet, we've got to force the render so that the starting values are correct (imagine populating a timeline with a bunch of sequential tweens and then jumping to the end)
			}

			if (!this.vars.css) if (target.style) if (target !== window && target.nodeType) if (_plugins.css) if (this.vars.autoCSS !== false) { //it's so common to use TweenLite/Max to animate the css of DOM elements, we assume that if the target is a DOM element, that's what is intended (a convenience so that users don't have to wrap things in css:{}, although we still recommend it for a slight performance boost and better specificity). Note: we cannot check "nodeType" on the window inside an iframe.
				_autoCSS(this.vars, target);
			}
			for (p in this.vars) {
				v = this.vars[p];
				if (_reservedProps[p]) {
					if (v) if ((v instanceof Array) || (v.push && _isArray(v))) if (v.join("").indexOf("{self}") !== -1) {
						this.vars[p] = v = this._swapSelfInParams(v, this);
					}

				} else if (_plugins[p] && (plugin = new _plugins[p]())._onInitTween(target, this.vars[p], this, index)) {

					//t - target 		[object]
					//p - property 		[string]
					//s - start			[number]
					//c - change		[number]
					//f - isFunction	[boolean]
					//n - name			[string]
					//pg - isPlugin 	[boolean]
					//pr - priority		[number]
					//m - mod           [function | 0]
					this._firstPT = pt = {_next:this._firstPT, t:plugin, p:"setRatio", s:0, c:1, f:1, n:p, pg:1, pr:plugin._priority, m:0};
					i = plugin._overwriteProps.length;
					while (--i > -1) {
						propLookup[plugin._overwriteProps[i]] = this._firstPT;
					}
					if (plugin._priority || plugin._onInitAllProps) {
						initPlugins = true;
					}
					if (plugin._onDisable || plugin._onEnable) {
						this._notifyPluginsOfEnabled = true;
					}
					if (pt._next) {
						pt._next._prev = pt;
					}

				} else {
					propLookup[p] = _addPropTween.call(this, target, p, "get", v, p, 0, null, this.vars.stringFilter, index);
				}
			}

			if (overwrittenProps) if (this._kill(overwrittenProps, target)) { //another tween may have tried to overwrite properties of this tween before init() was called (like if two tweens start at the same time, the one created second will run first)
				return this._initProps(target, propLookup, siblings, overwrittenProps, index);
			}
			if (this._overwrite > 1) if (this._firstPT) if (siblings.length > 1) if (_applyOverwrite(target, this, propLookup, this._overwrite, siblings)) {
				this._kill(propLookup, target);
				return this._initProps(target, propLookup, siblings, overwrittenProps, index);
			}
			if (this._firstPT) if ((this.vars.lazy !== false && this._duration) || (this.vars.lazy && !this._duration)) { //zero duration tweens don't lazy render by default; everything else does.
				_lazyLookup[target._gsTweenID] = true;
			}
			return initPlugins;
		};

		p.render = function(time, suppressEvents, force) {
			var prevTime = this._time,
				duration = this._duration,
				prevRawPrevTime = this._rawPrevTime,
				isComplete, callback, pt, rawPrevTime;
			if (time >= duration - 0.0000001) { //to work around occasional floating point math artifacts.
				this._totalTime = this._time = duration;
				this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1;
				if (!this._reversed ) {
					isComplete = true;
					callback = "onComplete";
					force = (force || this._timeline.autoRemoveChildren); //otherwise, if the animation is unpaused/activated after it's already finished, it doesn't get removed from the parent timeline.
				}
				if (duration === 0) if (this._initted || !this.vars.lazy || force) { //zero-duration tweens are tricky because we must discern the momentum/direction of time in order to determine whether the starting values should be rendered or the ending values. If the "playhead" of its timeline goes past the zero-duration tween in the forward direction or lands directly on it, the end values should be rendered, but if the timeline's "playhead" moves past it in the backward direction (from a postitive time to a negative time), the starting values must be rendered.
					if (this._startTime === this._timeline._duration) { //if a zero-duration tween is at the VERY end of a timeline and that timeline renders at its end, it will typically add a tiny bit of cushion to the render time to prevent rounding errors from getting in the way of tweens rendering their VERY end. If we then reverse() that timeline, the zero-duration tween will trigger its onReverseComplete even though technically the playhead didn't pass over it again. It's a very specific edge case we must accommodate.
						time = 0;
					}
					if (prevRawPrevTime < 0 || (time <= 0 && time >= -0.0000001) || (prevRawPrevTime === _tinyNum && this.data !== "isPause")) if (prevRawPrevTime !== time) { //note: when this.data is "isPause", it's a callback added by addPause() on a timeline that we should not be triggered when LEAVING its exact start time. In other words, tl.addPause(1).play(1) shouldn't pause.
						force = true;
						if (prevRawPrevTime > _tinyNum) {
							callback = "onReverseComplete";
						}
					}
					this._rawPrevTime = rawPrevTime = (!suppressEvents || time || prevRawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.
				}

			} else if (time < 0.0000001) { //to work around occasional floating point math artifacts, round super small values to 0.
				this._totalTime = this._time = 0;
				this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;
				if (prevTime !== 0 || (duration === 0 && prevRawPrevTime > 0)) {
					callback = "onReverseComplete";
					isComplete = this._reversed;
				}
				if (time < 0) {
					this._active = false;
					if (duration === 0) if (this._initted || !this.vars.lazy || force) { //zero-duration tweens are tricky because we must discern the momentum/direction of time in order to determine whether the starting values should be rendered or the ending values. If the "playhead" of its timeline goes past the zero-duration tween in the forward direction or lands directly on it, the end values should be rendered, but if the timeline's "playhead" moves past it in the backward direction (from a postitive time to a negative time), the starting values must be rendered.
						if (prevRawPrevTime >= 0 && !(prevRawPrevTime === _tinyNum && this.data === "isPause")) {
							force = true;
						}
						this._rawPrevTime = rawPrevTime = (!suppressEvents || time || prevRawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.
					}
				}
				if (!this._initted) { //if we render the very beginning (time == 0) of a fromTo(), we must force the render (normal tweens wouldn't need to render at a time of 0 when the prevTime was also 0). This is also mandatory to make sure overwriting kicks in immediately.
					force = true;
				}
			} else {
				this._totalTime = this._time = time;

				if (this._easeType) {
					var r = time / duration, type = this._easeType, pow = this._easePower;
					if (type === 1 || (type === 3 && r >= 0.5)) {
						r = 1 - r;
					}
					if (type === 3) {
						r *= 2;
					}
					if (pow === 1) {
						r *= r;
					} else if (pow === 2) {
						r *= r * r;
					} else if (pow === 3) {
						r *= r * r * r;
					} else if (pow === 4) {
						r *= r * r * r * r;
					}

					if (type === 1) {
						this.ratio = 1 - r;
					} else if (type === 2) {
						this.ratio = r;
					} else if (time / duration < 0.5) {
						this.ratio = r / 2;
					} else {
						this.ratio = 1 - (r / 2);
					}

				} else {
					this.ratio = this._ease.getRatio(time / duration);
				}
			}

			if (this._time === prevTime && !force) {
				return;
			} else if (!this._initted) {
				this._init();
				if (!this._initted || this._gc) { //immediateRender tweens typically won't initialize until the playhead advances (_time is greater than 0) in order to ensure that overwriting occurs properly. Also, if all of the tweening properties have been overwritten (which would cause _gc to be true, as set in _init()), we shouldn't continue otherwise an onStart callback could be called for example.
					return;
				} else if (!force && this._firstPT && ((this.vars.lazy !== false && this._duration) || (this.vars.lazy && !this._duration))) {
					this._time = this._totalTime = prevTime;
					this._rawPrevTime = prevRawPrevTime;
					_lazyTweens.push(this);
					this._lazy = [time, suppressEvents];
					return;
				}
				//_ease is initially set to defaultEase, so now that init() has run, _ease is set properly and we need to recalculate the ratio. Overall this is faster than using conditional logic earlier in the method to avoid having to set ratio twice because we only init() once but renderTime() gets called VERY frequently.
				if (this._time && !isComplete) {
					this.ratio = this._ease.getRatio(this._time / duration);
				} else if (isComplete && this._ease._calcEnd) {
					this.ratio = this._ease.getRatio((this._time === 0) ? 0 : 1);
				}
			}
			if (this._lazy !== false) { //in case a lazy render is pending, we should flush it because the new render is occurring now (imagine a lazy tween instantiating and then immediately the user calls tween.seek(tween.duration()), skipping to the end - the end render would be forced, and then if we didn't flush the lazy render, it'd fire AFTER the seek(), rendering it at the wrong time.
				this._lazy = false;
			}
			if (!this._active) if (!this._paused && this._time !== prevTime && time >= 0) {
				this._active = true;  //so that if the user renders a tween (as opposed to the timeline rendering it), the timeline is forced to re-render and align it with the proper time/frame on the next rendering cycle. Maybe the tween already finished but the user manually re-renders it as halfway done.
			}
			if (prevTime === 0) {
				if (this._startAt) {
					if (time >= 0) {
						this._startAt.render(time, suppressEvents, force);
					} else if (!callback) {
						callback = "_dummyGS"; //if no callback is defined, use a dummy value just so that the condition at the end evaluates as true because _startAt should render AFTER the normal render loop when the time is negative. We could handle this in a more intuitive way, of course, but the render loop is the MOST important thing to optimize, so this technique allows us to avoid adding extra conditional logic in a high-frequency area.
					}
				}
				if (this.vars.onStart) if (this._time !== 0 || duration === 0) if (!suppressEvents) {
					this._callback("onStart");
				}
			}
			pt = this._firstPT;
			while (pt) {
				if (pt.f) {
					pt.t[pt.p](pt.c * this.ratio + pt.s);
				} else {
					pt.t[pt.p] = pt.c * this.ratio + pt.s;
				}
				pt = pt._next;
			}

			if (this._onUpdate) {
				if (time < 0) if (this._startAt && time !== -0.0001) { //if the tween is positioned at the VERY beginning (_startTime 0) of its parent timeline, it's illegal for the playhead to go back further, so we should not render the recorded startAt values.
					this._startAt.render(time, suppressEvents, force); //note: for performance reasons, we tuck this conditional logic inside less traveled areas (most tweens don't have an onUpdate). We'd just have it at the end before the onComplete, but the values should be updated before any onUpdate is called, so we ALSO put it here and then if it's not called, we do so later near the onComplete.
				}
				if (!suppressEvents) if (this._time !== prevTime || isComplete || force) {
					this._callback("onUpdate");
				}
			}
			if (callback) if (!this._gc || force) { //check _gc because there's a chance that kill() could be called in an onUpdate
				if (time < 0 && this._startAt && !this._onUpdate && time !== -0.0001) { //-0.0001 is a special value that we use when looping back to the beginning of a repeated TimelineMax, in which case we shouldn't render the _startAt values.
					this._startAt.render(time, suppressEvents, force);
				}
				if (isComplete) {
					if (this._timeline.autoRemoveChildren) {
						this._enabled(false, false);
					}
					this._active = false;
				}
				if (!suppressEvents && this.vars[callback]) {
					this._callback(callback);
				}
				if (duration === 0 && this._rawPrevTime === _tinyNum && rawPrevTime !== _tinyNum) { //the onComplete or onReverseComplete could trigger movement of the playhead and for zero-duration tweens (which must discern direction) that land directly back on their start time, we don't want to fire again on the next render. Think of several addPause()'s in a timeline that forces the playhead to a certain spot, but what if it's already paused and another tween is tweening the "time" of the timeline? Each time it moves [forward] past that spot, it would move back, and since suppressEvents is true, it'd reset _rawPrevTime to _tinyNum so that when it begins again, the callback would fire (so ultimately it could bounce back and forth during that tween). Again, this is a very uncommon scenario, but possible nonetheless.
					this._rawPrevTime = 0;
				}
			}
		};

		p._kill = function(vars, target, overwritingTween) {
			if (vars === "all") {
				vars = null;
			}
			if (vars == null) if (target == null || target === this.target) {
				this._lazy = false;
				return this._enabled(false, false);
			}
			target = (typeof(target) !== "string") ? (target || this._targets || this.target) : TweenLite.selector(target) || target;
			var simultaneousOverwrite = (overwritingTween && this._time && overwritingTween._startTime === this._startTime && this._timeline === overwritingTween._timeline),
				i, overwrittenProps, p, pt, propLookup, changed, killProps, record, killed;
			if ((_isArray(target) || _isSelector(target)) && typeof(target[0]) !== "number") {
				i = target.length;
				while (--i > -1) {
					if (this._kill(vars, target[i], overwritingTween)) {
						changed = true;
					}
				}
			} else {
				if (this._targets) {
					i = this._targets.length;
					while (--i > -1) {
						if (target === this._targets[i]) {
							propLookup = this._propLookup[i] || {};
							this._overwrittenProps = this._overwrittenProps || [];
							overwrittenProps = this._overwrittenProps[i] = vars ? this._overwrittenProps[i] || {} : "all";
							break;
						}
					}
				} else if (target !== this.target) {
					return false;
				} else {
					propLookup = this._propLookup;
					overwrittenProps = this._overwrittenProps = vars ? this._overwrittenProps || {} : "all";
				}

				if (propLookup) {
					killProps = vars || propLookup;
					record = (vars !== overwrittenProps && overwrittenProps !== "all" && vars !== propLookup && (typeof(vars) !== "object" || !vars._tempKill)); //_tempKill is a super-secret way to delete a particular tweening property but NOT have it remembered as an official overwritten property (like in BezierPlugin)
					if (overwritingTween && (TweenLite.onOverwrite || this.vars.onOverwrite)) {
						for (p in killProps) {
							if (propLookup[p]) {
								if (!killed) {
									killed = [];
								}
								killed.push(p);
							}
						}
						if ((killed || !vars) && !_onOverwrite(this, overwritingTween, target, killed)) { //if the onOverwrite returned false, that means the user wants to override the overwriting (cancel it).
							return false;
						}
					}

					for (p in killProps) {
						if ((pt = propLookup[p])) {
							if (simultaneousOverwrite) { //if another tween overwrites this one and they both start at exactly the same time, yet this tween has already rendered once (for example, at 0.001) because it's first in the queue, we should revert the values to where they were at 0 so that the starting values aren't contaminated on the overwriting tween.
								if (pt.f) {
									pt.t[pt.p](pt.s);
								} else {
									pt.t[pt.p] = pt.s;
								}
								changed = true;
							}
							if (pt.pg && pt.t._kill(killProps)) {
								changed = true; //some plugins need to be notified so they can perform cleanup tasks first
							}
							if (!pt.pg || pt.t._overwriteProps.length === 0) {
								if (pt._prev) {
									pt._prev._next = pt._next;
								} else if (pt === this._firstPT) {
									this._firstPT = pt._next;
								}
								if (pt._next) {
									pt._next._prev = pt._prev;
								}
								pt._next = pt._prev = null;
							}
							delete propLookup[p];
						}
						if (record) {
							overwrittenProps[p] = 1;
						}
					}
					if (!this._firstPT && this._initted) { //if all tweening properties are killed, kill the tween. Without this line, if there's a tween with multiple targets and then you killTweensOf() each target individually, the tween would technically still remain active and fire its onComplete even though there aren't any more properties tweening.
						this._enabled(false, false);
					}
				}
			}
			return changed;
		};

		p.invalidate = function() {
			if (this._notifyPluginsOfEnabled) {
				TweenLite._onPluginEvent("_onDisable", this);
			}
			this._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null;
			this._notifyPluginsOfEnabled = this._active = this._lazy = false;
			this._propLookup = (this._targets) ? {} : [];
			Animation.prototype.invalidate.call(this);
			if (this.vars.immediateRender) {
				this._time = -_tinyNum; //forces a render without having to set the render() "force" parameter to true because we want to allow lazying by default (using the "force" parameter always forces an immediate full render)
				this.render(Math.min(0, -this._delay)); //in case delay is negative.
			}
			return this;
		};

		p._enabled = function(enabled, ignoreTimeline) {
			if (!_tickerActive) {
				_ticker.wake();
			}
			if (enabled && this._gc) {
				var targets = this._targets,
					i;
				if (targets) {
					i = targets.length;
					while (--i > -1) {
						this._siblings[i] = _register(targets[i], this, true);
					}
				} else {
					this._siblings = _register(this.target, this, true);
				}
			}
			Animation.prototype._enabled.call(this, enabled, ignoreTimeline);
			if (this._notifyPluginsOfEnabled) if (this._firstPT) {
				return TweenLite._onPluginEvent((enabled ? "_onEnable" : "_onDisable"), this);
			}
			return false;
		};


//----TweenLite static methods -----------------------------------------------------

		TweenLite.to = function(target, duration, vars) {
			return new TweenLite(target, duration, vars);
		};

		TweenLite.from = function(target, duration, vars) {
			vars.runBackwards = true;
			vars.immediateRender = (vars.immediateRender != false);
			return new TweenLite(target, duration, vars);
		};

		TweenLite.fromTo = function(target, duration, fromVars, toVars) {
			toVars.startAt = fromVars;
			toVars.immediateRender = (toVars.immediateRender != false && fromVars.immediateRender != false);
			return new TweenLite(target, duration, toVars);
		};

		TweenLite.delayedCall = function(delay, callback, params, scope, useFrames) {
			return new TweenLite(callback, 0, {delay:delay, onComplete:callback, onCompleteParams:params, callbackScope:scope, onReverseComplete:callback, onReverseCompleteParams:params, immediateRender:false, lazy:false, useFrames:useFrames, overwrite:0});
		};

		TweenLite.set = function(target, vars) {
			return new TweenLite(target, 0, vars);
		};

		TweenLite.getTweensOf = function(target, onlyActive) {
			if (target == null) { return []; }
			target = (typeof(target) !== "string") ? target : TweenLite.selector(target) || target;
			var i, a, j, t;
			if ((_isArray(target) || _isSelector(target)) && typeof(target[0]) !== "number") {
				i = target.length;
				a = [];
				while (--i > -1) {
					a = a.concat(TweenLite.getTweensOf(target[i], onlyActive));
				}
				i = a.length;
				//now get rid of any duplicates (tweens of arrays of objects could cause duplicates)
				while (--i > -1) {
					t = a[i];
					j = i;
					while (--j > -1) {
						if (t === a[j]) {
							a.splice(i, 1);
						}
					}
				}
			} else {
				a = _register(target).concat();
				i = a.length;
				while (--i > -1) {
					if (a[i]._gc || (onlyActive && !a[i].isActive())) {
						a.splice(i, 1);
					}
				}
			}
			return a;
		};

		TweenLite.killTweensOf = TweenLite.killDelayedCallsTo = function(target, onlyActive, vars) {
			if (typeof(onlyActive) === "object") {
				vars = onlyActive; //for backwards compatibility (before "onlyActive" parameter was inserted)
				onlyActive = false;
			}
			var a = TweenLite.getTweensOf(target, onlyActive),
				i = a.length;
			while (--i > -1) {
				a[i]._kill(vars, target);
			}
		};



/*
 * ----------------------------------------------------------------
 * TweenPlugin   (could easily be split out as a separate file/class, but included for ease of use (so that people don't need to include another script call before loading plugins which is easy to forget)
 * ----------------------------------------------------------------
 */
		var TweenPlugin = _class("plugins.TweenPlugin", function(props, priority) {
					this._overwriteProps = (props || "").split(",");
					this._propName = this._overwriteProps[0];
					this._priority = priority || 0;
					this._super = TweenPlugin.prototype;
				}, true);

		p = TweenPlugin.prototype;
		TweenPlugin.version = "1.19.0";
		TweenPlugin.API = 2;
		p._firstPT = null;
		p._addTween = _addPropTween;
		p.setRatio = _setRatio;

		p._kill = function(lookup) {
			var a = this._overwriteProps,
				pt = this._firstPT,
				i;
			if (lookup[this._propName] != null) {
				this._overwriteProps = [];
			} else {
				i = a.length;
				while (--i > -1) {
					if (lookup[a[i]] != null) {
						a.splice(i, 1);
					}
				}
			}
			while (pt) {
				if (lookup[pt.n] != null) {
					if (pt._next) {
						pt._next._prev = pt._prev;
					}
					if (pt._prev) {
						pt._prev._next = pt._next;
						pt._prev = null;
					} else if (this._firstPT === pt) {
						this._firstPT = pt._next;
					}
				}
				pt = pt._next;
			}
			return false;
		};

		p._mod = p._roundProps = function(lookup) {
			var pt = this._firstPT,
				val;
			while (pt) {
				val = lookup[this._propName] || (pt.n != null && lookup[ pt.n.split(this._propName + "_").join("") ]);
				if (val && typeof(val) === "function") { //some properties that are very plugin-specific add a prefix named after the _propName plus an underscore, so we need to ignore that extra stuff here.
					if (pt.f === 2) {
						pt.t._applyPT.m = val;
					} else {
						pt.m = val;
					}
				}
				pt = pt._next;
			}
		};

		TweenLite._onPluginEvent = function(type, tween) {
			var pt = tween._firstPT,
				changed, pt2, first, last, next;
			if (type === "_onInitAllProps") {
				//sorts the PropTween linked list in order of priority because some plugins need to render earlier/later than others, like MotionBlurPlugin applies its effects after all x/y/alpha tweens have rendered on each frame.
				while (pt) {
					next = pt._next;
					pt2 = first;
					while (pt2 && pt2.pr > pt.pr) {
						pt2 = pt2._next;
					}
					if ((pt._prev = pt2 ? pt2._prev : last)) {
						pt._prev._next = pt;
					} else {
						first = pt;
					}
					if ((pt._next = pt2)) {
						pt2._prev = pt;
					} else {
						last = pt;
					}
					pt = next;
				}
				pt = tween._firstPT = first;
			}
			while (pt) {
				if (pt.pg) if (typeof(pt.t[type]) === "function") if (pt.t[type]()) {
					changed = true;
				}
				pt = pt._next;
			}
			return changed;
		};

		TweenPlugin.activate = function(plugins) {
			var i = plugins.length;
			while (--i > -1) {
				if (plugins[i].API === TweenPlugin.API) {
					_plugins[(new plugins[i]())._propName] = plugins[i];
				}
			}
			return true;
		};

		//provides a more concise way to define plugins that have no dependencies besides TweenPlugin and TweenLite, wrapping common boilerplate stuff into one function (added in 1.9.0). You don't NEED to use this to define a plugin - the old way still works and can be useful in certain (rare) situations.
		_gsDefine.plugin = function(config) {
			if (!config || !config.propName || !config.init || !config.API) { throw "illegal plugin definition."; }
			var propName = config.propName,
				priority = config.priority || 0,
				overwriteProps = config.overwriteProps,
				map = {init:"_onInitTween", set:"setRatio", kill:"_kill", round:"_mod", mod:"_mod", initAll:"_onInitAllProps"},
				Plugin = _class("plugins." + propName.charAt(0).toUpperCase() + propName.substr(1) + "Plugin",
					function() {
						TweenPlugin.call(this, propName, priority);
						this._overwriteProps = overwriteProps || [];
					}, (config.global === true)),
				p = Plugin.prototype = new TweenPlugin(propName),
				prop;
			p.constructor = Plugin;
			Plugin.API = config.API;
			for (prop in map) {
				if (typeof(config[prop]) === "function") {
					p[map[prop]] = config[prop];
				}
			}
			Plugin.version = config.version;
			TweenPlugin.activate([Plugin]);
			return Plugin;
		};


		//now run through all the dependencies discovered and if any are missing, log that to the console as a warning. This is why it's best to have TweenLite load last - it can check all the dependencies for you.
		a = window._gsQueue;
		if (a) {
			for (i = 0; i < a.length; i++) {
				a[i]();
			}
			for (p in _defLookup) {
				if (!_defLookup[p].func) {
					window.console.log("GSAP encountered missing dependency: " + p);
				}
			}
		}

		_tickerActive = false; //ensures that the first official animation forces a ticker.tick() to update the time when it is instantiated

})((typeof(module) !== "undefined" && module.exports && typeof(global) !== "undefined") ? global : this || window, "TweenLite");
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],4:[function(require,module,exports){
(function (global){
/*!
 * VERSION: 1.19.0
 * DATE: 2016-07-14
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2016, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 */
var _gsScope = (typeof(module) !== "undefined" && module.exports && typeof(global) !== "undefined") ? global : this || window; //helps ensure compatibility with AMD/RequireJS and CommonJS/Node
(_gsScope._gsQueue || (_gsScope._gsQueue = [])).push( function() {

	"use strict";

	_gsScope._gsDefine("plugins.CSSPlugin", ["plugins.TweenPlugin","TweenLite"], function(TweenPlugin, TweenLite) {

		/** @constructor **/
		var CSSPlugin = function() {
				TweenPlugin.call(this, "css");
				this._overwriteProps.length = 0;
				this.setRatio = CSSPlugin.prototype.setRatio; //speed optimization (avoid prototype lookup on this "hot" method)
			},
			_globals = _gsScope._gsDefine.globals,
			_hasPriority, //turns true whenever a CSSPropTween instance is created that has a priority other than 0. This helps us discern whether or not we should spend the time organizing the linked list or not after a CSSPlugin's _onInitTween() method is called.
			_suffixMap, //we set this in _onInitTween() each time as a way to have a persistent variable we can use in other methods like _parse() without having to pass it around as a parameter and we keep _parse() decoupled from a particular CSSPlugin instance
			_cs, //computed style (we store this in a shared variable to conserve memory and make minification tighter
			_overwriteProps, //alias to the currently instantiating CSSPlugin's _overwriteProps array. We use this closure in order to avoid having to pass a reference around from method to method and aid in minification.
			_specialProps = {},
			p = CSSPlugin.prototype = new TweenPlugin("css");

		p.constructor = CSSPlugin;
		CSSPlugin.version = "1.19.0";
		CSSPlugin.API = 2;
		CSSPlugin.defaultTransformPerspective = 0;
		CSSPlugin.defaultSkewType = "compensated";
		CSSPlugin.defaultSmoothOrigin = true;
		p = "px"; //we'll reuse the "p" variable to keep file size down
		CSSPlugin.suffixMap = {top:p, right:p, bottom:p, left:p, width:p, height:p, fontSize:p, padding:p, margin:p, perspective:p, lineHeight:""};


		var _numExp = /(?:\-|\.|\b)(\d|\.|e\-)+/g,
			_relNumExp = /(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g,
			_valuesExp = /(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi, //finds all the values that begin with numbers or += or -= and then a number. Includes suffixes. We use this to split complex values apart like "1px 5px 20px rgb(255,102,51)"
			_NaNExp = /(?![+-]?\d*\.?\d+|[+-]|e[+-]\d+)[^0-9]/g, //also allows scientific notation and doesn't kill the leading -/+ in -= and +=
			_suffixExp = /(?:\d|\-|\+|=|#|\.)*/g,
			_opacityExp = /opacity *= *([^)]*)/i,
			_opacityValExp = /opacity:([^;]*)/i,
			_alphaFilterExp = /alpha\(opacity *=.+?\)/i,
			_rgbhslExp = /^(rgb|hsl)/,
			_capsExp = /([A-Z])/g,
			_camelExp = /-([a-z])/gi,
			_urlExp = /(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi, //for pulling out urls from url(...) or url("...") strings (some browsers wrap urls in quotes, some don't when reporting things like backgroundImage)
			_camelFunc = function(s, g) { return g.toUpperCase(); },
			_horizExp = /(?:Left|Right|Width)/i,
			_ieGetMatrixExp = /(M11|M12|M21|M22)=[\d\-\.e]+/gi,
			_ieSetMatrixExp = /progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i,
			_commasOutsideParenExp = /,(?=[^\)]*(?:\(|$))/gi, //finds any commas that are not within parenthesis
			_complexExp = /[\s,\(]/i, //for testing a string to find if it has a space, comma, or open parenthesis (clues that it's a complex value)
			_DEG2RAD = Math.PI / 180,
			_RAD2DEG = 180 / Math.PI,
			_forcePT = {},
			_doc = document,
			_createElement = function(type) {
				return _doc.createElementNS ? _doc.createElementNS("http://www.w3.org/1999/xhtml", type) : _doc.createElement(type);
			},
			_tempDiv = _createElement("div"),
			_tempImg = _createElement("img"),
			_internals = CSSPlugin._internals = {_specialProps:_specialProps}, //provides a hook to a few internal methods that we need to access from inside other plugins
			_agent = navigator.userAgent,
			_autoRound,
			_reqSafariFix, //we won't apply the Safari transform fix until we actually come across a tween that affects a transform property (to maintain best performance).

			_isSafari,
			_isFirefox, //Firefox has a bug that causes 3D transformed elements to randomly disappear unless a repaint is forced after each update on each element.
			_isSafariLT6, //Safari (and Android 4 which uses a flavor of Safari) has a bug that prevents changes to "top" and "left" properties from rendering properly if changed on the same frame as a transform UNLESS we set the element's WebkitBackfaceVisibility to hidden (weird, I know). Doing this for Android 3 and earlier seems to actually cause other problems, though (fun!)
			_ieVers,
			_supportsOpacity = (function() { //we set _isSafari, _ieVers, _isFirefox, and _supportsOpacity all in one function here to reduce file size slightly, especially in the minified version.
				var i = _agent.indexOf("Android"),
					a = _createElement("a");
				_isSafari = (_agent.indexOf("Safari") !== -1 && _agent.indexOf("Chrome") === -1 && (i === -1 || Number(_agent.substr(i+8, 1)) > 3));
				_isSafariLT6 = (_isSafari && (Number(_agent.substr(_agent.indexOf("Version/")+8, 1)) < 6));
				_isFirefox = (_agent.indexOf("Firefox") !== -1);
				if ((/MSIE ([0-9]{1,}[\.0-9]{0,})/).exec(_agent) || (/Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/).exec(_agent)) {
					_ieVers = parseFloat( RegExp.$1 );
				}
				if (!a) {
					return false;
				}
				a.style.cssText = "top:1px;opacity:.55;";
				return /^0.55/.test(a.style.opacity);
			}()),
			_getIEOpacity = function(v) {
				return (_opacityExp.test( ((typeof(v) === "string") ? v : (v.currentStyle ? v.currentStyle.filter : v.style.filter) || "") ) ? ( parseFloat( RegExp.$1 ) / 100 ) : 1);
			},
			_log = function(s) {//for logging messages, but in a way that won't throw errors in old versions of IE.
				if (window.console) {
					console.log(s);
				}
			},
			_target, //when initting a CSSPlugin, we set this variable so that we can access it from within many other functions without having to pass it around as params
			_index, //when initting a CSSPlugin, we set this variable so that we can access it from within many other functions without having to pass it around as params

			_prefixCSS = "", //the non-camelCase vendor prefix like "-o-", "-moz-", "-ms-", or "-webkit-"
			_prefix = "", //camelCase vendor prefix like "O", "ms", "Webkit", or "Moz".

			// @private feed in a camelCase property name like "transform" and it will check to see if it is valid as-is or if it needs a vendor prefix. It returns the corrected camelCase property name (i.e. "WebkitTransform" or "MozTransform" or "transform" or null if no such property is found, like if the browser is IE8 or before, "transform" won't be found at all)
			_checkPropPrefix = function(p, e) {
				e = e || _tempDiv;
				var s = e.style,
					a, i;
				if (s[p] !== undefined) {
					return p;
				}
				p = p.charAt(0).toUpperCase() + p.substr(1);
				a = ["O","Moz","ms","Ms","Webkit"];
				i = 5;
				while (--i > -1 && s[a[i]+p] === undefined) { }
				if (i >= 0) {
					_prefix = (i === 3) ? "ms" : a[i];
					_prefixCSS = "-" + _prefix.toLowerCase() + "-";
					return _prefix + p;
				}
				return null;
			},

			_getComputedStyle = _doc.defaultView ? _doc.defaultView.getComputedStyle : function() {},

			/**
			 * @private Returns the css style for a particular property of an element. For example, to get whatever the current "left" css value for an element with an ID of "myElement", you could do:
			 * var currentLeft = CSSPlugin.getStyle( document.getElementById("myElement"), "left");
			 *
			 * @param {!Object} t Target element whose style property you want to query
			 * @param {!string} p Property name (like "left" or "top" or "marginTop", etc.)
			 * @param {Object=} cs Computed style object. This just provides a way to speed processing if you're going to get several properties on the same element in quick succession - you can reuse the result of the getComputedStyle() call.
			 * @param {boolean=} calc If true, the value will not be read directly from the element's "style" property (if it exists there), but instead the getComputedStyle() result will be used. This can be useful when you want to ensure that the browser itself is interpreting the value.
			 * @param {string=} dflt Default value that should be returned in the place of null, "none", "auto" or "auto auto".
			 * @return {?string} The current property value
			 */
			_getStyle = CSSPlugin.getStyle = function(t, p, cs, calc, dflt) {
				var rv;
				if (!_supportsOpacity) if (p === "opacity") { //several versions of IE don't use the standard "opacity" property - they use things like filter:alpha(opacity=50), so we parse that here.
					return _getIEOpacity(t);
				}
				if (!calc && t.style[p]) {
					rv = t.style[p];
				} else if ((cs = cs || _getComputedStyle(t))) {
					rv = cs[p] || cs.getPropertyValue(p) || cs.getPropertyValue(p.replace(_capsExp, "-$1").toLowerCase());
				} else if (t.currentStyle) {
					rv = t.currentStyle[p];
				}
				return (dflt != null && (!rv || rv === "none" || rv === "auto" || rv === "auto auto")) ? dflt : rv;
			},

			/**
			 * @private Pass the target element, the property name, the numeric value, and the suffix (like "%", "em", "px", etc.) and it will spit back the equivalent pixel number.
			 * @param {!Object} t Target element
			 * @param {!string} p Property name (like "left", "top", "marginLeft", etc.)
			 * @param {!number} v Value
			 * @param {string=} sfx Suffix (like "px" or "%" or "em")
			 * @param {boolean=} recurse If true, the call is a recursive one. In some browsers (like IE7/8), occasionally the value isn't accurately reported initially, but if we run the function again it will take effect.
			 * @return {number} value in pixels
			 */
			_convertToPixels = _internals.convertToPixels = function(t, p, v, sfx, recurse) {
				if (sfx === "px" || !sfx) { return v; }
				if (sfx === "auto" || !v) { return 0; }
				var horiz = _horizExp.test(p),
					node = t,
					style = _tempDiv.style,
					neg = (v < 0),
					precise = (v === 1),
					pix, cache, time;
				if (neg) {
					v = -v;
				}
				if (precise) {
					v *= 100;
				}
				if (sfx === "%" && p.indexOf("border") !== -1) {
					pix = (v / 100) * (horiz ? t.clientWidth : t.clientHeight);
				} else {
					style.cssText = "border:0 solid red;position:" + _getStyle(t, "position") + ";line-height:0;";
					if (sfx === "%" || !node.appendChild || sfx.charAt(0) === "v" || sfx === "rem") {
						node = t.parentNode || _doc.body;
						cache = node._gsCache;
						time = TweenLite.ticker.frame;
						if (cache && horiz && cache.time === time) { //performance optimization: we record the width of elements along with the ticker frame so that we can quickly get it again on the same tick (seems relatively safe to assume it wouldn't change on the same tick)
							return cache.width * v / 100;
						}
						style[(horiz ? "width" : "height")] = v + sfx;
					} else {
						style[(horiz ? "borderLeftWidth" : "borderTopWidth")] = v + sfx;
					}
					node.appendChild(_tempDiv);
					pix = parseFloat(_tempDiv[(horiz ? "offsetWidth" : "offsetHeight")]);
					node.removeChild(_tempDiv);
					if (horiz && sfx === "%" && CSSPlugin.cacheWidths !== false) {
						cache = node._gsCache = node._gsCache || {};
						cache.time = time;
						cache.width = pix / v * 100;
					}
					if (pix === 0 && !recurse) {
						pix = _convertToPixels(t, p, v, sfx, true);
					}
				}
				if (precise) {
					pix /= 100;
				}
				return neg ? -pix : pix;
			},
			_calculateOffset = _internals.calculateOffset = function(t, p, cs) { //for figuring out "top" or "left" in px when it's "auto". We need to factor in margin with the offsetLeft/offsetTop
				if (_getStyle(t, "position", cs) !== "absolute") { return 0; }
				var dim = ((p === "left") ? "Left" : "Top"),
					v = _getStyle(t, "margin" + dim, cs);
				return t["offset" + dim] - (_convertToPixels(t, p, parseFloat(v), v.replace(_suffixExp, "")) || 0);
			},

			// @private returns at object containing ALL of the style properties in camelCase and their associated values.
			_getAllStyles = function(t, cs) {
				var s = {},
					i, tr, p;
				if ((cs = cs || _getComputedStyle(t, null))) {
					if ((i = cs.length)) {
						while (--i > -1) {
							p = cs[i];
							if (p.indexOf("-transform") === -1 || _transformPropCSS === p) { //Some webkit browsers duplicate transform values, one non-prefixed and one prefixed ("transform" and "WebkitTransform"), so we must weed out the extra one here.
								s[p.replace(_camelExp, _camelFunc)] = cs.getPropertyValue(p);
							}
						}
					} else { //some browsers behave differently - cs.length is always 0, so we must do a for...in loop.
						for (i in cs) {
							if (i.indexOf("Transform") === -1 || _transformProp === i) { //Some webkit browsers duplicate transform values, one non-prefixed and one prefixed ("transform" and "WebkitTransform"), so we must weed out the extra one here.
								s[i] = cs[i];
							}
						}
					}
				} else if ((cs = t.currentStyle || t.style)) {
					for (i in cs) {
						if (typeof(i) === "string" && s[i] === undefined) {
							s[i.replace(_camelExp, _camelFunc)] = cs[i];
						}
					}
				}
				if (!_supportsOpacity) {
					s.opacity = _getIEOpacity(t);
				}
				tr = _getTransform(t, cs, false);
				s.rotation = tr.rotation;
				s.skewX = tr.skewX;
				s.scaleX = tr.scaleX;
				s.scaleY = tr.scaleY;
				s.x = tr.x;
				s.y = tr.y;
				if (_supports3D) {
					s.z = tr.z;
					s.rotationX = tr.rotationX;
					s.rotationY = tr.rotationY;
					s.scaleZ = tr.scaleZ;
				}
				if (s.filters) {
					delete s.filters;
				}
				return s;
			},

			// @private analyzes two style objects (as returned by _getAllStyles()) and only looks for differences between them that contain tweenable values (like a number or color). It returns an object with a "difs" property which refers to an object containing only those isolated properties and values for tweening, and a "firstMPT" property which refers to the first MiniPropTween instance in a linked list that recorded all the starting values of the different properties so that we can revert to them at the end or beginning of the tween - we don't want the cascading to get messed up. The forceLookup parameter is an optional generic object with properties that should be forced into the results - this is necessary for className tweens that are overwriting others because imagine a scenario where a rollover/rollout adds/removes a class and the user swipes the mouse over the target SUPER fast, thus nothing actually changed yet and the subsequent comparison of the properties would indicate they match (especially when px rounding is taken into consideration), thus no tweening is necessary even though it SHOULD tween and remove those properties after the tween (otherwise the inline styles will contaminate things). See the className SpecialProp code for details.
			_cssDif = function(t, s1, s2, vars, forceLookup) {
				var difs = {},
					style = t.style,
					val, p, mpt;
				for (p in s2) {
					if (p !== "cssText") if (p !== "length") if (isNaN(p)) if (s1[p] !== (val = s2[p]) || (forceLookup && forceLookup[p])) if (p.indexOf("Origin") === -1) if (typeof(val) === "number" || typeof(val) === "string") {
						difs[p] = (val === "auto" && (p === "left" || p === "top")) ? _calculateOffset(t, p) : ((val === "" || val === "auto" || val === "none") && typeof(s1[p]) === "string" && s1[p].replace(_NaNExp, "") !== "") ? 0 : val; //if the ending value is defaulting ("" or "auto"), we check the starting value and if it can be parsed into a number (a string which could have a suffix too, like 700px), then we swap in 0 for "" or "auto" so that things actually tween.
						if (style[p] !== undefined) { //for className tweens, we must remember which properties already existed inline - the ones that didn't should be removed when the tween isn't in progress because they were only introduced to facilitate the transition between classes.
							mpt = new MiniPropTween(style, p, style[p], mpt);
						}
					}
				}
				if (vars) {
					for (p in vars) { //copy properties (except className)
						if (p !== "className") {
							difs[p] = vars[p];
						}
					}
				}
				return {difs:difs, firstMPT:mpt};
			},
			_dimensions = {width:["Left","Right"], height:["Top","Bottom"]},
			_margins = ["marginLeft","marginRight","marginTop","marginBottom"],

			/**
			 * @private Gets the width or height of an element
			 * @param {!Object} t Target element
			 * @param {!string} p Property name ("width" or "height")
			 * @param {Object=} cs Computed style object (if one exists). Just a speed optimization.
			 * @return {number} Dimension (in pixels)
			 */
			_getDimension = function(t, p, cs) {
				if ((t.nodeName + "").toLowerCase() === "svg") { //Chrome no longer supports offsetWidth/offsetHeight on SVG elements.
					return (cs || _getComputedStyle(t))[p] || 0;
				} else if (t.getBBox && _isSVG(t)) {
					return t.getBBox()[p] || 0;
				}
				var v = parseFloat((p === "width") ? t.offsetWidth : t.offsetHeight),
					a = _dimensions[p],
					i = a.length;
				cs = cs || _getComputedStyle(t, null);
				while (--i > -1) {
					v -= parseFloat( _getStyle(t, "padding" + a[i], cs, true) ) || 0;
					v -= parseFloat( _getStyle(t, "border" + a[i] + "Width", cs, true) ) || 0;
				}
				return v;
			},

			// @private Parses position-related complex strings like "top left" or "50px 10px" or "70% 20%", etc. which are used for things like transformOrigin or backgroundPosition. Optionally decorates a supplied object (recObj) with the following properties: "ox" (offsetX), "oy" (offsetY), "oxp" (if true, "ox" is a percentage not a pixel value), and "oxy" (if true, "oy" is a percentage not a pixel value)
			_parsePosition = function(v, recObj) {
				if (v === "contain" || v === "auto" || v === "auto auto") { //note: Firefox uses "auto auto" as default whereas Chrome uses "auto".
					return v + " ";
				}
				if (v == null || v === "") {
					v = "0 0";
				}
				var a = v.split(" "),
					x = (v.indexOf("left") !== -1) ? "0%" : (v.indexOf("right") !== -1) ? "100%" : a[0],
					y = (v.indexOf("top") !== -1) ? "0%" : (v.indexOf("bottom") !== -1) ? "100%" : a[1],
					i;
				if (a.length > 3 && !recObj) { //multiple positions
					a = v.split(", ").join(",").split(",");
					v = [];
					for (i = 0; i < a.length; i++) {
						v.push(_parsePosition(a[i]));
					}
					return v.join(",");
				}
				if (y == null) {
					y = (x === "center") ? "50%" : "0";
				} else if (y === "center") {
					y = "50%";
				}
				if (x === "center" || (isNaN(parseFloat(x)) && (x + "").indexOf("=") === -1)) { //remember, the user could flip-flop the values and say "bottom center" or "center bottom", etc. "center" is ambiguous because it could be used to describe horizontal or vertical, hence the isNaN(). If there's an "=" sign in the value, it's relative.
					x = "50%";
				}
				v = x + " " + y + ((a.length > 2) ? " " + a[2] : "");
				if (recObj) {
					recObj.oxp = (x.indexOf("%") !== -1);
					recObj.oyp = (y.indexOf("%") !== -1);
					recObj.oxr = (x.charAt(1) === "=");
					recObj.oyr = (y.charAt(1) === "=");
					recObj.ox = parseFloat(x.replace(_NaNExp, ""));
					recObj.oy = parseFloat(y.replace(_NaNExp, ""));
					recObj.v = v;
				}
				return recObj || v;
			},

			/**
			 * @private Takes an ending value (typically a string, but can be a number) and a starting value and returns the change between the two, looking for relative value indicators like += and -= and it also ignores suffixes (but make sure the ending value starts with a number or +=/-= and that the starting value is a NUMBER!)
			 * @param {(number|string)} e End value which is typically a string, but could be a number
			 * @param {(number|string)} b Beginning value which is typically a string but could be a number
			 * @return {number} Amount of change between the beginning and ending values (relative values that have a "+=" or "-=" are recognized)
			 */
			_parseChange = function(e, b) {
				if (typeof(e) === "function") {
					e = e(_index, _target);
				}
				return (typeof(e) === "string" && e.charAt(1) === "=") ? parseInt(e.charAt(0) + "1", 10) * parseFloat(e.substr(2)) : (parseFloat(e) - parseFloat(b)) || 0;
			},

			/**
			 * @private Takes a value and a default number, checks if the value is relative, null, or numeric and spits back a normalized number accordingly. Primarily used in the _parseTransform() function.
			 * @param {Object} v Value to be parsed
			 * @param {!number} d Default value (which is also used for relative calculations if "+=" or "-=" is found in the first parameter)
			 * @return {number} Parsed value
			 */
			_parseVal = function(v, d) {
				if (typeof(v) === "function") {
					v = v(_index, _target);
				}
				return (v == null) ? d : (typeof(v) === "string" && v.charAt(1) === "=") ? parseInt(v.charAt(0) + "1", 10) * parseFloat(v.substr(2)) + d : parseFloat(v) || 0;
			},

			/**
			 * @private Translates strings like "40deg" or "40" or 40rad" or "+=40deg" or "270_short" or "-90_cw" or "+=45_ccw" to a numeric radian angle. Of course a starting/default value must be fed in too so that relative values can be calculated properly.
			 * @param {Object} v Value to be parsed
			 * @param {!number} d Default value (which is also used for relative calculations if "+=" or "-=" is found in the first parameter)
			 * @param {string=} p property name for directionalEnd (optional - only used when the parsed value is directional ("_short", "_cw", or "_ccw" suffix). We need a way to store the uncompensated value so that at the end of the tween, we set it to exactly what was requested with no directional compensation). Property name would be "rotation", "rotationX", or "rotationY"
			 * @param {Object=} directionalEnd An object that will store the raw end values for directional angles ("_short", "_cw", or "_ccw" suffix). We need a way to store the uncompensated value so that at the end of the tween, we set it to exactly what was requested with no directional compensation.
			 * @return {number} parsed angle in radians
			 */
			_parseAngle = function(v, d, p, directionalEnd) {
				var min = 0.000001,
					cap, split, dif, result, isRelative;
				if (typeof(v) === "function") {
					v = v(_index, _target);
				}
				if (v == null) {
					result = d;
				} else if (typeof(v) === "number") {
					result = v;
				} else {
					cap = 360;
					split = v.split("_");
					isRelative = (v.charAt(1) === "=");
					dif = (isRelative ? parseInt(v.charAt(0) + "1", 10) * parseFloat(split[0].substr(2)) : parseFloat(split[0])) * ((v.indexOf("rad") === -1) ? 1 : _RAD2DEG) - (isRelative ? 0 : d);
					if (split.length) {
						if (directionalEnd) {
							directionalEnd[p] = d + dif;
						}
						if (v.indexOf("short") !== -1) {
							dif = dif % cap;
							if (dif !== dif % (cap / 2)) {
								dif = (dif < 0) ? dif + cap : dif - cap;
							}
						}
						if (v.indexOf("_cw") !== -1 && dif < 0) {
							dif = ((dif + cap * 9999999999) % cap) - ((dif / cap) | 0) * cap;
						} else if (v.indexOf("ccw") !== -1 && dif > 0) {
							dif = ((dif - cap * 9999999999) % cap) - ((dif / cap) | 0) * cap;
						}
					}
					result = d + dif;
				}
				if (result < min && result > -min) {
					result = 0;
				}
				return result;
			},

			_colorLookup = {aqua:[0,255,255],
				lime:[0,255,0],
				silver:[192,192,192],
				black:[0,0,0],
				maroon:[128,0,0],
				teal:[0,128,128],
				blue:[0,0,255],
				navy:[0,0,128],
				white:[255,255,255],
				fuchsia:[255,0,255],
				olive:[128,128,0],
				yellow:[255,255,0],
				orange:[255,165,0],
				gray:[128,128,128],
				purple:[128,0,128],
				green:[0,128,0],
				red:[255,0,0],
				pink:[255,192,203],
				cyan:[0,255,255],
				transparent:[255,255,255,0]},

			_hue = function(h, m1, m2) {
				h = (h < 0) ? h + 1 : (h > 1) ? h - 1 : h;
				return ((((h * 6 < 1) ? m1 + (m2 - m1) * h * 6 : (h < 0.5) ? m2 : (h * 3 < 2) ? m1 + (m2 - m1) * (2 / 3 - h) * 6 : m1) * 255) + 0.5) | 0;
			},

			/**
			 * @private Parses a color (like #9F0, #FF9900, rgb(255,51,153) or hsl(108, 50%, 10%)) into an array with 3 elements for red, green, and blue or if toHSL parameter is true, it will populate the array with hue, saturation, and lightness values. If a relative value is found in an hsl() or hsla() string, it will preserve those relative prefixes and all the values in the array will be strings instead of numbers (in all other cases it will be populated with numbers).
			 * @param {(string|number)} v The value the should be parsed which could be a string like #9F0 or rgb(255,102,51) or rgba(255,0,0,0.5) or it could be a number like 0xFF00CC or even a named color like red, blue, purple, etc.
			 * @param {(boolean)} toHSL If true, an hsl() or hsla() value will be returned instead of rgb() or rgba()
			 * @return {Array.<number>} An array containing red, green, and blue (and optionally alpha) in that order, or if the toHSL parameter was true, the array will contain hue, saturation and lightness (and optionally alpha) in that order. Always numbers unless there's a relative prefix found in an hsl() or hsla() string and toHSL is true.
			 */
			_parseColor = CSSPlugin.parseColor = function(v, toHSL) {
				var a, r, g, b, h, s, l, max, min, d, wasHSL;
				if (!v) {
					a = _colorLookup.black;
				} else if (typeof(v) === "number") {
					a = [v >> 16, (v >> 8) & 255, v & 255];
				} else {
					if (v.charAt(v.length - 1) === ",") { //sometimes a trailing comma is included and we should chop it off (typically from a comma-delimited list of values like a textShadow:"2px 2px 2px blue, 5px 5px 5px rgb(255,0,0)" - in this example "blue," has a trailing comma. We could strip it out inside parseComplex() but we'd need to do it to the beginning and ending values plus it wouldn't provide protection from other potential scenarios like if the user passes in a similar value.
						v = v.substr(0, v.length - 1);
					}
					if (_colorLookup[v]) {
						a = _colorLookup[v];
					} else if (v.charAt(0) === "#") {
						if (v.length === 4) { //for shorthand like #9F0
							r = v.charAt(1);
							g = v.charAt(2);
							b = v.charAt(3);
							v = "#" + r + r + g + g + b + b;
						}
						v = parseInt(v.substr(1), 16);
						a = [v >> 16, (v >> 8) & 255, v & 255];
					} else if (v.substr(0, 3) === "hsl") {
						a = wasHSL = v.match(_numExp);
						if (!toHSL) {
							h = (Number(a[0]) % 360) / 360;
							s = Number(a[1]) / 100;
							l = Number(a[2]) / 100;
							g = (l <= 0.5) ? l * (s + 1) : l + s - l * s;
							r = l * 2 - g;
							if (a.length > 3) {
								a[3] = Number(v[3]);
							}
							a[0] = _hue(h + 1 / 3, r, g);
							a[1] = _hue(h, r, g);
							a[2] = _hue(h - 1 / 3, r, g);
						} else if (v.indexOf("=") !== -1) { //if relative values are found, just return the raw strings with the relative prefixes in place.
							return v.match(_relNumExp);
						}
					} else {
						a = v.match(_numExp) || _colorLookup.transparent;
					}
					a[0] = Number(a[0]);
					a[1] = Number(a[1]);
					a[2] = Number(a[2]);
					if (a.length > 3) {
						a[3] = Number(a[3]);
					}
				}
				if (toHSL && !wasHSL) {
					r = a[0] / 255;
					g = a[1] / 255;
					b = a[2] / 255;
					max = Math.max(r, g, b);
					min = Math.min(r, g, b);
					l = (max + min) / 2;
					if (max === min) {
						h = s = 0;
					} else {
						d = max - min;
						s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
						h = (max === r) ? (g - b) / d + (g < b ? 6 : 0) : (max === g) ? (b - r) / d + 2 : (r - g) / d + 4;
						h *= 60;
					}
					a[0] = (h + 0.5) | 0;
					a[1] = (s * 100 + 0.5) | 0;
					a[2] = (l * 100 + 0.5) | 0;
				}
				return a;
			},
			_formatColors = function(s, toHSL) {
				var colors = s.match(_colorExp) || [],
					charIndex = 0,
					parsed = colors.length ? "" : s,
					i, color, temp;
				for (i = 0; i < colors.length; i++) {
					color = colors[i];
					temp = s.substr(charIndex, s.indexOf(color, charIndex)-charIndex);
					charIndex += temp.length + color.length;
					color = _parseColor(color, toHSL);
					if (color.length === 3) {
						color.push(1);
					}
					parsed += temp + (toHSL ? "hsla(" + color[0] + "," + color[1] + "%," + color[2] + "%," + color[3] : "rgba(" + color.join(",")) + ")";
				}
				return parsed + s.substr(charIndex);
			},
			_colorExp = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b"; //we'll dynamically build this Regular Expression to conserve file size. After building it, it will be able to find rgb(), rgba(), # (hexadecimal), and named color values like red, blue, purple, etc.

		for (p in _colorLookup) {
			_colorExp += "|" + p + "\\b";
		}
		_colorExp = new RegExp(_colorExp+")", "gi");

		CSSPlugin.colorStringFilter = function(a) {
			var combined = a[0] + a[1],
				toHSL;
			if (_colorExp.test(combined)) {
				toHSL = (combined.indexOf("hsl(") !== -1 || combined.indexOf("hsla(") !== -1);
				a[0] = _formatColors(a[0], toHSL);
				a[1] = _formatColors(a[1], toHSL);
			}
			_colorExp.lastIndex = 0;
		};

		if (!TweenLite.defaultStringFilter) {
			TweenLite.defaultStringFilter = CSSPlugin.colorStringFilter;
		}

		/**
		 * @private Returns a formatter function that handles taking a string (or number in some cases) and returning a consistently formatted one in terms of delimiters, quantity of values, etc. For example, we may get boxShadow values defined as "0px red" or "0px 0px 10px rgb(255,0,0)" or "0px 0px 20px 20px #F00" and we need to ensure that what we get back is described with 4 numbers and a color. This allows us to feed it into the _parseComplex() method and split the values up appropriately. The neat thing about this _getFormatter() function is that the dflt defines a pattern as well as a default, so for example, _getFormatter("0px 0px 0px 0px #777", true) not only sets the default as 0px for all distances and #777 for the color, but also sets the pattern such that 4 numbers and a color will always get returned.
		 * @param {!string} dflt The default value and pattern to follow. So "0px 0px 0px 0px #777" will ensure that 4 numbers and a color will always get returned.
		 * @param {boolean=} clr If true, the values should be searched for color-related data. For example, boxShadow values typically contain a color whereas borderRadius don't.
		 * @param {boolean=} collapsible If true, the value is a top/left/right/bottom style one that acts like margin or padding, where if only one value is received, it's used for all 4; if 2 are received, the first is duplicated for 3rd (bottom) and the 2nd is duplicated for the 4th spot (left), etc.
		 * @return {Function} formatter function
		 */
		var _getFormatter = function(dflt, clr, collapsible, multi) {
				if (dflt == null) {
					return function(v) {return v;};
				}
				var dColor = clr ? (dflt.match(_colorExp) || [""])[0] : "",
					dVals = dflt.split(dColor).join("").match(_valuesExp) || [],
					pfx = dflt.substr(0, dflt.indexOf(dVals[0])),
					sfx = (dflt.charAt(dflt.length - 1) === ")") ? ")" : "",
					delim = (dflt.indexOf(" ") !== -1) ? " " : ",",
					numVals = dVals.length,
					dSfx = (numVals > 0) ? dVals[0].replace(_numExp, "") : "",
					formatter;
				if (!numVals) {
					return function(v) {return v;};
				}
				if (clr) {
					formatter = function(v) {
						var color, vals, i, a;
						if (typeof(v) === "number") {
							v += dSfx;
						} else if (multi && _commasOutsideParenExp.test(v)) {
							a = v.replace(_commasOutsideParenExp, "|").split("|");
							for (i = 0; i < a.length; i++) {
								a[i] = formatter(a[i]);
							}
							return a.join(",");
						}
						color = (v.match(_colorExp) || [dColor])[0];
						vals = v.split(color).join("").match(_valuesExp) || [];
						i = vals.length;
						if (numVals > i--) {
							while (++i < numVals) {
								vals[i] = collapsible ? vals[(((i - 1) / 2) | 0)] : dVals[i];
							}
						}
						return pfx + vals.join(delim) + delim + color + sfx + (v.indexOf("inset") !== -1 ? " inset" : "");
					};
					return formatter;

				}
				formatter = function(v) {
					var vals, a, i;
					if (typeof(v) === "number") {
						v += dSfx;
					} else if (multi && _commasOutsideParenExp.test(v)) {
						a = v.replace(_commasOutsideParenExp, "|").split("|");
						for (i = 0; i < a.length; i++) {
							a[i] = formatter(a[i]);
						}
						return a.join(",");
					}
					vals = v.match(_valuesExp) || [];
					i = vals.length;
					if (numVals > i--) {
						while (++i < numVals) {
							vals[i] = collapsible ? vals[(((i - 1) / 2) | 0)] : dVals[i];
						}
					}
					return pfx + vals.join(delim) + sfx;
				};
				return formatter;
			},

			/**
			 * @private returns a formatter function that's used for edge-related values like marginTop, marginLeft, paddingBottom, paddingRight, etc. Just pass a comma-delimited list of property names related to the edges.
			 * @param {!string} props a comma-delimited list of property names in order from top to left, like "marginTop,marginRight,marginBottom,marginLeft"
			 * @return {Function} a formatter function
			 */
			_getEdgeParser = function(props) {
				props = props.split(",");
				return function(t, e, p, cssp, pt, plugin, vars) {
					var a = (e + "").split(" "),
						i;
					vars = {};
					for (i = 0; i < 4; i++) {
						vars[props[i]] = a[i] = a[i] || a[(((i - 1) / 2) >> 0)];
					}
					return cssp.parse(t, vars, pt, plugin);
				};
			},

			// @private used when other plugins must tween values first, like BezierPlugin or ThrowPropsPlugin, etc. That plugin's setRatio() gets called first so that the values are updated, and then we loop through the MiniPropTweens which handle copying the values into their appropriate slots so that they can then be applied correctly in the main CSSPlugin setRatio() method. Remember, we typically create a proxy object that has a bunch of uniquely-named properties that we feed to the sub-plugin and it does its magic normally, and then we must interpret those values and apply them to the css because often numbers must get combined/concatenated, suffixes added, etc. to work with css, like boxShadow could have 4 values plus a color.
			_setPluginRatio = _internals._setPluginRatio = function(v) {
				this.plugin.setRatio(v);
				var d = this.data,
					proxy = d.proxy,
					mpt = d.firstMPT,
					min = 0.000001,
					val, pt, i, str, p;
				while (mpt) {
					val = proxy[mpt.v];
					if (mpt.r) {
						val = Math.round(val);
					} else if (val < min && val > -min) {
						val = 0;
					}
					mpt.t[mpt.p] = val;
					mpt = mpt._next;
				}
				if (d.autoRotate) {
					d.autoRotate.rotation = d.mod ? d.mod(proxy.rotation, this.t) : proxy.rotation; //special case for ModifyPlugin to hook into an auto-rotating bezier
				}
				//at the end, we must set the CSSPropTween's "e" (end) value dynamically here because that's what is used in the final setRatio() method. Same for "b" at the beginning.
				if (v === 1 || v === 0) {
					mpt = d.firstMPT;
					p = (v === 1) ? "e" : "b";
					while (mpt) {
						pt = mpt.t;
						if (!pt.type) {
							pt[p] = pt.s + pt.xs0;
						} else if (pt.type === 1) {
							str = pt.xs0 + pt.s + pt.xs1;
							for (i = 1; i < pt.l; i++) {
								str += pt["xn"+i] + pt["xs"+(i+1)];
							}
							pt[p] = str;
						}
						mpt = mpt._next;
					}
				}
			},

			/**
			 * @private @constructor Used by a few SpecialProps to hold important values for proxies. For example, _parseToProxy() creates a MiniPropTween instance for each property that must get tweened on the proxy, and we record the original property name as well as the unique one we create for the proxy, plus whether or not the value needs to be rounded plus the original value.
			 * @param {!Object} t target object whose property we're tweening (often a CSSPropTween)
			 * @param {!string} p property name
			 * @param {(number|string|object)} v value
			 * @param {MiniPropTween=} next next MiniPropTween in the linked list
			 * @param {boolean=} r if true, the tweened value should be rounded to the nearest integer
			 */
			MiniPropTween = function(t, p, v, next, r) {
				this.t = t;
				this.p = p;
				this.v = v;
				this.r = r;
				if (next) {
					next._prev = this;
					this._next = next;
				}
			},

			/**
			 * @private Most other plugins (like BezierPlugin and ThrowPropsPlugin and others) can only tween numeric values, but CSSPlugin must accommodate special values that have a bunch of extra data (like a suffix or strings between numeric values, etc.). For example, boxShadow has values like "10px 10px 20px 30px rgb(255,0,0)" which would utterly confuse other plugins. This method allows us to split that data apart and grab only the numeric data and attach it to uniquely-named properties of a generic proxy object ({}) so that we can feed that to virtually any plugin to have the numbers tweened. However, we must also keep track of which properties from the proxy go with which CSSPropTween values and instances. So we create a linked list of MiniPropTweens. Each one records a target (the original CSSPropTween), property (like "s" or "xn1" or "xn2") that we're tweening and the unique property name that was used for the proxy (like "boxShadow_xn1" and "boxShadow_xn2") and whether or not they need to be rounded. That way, in the _setPluginRatio() method we can simply copy the values over from the proxy to the CSSPropTween instance(s). Then, when the main CSSPlugin setRatio() method runs and applies the CSSPropTween values accordingly, they're updated nicely. So the external plugin tweens the numbers, _setPluginRatio() copies them over, and setRatio() acts normally, applying css-specific values to the element.
			 * This method returns an object that has the following properties:
			 *  - proxy: a generic object containing the starting values for all the properties that will be tweened by the external plugin.  This is what we feed to the external _onInitTween() as the target
			 *  - end: a generic object containing the ending values for all the properties that will be tweened by the external plugin. This is what we feed to the external plugin's _onInitTween() as the destination values
			 *  - firstMPT: the first MiniPropTween in the linked list
			 *  - pt: the first CSSPropTween in the linked list that was created when parsing. If shallow is true, this linked list will NOT attach to the one passed into the _parseToProxy() as the "pt" (4th) parameter.
			 * @param {!Object} t target object to be tweened
			 * @param {!(Object|string)} vars the object containing the information about the tweening values (typically the end/destination values) that should be parsed
			 * @param {!CSSPlugin} cssp The CSSPlugin instance
			 * @param {CSSPropTween=} pt the next CSSPropTween in the linked list
			 * @param {TweenPlugin=} plugin the external TweenPlugin instance that will be handling tweening the numeric values
			 * @param {boolean=} shallow if true, the resulting linked list from the parse will NOT be attached to the CSSPropTween that was passed in as the "pt" (4th) parameter.
			 * @return An object containing the following properties: proxy, end, firstMPT, and pt (see above for descriptions)
			 */
			_parseToProxy = _internals._parseToProxy = function(t, vars, cssp, pt, plugin, shallow) {
				var bpt = pt,
					start = {},
					end = {},
					transform = cssp._transform,
					oldForce = _forcePT,
					i, p, xp, mpt, firstPT;
				cssp._transform = null;
				_forcePT = vars;
				pt = firstPT = cssp.parse(t, vars, pt, plugin);
				_forcePT = oldForce;
				//break off from the linked list so the new ones are isolated.
				if (shallow) {
					cssp._transform = transform;
					if (bpt) {
						bpt._prev = null;
						if (bpt._prev) {
							bpt._prev._next = null;
						}
					}
				}
				while (pt && pt !== bpt) {
					if (pt.type <= 1) {
						p = pt.p;
						end[p] = pt.s + pt.c;
						start[p] = pt.s;
						if (!shallow) {
							mpt = new MiniPropTween(pt, "s", p, mpt, pt.r);
							pt.c = 0;
						}
						if (pt.type === 1) {
							i = pt.l;
							while (--i > 0) {
								xp = "xn" + i;
								p = pt.p + "_" + xp;
								end[p] = pt.data[xp];
								start[p] = pt[xp];
								if (!shallow) {
									mpt = new MiniPropTween(pt, xp, p, mpt, pt.rxp[xp]);
								}
							}
						}
					}
					pt = pt._next;
				}
				return {proxy:start, end:end, firstMPT:mpt, pt:firstPT};
			},



			/**
			 * @constructor Each property that is tweened has at least one CSSPropTween associated with it. These instances store important information like the target, property, starting value, amount of change, etc. They can also optionally have a number of "extra" strings and numeric values named xs1, xn1, xs2, xn2, xs3, xn3, etc. where "s" indicates string and "n" indicates number. These can be pieced together in a complex-value tween (type:1) that has alternating types of data like a string, number, string, number, etc. For example, boxShadow could be "5px 5px 8px rgb(102, 102, 51)". In that value, there are 6 numbers that may need to tween and then pieced back together into a string again with spaces, suffixes, etc. xs0 is special in that it stores the suffix for standard (type:0) tweens, -OR- the first string (prefix) in a complex-value (type:1) CSSPropTween -OR- it can be the non-tweening value in a type:-1 CSSPropTween. We do this to conserve memory.
			 * CSSPropTweens have the following optional properties as well (not defined through the constructor):
			 *  - l: Length in terms of the number of extra properties that the CSSPropTween has (default: 0). For example, for a boxShadow we may need to tween 5 numbers in which case l would be 5; Keep in mind that the start/end values for the first number that's tweened are always stored in the s and c properties to conserve memory. All additional values thereafter are stored in xn1, xn2, etc.
			 *  - xfirst: The first instance of any sub-CSSPropTweens that are tweening properties of this instance. For example, we may split up a boxShadow tween so that there's a main CSSPropTween of type:1 that has various xs* and xn* values associated with the h-shadow, v-shadow, blur, color, etc. Then we spawn a CSSPropTween for each of those that has a higher priority and runs BEFORE the main CSSPropTween so that the values are all set by the time it needs to re-assemble them. The xfirst gives us an easy way to identify the first one in that chain which typically ends at the main one (because they're all prepende to the linked list)
			 *  - plugin: The TweenPlugin instance that will handle the tweening of any complex values. For example, sometimes we don't want to use normal subtweens (like xfirst refers to) to tween the values - we might want ThrowPropsPlugin or BezierPlugin some other plugin to do the actual tweening, so we create a plugin instance and store a reference here. We need this reference so that if we get a request to round values or disable a tween, we can pass along that request.
			 *  - data: Arbitrary data that needs to be stored with the CSSPropTween. Typically if we're going to have a plugin handle the tweening of a complex-value tween, we create a generic object that stores the END values that we're tweening to and the CSSPropTween's xs1, xs2, etc. have the starting values. We store that object as data. That way, we can simply pass that object to the plugin and use the CSSPropTween as the target.
			 *  - setRatio: Only used for type:2 tweens that require custom functionality. In this case, we call the CSSPropTween's setRatio() method and pass the ratio each time the tween updates. This isn't quite as efficient as doing things directly in the CSSPlugin's setRatio() method, but it's very convenient and flexible.
			 * @param {!Object} t Target object whose property will be tweened. Often a DOM element, but not always. It could be anything.
			 * @param {string} p Property to tween (name). For example, to tween element.width, p would be "width".
			 * @param {number} s Starting numeric value
			 * @param {number} c Change in numeric value over the course of the entire tween. For example, if element.width starts at 5 and should end at 100, c would be 95.
			 * @param {CSSPropTween=} next The next CSSPropTween in the linked list. If one is defined, we will define its _prev as the new instance, and the new instance's _next will be pointed at it.
			 * @param {number=} type The type of CSSPropTween where -1 = a non-tweening value, 0 = a standard simple tween, 1 = a complex value (like one that has multiple numbers in a comma- or space-delimited string like border:"1px solid red"), and 2 = one that uses a custom setRatio function that does all of the work of applying the values on each update.
			 * @param {string=} n Name of the property that should be used for overwriting purposes which is typically the same as p but not always. For example, we may need to create a subtween for the 2nd part of a "clip:rect(...)" tween in which case "p" might be xs1 but "n" is still "clip"
			 * @param {boolean=} r If true, the value(s) should be rounded
			 * @param {number=} pr Priority in the linked list order. Higher priority CSSPropTweens will be updated before lower priority ones. The default priority is 0.
			 * @param {string=} b Beginning value. We store this to ensure that it is EXACTLY what it was when the tween began without any risk of interpretation issues.
			 * @param {string=} e Ending value. We store this to ensure that it is EXACTLY what the user defined at the end of the tween without any risk of interpretation issues.
			 */
			CSSPropTween = _internals.CSSPropTween = function(t, p, s, c, next, type, n, r, pr, b, e) {
				this.t = t; //target
				this.p = p; //property
				this.s = s; //starting value
				this.c = c; //change value
				this.n = n || p; //name that this CSSPropTween should be associated to (usually the same as p, but not always - n is what overwriting looks at)
				if (!(t instanceof CSSPropTween)) {
					_overwriteProps.push(this.n);
				}
				this.r = r; //round (boolean)
				this.type = type || 0; //0 = normal tween, -1 = non-tweening (in which case xs0 will be applied to the target's property, like tp.t[tp.p] = tp.xs0), 1 = complex-value SpecialProp, 2 = custom setRatio() that does all the work
				if (pr) {
					this.pr = pr;
					_hasPriority = true;
				}
				this.b = (b === undefined) ? s : b;
				this.e = (e === undefined) ? s + c : e;
				if (next) {
					this._next = next;
					next._prev = this;
				}
			},

			_addNonTweeningNumericPT = function(target, prop, start, end, next, overwriteProp) { //cleans up some code redundancies and helps minification. Just a fast way to add a NUMERIC non-tweening CSSPropTween
				var pt = new CSSPropTween(target, prop, start, end - start, next, -1, overwriteProp);
				pt.b = start;
				pt.e = pt.xs0 = end;
				return pt;
			},

			/**
			 * Takes a target, the beginning value and ending value (as strings) and parses them into a CSSPropTween (possibly with child CSSPropTweens) that accommodates multiple numbers, colors, comma-delimited values, etc. For example:
			 * sp.parseComplex(element, "boxShadow", "5px 10px 20px rgb(255,102,51)", "0px 0px 0px red", true, "0px 0px 0px rgb(0,0,0,0)", pt);
			 * It will walk through the beginning and ending values (which should be in the same format with the same number and type of values) and figure out which parts are numbers, what strings separate the numeric/tweenable values, and then create the CSSPropTweens accordingly. If a plugin is defined, no child CSSPropTweens will be created. Instead, the ending values will be stored in the "data" property of the returned CSSPropTween like: {s:-5, xn1:-10, xn2:-20, xn3:255, xn4:0, xn5:0} so that it can be fed to any other plugin and it'll be plain numeric tweens but the recomposition of the complex value will be handled inside CSSPlugin's setRatio().
			 * If a setRatio is defined, the type of the CSSPropTween will be set to 2 and recomposition of the values will be the responsibility of that method.
			 *
			 * @param {!Object} t Target whose property will be tweened
			 * @param {!string} p Property that will be tweened (its name, like "left" or "backgroundColor" or "boxShadow")
			 * @param {string} b Beginning value
			 * @param {string} e Ending value
			 * @param {boolean} clrs If true, the value could contain a color value like "rgb(255,0,0)" or "#F00" or "red". The default is false, so no colors will be recognized (a performance optimization)
			 * @param {(string|number|Object)} dflt The default beginning value that should be used if no valid beginning value is defined or if the number of values inside the complex beginning and ending values don't match
			 * @param {?CSSPropTween} pt CSSPropTween instance that is the current head of the linked list (we'll prepend to this).
			 * @param {number=} pr Priority in the linked list order. Higher priority properties will be updated before lower priority ones. The default priority is 0.
			 * @param {TweenPlugin=} plugin If a plugin should handle the tweening of extra properties, pass the plugin instance here. If one is defined, then NO subtweens will be created for any extra properties (the properties will be created - just not additional CSSPropTween instances to tween them) because the plugin is expected to do so. However, the end values WILL be populated in the "data" property, like {s:100, xn1:50, xn2:300}
			 * @param {function(number)=} setRatio If values should be set in a custom function instead of being pieced together in a type:1 (complex-value) CSSPropTween, define that custom function here.
			 * @return {CSSPropTween} The first CSSPropTween in the linked list which includes the new one(s) added by the parseComplex() call.
			 */
			_parseComplex = CSSPlugin.parseComplex = function(t, p, b, e, clrs, dflt, pt, pr, plugin, setRatio) {
				//DEBUG: _log("parseComplex: "+p+", b: "+b+", e: "+e);
				b = b || dflt || "";
				if (typeof(e) === "function") {
					e = e(_index, _target);
				}
				pt = new CSSPropTween(t, p, 0, 0, pt, (setRatio ? 2 : 1), null, false, pr, b, e);
				e += ""; //ensures it's a string
				if (clrs && _colorExp.test(e + b)) { //if colors are found, normalize the formatting to rgba() or hsla().
					e = [b, e];
					CSSPlugin.colorStringFilter(e);
					b = e[0];
					e = e[1];
				}
				var ba = b.split(", ").join(",").split(" "), //beginning array
					ea = e.split(", ").join(",").split(" "), //ending array
					l = ba.length,
					autoRound = (_autoRound !== false),
					i, xi, ni, bv, ev, bnums, enums, bn, hasAlpha, temp, cv, str, useHSL;
				if (e.indexOf(",") !== -1 || b.indexOf(",") !== -1) {
					ba = ba.join(" ").replace(_commasOutsideParenExp, ", ").split(" ");
					ea = ea.join(" ").replace(_commasOutsideParenExp, ", ").split(" ");
					l = ba.length;
				}
				if (l !== ea.length) {
					//DEBUG: _log("mismatched formatting detected on " + p + " (" + b + " vs " + e + ")");
					ba = (dflt || "").split(" ");
					l = ba.length;
				}
				pt.plugin = plugin;
				pt.setRatio = setRatio;
				_colorExp.lastIndex = 0;
				for (i = 0; i < l; i++) {
					bv = ba[i];
					ev = ea[i];
					bn = parseFloat(bv);
					//if the value begins with a number (most common). It's fine if it has a suffix like px
					if (bn || bn === 0) {
						pt.appendXtra("", bn, _parseChange(ev, bn), ev.replace(_relNumExp, ""), (autoRound && ev.indexOf("px") !== -1), true);

					//if the value is a color
					} else if (clrs && _colorExp.test(bv)) {
						str = ev.indexOf(")") + 1;
						str = ")" + (str ? ev.substr(str) : ""); //if there's a comma or ) at the end, retain it.
						useHSL = (ev.indexOf("hsl") !== -1 && _supportsOpacity);
						bv = _parseColor(bv, useHSL);
						ev = _parseColor(ev, useHSL);
						hasAlpha = (bv.length + ev.length > 6);
						if (hasAlpha && !_supportsOpacity && ev[3] === 0) { //older versions of IE don't support rgba(), so if the destination alpha is 0, just use "transparent" for the end color
							pt["xs" + pt.l] += pt.l ? " transparent" : "transparent";
							pt.e = pt.e.split(ea[i]).join("transparent");
						} else {
							if (!_supportsOpacity) { //old versions of IE don't support rgba().
								hasAlpha = false;
							}
							if (useHSL) {
								pt.appendXtra((hasAlpha ? "hsla(" : "hsl("), bv[0], _parseChange(ev[0], bv[0]), ",", false, true)
									.appendXtra("", bv[1], _parseChange(ev[1], bv[1]), "%,", false)
									.appendXtra("", bv[2], _parseChange(ev[2], bv[2]), (hasAlpha ? "%," : "%" + str), false);
							} else {
								pt.appendXtra((hasAlpha ? "rgba(" : "rgb("), bv[0], ev[0] - bv[0], ",", true, true)
									.appendXtra("", bv[1], ev[1] - bv[1], ",", true)
									.appendXtra("", bv[2], ev[2] - bv[2], (hasAlpha ? "," : str), true);
							}

							if (hasAlpha) {
								bv = (bv.length < 4) ? 1 : bv[3];
								pt.appendXtra("", bv, ((ev.length < 4) ? 1 : ev[3]) - bv, str, false);
							}
						}
						_colorExp.lastIndex = 0; //otherwise the test() on the RegExp could move the lastIndex and taint future results.

					} else {
						bnums = bv.match(_numExp); //gets each group of numbers in the beginning value string and drops them into an array

						//if no number is found, treat it as a non-tweening value and just append the string to the current xs.
						if (!bnums) {
							pt["xs" + pt.l] += (pt.l || pt["xs" + pt.l]) ? " " + ev : ev;

						//loop through all the numbers that are found and construct the extra values on the pt.
						} else {
							enums = ev.match(_relNumExp); //get each group of numbers in the end value string and drop them into an array. We allow relative values too, like +=50 or -=.5
							if (!enums || enums.length !== bnums.length) {
								//DEBUG: _log("mismatched formatting detected on " + p + " (" + b + " vs " + e + ")");
								return pt;
							}
							ni = 0;
							for (xi = 0; xi < bnums.length; xi++) {
								cv = bnums[xi];
								temp = bv.indexOf(cv, ni);
								pt.appendXtra(bv.substr(ni, temp - ni), Number(cv), _parseChange(enums[xi], cv), "", (autoRound && bv.substr(temp + cv.length, 2) === "px"), (xi === 0));
								ni = temp + cv.length;
							}
							pt["xs" + pt.l] += bv.substr(ni);
						}
					}
				}
				//if there are relative values ("+=" or "-=" prefix), we need to adjust the ending value to eliminate the prefixes and combine the values properly.
				if (e.indexOf("=") !== -1) if (pt.data) {
					str = pt.xs0 + pt.data.s;
					for (i = 1; i < pt.l; i++) {
						str += pt["xs" + i] + pt.data["xn" + i];
					}
					pt.e = str + pt["xs" + i];
				}
				if (!pt.l) {
					pt.type = -1;
					pt.xs0 = pt.e;
				}
				return pt.xfirst || pt;
			},
			i = 9;


		p = CSSPropTween.prototype;
		p.l = p.pr = 0; //length (number of extra properties like xn1, xn2, xn3, etc.
		while (--i > 0) {
			p["xn" + i] = 0;
			p["xs" + i] = "";
		}
		p.xs0 = "";
		p._next = p._prev = p.xfirst = p.data = p.plugin = p.setRatio = p.rxp = null;


		/**
		 * Appends and extra tweening value to a CSSPropTween and automatically manages any prefix and suffix strings. The first extra value is stored in the s and c of the main CSSPropTween instance, but thereafter any extras are stored in the xn1, xn2, xn3, etc. The prefixes and suffixes are stored in the xs0, xs1, xs2, etc. properties. For example, if I walk through a clip value like "rect(10px, 5px, 0px, 20px)", the values would be stored like this:
		 * xs0:"rect(", s:10, xs1:"px, ", xn1:5, xs2:"px, ", xn2:0, xs3:"px, ", xn3:20, xn4:"px)"
		 * And they'd all get joined together when the CSSPlugin renders (in the setRatio() method).
		 * @param {string=} pfx Prefix (if any)
		 * @param {!number} s Starting value
		 * @param {!number} c Change in numeric value over the course of the entire tween. For example, if the start is 5 and the end is 100, the change would be 95.
		 * @param {string=} sfx Suffix (if any)
		 * @param {boolean=} r Round (if true).
		 * @param {boolean=} pad If true, this extra value should be separated by the previous one by a space. If there is no previous extra and pad is true, it will automatically drop the space.
		 * @return {CSSPropTween} returns itself so that multiple methods can be chained together.
		 */
		p.appendXtra = function(pfx, s, c, sfx, r, pad) {
			var pt = this,
				l = pt.l;
			pt["xs" + l] += (pad && (l || pt["xs" + l])) ? " " + pfx : pfx || "";
			if (!c) if (l !== 0 && !pt.plugin) { //typically we'll combine non-changing values right into the xs to optimize performance, but we don't combine them when there's a plugin that will be tweening the values because it may depend on the values being split apart, like for a bezier, if a value doesn't change between the first and second iteration but then it does on the 3rd, we'll run into trouble because there's no xn slot for that value!
				pt["xs" + l] += s + (sfx || "");
				return pt;
			}
			pt.l++;
			pt.type = pt.setRatio ? 2 : 1;
			pt["xs" + pt.l] = sfx || "";
			if (l > 0) {
				pt.data["xn" + l] = s + c;
				pt.rxp["xn" + l] = r; //round extra property (we need to tap into this in the _parseToProxy() method)
				pt["xn" + l] = s;
				if (!pt.plugin) {
					pt.xfirst = new CSSPropTween(pt, "xn" + l, s, c, pt.xfirst || pt, 0, pt.n, r, pt.pr);
					pt.xfirst.xs0 = 0; //just to ensure that the property stays numeric which helps modern browsers speed up processing. Remember, in the setRatio() method, we do pt.t[pt.p] = val + pt.xs0 so if pt.xs0 is "" (the default), it'll cast the end value as a string. When a property is a number sometimes and a string sometimes, it prevents the compiler from locking in the data type, slowing things down slightly.
				}
				return pt;
			}
			pt.data = {s:s + c};
			pt.rxp = {};
			pt.s = s;
			pt.c = c;
			pt.r = r;
			return pt;
		};

		/**
		 * @constructor A SpecialProp is basically a css property that needs to be treated in a non-standard way, like if it may contain a complex value like boxShadow:"5px 10px 15px rgb(255, 102, 51)" or if it is associated with another plugin like ThrowPropsPlugin or BezierPlugin. Every SpecialProp is associated with a particular property name like "boxShadow" or "throwProps" or "bezier" and it will intercept those values in the vars object that's passed to the CSSPlugin and handle them accordingly.
		 * @param {!string} p Property name (like "boxShadow" or "throwProps")
		 * @param {Object=} options An object containing any of the following configuration options:
		 *                      - defaultValue: the default value
		 *                      - parser: A function that should be called when the associated property name is found in the vars. This function should return a CSSPropTween instance and it should ensure that it is properly inserted into the linked list. It will receive 4 paramters: 1) The target, 2) The value defined in the vars, 3) The CSSPlugin instance (whose _firstPT should be used for the linked list), and 4) A computed style object if one was calculated (this is a speed optimization that allows retrieval of starting values quicker)
		 *                      - formatter: a function that formats any value received for this special property (for example, boxShadow could take "5px 5px red" and format it to "5px 5px 0px 0px red" so that both the beginning and ending values have a common order and quantity of values.)
		 *                      - prefix: if true, we'll determine whether or not this property requires a vendor prefix (like Webkit or Moz or ms or O)
		 *                      - color: set this to true if the value for this SpecialProp may contain color-related values like rgb(), rgba(), etc.
		 *                      - priority: priority in the linked list order. Higher priority SpecialProps will be updated before lower priority ones. The default priority is 0.
		 *                      - multi: if true, the formatter should accommodate a comma-delimited list of values, like boxShadow could have multiple boxShadows listed out.
		 *                      - collapsible: if true, the formatter should treat the value like it's a top/right/bottom/left value that could be collapsed, like "5px" would apply to all, "5px, 10px" would use 5px for top/bottom and 10px for right/left, etc.
		 *                      - keyword: a special keyword that can [optionally] be found inside the value (like "inset" for boxShadow). This allows us to validate beginning/ending values to make sure they match (if the keyword is found in one, it'll be added to the other for consistency by default).
		 */
		var SpecialProp = function(p, options) {
				options = options || {};
				this.p = options.prefix ? _checkPropPrefix(p) || p : p;
				_specialProps[p] = _specialProps[this.p] = this;
				this.format = options.formatter || _getFormatter(options.defaultValue, options.color, options.collapsible, options.multi);
				if (options.parser) {
					this.parse = options.parser;
				}
				this.clrs = options.color;
				this.multi = options.multi;
				this.keyword = options.keyword;
				this.dflt = options.defaultValue;
				this.pr = options.priority || 0;
			},

			//shortcut for creating a new SpecialProp that can accept multiple properties as a comma-delimited list (helps minification). dflt can be an array for multiple values (we don't do a comma-delimited list because the default value may contain commas, like rect(0px,0px,0px,0px)). We attach this method to the SpecialProp class/object instead of using a private _createSpecialProp() method so that we can tap into it externally if necessary, like from another plugin.
			_registerComplexSpecialProp = _internals._registerComplexSpecialProp = function(p, options, defaults) {
				if (typeof(options) !== "object") {
					options = {parser:defaults}; //to make backwards compatible with older versions of BezierPlugin and ThrowPropsPlugin
				}
				var a = p.split(","),
					d = options.defaultValue,
					i, temp;
				defaults = defaults || [d];
				for (i = 0; i < a.length; i++) {
					options.prefix = (i === 0 && options.prefix);
					options.defaultValue = defaults[i] || d;
					temp = new SpecialProp(a[i], options);
				}
			},

			//creates a placeholder special prop for a plugin so that the property gets caught the first time a tween of it is attempted, and at that time it makes the plugin register itself, thus taking over for all future tweens of that property. This allows us to not mandate that things load in a particular order and it also allows us to log() an error that informs the user when they attempt to tween an external plugin-related property without loading its .js file.
			_registerPluginProp = _internals._registerPluginProp = function(p) {
				if (!_specialProps[p]) {
					var pluginName = p.charAt(0).toUpperCase() + p.substr(1) + "Plugin";
					_registerComplexSpecialProp(p, {parser:function(t, e, p, cssp, pt, plugin, vars) {
						var pluginClass = _globals.com.greensock.plugins[pluginName];
						if (!pluginClass) {
							_log("Error: " + pluginName + " js file not loaded.");
							return pt;
						}
						pluginClass._cssRegister();
						return _specialProps[p].parse(t, e, p, cssp, pt, plugin, vars);
					}});
				}
			};


		p = SpecialProp.prototype;

		/**
		 * Alias for _parseComplex() that automatically plugs in certain values for this SpecialProp, like its property name, whether or not colors should be sensed, the default value, and priority. It also looks for any keyword that the SpecialProp defines (like "inset" for boxShadow) and ensures that the beginning and ending values have the same number of values for SpecialProps where multi is true (like boxShadow and textShadow can have a comma-delimited list)
		 * @param {!Object} t target element
		 * @param {(string|number|object)} b beginning value
		 * @param {(string|number|object)} e ending (destination) value
		 * @param {CSSPropTween=} pt next CSSPropTween in the linked list
		 * @param {TweenPlugin=} plugin If another plugin will be tweening the complex value, that TweenPlugin instance goes here.
		 * @param {function=} setRatio If a custom setRatio() method should be used to handle this complex value, that goes here.
		 * @return {CSSPropTween=} First CSSPropTween in the linked list
		 */
		p.parseComplex = function(t, b, e, pt, plugin, setRatio) {
			var kwd = this.keyword,
				i, ba, ea, l, bi, ei;
			//if this SpecialProp's value can contain a comma-delimited list of values (like boxShadow or textShadow), we must parse them in a special way, and look for a keyword (like "inset" for boxShadow) and ensure that the beginning and ending BOTH have it if the end defines it as such. We also must ensure that there are an equal number of values specified (we can't tween 1 boxShadow to 3 for example)
			if (this.multi) if (_commasOutsideParenExp.test(e) || _commasOutsideParenExp.test(b)) {
				ba = b.replace(_commasOutsideParenExp, "|").split("|");
				ea = e.replace(_commasOutsideParenExp, "|").split("|");
			} else if (kwd) {
				ba = [b];
				ea = [e];
			}
			if (ea) {
				l = (ea.length > ba.length) ? ea.length : ba.length;
				for (i = 0; i < l; i++) {
					b = ba[i] = ba[i] || this.dflt;
					e = ea[i] = ea[i] || this.dflt;
					if (kwd) {
						bi = b.indexOf(kwd);
						ei = e.indexOf(kwd);
						if (bi !== ei) {
							if (ei === -1) { //if the keyword isn't in the end value, remove it from the beginning one.
								ba[i] = ba[i].split(kwd).join("");
							} else if (bi === -1) { //if the keyword isn't in the beginning, add it.
								ba[i] += " " + kwd;
							}
						}
					}
				}
				b = ba.join(", ");
				e = ea.join(", ");
			}
			return _parseComplex(t, this.p, b, e, this.clrs, this.dflt, pt, this.pr, plugin, setRatio);
		};

		/**
		 * Accepts a target and end value and spits back a CSSPropTween that has been inserted into the CSSPlugin's linked list and conforms with all the conventions we use internally, like type:-1, 0, 1, or 2, setting up any extra property tweens, priority, etc. For example, if we have a boxShadow SpecialProp and call:
		 * this._firstPT = sp.parse(element, "5px 10px 20px rgb(2550,102,51)", "boxShadow", this);
		 * It should figure out the starting value of the element's boxShadow, compare it to the provided end value and create all the necessary CSSPropTweens of the appropriate types to tween the boxShadow. The CSSPropTween that gets spit back should already be inserted into the linked list (the 4th parameter is the current head, so prepend to that).
		 * @param {!Object} t Target object whose property is being tweened
		 * @param {Object} e End value as provided in the vars object (typically a string, but not always - like a throwProps would be an object).
		 * @param {!string} p Property name
		 * @param {!CSSPlugin} cssp The CSSPlugin instance that should be associated with this tween.
		 * @param {?CSSPropTween} pt The CSSPropTween that is the current head of the linked list (we'll prepend to it)
		 * @param {TweenPlugin=} plugin If a plugin will be used to tween the parsed value, this is the plugin instance.
		 * @param {Object=} vars Original vars object that contains the data for parsing.
		 * @return {CSSPropTween} The first CSSPropTween in the linked list which includes the new one(s) added by the parse() call.
		 */
		p.parse = function(t, e, p, cssp, pt, plugin, vars) {
			return this.parseComplex(t.style, this.format(_getStyle(t, this.p, _cs, false, this.dflt)), this.format(e), pt, plugin);
		};

		/**
		 * Registers a special property that should be intercepted from any "css" objects defined in tweens. This allows you to handle them however you want without CSSPlugin doing it for you. The 2nd parameter should be a function that accepts 3 parameters:
		 *  1) Target object whose property should be tweened (typically a DOM element)
		 *  2) The end/destination value (could be a string, number, object, or whatever you want)
		 *  3) The tween instance (you probably don't need to worry about this, but it can be useful for looking up information like the duration)
		 *
		 * Then, your function should return a function which will be called each time the tween gets rendered, passing a numeric "ratio" parameter to your function that indicates the change factor (usually between 0 and 1). For example:
		 *
		 * CSSPlugin.registerSpecialProp("myCustomProp", function(target, value, tween) {
		 *      var start = target.style.width;
		 *      return function(ratio) {
		 *              target.style.width = (start + value * ratio) + "px";
		 *              console.log("set width to " + target.style.width);
		 *          }
		 * }, 0);
		 *
		 * Then, when I do this tween, it will trigger my special property:
		 *
		 * TweenLite.to(element, 1, {css:{myCustomProp:100}});
		 *
		 * In the example, of course, we're just changing the width, but you can do anything you want.
		 *
		 * @param {!string} name Property name (or comma-delimited list of property names) that should be intercepted and handled by your function. For example, if I define "myCustomProp", then it would handle that portion of the following tween: TweenLite.to(element, 1, {css:{myCustomProp:100}})
		 * @param {!function(Object, Object, Object, string):function(number)} onInitTween The function that will be called when a tween of this special property is performed. The function will receive 4 parameters: 1) Target object that should be tweened, 2) Value that was passed to the tween, 3) The tween instance itself (rarely used), and 4) The property name that's being tweened. Your function should return a function that should be called on every update of the tween. That function will receive a single parameter that is a "change factor" value (typically between 0 and 1) indicating the amount of change as a ratio. You can use this to determine how to set the values appropriately in your function.
		 * @param {number=} priority Priority that helps the engine determine the order in which to set the properties (default: 0). Higher priority properties will be updated before lower priority ones.
		 */
		CSSPlugin.registerSpecialProp = function(name, onInitTween, priority) {
			_registerComplexSpecialProp(name, {parser:function(t, e, p, cssp, pt, plugin, vars) {
				var rv = new CSSPropTween(t, p, 0, 0, pt, 2, p, false, priority);
				rv.plugin = plugin;
				rv.setRatio = onInitTween(t, e, cssp._tween, p);
				return rv;
			}, priority:priority});
		};






		//transform-related methods and properties
		CSSPlugin.useSVGTransformAttr = _isSafari || _isFirefox; //Safari and Firefox both have some rendering bugs when applying CSS transforms to SVG elements, so default to using the "transform" attribute instead (users can override this).
		var _transformProps = ("scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent").split(","),
			_transformProp = _checkPropPrefix("transform"), //the Javascript (camelCase) transform property, like msTransform, WebkitTransform, MozTransform, or OTransform.
			_transformPropCSS = _prefixCSS + "transform",
			_transformOriginProp = _checkPropPrefix("transformOrigin"),
			_supports3D = (_checkPropPrefix("perspective") !== null),
			Transform = _internals.Transform = function() {
				this.perspective = parseFloat(CSSPlugin.defaultTransformPerspective) || 0;
				this.force3D = (CSSPlugin.defaultForce3D === false || !_supports3D) ? false : CSSPlugin.defaultForce3D || "auto";
			},
			_SVGElement = window.SVGElement,
			_useSVGTransformAttr,
			//Some browsers (like Firefox and IE) don't honor transform-origin properly in SVG elements, so we need to manually adjust the matrix accordingly. We feature detect here rather than always doing the conversion for certain browsers because they may fix the problem at some point in the future.

			_createSVG = function(type, container, attributes) {
				var element = _doc.createElementNS("http://www.w3.org/2000/svg", type),
					reg = /([a-z])([A-Z])/g,
					p;
				for (p in attributes) {
					element.setAttributeNS(null, p.replace(reg, "$1-$2").toLowerCase(), attributes[p]);
				}
				container.appendChild(element);
				return element;
			},
			_docElement = _doc.documentElement,
			_forceSVGTransformAttr = (function() {
				//IE and Android stock don't support CSS transforms on SVG elements, so we must write them to the "transform" attribute. We populate this variable in the _parseTransform() method, and only if/when we come across an SVG element
				var force = _ieVers || (/Android/i.test(_agent) && !window.chrome),
					svg, rect, width;
				if (_doc.createElementNS && !force) { //IE8 and earlier doesn't support SVG anyway
					svg = _createSVG("svg", _docElement);
					rect = _createSVG("rect", svg, {width:100, height:50, x:100});
					width = rect.getBoundingClientRect().width;
					rect.style[_transformOriginProp] = "50% 50%";
					rect.style[_transformProp] = "scaleX(0.5)";
					force = (width === rect.getBoundingClientRect().width && !(_isFirefox && _supports3D)); //note: Firefox fails the test even though it does support CSS transforms in 3D. Since we can't push 3D stuff into the transform attribute, we force Firefox to pass the test here (as long as it does truly support 3D).
					_docElement.removeChild(svg);
				}
				return force;
			})(),
			_parseSVGOrigin = function(e, local, decoratee, absolute, smoothOrigin, skipRecord) {
				var tm = e._gsTransform,
					m = _getMatrix(e, true),
					v, x, y, xOrigin, yOrigin, a, b, c, d, tx, ty, determinant, xOriginOld, yOriginOld;
				if (tm) {
					xOriginOld = tm.xOrigin; //record the original values before we alter them.
					yOriginOld = tm.yOrigin;
				}
				if (!absolute || (v = absolute.split(" ")).length < 2) {
					b = e.getBBox();
					local = _parsePosition(local).split(" ");
					v = [(local[0].indexOf("%") !== -1 ? parseFloat(local[0]) / 100 * b.width : parseFloat(local[0])) + b.x,
						 (local[1].indexOf("%") !== -1 ? parseFloat(local[1]) / 100 * b.height : parseFloat(local[1])) + b.y];
				}
				decoratee.xOrigin = xOrigin = parseFloat(v[0]);
				decoratee.yOrigin = yOrigin = parseFloat(v[1]);
				if (absolute && m !== _identity2DMatrix) { //if svgOrigin is being set, we must invert the matrix and determine where the absolute point is, factoring in the current transforms. Otherwise, the svgOrigin would be based on the element's non-transformed position on the canvas.
					a = m[0];
					b = m[1];
					c = m[2];
					d = m[3];
					tx = m[4];
					ty = m[5];
					determinant = (a * d - b * c);
					x = xOrigin * (d / determinant) + yOrigin * (-c / determinant) + ((c * ty - d * tx) / determinant);
					y = xOrigin * (-b / determinant) + yOrigin * (a / determinant) - ((a * ty - b * tx) / determinant);
					xOrigin = decoratee.xOrigin = v[0] = x;
					yOrigin = decoratee.yOrigin = v[1] = y;
				}
				if (tm) { //avoid jump when transformOrigin is changed - adjust the x/y values accordingly
					if (skipRecord) {
						decoratee.xOffset = tm.xOffset;
						decoratee.yOffset = tm.yOffset;
						tm = decoratee;
					}
					if (smoothOrigin || (smoothOrigin !== false && CSSPlugin.defaultSmoothOrigin !== false)) {
						x = xOrigin - xOriginOld;
						y = yOrigin - yOriginOld;
						//originally, we simply adjusted the x and y values, but that would cause problems if, for example, you created a rotational tween part-way through an x/y tween. Managing the offset in a separate variable gives us ultimate flexibility.
						//tm.x -= x - (x * m[0] + y * m[2]);
						//tm.y -= y - (x * m[1] + y * m[3]);
						tm.xOffset += (x * m[0] + y * m[2]) - x;
						tm.yOffset += (x * m[1] + y * m[3]) - y;
					} else {
						tm.xOffset = tm.yOffset = 0;
					}
				}
				if (!skipRecord) {
					e.setAttribute("data-svg-origin", v.join(" "));
				}
			},
			_canGetBBox = function(e) {
				try {
					return e.getBBox(); //Firefox throws errors if you try calling getBBox() on an SVG element that's not rendered (like in a <symbol> or <defs>). https://bugzilla.mozilla.org/show_bug.cgi?id=612118
				} catch (e) {}
			},
			_isSVG = function(e) { //reports if the element is an SVG on which getBBox() actually works
				return !!(_SVGElement && e.getBBox && e.getCTM && _canGetBBox(e) && (!e.parentNode || (e.parentNode.getBBox && e.parentNode.getCTM)));
			},
			_identity2DMatrix = [1,0,0,1,0,0],
			_getMatrix = function(e, force2D) {
				var tm = e._gsTransform || new Transform(),
					rnd = 100000,
					style = e.style,
					isDefault, s, m, n, dec, none;
				if (_transformProp) {
					s = _getStyle(e, _transformPropCSS, null, true);
				} else if (e.currentStyle) {
					//for older versions of IE, we need to interpret the filter portion that is in the format: progid:DXImageTransform.Microsoft.Matrix(M11=6.123233995736766e-17, M12=-1, M21=1, M22=6.123233995736766e-17, sizingMethod='auto expand') Notice that we need to swap b and c compared to a normal matrix.
					s = e.currentStyle.filter.match(_ieGetMatrixExp);
					s = (s && s.length === 4) ? [s[0].substr(4), Number(s[2].substr(4)), Number(s[1].substr(4)), s[3].substr(4), (tm.x || 0), (tm.y || 0)].join(",") : "";
				}
				isDefault = (!s || s === "none" || s === "matrix(1, 0, 0, 1, 0, 0)");
				if (isDefault && _transformProp && ((none = (_getComputedStyle(e).display === "none")) || !e.parentNode)) {
					if (none) { //browsers don't report transforms accurately unless the element is in the DOM and has a display value that's not "none".
						n = style.display;
						style.display = "block";
					}
					if (!e.parentNode) {
						dec = 1; //flag
						_docElement.appendChild(e);
					}
					s = _getStyle(e, _transformPropCSS, null, true);
					isDefault = (!s || s === "none" || s === "matrix(1, 0, 0, 1, 0, 0)");
					if (n) {
						style.display = n;
					} else if (none) {
						_removeProp(style, "display");
					}
					if (dec) {
						_docElement.removeChild(e);
					}
				}
				if (tm.svg || (e.getBBox && _isSVG(e))) {
					if (isDefault && (style[_transformProp] + "").indexOf("matrix") !== -1) { //some browsers (like Chrome 40) don't correctly report transforms that are applied inline on an SVG element (they don't get included in the computed style), so we double-check here and accept matrix values
						s = style[_transformProp];
						isDefault = 0;
					}
					m = e.getAttribute("transform");
					if (isDefault && m) {
						if (m.indexOf("matrix") !== -1) { //just in case there's a "transform" value specified as an attribute instead of CSS style. Accept either a matrix() or simple translate() value though.
							s = m;
							isDefault = 0;
						} else if (m.indexOf("translate") !== -1) {
							s = "matrix(1,0,0,1," + m.match(/(?:\-|\b)[\d\-\.e]+\b/gi).join(",") + ")";
							isDefault = 0;
						}
					}
				}
				if (isDefault) {
					return _identity2DMatrix;
				}
				//split the matrix values out into an array (m for matrix)
				m = (s || "").match(_numExp) || [];
				i = m.length;
				while (--i > -1) {
					n = Number(m[i]);
					m[i] = (dec = n - (n |= 0)) ? ((dec * rnd + (dec < 0 ? -0.5 : 0.5)) | 0) / rnd + n : n; //convert strings to Numbers and round to 5 decimal places to avoid issues with tiny numbers. Roughly 20x faster than Number.toFixed(). We also must make sure to round before dividing so that values like 0.9999999999 become 1 to avoid glitches in browser rendering and interpretation of flipped/rotated 3D matrices. And don't just multiply the number by rnd, floor it, and then divide by rnd because the bitwise operations max out at a 32-bit signed integer, thus it could get clipped at a relatively low value (like 22,000.00000 for example).
				}
				return (force2D && m.length > 6) ? [m[0], m[1], m[4], m[5], m[12], m[13]] : m;
			},

			/**
			 * Parses the transform values for an element, returning an object with x, y, z, scaleX, scaleY, scaleZ, rotation, rotationX, rotationY, skewX, and skewY properties. Note: by default (for performance reasons), all skewing is combined into skewX and rotation but skewY still has a place in the transform object so that we can record how much of the skew is attributed to skewX vs skewY. Remember, a skewY of 10 looks the same as a rotation of 10 and skewX of -10.
			 * @param {!Object} t target element
			 * @param {Object=} cs computed style object (optional)
			 * @param {boolean=} rec if true, the transform values will be recorded to the target element's _gsTransform object, like target._gsTransform = {x:0, y:0, z:0, scaleX:1...}
			 * @param {boolean=} parse if true, we'll ignore any _gsTransform values that already exist on the element, and force a reparsing of the css (calculated style)
			 * @return {object} object containing all of the transform properties/values like {x:0, y:0, z:0, scaleX:1...}
			 */
			_getTransform = _internals.getTransform = function(t, cs, rec, parse) {
				if (t._gsTransform && rec && !parse) {
					return t._gsTransform; //if the element already has a _gsTransform, use that. Note: some browsers don't accurately return the calculated style for the transform (particularly for SVG), so it's almost always safest to just use the values we've already applied rather than re-parsing things.
				}
				var tm = rec ? t._gsTransform || new Transform() : new Transform(),
					invX = (tm.scaleX < 0), //in order to interpret things properly, we need to know if the user applied a negative scaleX previously so that we can adjust the rotation and skewX accordingly. Otherwise, if we always interpret a flipped matrix as affecting scaleY and the user only wants to tween the scaleX on multiple sequential tweens, it would keep the negative scaleY without that being the user's intent.
					min = 0.00002,
					rnd = 100000,
					zOrigin = _supports3D ? parseFloat(_getStyle(t, _transformOriginProp, cs, false, "0 0 0").split(" ")[2]) || tm.zOrigin  || 0 : 0,
					defaultTransformPerspective = parseFloat(CSSPlugin.defaultTransformPerspective) || 0,
					m, i, scaleX, scaleY, rotation, skewX;

				tm.svg = !!(t.getBBox && _isSVG(t));
				if (tm.svg) {
					_parseSVGOrigin(t, _getStyle(t, _transformOriginProp, cs, false, "50% 50%") + "", tm, t.getAttribute("data-svg-origin"));
					_useSVGTransformAttr = CSSPlugin.useSVGTransformAttr || _forceSVGTransformAttr;
				}
				m = _getMatrix(t);
				if (m !== _identity2DMatrix) {

					if (m.length === 16) {
						//we'll only look at these position-related 6 variables first because if x/y/z all match, it's relatively safe to assume we don't need to re-parse everything which risks losing important rotational information (like rotationX:180 plus rotationY:180 would look the same as rotation:180 - there's no way to know for sure which direction was taken based solely on the matrix3d() values)
						var a11 = m[0], a21 = m[1], a31 = m[2], a41 = m[3],
							a12 = m[4], a22 = m[5], a32 = m[6], a42 = m[7],
							a13 = m[8], a23 = m[9], a33 = m[10],
							a14 = m[12], a24 = m[13], a34 = m[14],
							a43 = m[11],
							angle = Math.atan2(a32, a33),
							t1, t2, t3, t4, cos, sin;

						//we manually compensate for non-zero z component of transformOrigin to work around bugs in Safari
						if (tm.zOrigin) {
							a34 = -tm.zOrigin;
							a14 = a13*a34-m[12];
							a24 = a23*a34-m[13];
							a34 = a33*a34+tm.zOrigin-m[14];
						}
						tm.rotationX = angle * _RAD2DEG;
						//rotationX
						if (angle) {
							cos = Math.cos(-angle);
							sin = Math.sin(-angle);
							t1 = a12*cos+a13*sin;
							t2 = a22*cos+a23*sin;
							t3 = a32*cos+a33*sin;
							a13 = a12*-sin+a13*cos;
							a23 = a22*-sin+a23*cos;
							a33 = a32*-sin+a33*cos;
							a43 = a42*-sin+a43*cos;
							a12 = t1;
							a22 = t2;
							a32 = t3;
						}
						//rotationY
						angle = Math.atan2(-a31, a33);
						tm.rotationY = angle * _RAD2DEG;
						if (angle) {
							cos = Math.cos(-angle);
							sin = Math.sin(-angle);
							t1 = a11*cos-a13*sin;
							t2 = a21*cos-a23*sin;
							t3 = a31*cos-a33*sin;
							a23 = a21*sin+a23*cos;
							a33 = a31*sin+a33*cos;
							a43 = a41*sin+a43*cos;
							a11 = t1;
							a21 = t2;
							a31 = t3;
						}
						//rotationZ
						angle = Math.atan2(a21, a11);
						tm.rotation = angle * _RAD2DEG;
						if (angle) {
							cos = Math.cos(-angle);
							sin = Math.sin(-angle);
							a11 = a11*cos+a12*sin;
							t2 = a21*cos+a22*sin;
							a22 = a21*-sin+a22*cos;
							a32 = a31*-sin+a32*cos;
							a21 = t2;
						}

						if (tm.rotationX && Math.abs(tm.rotationX) + Math.abs(tm.rotation) > 359.9) { //when rotationY is set, it will often be parsed as 180 degrees different than it should be, and rotationX and rotation both being 180 (it looks the same), so we adjust for that here.
							tm.rotationX = tm.rotation = 0;
							tm.rotationY = 180 - tm.rotationY;
						}

						tm.scaleX = ((Math.sqrt(a11 * a11 + a21 * a21) * rnd + 0.5) | 0) / rnd;
						tm.scaleY = ((Math.sqrt(a22 * a22 + a23 * a23) * rnd + 0.5) | 0) / rnd;
						tm.scaleZ = ((Math.sqrt(a32 * a32 + a33 * a33) * rnd + 0.5) | 0) / rnd;
						if (tm.rotationX || tm.rotationY) {
							tm.skewX = 0;
						} else {
							tm.skewX = (a12 || a22) ? Math.atan2(a12, a22) * _RAD2DEG + tm.rotation : tm.skewX || 0;
							if (Math.abs(tm.skewX) > 90 && Math.abs(tm.skewX) < 270) {
								if (invX) {
									tm.scaleX *= -1;
									tm.skewX += (tm.rotation <= 0) ? 180 : -180;
									tm.rotation += (tm.rotation <= 0) ? 180 : -180;
								} else {
									tm.scaleY *= -1;
									tm.skewX += (tm.skewX <= 0) ? 180 : -180;
								}
							}
						}
						tm.perspective = a43 ? 1 / ((a43 < 0) ? -a43 : a43) : 0;
						tm.x = a14;
						tm.y = a24;
						tm.z = a34;
						if (tm.svg) {
							tm.x -= tm.xOrigin - (tm.xOrigin * a11 - tm.yOrigin * a12);
							tm.y -= tm.yOrigin - (tm.yOrigin * a21 - tm.xOrigin * a22);
						}

					} else if ((!_supports3D || parse || !m.length || tm.x !== m[4] || tm.y !== m[5] || (!tm.rotationX && !tm.rotationY))) { //sometimes a 6-element matrix is returned even when we performed 3D transforms, like if rotationX and rotationY are 180. In cases like this, we still need to honor the 3D transforms. If we just rely on the 2D info, it could affect how the data is interpreted, like scaleY might get set to -1 or rotation could get offset by 180 degrees. For example, do a TweenLite.to(element, 1, {css:{rotationX:180, rotationY:180}}) and then later, TweenLite.to(element, 1, {css:{rotationX:0}}) and without this conditional logic in place, it'd jump to a state of being unrotated when the 2nd tween starts. Then again, we need to honor the fact that the user COULD alter the transforms outside of CSSPlugin, like by manually applying new css, so we try to sense that by looking at x and y because if those changed, we know the changes were made outside CSSPlugin and we force a reinterpretation of the matrix values. Also, in Webkit browsers, if the element's "display" is "none", its calculated style value will always return empty, so if we've already recorded the values in the _gsTransform object, we'll just rely on those.
						var k = (m.length >= 6),
							a = k ? m[0] : 1,
							b = m[1] || 0,
							c = m[2] || 0,
							d = k ? m[3] : 1;
						tm.x = m[4] || 0;
						tm.y = m[5] || 0;
						scaleX = Math.sqrt(a * a + b * b);
						scaleY = Math.sqrt(d * d + c * c);
						rotation = (a || b) ? Math.atan2(b, a) * _RAD2DEG : tm.rotation || 0; //note: if scaleX is 0, we cannot accurately measure rotation. Same for skewX with a scaleY of 0. Therefore, we default to the previously recorded value (or zero if that doesn't exist).
						skewX = (c || d) ? Math.atan2(c, d) * _RAD2DEG + rotation : tm.skewX || 0;
						if (Math.abs(skewX) > 90 && Math.abs(skewX) < 270) {
							if (invX) {
								scaleX *= -1;
								skewX += (rotation <= 0) ? 180 : -180;
								rotation += (rotation <= 0) ? 180 : -180;
							} else {
								scaleY *= -1;
								skewX += (skewX <= 0) ? 180 : -180;
							}
						}
						tm.scaleX = scaleX;
						tm.scaleY = scaleY;
						tm.rotation = rotation;
						tm.skewX = skewX;
						if (_supports3D) {
							tm.rotationX = tm.rotationY = tm.z = 0;
							tm.perspective = defaultTransformPerspective;
							tm.scaleZ = 1;
						}
						if (tm.svg) {
							tm.x -= tm.xOrigin - (tm.xOrigin * a + tm.yOrigin * c);
							tm.y -= tm.yOrigin - (tm.xOrigin * b + tm.yOrigin * d);
						}
					}
					tm.zOrigin = zOrigin;
					//some browsers have a hard time with very small values like 2.4492935982947064e-16 (notice the "e-" towards the end) and would render the object slightly off. So we round to 0 in these cases. The conditional logic here is faster than calling Math.abs(). Also, browsers tend to render a SLIGHTLY rotated object in a fuzzy way, so we need to snap to exactly 0 when appropriate.
					for (i in tm) {
						if (tm[i] < min) if (tm[i] > -min) {
							tm[i] = 0;
						}
					}
				}
				//DEBUG: _log("parsed rotation of " + t.getAttribute("id")+": "+(tm.rotationX)+", "+(tm.rotationY)+", "+(tm.rotation)+", scale: "+tm.scaleX+", "+tm.scaleY+", "+tm.scaleZ+", position: "+tm.x+", "+tm.y+", "+tm.z+", perspective: "+tm.perspective+ ", origin: "+ tm.xOrigin+ ","+ tm.yOrigin);
				if (rec) {
					t._gsTransform = tm; //record to the object's _gsTransform which we use so that tweens can control individual properties independently (we need all the properties to accurately recompose the matrix in the setRatio() method)
					if (tm.svg) { //if we're supposed to apply transforms to the SVG element's "transform" attribute, make sure there aren't any CSS transforms applied or they'll override the attribute ones. Also clear the transform attribute if we're using CSS, just to be clean.
						if (_useSVGTransformAttr && t.style[_transformProp]) {
							TweenLite.delayedCall(0.001, function(){ //if we apply this right away (before anything has rendered), we risk there being no transforms for a brief moment and it also interferes with adjusting the transformOrigin in a tween with immediateRender:true (it'd try reading the matrix and it wouldn't have the appropriate data in place because we just removed it).
								_removeProp(t.style, _transformProp);
							});
						} else if (!_useSVGTransformAttr && t.getAttribute("transform")) {
							TweenLite.delayedCall(0.001, function(){
								t.removeAttribute("transform");
							});
						}
					}
				}
				return tm;
			},

			//for setting 2D transforms in IE6, IE7, and IE8 (must use a "filter" to emulate the behavior of modern day browser transforms)
			_setIETransformRatio = function(v) {
				var t = this.data, //refers to the element's _gsTransform object
					ang = -t.rotation * _DEG2RAD,
					skew = ang + t.skewX * _DEG2RAD,
					rnd = 100000,
					a = ((Math.cos(ang) * t.scaleX * rnd) | 0) / rnd,
					b = ((Math.sin(ang) * t.scaleX * rnd) | 0) / rnd,
					c = ((Math.sin(skew) * -t.scaleY * rnd) | 0) / rnd,
					d = ((Math.cos(skew) * t.scaleY * rnd) | 0) / rnd,
					style = this.t.style,
					cs = this.t.currentStyle,
					filters, val;
				if (!cs) {
					return;
				}
				val = b; //just for swapping the variables an inverting them (reused "val" to avoid creating another variable in memory). IE's filter matrix uses a non-standard matrix configuration (angle goes the opposite way, and b and c are reversed and inverted)
				b = -c;
				c = -val;
				filters = cs.filter;
				style.filter = ""; //remove filters so that we can accurately measure offsetWidth/offsetHeight
				var w = this.t.offsetWidth,
					h = this.t.offsetHeight,
					clip = (cs.position !== "absolute"),
					m = "progid:DXImageTransform.Microsoft.Matrix(M11=" + a + ", M12=" + b + ", M21=" + c + ", M22=" + d,
					ox = t.x + (w * t.xPercent / 100),
					oy = t.y + (h * t.yPercent / 100),
					dx, dy;

				//if transformOrigin is being used, adjust the offset x and y
				if (t.ox != null) {
					dx = ((t.oxp) ? w * t.ox * 0.01 : t.ox) - w / 2;
					dy = ((t.oyp) ? h * t.oy * 0.01 : t.oy) - h / 2;
					ox += dx - (dx * a + dy * b);
					oy += dy - (dx * c + dy * d);
				}

				if (!clip) {
					m += ", sizingMethod='auto expand')";
				} else {
					dx = (w / 2);
					dy = (h / 2);
					//translate to ensure that transformations occur around the correct origin (default is center).
					m += ", Dx=" + (dx - (dx * a + dy * b) + ox) + ", Dy=" + (dy - (dx * c + dy * d) + oy) + ")";
				}
				if (filters.indexOf("DXImageTransform.Microsoft.Matrix(") !== -1) {
					style.filter = filters.replace(_ieSetMatrixExp, m);
				} else {
					style.filter = m + " " + filters; //we must always put the transform/matrix FIRST (before alpha(opacity=xx)) to avoid an IE bug that slices part of the object when rotation is applied with alpha.
				}

				//at the end or beginning of the tween, if the matrix is normal (1, 0, 0, 1) and opacity is 100 (or doesn't exist), remove the filter to improve browser performance.
				if (v === 0 || v === 1) if (a === 1) if (b === 0) if (c === 0) if (d === 1) if (!clip || m.indexOf("Dx=0, Dy=0") !== -1) if (!_opacityExp.test(filters) || parseFloat(RegExp.$1) === 100) if (filters.indexOf("gradient(" && filters.indexOf("Alpha")) === -1) {
					style.removeAttribute("filter");
				}

				//we must set the margins AFTER applying the filter in order to avoid some bugs in IE8 that could (in rare scenarios) cause them to be ignored intermittently (vibration).
				if (!clip) {
					var mult = (_ieVers < 8) ? 1 : -1, //in Internet Explorer 7 and before, the box model is broken, causing the browser to treat the width/height of the actual rotated filtered image as the width/height of the box itself, but Microsoft corrected that in IE8. We must use a negative offset in IE8 on the right/bottom
						marg, prop, dif;
					dx = t.ieOffsetX || 0;
					dy = t.ieOffsetY || 0;
					t.ieOffsetX = Math.round((w - ((a < 0 ? -a : a) * w + (b < 0 ? -b : b) * h)) / 2 + ox);
					t.ieOffsetY = Math.round((h - ((d < 0 ? -d : d) * h + (c < 0 ? -c : c) * w)) / 2 + oy);
					for (i = 0; i < 4; i++) {
						prop = _margins[i];
						marg = cs[prop];
						//we need to get the current margin in case it is being tweened separately (we want to respect that tween's changes)
						val = (marg.indexOf("px") !== -1) ? parseFloat(marg) : _convertToPixels(this.t, prop, parseFloat(marg), marg.replace(_suffixExp, "")) || 0;
						if (val !== t[prop]) {
							dif = (i < 2) ? -t.ieOffsetX : -t.ieOffsetY; //if another tween is controlling a margin, we cannot only apply the difference in the ieOffsets, so we essentially zero-out the dx and dy here in that case. We record the margin(s) later so that we can keep comparing them, making this code very flexible.
						} else {
							dif = (i < 2) ? dx - t.ieOffsetX : dy - t.ieOffsetY;
						}
						style[prop] = (t[prop] = Math.round( val - dif * ((i === 0 || i === 2) ? 1 : mult) )) + "px";
					}
				}
			},

			/* translates a super small decimal to a string WITHOUT scientific notation
			_safeDecimal = function(n) {
				var s = (n < 0 ? -n : n) + "",
					a = s.split("e-");
				return (n < 0 ? "-0." : "0.") + new Array(parseInt(a[1], 10) || 0).join("0") + a[0].split(".").join("");
			},
			*/

			_setTransformRatio = _internals.set3DTransformRatio = _internals.setTransformRatio = function(v) {
				var t = this.data, //refers to the element's _gsTransform object
					style = this.t.style,
					angle = t.rotation,
					rotationX = t.rotationX,
					rotationY = t.rotationY,
					sx = t.scaleX,
					sy = t.scaleY,
					sz = t.scaleZ,
					x = t.x,
					y = t.y,
					z = t.z,
					isSVG = t.svg,
					perspective = t.perspective,
					force3D = t.force3D,
					a11, a12, a13, a21, a22, a23, a31, a32, a33, a41, a42, a43,
					zOrigin, min, cos, sin, t1, t2, transform, comma, zero, skew, rnd;
				//check to see if we should render as 2D (and SVGs must use 2D when _useSVGTransformAttr is true)
				if (((((v === 1 || v === 0) && force3D === "auto" && (this.tween._totalTime === this.tween._totalDuration || !this.tween._totalTime)) || !force3D) && !z && !perspective && !rotationY && !rotationX && sz === 1) || (_useSVGTransformAttr && isSVG) || !_supports3D) { //on the final render (which could be 0 for a from tween), if there are no 3D aspects, render in 2D to free up memory and improve performance especially on mobile devices. Check the tween's totalTime/totalDuration too in order to make sure it doesn't happen between repeats if it's a repeating tween.

					//2D
					if (angle || t.skewX || isSVG) {
						angle *= _DEG2RAD;
						skew = t.skewX * _DEG2RAD;
						rnd = 100000;
						a11 = Math.cos(angle) * sx;
						a21 = Math.sin(angle) * sx;
						a12 = Math.sin(angle - skew) * -sy;
						a22 = Math.cos(angle - skew) * sy;
						if (skew && t.skewType === "simple") { //by default, we compensate skewing on the other axis to make it look more natural, but you can set the skewType to "simple" to use the uncompensated skewing that CSS does
							t1 = Math.tan(skew - t.skewY * _DEG2RAD);
							t1 = Math.sqrt(1 + t1 * t1);
							a12 *= t1;
							a22 *= t1;
							if (t.skewY) {
								t1 = Math.tan(t.skewY * _DEG2RAD);
								t1 = Math.sqrt(1 + t1 * t1);
								a11 *= t1;
								a21 *= t1;
							}
						}
						if (isSVG) {
							x += t.xOrigin - (t.xOrigin * a11 + t.yOrigin * a12) + t.xOffset;
							y += t.yOrigin - (t.xOrigin * a21 + t.yOrigin * a22) + t.yOffset;
							if (_useSVGTransformAttr && (t.xPercent || t.yPercent)) { //The SVG spec doesn't support percentage-based translation in the "transform" attribute, so we merge it into the matrix to simulate it.
								min = this.t.getBBox();
								x += t.xPercent * 0.01 * min.width;
								y += t.yPercent * 0.01 * min.height;
							}
							min = 0.000001;
							if (x < min) if (x > -min) {
								x = 0;
							}
							if (y < min) if (y > -min) {
								y = 0;
							}
						}
						transform = (((a11 * rnd) | 0) / rnd) + "," + (((a21 * rnd) | 0) / rnd) + "," + (((a12 * rnd) | 0) / rnd) + "," + (((a22 * rnd) | 0) / rnd) + "," + x + "," + y + ")";
						if (isSVG && _useSVGTransformAttr) {
							this.t.setAttribute("transform", "matrix(" + transform);
						} else {
							//some browsers have a hard time with very small values like 2.4492935982947064e-16 (notice the "e-" towards the end) and would render the object slightly off. So we round to 5 decimal places.
							style[_transformProp] = ((t.xPercent || t.yPercent) ? "translate(" + t.xPercent + "%," + t.yPercent + "%) matrix(" : "matrix(") + transform;
						}
					} else {
						style[_transformProp] = ((t.xPercent || t.yPercent) ? "translate(" + t.xPercent + "%," + t.yPercent + "%) matrix(" : "matrix(") + sx + ",0,0," + sy + "," + x + "," + y + ")";
					}
					return;

				}
				if (_isFirefox) { //Firefox has a bug (at least in v25) that causes it to render the transparent part of 32-bit PNG images as black when displayed inside an iframe and the 3D scale is very small and doesn't change sufficiently enough between renders (like if you use a Power4.easeInOut to scale from 0 to 1 where the beginning values only change a tiny amount to begin the tween before accelerating). In this case, we force the scale to be 0.00002 instead which is visually the same but works around the Firefox issue.
					min = 0.0001;
					if (sx < min && sx > -min) {
						sx = sz = 0.00002;
					}
					if (sy < min && sy > -min) {
						sy = sz = 0.00002;
					}
					if (perspective && !t.z && !t.rotationX && !t.rotationY) { //Firefox has a bug that causes elements to have an odd super-thin, broken/dotted black border on elements that have a perspective set but aren't utilizing 3D space (no rotationX, rotationY, or z).
						perspective = 0;
					}
				}
				if (angle || t.skewX) {
					angle *= _DEG2RAD;
					cos = a11 = Math.cos(angle);
					sin = a21 = Math.sin(angle);
					if (t.skewX) {
						angle -= t.skewX * _DEG2RAD;
						cos = Math.cos(angle);
						sin = Math.sin(angle);
						if (t.skewType === "simple") { //by default, we compensate skewing on the other axis to make it look more natural, but you can set the skewType to "simple" to use the uncompensated skewing that CSS does
							t1 = Math.tan((t.skewX - t.skewY) * _DEG2RAD);
							t1 = Math.sqrt(1 + t1 * t1);
							cos *= t1;
							sin *= t1;
							if (t.skewY) {
								t1 = Math.tan(t.skewY * _DEG2RAD);
								t1 = Math.sqrt(1 + t1 * t1);
								a11 *= t1;
								a21 *= t1;
							}
						}
					}
					a12 = -sin;
					a22 = cos;

				} else if (!rotationY && !rotationX && sz === 1 && !perspective && !isSVG) { //if we're only translating and/or 2D scaling, this is faster...
					style[_transformProp] = ((t.xPercent || t.yPercent) ? "translate(" + t.xPercent + "%," + t.yPercent + "%) translate3d(" : "translate3d(") + x + "px," + y + "px," + z +"px)" + ((sx !== 1 || sy !== 1) ? " scale(" + sx + "," + sy + ")" : "");
					return;
				} else {
					a11 = a22 = 1;
					a12 = a21 = 0;
				}
				// KEY  INDEX   AFFECTS
				// a11  0       rotation, rotationY, scaleX
				// a21  1       rotation, rotationY, scaleX
				// a31  2       rotationY, scaleX
				// a41  3       rotationY, scaleX
				// a12  4       rotation, skewX, rotationX, scaleY
				// a22  5       rotation, skewX, rotationX, scaleY
				// a32  6       rotationX, scaleY
				// a42  7       rotationX, scaleY
				// a13  8       rotationY, rotationX, scaleZ
				// a23  9       rotationY, rotationX, scaleZ
				// a33  10      rotationY, rotationX, scaleZ
				// a43  11      rotationY, rotationX, perspective, scaleZ
				// a14  12      x, zOrigin, svgOrigin
				// a24  13      y, zOrigin, svgOrigin
				// a34  14      z, zOrigin
				// a44  15
				// rotation: Math.atan2(a21, a11)
				// rotationY: Math.atan2(a13, a33) (or Math.atan2(a13, a11))
				// rotationX: Math.atan2(a32, a33)
				a33 = 1;
				a13 = a23 = a31 = a32 = a41 = a42 = 0;
				a43 = (perspective) ? -1 / perspective : 0;
				zOrigin = t.zOrigin;
				min = 0.000001; //threshold below which browsers use scientific notation which won't work.
				comma = ",";
				zero = "0";
				angle = rotationY * _DEG2RAD;
				if (angle) {
					cos = Math.cos(angle);
					sin = Math.sin(angle);
					a31 = -sin;
					a41 = a43*-sin;
					a13 = a11*sin;
					a23 = a21*sin;
					a33 = cos;
					a43 *= cos;
					a11 *= cos;
					a21 *= cos;
				}
				angle = rotationX * _DEG2RAD;
				if (angle) {
					cos = Math.cos(angle);
					sin = Math.sin(angle);
					t1 = a12*cos+a13*sin;
					t2 = a22*cos+a23*sin;
					a32 = a33*sin;
					a42 = a43*sin;
					a13 = a12*-sin+a13*cos;
					a23 = a22*-sin+a23*cos;
					a33 = a33*cos;
					a43 = a43*cos;
					a12 = t1;
					a22 = t2;
				}
				if (sz !== 1) {
					a13*=sz;
					a23*=sz;
					a33*=sz;
					a43*=sz;
				}
				if (sy !== 1) {
					a12*=sy;
					a22*=sy;
					a32*=sy;
					a42*=sy;
				}
				if (sx !== 1) {
					a11*=sx;
					a21*=sx;
					a31*=sx;
					a41*=sx;
				}

				if (zOrigin || isSVG) {
					if (zOrigin) {
						x += a13*-zOrigin;
						y += a23*-zOrigin;
						z += a33*-zOrigin+zOrigin;
					}
					if (isSVG) { //due to bugs in some browsers, we need to manage the transform-origin of SVG manually
						x += t.xOrigin - (t.xOrigin * a11 + t.yOrigin * a12) + t.xOffset;
						y += t.yOrigin - (t.xOrigin * a21 + t.yOrigin * a22) + t.yOffset;
					}
					if (x < min && x > -min) {
						x = zero;
					}
					if (y < min && y > -min) {
						y = zero;
					}
					if (z < min && z > -min) {
						z = 0; //don't use string because we calculate perspective later and need the number.
					}
				}

				//optimized way of concatenating all the values into a string. If we do it all in one shot, it's slower because of the way browsers have to create temp strings and the way it affects memory. If we do it piece-by-piece with +=, it's a bit slower too. We found that doing it in these sized chunks works best overall:
				transform = ((t.xPercent || t.yPercent) ? "translate(" + t.xPercent + "%," + t.yPercent + "%) matrix3d(" : "matrix3d(");
				transform += ((a11 < min && a11 > -min) ? zero : a11) + comma + ((a21 < min && a21 > -min) ? zero : a21) + comma + ((a31 < min && a31 > -min) ? zero : a31);
				transform += comma + ((a41 < min && a41 > -min) ? zero : a41) + comma + ((a12 < min && a12 > -min) ? zero : a12) + comma + ((a22 < min && a22 > -min) ? zero : a22);
				if (rotationX || rotationY || sz !== 1) { //performance optimization (often there's no rotationX or rotationY, so we can skip these calculations)
					transform += comma + ((a32 < min && a32 > -min) ? zero : a32) + comma + ((a42 < min && a42 > -min) ? zero : a42) + comma + ((a13 < min && a13 > -min) ? zero : a13);
					transform += comma + ((a23 < min && a23 > -min) ? zero : a23) + comma + ((a33 < min && a33 > -min) ? zero : a33) + comma + ((a43 < min && a43 > -min) ? zero : a43) + comma;
				} else {
					transform += ",0,0,0,0,1,0,";
				}
				transform += x + comma + y + comma + z + comma + (perspective ? (1 + (-z / perspective)) : 1) + ")";

				style[_transformProp] = transform;
			};

		p = Transform.prototype;
		p.x = p.y = p.z = p.skewX = p.skewY = p.rotation = p.rotationX = p.rotationY = p.zOrigin = p.xPercent = p.yPercent = p.xOffset = p.yOffset = 0;
		p.scaleX = p.scaleY = p.scaleZ = 1;

		_registerComplexSpecialProp("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin", {parser:function(t, e, parsingProp, cssp, pt, plugin, vars) {
			if (cssp._lastParsedTransform === vars) { return pt; } //only need to parse the transform once, and only if the browser supports it.
			cssp._lastParsedTransform = vars;
			var swapFunc;
			if (typeof(vars[parsingProp]) === "function") { //whatever property triggers the initial parsing might be a function-based value in which case it already got called in parse(), thus we don't want to call it again in here. The most efficient way to avoid this is to temporarily swap the value directly into the vars object, and then after we do all our parsing in this function, we'll swap it back again.
				swapFunc = vars[parsingProp];
				vars[parsingProp] = e;
			}
			var originalGSTransform = t._gsTransform,
				style = t.style,
				min = 0.000001,
				i = _transformProps.length,
				v = vars,
				endRotations = {},
				transformOriginString = "transformOrigin",
				m1 = _getTransform(t, _cs, true, v.parseTransform),
				orig = v.transform && ((typeof(v.transform) === "function") ? v.transform(_index, _target) : v.transform),
				m2, copy, has3D, hasChange, dr, x, y, matrix, p;
			cssp._transform = m1;
			if (orig && typeof(orig) === "string" && _transformProp) { //for values like transform:"rotate(60deg) scale(0.5, 0.8)"
				copy = _tempDiv.style; //don't use the original target because it might be SVG in which case some browsers don't report computed style correctly.
				copy[_transformProp] = orig;
				copy.display = "block"; //if display is "none", the browser often refuses to report the transform properties correctly.
				copy.position = "absolute";
				_doc.body.appendChild(_tempDiv);
				m2 = _getTransform(_tempDiv, null, false);
				if (m1.svg) { //if it's an SVG element, x/y part of the matrix will be affected by whatever we use as the origin and the offsets, so compensate here...
					x = m1.xOrigin;
					y = m1.yOrigin;
					m2.x -= m1.xOffset;
					m2.y -= m1.yOffset;
					if (v.transformOrigin || v.svgOrigin) { //if this tween is altering the origin, we must factor that in here. The actual work of recording the transformOrigin values and setting up the PropTween is done later (still inside this function) so we cannot leave the changes intact here - we only want to update the x/y accordingly.
						orig = {};
						_parseSVGOrigin(t, _parsePosition(v.transformOrigin), orig, v.svgOrigin, v.smoothOrigin, true);
						x = orig.xOrigin;
						y = orig.yOrigin;
						m2.x -= orig.xOffset - m1.xOffset;
						m2.y -= orig.yOffset - m1.yOffset;
					}
					if (x || y) {
						matrix = _getMatrix(_tempDiv, true);
						m2.x -= x - (x * matrix[0] + y * matrix[2]);
						m2.y -= y - (x * matrix[1] + y * matrix[3]);
					}
				}
				_doc.body.removeChild(_tempDiv);
				if (!m2.perspective) {
					m2.perspective = m1.perspective; //tweening to no perspective gives very unintuitive results - just keep the same perspective in that case.
				}
				if (v.xPercent != null) {
					m2.xPercent = _parseVal(v.xPercent, m1.xPercent);
				}
				if (v.yPercent != null) {
					m2.yPercent = _parseVal(v.yPercent, m1.yPercent);
				}
			} else if (typeof(v) === "object") { //for values like scaleX, scaleY, rotation, x, y, skewX, and skewY or transform:{...} (object)
				m2 = {scaleX:_parseVal((v.scaleX != null) ? v.scaleX : v.scale, m1.scaleX),
					scaleY:_parseVal((v.scaleY != null) ? v.scaleY : v.scale, m1.scaleY),
					scaleZ:_parseVal(v.scaleZ, m1.scaleZ),
					x:_parseVal(v.x, m1.x),
					y:_parseVal(v.y, m1.y),
					z:_parseVal(v.z, m1.z),
					xPercent:_parseVal(v.xPercent, m1.xPercent),
					yPercent:_parseVal(v.yPercent, m1.yPercent),
					perspective:_parseVal(v.transformPerspective, m1.perspective)};
				dr = v.directionalRotation;
				if (dr != null) {
					if (typeof(dr) === "object") {
						for (copy in dr) {
							v[copy] = dr[copy];
						}
					} else {
						v.rotation = dr;
					}
				}
				if (typeof(v.x) === "string" && v.x.indexOf("%") !== -1) {
					m2.x = 0;
					m2.xPercent = _parseVal(v.x, m1.xPercent);
				}
				if (typeof(v.y) === "string" && v.y.indexOf("%") !== -1) {
					m2.y = 0;
					m2.yPercent = _parseVal(v.y, m1.yPercent);
				}

				m2.rotation = _parseAngle(("rotation" in v) ? v.rotation : ("shortRotation" in v) ? v.shortRotation + "_short" : ("rotationZ" in v) ? v.rotationZ : m1.rotation - m1.skewY, m1.rotation - m1.skewY, "rotation", endRotations); //see notes below about skewY for why we subtract it from rotation here
				if (_supports3D) {
					m2.rotationX = _parseAngle(("rotationX" in v) ? v.rotationX : ("shortRotationX" in v) ? v.shortRotationX + "_short" : m1.rotationX || 0, m1.rotationX, "rotationX", endRotations);
					m2.rotationY = _parseAngle(("rotationY" in v) ? v.rotationY : ("shortRotationY" in v) ? v.shortRotationY + "_short" : m1.rotationY || 0, m1.rotationY, "rotationY", endRotations);
				}
				m2.skewX = _parseAngle(v.skewX, m1.skewX - m1.skewY); //see notes below about skewY and why we subtract it from skewX here

				//note: for performance reasons, we combine all skewing into the skewX and rotation values, ignoring skewY but we must still record it so that we can discern how much of the overall skew is attributed to skewX vs. skewY. Otherwise, if the skewY would always act relative (tween skewY to 10deg, for example, multiple times and if we always combine things into skewX, we can't remember that skewY was 10 from last time). Remember, a skewY of 10 degrees looks the same as a rotation of 10 degrees plus a skewX of -10 degrees.
				if ((m2.skewY = _parseAngle(v.skewY, m1.skewY))) {
					m2.skewX += m2.skewY;
					m2.rotation += m2.skewY;
				}
			}
			if (_supports3D && v.force3D != null) {
				m1.force3D = v.force3D;
				hasChange = true;
			}

			m1.skewType = v.skewType || m1.skewType || CSSPlugin.defaultSkewType;

			has3D = (m1.force3D || m1.z || m1.rotationX || m1.rotationY || m2.z || m2.rotationX || m2.rotationY || m2.perspective);
			if (!has3D && v.scale != null) {
				m2.scaleZ = 1; //no need to tween scaleZ.
			}

			while (--i > -1) {
				p = _transformProps[i];
				orig = m2[p] - m1[p];
				if (orig > min || orig < -min || v[p] != null || _forcePT[p] != null) {
					hasChange = true;
					pt = new CSSPropTween(m1, p, m1[p], orig, pt);
					if (p in endRotations) {
						pt.e = endRotations[p]; //directional rotations typically have compensated values during the tween, but we need to make sure they end at exactly what the user requested
					}
					pt.xs0 = 0; //ensures the value stays numeric in setRatio()
					pt.plugin = plugin;
					cssp._overwriteProps.push(pt.n);
				}
			}

			orig = v.transformOrigin;
			if (m1.svg && (orig || v.svgOrigin)) {
				x = m1.xOffset; //when we change the origin, in order to prevent things from jumping we adjust the x/y so we must record those here so that we can create PropTweens for them and flip them at the same time as the origin
				y = m1.yOffset;
				_parseSVGOrigin(t, _parsePosition(orig), m2, v.svgOrigin, v.smoothOrigin);
				pt = _addNonTweeningNumericPT(m1, "xOrigin", (originalGSTransform ? m1 : m2).xOrigin, m2.xOrigin, pt, transformOriginString); //note: if there wasn't a transformOrigin defined yet, just start with the destination one; it's wasteful otherwise, and it causes problems with fromTo() tweens. For example, TweenLite.to("#wheel", 3, {rotation:180, transformOrigin:"50% 50%", delay:1}); TweenLite.fromTo("#wheel", 3, {scale:0.5, transformOrigin:"50% 50%"}, {scale:1, delay:2}); would cause a jump when the from values revert at the beginning of the 2nd tween.
				pt = _addNonTweeningNumericPT(m1, "yOrigin", (originalGSTransform ? m1 : m2).yOrigin, m2.yOrigin, pt, transformOriginString);
				if (x !== m1.xOffset || y !== m1.yOffset) {
					pt = _addNonTweeningNumericPT(m1, "xOffset", (originalGSTransform ? x : m1.xOffset), m1.xOffset, pt, transformOriginString);
					pt = _addNonTweeningNumericPT(m1, "yOffset", (originalGSTransform ? y : m1.yOffset), m1.yOffset, pt, transformOriginString);
				}
				orig = _useSVGTransformAttr ? null : "0px 0px"; //certain browsers (like firefox) completely botch transform-origin, so we must remove it to prevent it from contaminating transforms. We manage it ourselves with xOrigin and yOrigin
			}
			if (orig || (_supports3D && has3D && m1.zOrigin)) { //if anything 3D is happening and there's a transformOrigin with a z component that's non-zero, we must ensure that the transformOrigin's z-component is set to 0 so that we can manually do those calculations to get around Safari bugs. Even if the user didn't specifically define a "transformOrigin" in this particular tween (maybe they did it via css directly).
				if (_transformProp) {
					hasChange = true;
					p = _transformOriginProp;
					orig = (orig || _getStyle(t, p, _cs, false, "50% 50%")) + ""; //cast as string to avoid errors
					pt = new CSSPropTween(style, p, 0, 0, pt, -1, transformOriginString);
					pt.b = style[p];
					pt.plugin = plugin;
					if (_supports3D) {
						copy = m1.zOrigin;
						orig = orig.split(" ");
						m1.zOrigin = ((orig.length > 2 && !(copy !== 0 && orig[2] === "0px")) ? parseFloat(orig[2]) : copy) || 0; //Safari doesn't handle the z part of transformOrigin correctly, so we'll manually handle it in the _set3DTransformRatio() method.
						pt.xs0 = pt.e = orig[0] + " " + (orig[1] || "50%") + " 0px"; //we must define a z value of 0px specifically otherwise iOS 5 Safari will stick with the old one (if one was defined)!
						pt = new CSSPropTween(m1, "zOrigin", 0, 0, pt, -1, pt.n); //we must create a CSSPropTween for the _gsTransform.zOrigin so that it gets reset properly at the beginning if the tween runs backward (as opposed to just setting m1.zOrigin here)
						pt.b = copy;
						pt.xs0 = pt.e = m1.zOrigin;
					} else {
						pt.xs0 = pt.e = orig;
					}

					//for older versions of IE (6-8), we need to manually calculate things inside the setRatio() function. We record origin x and y (ox and oy) and whether or not the values are percentages (oxp and oyp).
				} else {
					_parsePosition(orig + "", m1);
				}
			}
			if (hasChange) {
				cssp._transformType = (!(m1.svg && _useSVGTransformAttr) && (has3D || this._transformType === 3)) ? 3 : 2; //quicker than calling cssp._enableTransforms();
			}
			if (swapFunc) {
				vars[parsingProp] = swapFunc;
			}
			return pt;
		}, prefix:true});

		_registerComplexSpecialProp("boxShadow", {defaultValue:"0px 0px 0px 0px #999", prefix:true, color:true, multi:true, keyword:"inset"});

		_registerComplexSpecialProp("borderRadius", {defaultValue:"0px", parser:function(t, e, p, cssp, pt, plugin) {
			e = this.format(e);
			var props = ["borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius"],
				style = t.style,
				ea1, i, es2, bs2, bs, es, bn, en, w, h, esfx, bsfx, rel, hn, vn, em;
			w = parseFloat(t.offsetWidth);
			h = parseFloat(t.offsetHeight);
			ea1 = e.split(" ");
			for (i = 0; i < props.length; i++) { //if we're dealing with percentages, we must convert things separately for the horizontal and vertical axis!
				if (this.p.indexOf("border")) { //older browsers used a prefix
					props[i] = _checkPropPrefix(props[i]);
				}
				bs = bs2 = _getStyle(t, props[i], _cs, false, "0px");
				if (bs.indexOf(" ") !== -1) {
					bs2 = bs.split(" ");
					bs = bs2[0];
					bs2 = bs2[1];
				}
				es = es2 = ea1[i];
				bn = parseFloat(bs);
				bsfx = bs.substr((bn + "").length);
				rel = (es.charAt(1) === "=");
				if (rel) {
					en = parseInt(es.charAt(0)+"1", 10);
					es = es.substr(2);
					en *= parseFloat(es);
					esfx = es.substr((en + "").length - (en < 0 ? 1 : 0)) || "";
				} else {
					en = parseFloat(es);
					esfx = es.substr((en + "").length);
				}
				if (esfx === "") {
					esfx = _suffixMap[p] || bsfx;
				}
				if (esfx !== bsfx) {
					hn = _convertToPixels(t, "borderLeft", bn, bsfx); //horizontal number (we use a bogus "borderLeft" property just because the _convertToPixels() method searches for the keywords "Left", "Right", "Top", and "Bottom" to determine of it's a horizontal or vertical property, and we need "border" in the name so that it knows it should measure relative to the element itself, not its parent.
					vn = _convertToPixels(t, "borderTop", bn, bsfx); //vertical number
					if (esfx === "%") {
						bs = (hn / w * 100) + "%";
						bs2 = (vn / h * 100) + "%";
					} else if (esfx === "em") {
						em = _convertToPixels(t, "borderLeft", 1, "em");
						bs = (hn / em) + "em";
						bs2 = (vn / em) + "em";
					} else {
						bs = hn + "px";
						bs2 = vn + "px";
					}
					if (rel) {
						es = (parseFloat(bs) + en) + esfx;
						es2 = (parseFloat(bs2) + en) + esfx;
					}
				}
				pt = _parseComplex(style, props[i], bs + " " + bs2, es + " " + es2, false, "0px", pt);
			}
			return pt;
		}, prefix:true, formatter:_getFormatter("0px 0px 0px 0px", false, true)});
		_registerComplexSpecialProp("borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius", {defaultValue:"0px", parser:function(t, e, p, cssp, pt, plugin) {
			return _parseComplex(t.style, p, this.format(_getStyle(t, p, _cs, false, "0px 0px")), this.format(e), false, "0px", pt);
		}, prefix:true, formatter:_getFormatter("0px 0px", false, true)});
		_registerComplexSpecialProp("backgroundPosition", {defaultValue:"0 0", parser:function(t, e, p, cssp, pt, plugin) {
			var bp = "background-position",
				cs = (_cs || _getComputedStyle(t, null)),
				bs = this.format( ((cs) ? _ieVers ? cs.getPropertyValue(bp + "-x") + " " + cs.getPropertyValue(bp + "-y") : cs.getPropertyValue(bp) : t.currentStyle.backgroundPositionX + " " + t.currentStyle.backgroundPositionY) || "0 0"), //Internet Explorer doesn't report background-position correctly - we must query background-position-x and background-position-y and combine them (even in IE10). Before IE9, we must do the same with the currentStyle object and use camelCase
				es = this.format(e),
				ba, ea, i, pct, overlap, src;
			if ((bs.indexOf("%") !== -1) !== (es.indexOf("%") !== -1) && es.split(",").length < 2) {
				src = _getStyle(t, "backgroundImage").replace(_urlExp, "");
				if (src && src !== "none") {
					ba = bs.split(" ");
					ea = es.split(" ");
					_tempImg.setAttribute("src", src); //set the temp IMG's src to the background-image so that we can measure its width/height
					i = 2;
					while (--i > -1) {
						bs = ba[i];
						pct = (bs.indexOf("%") !== -1);
						if (pct !== (ea[i].indexOf("%") !== -1)) {
							overlap = (i === 0) ? t.offsetWidth - _tempImg.width : t.offsetHeight - _tempImg.height;
							ba[i] = pct ? (parseFloat(bs) / 100 * overlap) + "px" : (parseFloat(bs) / overlap * 100) + "%";
						}
					}
					bs = ba.join(" ");
				}
			}
			return this.parseComplex(t.style, bs, es, pt, plugin);
		}, formatter:_parsePosition});
		_registerComplexSpecialProp("backgroundSize", {defaultValue:"0 0", formatter:function(v) {
			v += ""; //ensure it's a string
			return _parsePosition(v.indexOf(" ") === -1 ? v + " " + v : v); //if set to something like "100% 100%", Safari typically reports the computed style as just "100%" (no 2nd value), but we should ensure that there are two values, so copy the first one. Otherwise, it'd be interpreted as "100% 0" (wrong).
		}});
		_registerComplexSpecialProp("perspective", {defaultValue:"0px", prefix:true});
		_registerComplexSpecialProp("perspectiveOrigin", {defaultValue:"50% 50%", prefix:true});
		_registerComplexSpecialProp("transformStyle", {prefix:true});
		_registerComplexSpecialProp("backfaceVisibility", {prefix:true});
		_registerComplexSpecialProp("userSelect", {prefix:true});
		_registerComplexSpecialProp("margin", {parser:_getEdgeParser("marginTop,marginRight,marginBottom,marginLeft")});
		_registerComplexSpecialProp("padding", {parser:_getEdgeParser("paddingTop,paddingRight,paddingBottom,paddingLeft")});
		_registerComplexSpecialProp("clip", {defaultValue:"rect(0px,0px,0px,0px)", parser:function(t, e, p, cssp, pt, plugin){
			var b, cs, delim;
			if (_ieVers < 9) { //IE8 and earlier don't report a "clip" value in the currentStyle - instead, the values are split apart into clipTop, clipRight, clipBottom, and clipLeft. Also, in IE7 and earlier, the values inside rect() are space-delimited, not comma-delimited.
				cs = t.currentStyle;
				delim = _ieVers < 8 ? " " : ",";
				b = "rect(" + cs.clipTop + delim + cs.clipRight + delim + cs.clipBottom + delim + cs.clipLeft + ")";
				e = this.format(e).split(",").join(delim);
			} else {
				b = this.format(_getStyle(t, this.p, _cs, false, this.dflt));
				e = this.format(e);
			}
			return this.parseComplex(t.style, b, e, pt, plugin);
		}});
		_registerComplexSpecialProp("textShadow", {defaultValue:"0px 0px 0px #999", color:true, multi:true});
		_registerComplexSpecialProp("autoRound,strictUnits", {parser:function(t, e, p, cssp, pt) {return pt;}}); //just so that we can ignore these properties (not tween them)
		_registerComplexSpecialProp("border", {defaultValue:"0px solid #000", parser:function(t, e, p, cssp, pt, plugin) {
			var bw = _getStyle(t, "borderTopWidth", _cs, false, "0px"),
				end = this.format(e).split(" "),
				esfx = end[0].replace(_suffixExp, "");
			if (esfx !== "px") { //if we're animating to a non-px value, we need to convert the beginning width to that unit.
				bw = (parseFloat(bw) / _convertToPixels(t, "borderTopWidth", 1, esfx)) + esfx;
			}
			return this.parseComplex(t.style, this.format(bw + " " + _getStyle(t, "borderTopStyle", _cs, false, "solid") + " " + _getStyle(t, "borderTopColor", _cs, false, "#000")), end.join(" "), pt, plugin);
			}, color:true, formatter:function(v) {
				var a = v.split(" ");
				return a[0] + " " + (a[1] || "solid") + " " + (v.match(_colorExp) || ["#000"])[0];
			}});
		_registerComplexSpecialProp("borderWidth", {parser:_getEdgeParser("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth")}); //Firefox doesn't pick up on borderWidth set in style sheets (only inline).
		_registerComplexSpecialProp("float,cssFloat,styleFloat", {parser:function(t, e, p, cssp, pt, plugin) {
			var s = t.style,
				prop = ("cssFloat" in s) ? "cssFloat" : "styleFloat";
			return new CSSPropTween(s, prop, 0, 0, pt, -1, p, false, 0, s[prop], e);
		}});

		//opacity-related
		var _setIEOpacityRatio = function(v) {
				var t = this.t, //refers to the element's style property
					filters = t.filter || _getStyle(this.data, "filter") || "",
					val = (this.s + this.c * v) | 0,
					skip;
				if (val === 100) { //for older versions of IE that need to use a filter to apply opacity, we should remove the filter if opacity hits 1 in order to improve performance, but make sure there isn't a transform (matrix) or gradient in the filters.
					if (filters.indexOf("atrix(") === -1 && filters.indexOf("radient(") === -1 && filters.indexOf("oader(") === -1) {
						t.removeAttribute("filter");
						skip = (!_getStyle(this.data, "filter")); //if a class is applied that has an alpha filter, it will take effect (we don't want that), so re-apply our alpha filter in that case. We must first remove it and then check.
					} else {
						t.filter = filters.replace(_alphaFilterExp, "");
						skip = true;
					}
				}
				if (!skip) {
					if (this.xn1) {
						t.filter = filters = filters || ("alpha(opacity=" + val + ")"); //works around bug in IE7/8 that prevents changes to "visibility" from being applied properly if the filter is changed to a different alpha on the same frame.
					}
					if (filters.indexOf("pacity") === -1) { //only used if browser doesn't support the standard opacity style property (IE 7 and 8). We omit the "O" to avoid case-sensitivity issues
						if (val !== 0 || !this.xn1) { //bugs in IE7/8 won't render the filter properly if opacity is ADDED on the same frame/render as "visibility" changes (this.xn1 is 1 if this tween is an "autoAlpha" tween)
							t.filter = filters + " alpha(opacity=" + val + ")"; //we round the value because otherwise, bugs in IE7/8 can prevent "visibility" changes from being applied properly.
						}
					} else {
						t.filter = filters.replace(_opacityExp, "opacity=" + val);
					}
				}
			};
		_registerComplexSpecialProp("opacity,alpha,autoAlpha", {defaultValue:"1", parser:function(t, e, p, cssp, pt, plugin) {
			var b = parseFloat(_getStyle(t, "opacity", _cs, false, "1")),
				style = t.style,
				isAutoAlpha = (p === "autoAlpha");
			if (typeof(e) === "string" && e.charAt(1) === "=") {
				e = ((e.charAt(0) === "-") ? -1 : 1) * parseFloat(e.substr(2)) + b;
			}
			if (isAutoAlpha && b === 1 && _getStyle(t, "visibility", _cs) === "hidden" && e !== 0) { //if visibility is initially set to "hidden", we should interpret that as intent to make opacity 0 (a convenience)
				b = 0;
			}
			if (_supportsOpacity) {
				pt = new CSSPropTween(style, "opacity", b, e - b, pt);
			} else {
				pt = new CSSPropTween(style, "opacity", b * 100, (e - b) * 100, pt);
				pt.xn1 = isAutoAlpha ? 1 : 0; //we need to record whether or not this is an autoAlpha so that in the setRatio(), we know to duplicate the setting of the alpha in order to work around a bug in IE7 and IE8 that prevents changes to "visibility" from taking effect if the filter is changed to a different alpha(opacity) at the same time. Setting it to the SAME value first, then the new value works around the IE7/8 bug.
				style.zoom = 1; //helps correct an IE issue.
				pt.type = 2;
				pt.b = "alpha(opacity=" + pt.s + ")";
				pt.e = "alpha(opacity=" + (pt.s + pt.c) + ")";
				pt.data = t;
				pt.plugin = plugin;
				pt.setRatio = _setIEOpacityRatio;
			}
			if (isAutoAlpha) { //we have to create the "visibility" PropTween after the opacity one in the linked list so that they run in the order that works properly in IE8 and earlier
				pt = new CSSPropTween(style, "visibility", 0, 0, pt, -1, null, false, 0, ((b !== 0) ? "inherit" : "hidden"), ((e === 0) ? "hidden" : "inherit"));
				pt.xs0 = "inherit";
				cssp._overwriteProps.push(pt.n);
				cssp._overwriteProps.push(p);
			}
			return pt;
		}});


		var _removeProp = function(s, p) {
				if (p) {
					if (s.removeProperty) {
						if (p.substr(0,2) === "ms" || p.substr(0,6) === "webkit") { //Microsoft and some Webkit browsers don't conform to the standard of capitalizing the first prefix character, so we adjust so that when we prefix the caps with a dash, it's correct (otherwise it'd be "ms-transform" instead of "-ms-transform" for IE9, for example)
							p = "-" + p;
						}
						s.removeProperty(p.replace(_capsExp, "-$1").toLowerCase());
					} else { //note: old versions of IE use "removeAttribute()" instead of "removeProperty()"
						s.removeAttribute(p);
					}
				}
			},
			_setClassNameRatio = function(v) {
				this.t._gsClassPT = this;
				if (v === 1 || v === 0) {
					this.t.setAttribute("class", (v === 0) ? this.b : this.e);
					var mpt = this.data, //first MiniPropTween
						s = this.t.style;
					while (mpt) {
						if (!mpt.v) {
							_removeProp(s, mpt.p);
						} else {
							s[mpt.p] = mpt.v;
						}
						mpt = mpt._next;
					}
					if (v === 1 && this.t._gsClassPT === this) {
						this.t._gsClassPT = null;
					}
				} else if (this.t.getAttribute("class") !== this.e) {
					this.t.setAttribute("class", this.e);
				}
			};
		_registerComplexSpecialProp("className", {parser:function(t, e, p, cssp, pt, plugin, vars) {
			var b = t.getAttribute("class") || "", //don't use t.className because it doesn't work consistently on SVG elements; getAttribute("class") and setAttribute("class", value") is more reliable.
				cssText = t.style.cssText,
				difData, bs, cnpt, cnptLookup, mpt;
			pt = cssp._classNamePT = new CSSPropTween(t, p, 0, 0, pt, 2);
			pt.setRatio = _setClassNameRatio;
			pt.pr = -11;
			_hasPriority = true;
			pt.b = b;
			bs = _getAllStyles(t, _cs);
			//if there's a className tween already operating on the target, force it to its end so that the necessary inline styles are removed and the class name is applied before we determine the end state (we don't want inline styles interfering that were there just for class-specific values)
			cnpt = t._gsClassPT;
			if (cnpt) {
				cnptLookup = {};
				mpt = cnpt.data; //first MiniPropTween which stores the inline styles - we need to force these so that the inline styles don't contaminate things. Otherwise, there's a small chance that a tween could start and the inline values match the destination values and they never get cleaned.
				while (mpt) {
					cnptLookup[mpt.p] = 1;
					mpt = mpt._next;
				}
				cnpt.setRatio(1);
			}
			t._gsClassPT = pt;
			pt.e = (e.charAt(1) !== "=") ? e : b.replace(new RegExp("(?:\\s|^)" + e.substr(2) + "(?![\\w-])"), "") + ((e.charAt(0) === "+") ? " " + e.substr(2) : "");
			t.setAttribute("class", pt.e);
			difData = _cssDif(t, bs, _getAllStyles(t), vars, cnptLookup);
			t.setAttribute("class", b);
			pt.data = difData.firstMPT;
			t.style.cssText = cssText; //we recorded cssText before we swapped classes and ran _getAllStyles() because in cases when a className tween is overwritten, we remove all the related tweening properties from that class change (otherwise class-specific stuff can't override properties we've directly set on the target's style object due to specificity).
			pt = pt.xfirst = cssp.parse(t, difData.difs, pt, plugin); //we record the CSSPropTween as the xfirst so that we can handle overwriting propertly (if "className" gets overwritten, we must kill all the properties associated with the className part of the tween, so we can loop through from xfirst to the pt itself)
			return pt;
		}});


		var _setClearPropsRatio = function(v) {
			if (v === 1 || v === 0) if (this.data._totalTime === this.data._totalDuration && this.data.data !== "isFromStart") { //this.data refers to the tween. Only clear at the END of the tween (remember, from() tweens make the ratio go from 1 to 0, so we can't just check that and if the tween is the zero-duration one that's created internally to render the starting values in a from() tween, ignore that because otherwise, for example, from(...{height:100, clearProps:"height", delay:1}) would wipe the height at the beginning of the tween and after 1 second, it'd kick back in).
				var s = this.t.style,
					transformParse = _specialProps.transform.parse,
					a, p, i, clearTransform, transform;
				if (this.e === "all") {
					s.cssText = "";
					clearTransform = true;
				} else {
					a = this.e.split(" ").join("").split(",");
					i = a.length;
					while (--i > -1) {
						p = a[i];
						if (_specialProps[p]) {
							if (_specialProps[p].parse === transformParse) {
								clearTransform = true;
							} else {
								p = (p === "transformOrigin") ? _transformOriginProp : _specialProps[p].p; //ensures that special properties use the proper browser-specific property name, like "scaleX" might be "-webkit-transform" or "boxShadow" might be "-moz-box-shadow"
							}
						}
						_removeProp(s, p);
					}
				}
				if (clearTransform) {
					_removeProp(s, _transformProp);
					transform = this.t._gsTransform;
					if (transform) {
						if (transform.svg) {
							this.t.removeAttribute("data-svg-origin");
							this.t.removeAttribute("transform");
						}
						delete this.t._gsTransform;
					}
				}

			}
		};
		_registerComplexSpecialProp("clearProps", {parser:function(t, e, p, cssp, pt) {
			pt = new CSSPropTween(t, p, 0, 0, pt, 2);
			pt.setRatio = _setClearPropsRatio;
			pt.e = e;
			pt.pr = -10;
			pt.data = cssp._tween;
			_hasPriority = true;
			return pt;
		}});

		p = "bezier,throwProps,physicsProps,physics2D".split(",");
		i = p.length;
		while (i--) {
			_registerPluginProp(p[i]);
		}








		p = CSSPlugin.prototype;
		p._firstPT = p._lastParsedTransform = p._transform = null;

		//gets called when the tween renders for the first time. This kicks everything off, recording start/end values, etc.
		p._onInitTween = function(target, vars, tween, index) {
			if (!target.nodeType) { //css is only for dom elements
				return false;
			}
			this._target = _target = target;
			this._tween = tween;
			this._vars = vars;
			_index = index;
			_autoRound = vars.autoRound;
			_hasPriority = false;
			_suffixMap = vars.suffixMap || CSSPlugin.suffixMap;
			_cs = _getComputedStyle(target, "");
			_overwriteProps = this._overwriteProps;
			var style = target.style,
				v, pt, pt2, first, last, next, zIndex, tpt, threeD;
			if (_reqSafariFix) if (style.zIndex === "") {
				v = _getStyle(target, "zIndex", _cs);
				if (v === "auto" || v === "") {
					//corrects a bug in [non-Android] Safari that prevents it from repainting elements in their new positions if they don't have a zIndex set. We also can't just apply this inside _parseTransform() because anything that's moved in any way (like using "left" or "top" instead of transforms like "x" and "y") can be affected, so it is best to ensure that anything that's tweening has a z-index. Setting "WebkitPerspective" to a non-zero value worked too except that on iOS Safari things would flicker randomly. Plus zIndex is less memory-intensive.
					this._addLazySet(style, "zIndex", 0);
				}
			}

			if (typeof(vars) === "string") {
				first = style.cssText;
				v = _getAllStyles(target, _cs);
				style.cssText = first + ";" + vars;
				v = _cssDif(target, v, _getAllStyles(target)).difs;
				if (!_supportsOpacity && _opacityValExp.test(vars)) {
					v.opacity = parseFloat( RegExp.$1 );
				}
				vars = v;
				style.cssText = first;
			}

			if (vars.className) { //className tweens will combine any differences they find in the css with the vars that are passed in, so {className:"myClass", scale:0.5, left:20} would work.
				this._firstPT = pt = _specialProps.className.parse(target, vars.className, "className", this, null, null, vars);
			} else {
				this._firstPT = pt = this.parse(target, vars, null);
			}

			if (this._transformType) {
				threeD = (this._transformType === 3);
				if (!_transformProp) {
					style.zoom = 1; //helps correct an IE issue.
				} else if (_isSafari) {
					_reqSafariFix = true;
					//if zIndex isn't set, iOS Safari doesn't repaint things correctly sometimes (seemingly at random).
					if (style.zIndex === "") {
						zIndex = _getStyle(target, "zIndex", _cs);
						if (zIndex === "auto" || zIndex === "") {
							this._addLazySet(style, "zIndex", 0);
						}
					}
					//Setting WebkitBackfaceVisibility corrects 3 bugs:
					// 1) [non-Android] Safari skips rendering changes to "top" and "left" that are made on the same frame/render as a transform update.
					// 2) iOS Safari sometimes neglects to repaint elements in their new positions. Setting "WebkitPerspective" to a non-zero value worked too except that on iOS Safari things would flicker randomly.
					// 3) Safari sometimes displayed odd artifacts when tweening the transform (or WebkitTransform) property, like ghosts of the edges of the element remained. Definitely a browser bug.
					//Note: we allow the user to override the auto-setting by defining WebkitBackfaceVisibility in the vars of the tween.
					if (_isSafariLT6) {
						this._addLazySet(style, "WebkitBackfaceVisibility", this._vars.WebkitBackfaceVisibility || (threeD ? "visible" : "hidden"));
					}
				}
				pt2 = pt;
				while (pt2 && pt2._next) {
					pt2 = pt2._next;
				}
				tpt = new CSSPropTween(target, "transform", 0, 0, null, 2);
				this._linkCSSP(tpt, null, pt2);
				tpt.setRatio = _transformProp ? _setTransformRatio : _setIETransformRatio;
				tpt.data = this._transform || _getTransform(target, _cs, true);
				tpt.tween = tween;
				tpt.pr = -1; //ensures that the transforms get applied after the components are updated.
				_overwriteProps.pop(); //we don't want to force the overwrite of all "transform" tweens of the target - we only care about individual transform properties like scaleX, rotation, etc. The CSSPropTween constructor automatically adds the property to _overwriteProps which is why we need to pop() here.
			}

			if (_hasPriority) {
				//reorders the linked list in order of pr (priority)
				while (pt) {
					next = pt._next;
					pt2 = first;
					while (pt2 && pt2.pr > pt.pr) {
						pt2 = pt2._next;
					}
					if ((pt._prev = pt2 ? pt2._prev : last)) {
						pt._prev._next = pt;
					} else {
						first = pt;
					}
					if ((pt._next = pt2)) {
						pt2._prev = pt;
					} else {
						last = pt;
					}
					pt = next;
				}
				this._firstPT = first;
			}
			return true;
		};


		p.parse = function(target, vars, pt, plugin) {
			var style = target.style,
				p, sp, bn, en, bs, es, bsfx, esfx, isStr, rel;
			for (p in vars) {
				es = vars[p]; //ending value string
				if (typeof(es) === "function") {
					es = es(_index, _target);
				}
				sp = _specialProps[p]; //SpecialProp lookup.
				if (sp) {
					pt = sp.parse(target, es, p, this, pt, plugin, vars);

				} else {
					bs = _getStyle(target, p, _cs) + "";
					isStr = (typeof(es) === "string");
					if (p === "color" || p === "fill" || p === "stroke" || p.indexOf("Color") !== -1 || (isStr && _rgbhslExp.test(es))) { //Opera uses background: to define color sometimes in addition to backgroundColor:
						if (!isStr) {
							es = _parseColor(es);
							es = ((es.length > 3) ? "rgba(" : "rgb(") + es.join(",") + ")";
						}
						pt = _parseComplex(style, p, bs, es, true, "transparent", pt, 0, plugin);

					} else if (isStr && _complexExp.test(es)) {
						pt = _parseComplex(style, p, bs, es, true, null, pt, 0, plugin);

					} else {
						bn = parseFloat(bs);
						bsfx = (bn || bn === 0) ? bs.substr((bn + "").length) : ""; //remember, bs could be non-numeric like "normal" for fontWeight, so we should default to a blank suffix in that case.

						if (bs === "" || bs === "auto") {
							if (p === "width" || p === "height") {
								bn = _getDimension(target, p, _cs);
								bsfx = "px";
							} else if (p === "left" || p === "top") {
								bn = _calculateOffset(target, p, _cs);
								bsfx = "px";
							} else {
								bn = (p !== "opacity") ? 0 : 1;
								bsfx = "";
							}
						}

						rel = (isStr && es.charAt(1) === "=");
						if (rel) {
							en = parseInt(es.charAt(0) + "1", 10);
							es = es.substr(2);
							en *= parseFloat(es);
							esfx = es.replace(_suffixExp, "");
						} else {
							en = parseFloat(es);
							esfx = isStr ? es.replace(_suffixExp, "") : "";
						}

						if (esfx === "") {
							esfx = (p in _suffixMap) ? _suffixMap[p] : bsfx; //populate the end suffix, prioritizing the map, then if none is found, use the beginning suffix.
						}

						es = (en || en === 0) ? (rel ? en + bn : en) + esfx : vars[p]; //ensures that any += or -= prefixes are taken care of. Record the end value before normalizing the suffix because we always want to end the tween on exactly what they intended even if it doesn't match the beginning value's suffix.

						//if the beginning/ending suffixes don't match, normalize them...
						if (bsfx !== esfx) if (esfx !== "") if (en || en === 0) if (bn) { //note: if the beginning value (bn) is 0, we don't need to convert units!
							bn = _convertToPixels(target, p, bn, bsfx);
							if (esfx === "%") {
								bn /= _convertToPixels(target, p, 100, "%") / 100;
								if (vars.strictUnits !== true) { //some browsers report only "px" values instead of allowing "%" with getComputedStyle(), so we assume that if we're tweening to a %, we should start there too unless strictUnits:true is defined. This approach is particularly useful for responsive designs that use from() tweens.
									bs = bn + "%";
								}

							} else if (esfx === "em" || esfx === "rem" || esfx === "vw" || esfx === "vh") {
								bn /= _convertToPixels(target, p, 1, esfx);

							//otherwise convert to pixels.
							} else if (esfx !== "px") {
								en = _convertToPixels(target, p, en, esfx);
								esfx = "px"; //we don't use bsfx after this, so we don't need to set it to px too.
							}
							if (rel) if (en || en === 0) {
								es = (en + bn) + esfx; //the changes we made affect relative calculations, so adjust the end value here.
							}
						}

						if (rel) {
							en += bn;
						}

						if ((bn || bn === 0) && (en || en === 0)) { //faster than isNaN(). Also, previously we required en !== bn but that doesn't really gain much performance and it prevents _parseToProxy() from working properly if beginning and ending values match but need to get tweened by an external plugin anyway. For example, a bezier tween where the target starts at left:0 and has these points: [{left:50},{left:0}] wouldn't work properly because when parsing the last point, it'd match the first (current) one and a non-tweening CSSPropTween would be recorded when we actually need a normal tween (type:0) so that things get updated during the tween properly.
							pt = new CSSPropTween(style, p, bn, en - bn, pt, 0, p, (_autoRound !== false && (esfx === "px" || p === "zIndex")), 0, bs, es);
							pt.xs0 = esfx;
							//DEBUG: _log("tween "+p+" from "+pt.b+" ("+bn+esfx+") to "+pt.e+" with suffix: "+pt.xs0);
						} else if (style[p] === undefined || !es && (es + "" === "NaN" || es == null)) {
							_log("invalid " + p + " tween value: " + vars[p]);
						} else {
							pt = new CSSPropTween(style, p, en || bn || 0, 0, pt, -1, p, false, 0, bs, es);
							pt.xs0 = (es === "none" && (p === "display" || p.indexOf("Style") !== -1)) ? bs : es; //intermediate value should typically be set immediately (end value) except for "display" or things like borderTopStyle, borderBottomStyle, etc. which should use the beginning value during the tween.
							//DEBUG: _log("non-tweening value "+p+": "+pt.xs0);
						}
					}
				}
				if (plugin) if (pt && !pt.plugin) {
					pt.plugin = plugin;
				}
			}
			return pt;
		};


		//gets called every time the tween updates, passing the new ratio (typically a value between 0 and 1, but not always (for example, if an Elastic.easeOut is used, the value can jump above 1 mid-tween). It will always start and 0 and end at 1.
		p.setRatio = function(v) {
			var pt = this._firstPT,
				min = 0.000001,
				val, str, i;
			//at the end of the tween, we set the values to exactly what we received in order to make sure non-tweening values (like "position" or "float" or whatever) are set and so that if the beginning/ending suffixes (units) didn't match and we normalized to px, the value that the user passed in is used here. We check to see if the tween is at its beginning in case it's a from() tween in which case the ratio will actually go from 1 to 0 over the course of the tween (backwards).
			if (v === 1 && (this._tween._time === this._tween._duration || this._tween._time === 0)) {
				while (pt) {
					if (pt.type !== 2) {
						if (pt.r && pt.type !== -1) {
							val = Math.round(pt.s + pt.c);
							if (!pt.type) {
								pt.t[pt.p] = val + pt.xs0;
							} else if (pt.type === 1) { //complex value (one that typically has multiple numbers inside a string, like "rect(5px,10px,20px,25px)"
								i = pt.l;
								str = pt.xs0 + val + pt.xs1;
								for (i = 1; i < pt.l; i++) {
									str += pt["xn"+i] + pt["xs"+(i+1)];
								}
								pt.t[pt.p] = str;
							}
						} else {
							pt.t[pt.p] = pt.e;
						}
					} else {
						pt.setRatio(v);
					}
					pt = pt._next;
				}

			} else if (v || !(this._tween._time === this._tween._duration || this._tween._time === 0) || this._tween._rawPrevTime === -0.000001) {
				while (pt) {
					val = pt.c * v + pt.s;
					if (pt.r) {
						val = Math.round(val);
					} else if (val < min) if (val > -min) {
						val = 0;
					}
					if (!pt.type) {
						pt.t[pt.p] = val + pt.xs0;
					} else if (pt.type === 1) { //complex value (one that typically has multiple numbers inside a string, like "rect(5px,10px,20px,25px)"
						i = pt.l;
						if (i === 2) {
							pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2;
						} else if (i === 3) {
							pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3;
						} else if (i === 4) {
							pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3 + pt.xn3 + pt.xs4;
						} else if (i === 5) {
							pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3 + pt.xn3 + pt.xs4 + pt.xn4 + pt.xs5;
						} else {
							str = pt.xs0 + val + pt.xs1;
							for (i = 1; i < pt.l; i++) {
								str += pt["xn"+i] + pt["xs"+(i+1)];
							}
							pt.t[pt.p] = str;
						}

					} else if (pt.type === -1) { //non-tweening value
						pt.t[pt.p] = pt.xs0;

					} else if (pt.setRatio) { //custom setRatio() for things like SpecialProps, external plugins, etc.
						pt.setRatio(v);
					}
					pt = pt._next;
				}

			//if the tween is reversed all the way back to the beginning, we need to restore the original values which may have different units (like % instead of px or em or whatever).
			} else {
				while (pt) {
					if (pt.type !== 2) {
						pt.t[pt.p] = pt.b;
					} else {
						pt.setRatio(v);
					}
					pt = pt._next;
				}
			}
		};

		/**
		 * @private
		 * Forces rendering of the target's transforms (rotation, scale, etc.) whenever the CSSPlugin's setRatio() is called.
		 * Basically, this tells the CSSPlugin to create a CSSPropTween (type 2) after instantiation that runs last in the linked
		 * list and calls the appropriate (3D or 2D) rendering function. We separate this into its own method so that we can call
		 * it from other plugins like BezierPlugin if, for example, it needs to apply an autoRotation and this CSSPlugin
		 * doesn't have any transform-related properties of its own. You can call this method as many times as you
		 * want and it won't create duplicate CSSPropTweens.
		 *
		 * @param {boolean} threeD if true, it should apply 3D tweens (otherwise, just 2D ones are fine and typically faster)
		 */
		p._enableTransforms = function(threeD) {
			this._transform = this._transform || _getTransform(this._target, _cs, true); //ensures that the element has a _gsTransform property with the appropriate values.
			this._transformType = (!(this._transform.svg && _useSVGTransformAttr) && (threeD || this._transformType === 3)) ? 3 : 2;
		};

		var lazySet = function(v) {
			this.t[this.p] = this.e;
			this.data._linkCSSP(this, this._next, null, true); //we purposefully keep this._next even though it'd make sense to null it, but this is a performance optimization, as this happens during the while (pt) {} loop in setRatio() at the bottom of which it sets pt = pt._next, so if we null it, the linked list will be broken in that loop.
		};
		/** @private Gives us a way to set a value on the first render (and only the first render). **/
		p._addLazySet = function(t, p, v) {
			var pt = this._firstPT = new CSSPropTween(t, p, 0, 0, this._firstPT, 2);
			pt.e = v;
			pt.setRatio = lazySet;
			pt.data = this;
		};

		/** @private **/
		p._linkCSSP = function(pt, next, prev, remove) {
			if (pt) {
				if (next) {
					next._prev = pt;
				}
				if (pt._next) {
					pt._next._prev = pt._prev;
				}
				if (pt._prev) {
					pt._prev._next = pt._next;
				} else if (this._firstPT === pt) {
					this._firstPT = pt._next;
					remove = true; //just to prevent resetting this._firstPT 5 lines down in case pt._next is null. (optimized for speed)
				}
				if (prev) {
					prev._next = pt;
				} else if (!remove && this._firstPT === null) {
					this._firstPT = pt;
				}
				pt._next = next;
				pt._prev = prev;
			}
			return pt;
		};

		p._mod = function(lookup) {
			var pt = this._firstPT;
			while (pt) {
				if (typeof(lookup[pt.p]) === "function" && lookup[pt.p] === Math.round) { //only gets called by RoundPropsPlugin (ModifyPlugin manages all the rendering internally for CSSPlugin properties that need modification). Remember, we handle rounding a bit differently in this plugin for performance reasons, leveraging "r" as an indicator that the value should be rounded internally..
					pt.r = 1;
				}
				pt = pt._next;
			}
		};

		//we need to make sure that if alpha or autoAlpha is killed, opacity is too. And autoAlpha affects the "visibility" property.
		p._kill = function(lookup) {
			var copy = lookup,
				pt, p, xfirst;
			if (lookup.autoAlpha || lookup.alpha) {
				copy = {};
				for (p in lookup) { //copy the lookup so that we're not changing the original which may be passed elsewhere.
					copy[p] = lookup[p];
				}
				copy.opacity = 1;
				if (copy.autoAlpha) {
					copy.visibility = 1;
				}
			}
			if (lookup.className && (pt = this._classNamePT)) { //for className tweens, we need to kill any associated CSSPropTweens too; a linked list starts at the className's "xfirst".
				xfirst = pt.xfirst;
				if (xfirst && xfirst._prev) {
					this._linkCSSP(xfirst._prev, pt._next, xfirst._prev._prev); //break off the prev
				} else if (xfirst === this._firstPT) {
					this._firstPT = pt._next;
				}
				if (pt._next) {
					this._linkCSSP(pt._next, pt._next._next, xfirst._prev);
				}
				this._classNamePT = null;
			}
			pt = this._firstPT;
			while (pt) {
				if (pt.plugin && pt.plugin !== p && pt.plugin._kill) { //for plugins that are registered with CSSPlugin, we should notify them of the kill.
					pt.plugin._kill(lookup);
					p = pt.plugin;
				}
				pt = pt._next;
			}
			return TweenPlugin.prototype._kill.call(this, copy);
		};



		//used by cascadeTo() for gathering all the style properties of each child element into an array for comparison.
		var _getChildStyles = function(e, props, targets) {
				var children, i, child, type;
				if (e.slice) {
					i = e.length;
					while (--i > -1) {
						_getChildStyles(e[i], props, targets);
					}
					return;
				}
				children = e.childNodes;
				i = children.length;
				while (--i > -1) {
					child = children[i];
					type = child.type;
					if (child.style) {
						props.push(_getAllStyles(child));
						if (targets) {
							targets.push(child);
						}
					}
					if ((type === 1 || type === 9 || type === 11) && child.childNodes.length) {
						_getChildStyles(child, props, targets);
					}
				}
			};

		/**
		 * Typically only useful for className tweens that may affect child elements, this method creates a TweenLite
		 * and then compares the style properties of all the target's child elements at the tween's start and end, and
		 * if any are different, it also creates tweens for those and returns an array containing ALL of the resulting
		 * tweens (so that you can easily add() them to a TimelineLite, for example). The reason this functionality is
		 * wrapped into a separate static method of CSSPlugin instead of being integrated into all regular className tweens
		 * is because it creates entirely new tweens that may have completely different targets than the original tween,
		 * so if they were all lumped into the original tween instance, it would be inconsistent with the rest of the API
		 * and it would create other problems. For example:
		 *  - If I create a tween of elementA, that tween instance may suddenly change its target to include 50 other elements (unintuitive if I specifically defined the target I wanted)
		 *  - We can't just create new independent tweens because otherwise, what happens if the original/parent tween is reversed or pause or dropped into a TimelineLite for tight control? You'd expect that tween's behavior to affect all the others.
		 *  - Analyzing every style property of every child before and after the tween is an expensive operation when there are many children, so this behavior shouldn't be imposed on all className tweens by default, especially since it's probably rare that this extra functionality is needed.
		 *
		 * @param {Object} target object to be tweened
		 * @param {number} Duration in seconds (or frames for frames-based tweens)
		 * @param {Object} Object containing the end values, like {className:"newClass", ease:Linear.easeNone}
		 * @return {Array} An array of TweenLite instances
		 */
		CSSPlugin.cascadeTo = function(target, duration, vars) {
			var tween = TweenLite.to(target, duration, vars),
				results = [tween],
				b = [],
				e = [],
				targets = [],
				_reservedProps = TweenLite._internals.reservedProps,
				i, difs, p, from;
			target = tween._targets || tween.target;
			_getChildStyles(target, b, targets);
			tween.render(duration, true, true);
			_getChildStyles(target, e);
			tween.render(0, true, true);
			tween._enabled(true);
			i = targets.length;
			while (--i > -1) {
				difs = _cssDif(targets[i], b[i], e[i]);
				if (difs.firstMPT) {
					difs = difs.difs;
					for (p in vars) {
						if (_reservedProps[p]) {
							difs[p] = vars[p];
						}
					}
					from = {};
					for (p in difs) {
						from[p] = b[i][p];
					}
					results.push(TweenLite.fromTo(targets[i], duration, from, difs));
				}
			}
			return results;
		};

		TweenPlugin.activate([CSSPlugin]);
		return CSSPlugin;

	}, true);
	
}); if (_gsScope._gsDefine) { _gsScope._gsQueue.pop()(); }

//export to AMD/RequireJS and CommonJS/Node (precursor to full modular build system coming at a later date)
(function(name) {
	"use strict";
	var getGlobal = function() {
		return (_gsScope.GreenSockGlobals || _gsScope)[name];
	};
	if (typeof(define) === "function" && define.amd) { //AMD
		define(["TweenLite"], getGlobal);
	} else if (typeof(module) !== "undefined" && module.exports) { //node
		require("../TweenLite.js");
		module.exports = getGlobal();
	}
}("CSSPlugin"));

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../TweenLite.js":3}],5:[function(require,module,exports){
'use strict';

exports.__esModule = true;
// istanbul ignore next

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

// istanbul ignore next

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

var _handlebarsBase = require('./handlebars/base');

var base = _interopRequireWildcard(_handlebarsBase);

// Each of these augment the Handlebars object. No need to setup here.
// (This is done to easily share code between commonjs and browse envs)

var _handlebarsSafeString = require('./handlebars/safe-string');

var _handlebarsSafeString2 = _interopRequireDefault(_handlebarsSafeString);

var _handlebarsException = require('./handlebars/exception');

var _handlebarsException2 = _interopRequireDefault(_handlebarsException);

var _handlebarsUtils = require('./handlebars/utils');

var Utils = _interopRequireWildcard(_handlebarsUtils);

var _handlebarsRuntime = require('./handlebars/runtime');

var runtime = _interopRequireWildcard(_handlebarsRuntime);

var _handlebarsNoConflict = require('./handlebars/no-conflict');

var _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict);

// For compatibility and usage outside of module systems, make the Handlebars object a namespace
function create() {
  var hb = new base.HandlebarsEnvironment();

  Utils.extend(hb, base);
  hb.SafeString = _handlebarsSafeString2['default'];
  hb.Exception = _handlebarsException2['default'];
  hb.Utils = Utils;
  hb.escapeExpression = Utils.escapeExpression;

  hb.VM = runtime;
  hb.template = function (spec) {
    return runtime.template(spec, hb);
  };

  return hb;
}

var inst = create();
inst.create = create;

_handlebarsNoConflict2['default'](inst);

inst['default'] = inst;

exports['default'] = inst;
module.exports = exports['default'];


},{"./handlebars/base":6,"./handlebars/exception":9,"./handlebars/no-conflict":19,"./handlebars/runtime":20,"./handlebars/safe-string":21,"./handlebars/utils":22}],6:[function(require,module,exports){
'use strict';

exports.__esModule = true;
exports.HandlebarsEnvironment = HandlebarsEnvironment;
// istanbul ignore next

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _utils = require('./utils');

var _exception = require('./exception');

var _exception2 = _interopRequireDefault(_exception);

var _helpers = require('./helpers');

var _decorators = require('./decorators');

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

var VERSION = '4.0.5';
exports.VERSION = VERSION;
var COMPILER_REVISION = 7;

exports.COMPILER_REVISION = COMPILER_REVISION;
var REVISION_CHANGES = {
  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it
  2: '== 1.0.0-rc.3',
  3: '== 1.0.0-rc.4',
  4: '== 1.x.x',
  5: '== 2.0.0-alpha.x',
  6: '>= 2.0.0-beta.1',
  7: '>= 4.0.0'
};

exports.REVISION_CHANGES = REVISION_CHANGES;
var objectType = '[object Object]';

function HandlebarsEnvironment(helpers, partials, decorators) {
  this.helpers = helpers || {};
  this.partials = partials || {};
  this.decorators = decorators || {};

  _helpers.registerDefaultHelpers(this);
  _decorators.registerDefaultDecorators(this);
}

HandlebarsEnvironment.prototype = {
  constructor: HandlebarsEnvironment,

  logger: _logger2['default'],
  log: _logger2['default'].log,

  registerHelper: function registerHelper(name, fn) {
    if (_utils.toString.call(name) === objectType) {
      if (fn) {
        throw new _exception2['default']('Arg not supported with multiple helpers');
      }
      _utils.extend(this.helpers, name);
    } else {
      this.helpers[name] = fn;
    }
  },
  unregisterHelper: function unregisterHelper(name) {
    delete this.helpers[name];
  },

  registerPartial: function registerPartial(name, partial) {
    if (_utils.toString.call(name) === objectType) {
      _utils.extend(this.partials, name);
    } else {
      if (typeof partial === 'undefined') {
        throw new _exception2['default']('Attempting to register a partial called "' + name + '" as undefined');
      }
      this.partials[name] = partial;
    }
  },
  unregisterPartial: function unregisterPartial(name) {
    delete this.partials[name];
  },

  registerDecorator: function registerDecorator(name, fn) {
    if (_utils.toString.call(name) === objectType) {
      if (fn) {
        throw new _exception2['default']('Arg not supported with multiple decorators');
      }
      _utils.extend(this.decorators, name);
    } else {
      this.decorators[name] = fn;
    }
  },
  unregisterDecorator: function unregisterDecorator(name) {
    delete this.decorators[name];
  }
};

var log = _logger2['default'].log;

exports.log = log;
exports.createFrame = _utils.createFrame;
exports.logger = _logger2['default'];


},{"./decorators":7,"./exception":9,"./helpers":10,"./logger":18,"./utils":22}],7:[function(require,module,exports){
'use strict';

exports.__esModule = true;
exports.registerDefaultDecorators = registerDefaultDecorators;
// istanbul ignore next

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _decoratorsInline = require('./decorators/inline');

var _decoratorsInline2 = _interopRequireDefault(_decoratorsInline);

function registerDefaultDecorators(instance) {
  _decoratorsInline2['default'](instance);
}


},{"./decorators/inline":8}],8:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _utils = require('../utils');

exports['default'] = function (instance) {
  instance.registerDecorator('inline', function (fn, props, container, options) {
    var ret = fn;
    if (!props.partials) {
      props.partials = {};
      ret = function (context, options) {
        // Create a new partials stack frame prior to exec.
        var original = container.partials;
        container.partials = _utils.extend({}, original, props.partials);
        var ret = fn(context, options);
        container.partials = original;
        return ret;
      };
    }

    props.partials[options.args[0]] = options.fn;

    return ret;
  });
};

module.exports = exports['default'];


},{"../utils":22}],9:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];

function Exception(message, node) {
  var loc = node && node.loc,
      line = undefined,
      column = undefined;
  if (loc) {
    line = loc.start.line;
    column = loc.start.column;

    message += ' - ' + line + ':' + column;
  }

  var tmp = Error.prototype.constructor.call(this, message);

  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.
  for (var idx = 0; idx < errorProps.length; idx++) {
    this[errorProps[idx]] = tmp[errorProps[idx]];
  }

  /* istanbul ignore else */
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, Exception);
  }

  if (loc) {
    this.lineNumber = line;
    this.column = column;
  }
}

Exception.prototype = new Error();

exports['default'] = Exception;
module.exports = exports['default'];


},{}],10:[function(require,module,exports){
'use strict';

exports.__esModule = true;
exports.registerDefaultHelpers = registerDefaultHelpers;
// istanbul ignore next

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _helpersBlockHelperMissing = require('./helpers/block-helper-missing');

var _helpersBlockHelperMissing2 = _interopRequireDefault(_helpersBlockHelperMissing);

var _helpersEach = require('./helpers/each');

var _helpersEach2 = _interopRequireDefault(_helpersEach);

var _helpersHelperMissing = require('./helpers/helper-missing');

var _helpersHelperMissing2 = _interopRequireDefault(_helpersHelperMissing);

var _helpersIf = require('./helpers/if');

var _helpersIf2 = _interopRequireDefault(_helpersIf);

var _helpersLog = require('./helpers/log');

var _helpersLog2 = _interopRequireDefault(_helpersLog);

var _helpersLookup = require('./helpers/lookup');

var _helpersLookup2 = _interopRequireDefault(_helpersLookup);

var _helpersWith = require('./helpers/with');

var _helpersWith2 = _interopRequireDefault(_helpersWith);

function registerDefaultHelpers(instance) {
  _helpersBlockHelperMissing2['default'](instance);
  _helpersEach2['default'](instance);
  _helpersHelperMissing2['default'](instance);
  _helpersIf2['default'](instance);
  _helpersLog2['default'](instance);
  _helpersLookup2['default'](instance);
  _helpersWith2['default'](instance);
}


},{"./helpers/block-helper-missing":11,"./helpers/each":12,"./helpers/helper-missing":13,"./helpers/if":14,"./helpers/log":15,"./helpers/lookup":16,"./helpers/with":17}],11:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _utils = require('../utils');

exports['default'] = function (instance) {
  instance.registerHelper('blockHelperMissing', function (context, options) {
    var inverse = options.inverse,
        fn = options.fn;

    if (context === true) {
      return fn(this);
    } else if (context === false || context == null) {
      return inverse(this);
    } else if (_utils.isArray(context)) {
      if (context.length > 0) {
        if (options.ids) {
          options.ids = [options.name];
        }

        return instance.helpers.each(context, options);
      } else {
        return inverse(this);
      }
    } else {
      if (options.data && options.ids) {
        var data = _utils.createFrame(options.data);
        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.name);
        options = { data: data };
      }

      return fn(context, options);
    }
  });
};

module.exports = exports['default'];


},{"../utils":22}],12:[function(require,module,exports){
'use strict';

exports.__esModule = true;
// istanbul ignore next

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _utils = require('../utils');

var _exception = require('../exception');

var _exception2 = _interopRequireDefault(_exception);

exports['default'] = function (instance) {
  instance.registerHelper('each', function (context, options) {
    if (!options) {
      throw new _exception2['default']('Must pass iterator to #each');
    }

    var fn = options.fn,
        inverse = options.inverse,
        i = 0,
        ret = '',
        data = undefined,
        contextPath = undefined;

    if (options.data && options.ids) {
      contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]) + '.';
    }

    if (_utils.isFunction(context)) {
      context = context.call(this);
    }

    if (options.data) {
      data = _utils.createFrame(options.data);
    }

    function execIteration(field, index, last) {
      if (data) {
        data.key = field;
        data.index = index;
        data.first = index === 0;
        data.last = !!last;

        if (contextPath) {
          data.contextPath = contextPath + field;
        }
      }

      ret = ret + fn(context[field], {
        data: data,
        blockParams: _utils.blockParams([context[field], field], [contextPath + field, null])
      });
    }

    if (context && typeof context === 'object') {
      if (_utils.isArray(context)) {
        for (var j = context.length; i < j; i++) {
          if (i in context) {
            execIteration(i, i, i === context.length - 1);
          }
        }
      } else {
        var priorKey = undefined;

        for (var key in context) {
          if (context.hasOwnProperty(key)) {
            // We're running the iterations one step out of sync so we can detect
            // the last iteration without have to scan the object twice and create
            // an itermediate keys array.
            if (priorKey !== undefined) {
              execIteration(priorKey, i - 1);
            }
            priorKey = key;
            i++;
          }
        }
        if (priorKey !== undefined) {
          execIteration(priorKey, i - 1, true);
        }
      }
    }

    if (i === 0) {
      ret = inverse(this);
    }

    return ret;
  });
};

module.exports = exports['default'];


},{"../exception":9,"../utils":22}],13:[function(require,module,exports){
'use strict';

exports.__esModule = true;
// istanbul ignore next

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _exception = require('../exception');

var _exception2 = _interopRequireDefault(_exception);

exports['default'] = function (instance) {
  instance.registerHelper('helperMissing', function () /* [args, ]options */{
    if (arguments.length === 1) {
      // A missing field in a {{foo}} construct.
      return undefined;
    } else {
      // Someone is actually trying to call something, blow up.
      throw new _exception2['default']('Missing helper: "' + arguments[arguments.length - 1].name + '"');
    }
  });
};

module.exports = exports['default'];


},{"../exception":9}],14:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _utils = require('../utils');

exports['default'] = function (instance) {
  instance.registerHelper('if', function (conditional, options) {
    if (_utils.isFunction(conditional)) {
      conditional = conditional.call(this);
    }

    // Default behavior is to render the positive path if the value is truthy and not empty.
    // The `includeZero` option may be set to treat the condtional as purely not empty based on the
    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.
    if (!options.hash.includeZero && !conditional || _utils.isEmpty(conditional)) {
      return options.inverse(this);
    } else {
      return options.fn(this);
    }
  });

  instance.registerHelper('unless', function (conditional, options) {
    return instance.helpers['if'].call(this, conditional, { fn: options.inverse, inverse: options.fn, hash: options.hash });
  });
};

module.exports = exports['default'];


},{"../utils":22}],15:[function(require,module,exports){
'use strict';

exports.__esModule = true;

exports['default'] = function (instance) {
  instance.registerHelper('log', function () /* message, options */{
    var args = [undefined],
        options = arguments[arguments.length - 1];
    for (var i = 0; i < arguments.length - 1; i++) {
      args.push(arguments[i]);
    }

    var level = 1;
    if (options.hash.level != null) {
      level = options.hash.level;
    } else if (options.data && options.data.level != null) {
      level = options.data.level;
    }
    args[0] = level;

    instance.log.apply(instance, args);
  });
};

module.exports = exports['default'];


},{}],16:[function(require,module,exports){
'use strict';

exports.__esModule = true;

exports['default'] = function (instance) {
  instance.registerHelper('lookup', function (obj, field) {
    return obj && obj[field];
  });
};

module.exports = exports['default'];


},{}],17:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _utils = require('../utils');

exports['default'] = function (instance) {
  instance.registerHelper('with', function (context, options) {
    if (_utils.isFunction(context)) {
      context = context.call(this);
    }

    var fn = options.fn;

    if (!_utils.isEmpty(context)) {
      var data = options.data;
      if (options.data && options.ids) {
        data = _utils.createFrame(options.data);
        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]);
      }

      return fn(context, {
        data: data,
        blockParams: _utils.blockParams([context], [data && data.contextPath])
      });
    } else {
      return options.inverse(this);
    }
  });
};

module.exports = exports['default'];


},{"../utils":22}],18:[function(require,module,exports){
'use strict';

exports.__esModule = true;

var _utils = require('./utils');

var logger = {
  methodMap: ['debug', 'info', 'warn', 'error'],
  level: 'info',

  // Maps a given level value to the `methodMap` indexes above.
  lookupLevel: function lookupLevel(level) {
    if (typeof level === 'string') {
      var levelMap = _utils.indexOf(logger.methodMap, level.toLowerCase());
      if (levelMap >= 0) {
        level = levelMap;
      } else {
        level = parseInt(level, 10);
      }
    }

    return level;
  },

  // Can be overridden in the host environment
  log: function log(level) {
    level = logger.lookupLevel(level);

    if (typeof console !== 'undefined' && logger.lookupLevel(logger.level) <= level) {
      var method = logger.methodMap[level];
      if (!console[method]) {
        // eslint-disable-line no-console
        method = 'log';
      }

      for (var _len = arguments.length, message = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        message[_key - 1] = arguments[_key];
      }

      console[method].apply(console, message); // eslint-disable-line no-console
    }
  }
};

exports['default'] = logger;
module.exports = exports['default'];


},{"./utils":22}],19:[function(require,module,exports){
(function (global){
/* global window */
'use strict';

exports.__esModule = true;

exports['default'] = function (Handlebars) {
  /* istanbul ignore next */
  var root = typeof global !== 'undefined' ? global : window,
      $Handlebars = root.Handlebars;
  /* istanbul ignore next */
  Handlebars.noConflict = function () {
    if (root.Handlebars === Handlebars) {
      root.Handlebars = $Handlebars;
    }
    return Handlebars;
  };
};

module.exports = exports['default'];


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],20:[function(require,module,exports){
'use strict';

exports.__esModule = true;
exports.checkRevision = checkRevision;
exports.template = template;
exports.wrapProgram = wrapProgram;
exports.resolvePartial = resolvePartial;
exports.invokePartial = invokePartial;
exports.noop = noop;
// istanbul ignore next

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

// istanbul ignore next

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

var _utils = require('./utils');

var Utils = _interopRequireWildcard(_utils);

var _exception = require('./exception');

var _exception2 = _interopRequireDefault(_exception);

var _base = require('./base');

function checkRevision(compilerInfo) {
  var compilerRevision = compilerInfo && compilerInfo[0] || 1,
      currentRevision = _base.COMPILER_REVISION;

  if (compilerRevision !== currentRevision) {
    if (compilerRevision < currentRevision) {
      var runtimeVersions = _base.REVISION_CHANGES[currentRevision],
          compilerVersions = _base.REVISION_CHANGES[compilerRevision];
      throw new _exception2['default']('Template was precompiled with an older version of Handlebars than the current runtime. ' + 'Please update your precompiler to a newer version (' + runtimeVersions + ') or downgrade your runtime to an older version (' + compilerVersions + ').');
    } else {
      // Use the embedded version info since the runtime doesn't know about this revision yet
      throw new _exception2['default']('Template was precompiled with a newer version of Handlebars than the current runtime. ' + 'Please update your runtime to a newer version (' + compilerInfo[1] + ').');
    }
  }
}

function template(templateSpec, env) {
  /* istanbul ignore next */
  if (!env) {
    throw new _exception2['default']('No environment passed to template');
  }
  if (!templateSpec || !templateSpec.main) {
    throw new _exception2['default']('Unknown template object: ' + typeof templateSpec);
  }

  templateSpec.main.decorator = templateSpec.main_d;

  // Note: Using env.VM references rather than local var references throughout this section to allow
  // for external users to override these as psuedo-supported APIs.
  env.VM.checkRevision(templateSpec.compiler);

  function invokePartialWrapper(partial, context, options) {
    if (options.hash) {
      context = Utils.extend({}, context, options.hash);
      if (options.ids) {
        options.ids[0] = true;
      }
    }

    partial = env.VM.resolvePartial.call(this, partial, context, options);
    var result = env.VM.invokePartial.call(this, partial, context, options);

    if (result == null && env.compile) {
      options.partials[options.name] = env.compile(partial, templateSpec.compilerOptions, env);
      result = options.partials[options.name](context, options);
    }
    if (result != null) {
      if (options.indent) {
        var lines = result.split('\n');
        for (var i = 0, l = lines.length; i < l; i++) {
          if (!lines[i] && i + 1 === l) {
            break;
          }

          lines[i] = options.indent + lines[i];
        }
        result = lines.join('\n');
      }
      return result;
    } else {
      throw new _exception2['default']('The partial ' + options.name + ' could not be compiled when running in runtime-only mode');
    }
  }

  // Just add water
  var container = {
    strict: function strict(obj, name) {
      if (!(name in obj)) {
        throw new _exception2['default']('"' + name + '" not defined in ' + obj);
      }
      return obj[name];
    },
    lookup: function lookup(depths, name) {
      var len = depths.length;
      for (var i = 0; i < len; i++) {
        if (depths[i] && depths[i][name] != null) {
          return depths[i][name];
        }
      }
    },
    lambda: function lambda(current, context) {
      return typeof current === 'function' ? current.call(context) : current;
    },

    escapeExpression: Utils.escapeExpression,
    invokePartial: invokePartialWrapper,

    fn: function fn(i) {
      var ret = templateSpec[i];
      ret.decorator = templateSpec[i + '_d'];
      return ret;
    },

    programs: [],
    program: function program(i, data, declaredBlockParams, blockParams, depths) {
      var programWrapper = this.programs[i],
          fn = this.fn(i);
      if (data || depths || blockParams || declaredBlockParams) {
        programWrapper = wrapProgram(this, i, fn, data, declaredBlockParams, blockParams, depths);
      } else if (!programWrapper) {
        programWrapper = this.programs[i] = wrapProgram(this, i, fn);
      }
      return programWrapper;
    },

    data: function data(value, depth) {
      while (value && depth--) {
        value = value._parent;
      }
      return value;
    },
    merge: function merge(param, common) {
      var obj = param || common;

      if (param && common && param !== common) {
        obj = Utils.extend({}, common, param);
      }

      return obj;
    },

    noop: env.VM.noop,
    compilerInfo: templateSpec.compiler
  };

  function ret(context) {
    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    var data = options.data;

    ret._setup(options);
    if (!options.partial && templateSpec.useData) {
      data = initData(context, data);
    }
    var depths = undefined,
        blockParams = templateSpec.useBlockParams ? [] : undefined;
    if (templateSpec.useDepths) {
      if (options.depths) {
        depths = context !== options.depths[0] ? [context].concat(options.depths) : options.depths;
      } else {
        depths = [context];
      }
    }

    function main(context /*, options*/) {
      return '' + templateSpec.main(container, context, container.helpers, container.partials, data, blockParams, depths);
    }
    main = executeDecorators(templateSpec.main, main, container, options.depths || [], data, blockParams);
    return main(context, options);
  }
  ret.isTop = true;

  ret._setup = function (options) {
    if (!options.partial) {
      container.helpers = container.merge(options.helpers, env.helpers);

      if (templateSpec.usePartial) {
        container.partials = container.merge(options.partials, env.partials);
      }
      if (templateSpec.usePartial || templateSpec.useDecorators) {
        container.decorators = container.merge(options.decorators, env.decorators);
      }
    } else {
      container.helpers = options.helpers;
      container.partials = options.partials;
      container.decorators = options.decorators;
    }
  };

  ret._child = function (i, data, blockParams, depths) {
    if (templateSpec.useBlockParams && !blockParams) {
      throw new _exception2['default']('must pass block params');
    }
    if (templateSpec.useDepths && !depths) {
      throw new _exception2['default']('must pass parent depths');
    }

    return wrapProgram(container, i, templateSpec[i], data, 0, blockParams, depths);
  };
  return ret;
}

function wrapProgram(container, i, fn, data, declaredBlockParams, blockParams, depths) {
  function prog(context) {
    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    var currentDepths = depths;
    if (depths && context !== depths[0]) {
      currentDepths = [context].concat(depths);
    }

    return fn(container, context, container.helpers, container.partials, options.data || data, blockParams && [options.blockParams].concat(blockParams), currentDepths);
  }

  prog = executeDecorators(fn, prog, container, depths, data, blockParams);

  prog.program = i;
  prog.depth = depths ? depths.length : 0;
  prog.blockParams = declaredBlockParams || 0;
  return prog;
}

function resolvePartial(partial, context, options) {
  if (!partial) {
    if (options.name === '@partial-block') {
      partial = options.data['partial-block'];
    } else {
      partial = options.partials[options.name];
    }
  } else if (!partial.call && !options.name) {
    // This is a dynamic partial that returned a string
    options.name = partial;
    partial = options.partials[partial];
  }
  return partial;
}

function invokePartial(partial, context, options) {
  options.partial = true;
  if (options.ids) {
    options.data.contextPath = options.ids[0] || options.data.contextPath;
  }

  var partialBlock = undefined;
  if (options.fn && options.fn !== noop) {
    options.data = _base.createFrame(options.data);
    partialBlock = options.data['partial-block'] = options.fn;

    if (partialBlock.partials) {
      options.partials = Utils.extend({}, options.partials, partialBlock.partials);
    }
  }

  if (partial === undefined && partialBlock) {
    partial = partialBlock;
  }

  if (partial === undefined) {
    throw new _exception2['default']('The partial ' + options.name + ' could not be found');
  } else if (partial instanceof Function) {
    return partial(context, options);
  }
}

function noop() {
  return '';
}

function initData(context, data) {
  if (!data || !('root' in data)) {
    data = data ? _base.createFrame(data) : {};
    data.root = context;
  }
  return data;
}

function executeDecorators(fn, prog, container, depths, data, blockParams) {
  if (fn.decorator) {
    var props = {};
    prog = fn.decorator(prog, props, container, depths && depths[0], data, blockParams, depths);
    Utils.extend(prog, props);
  }
  return prog;
}


},{"./base":6,"./exception":9,"./utils":22}],21:[function(require,module,exports){
// Build out our basic SafeString type
'use strict';

exports.__esModule = true;
function SafeString(string) {
  this.string = string;
}

SafeString.prototype.toString = SafeString.prototype.toHTML = function () {
  return '' + this.string;
};

exports['default'] = SafeString;
module.exports = exports['default'];


},{}],22:[function(require,module,exports){
'use strict';

exports.__esModule = true;
exports.extend = extend;
exports.indexOf = indexOf;
exports.escapeExpression = escapeExpression;
exports.isEmpty = isEmpty;
exports.createFrame = createFrame;
exports.blockParams = blockParams;
exports.appendContextPath = appendContextPath;
var escape = {
  '&': '&amp;',
  '<': '&lt;',
  '>': '&gt;',
  '"': '&quot;',
  "'": '&#x27;',
  '`': '&#x60;',
  '=': '&#x3D;'
};

var badChars = /[&<>"'`=]/g,
    possible = /[&<>"'`=]/;

function escapeChar(chr) {
  return escape[chr];
}

function extend(obj /* , ...source */) {
  for (var i = 1; i < arguments.length; i++) {
    for (var key in arguments[i]) {
      if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {
        obj[key] = arguments[i][key];
      }
    }
  }

  return obj;
}

var toString = Object.prototype.toString;

exports.toString = toString;
// Sourced from lodash
// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt
/* eslint-disable func-style */
var isFunction = function isFunction(value) {
  return typeof value === 'function';
};
// fallback for older versions of Chrome and Safari
/* istanbul ignore next */
if (isFunction(/x/)) {
  exports.isFunction = isFunction = function (value) {
    return typeof value === 'function' && toString.call(value) === '[object Function]';
  };
}
exports.isFunction = isFunction;

/* eslint-enable func-style */

/* istanbul ignore next */
var isArray = Array.isArray || function (value) {
  return value && typeof value === 'object' ? toString.call(value) === '[object Array]' : false;
};

exports.isArray = isArray;
// Older IE versions do not directly support indexOf so we must implement our own, sadly.

function indexOf(array, value) {
  for (var i = 0, len = array.length; i < len; i++) {
    if (array[i] === value) {
      return i;
    }
  }
  return -1;
}

function escapeExpression(string) {
  if (typeof string !== 'string') {
    // don't escape SafeStrings, since they're already safe
    if (string && string.toHTML) {
      return string.toHTML();
    } else if (string == null) {
      return '';
    } else if (!string) {
      return string + '';
    }

    // Force a string conversion as this will be done by the append regardless and
    // the regex test will do this transparently behind the scenes, causing issues if
    // an object's to string has escaped characters in it.
    string = '' + string;
  }

  if (!possible.test(string)) {
    return string;
  }
  return string.replace(badChars, escapeChar);
}

function isEmpty(value) {
  if (!value && value !== 0) {
    return true;
  } else if (isArray(value) && value.length === 0) {
    return true;
  } else {
    return false;
  }
}

function createFrame(object) {
  var frame = extend({}, object);
  frame._parent = object;
  return frame;
}

function blockParams(params, ids) {
  params.path = ids;
  return params;
}

function appendContextPath(contextPath, id) {
  return (contextPath ? contextPath + '.' : '') + id;
}


},{}],23:[function(require,module,exports){
// Create a simple path alias to allow browserify to resolve
// the runtime on a supported path.
module.exports = require('./dist/cjs/handlebars.runtime')['default'];

},{"./dist/cjs/handlebars.runtime":5}],24:[function(require,module,exports){
module.exports = require("handlebars/runtime")["default"];

},{"handlebars/runtime":23}],25:[function(require,module,exports){
/*
 * International Telephone Input v9.2.4
 * https://github.com/jackocnr/intl-tel-input.git
 * Licensed under the MIT license
 */
// wrap in UMD - see https://github.com/umdjs/umd/blob/master/jqueryPluginCommonjs.js
(function(factory) {
    if (typeof define === "function" && define.amd) {
        define([ "jquery" ], function($) {
            factory($, window, document);
        });
    } else if (typeof module === "object" && module.exports) {
        module.exports = factory(require("jquery"), window, document);
    } else {
        factory(jQuery, window, document);
    }
})(function($, window, document, undefined) {
    "use strict";
    // these vars persist through all instances of the plugin
    var pluginName = "intlTelInput", id = 1, // give each instance it's own id for namespaced event handling
    defaults = {
        // whether or not to allow the dropdown
        allowDropdown: true,
        // if there is just a dial code in the input: remove it on blur, and re-add it on focus
        autoHideDialCode: true,
        // add a placeholder in the input with an example number for the selected country
        autoPlaceholder: "polite",
        // modify the auto placeholder
        customPlaceholder: null,
        // append menu to a specific element
        dropdownContainer: "",
        // don't display these countries
        excludeCountries: [],
        // format the input value during initialisation
        formatOnInit: true,
        // geoIp lookup function
        geoIpLookup: null,
        // initial country
        initialCountry: "",
        // don't insert international dial codes
        nationalMode: true,
        // number type to use for placeholders
        numberType: "MOBILE",
        // display only these countries
        onlyCountries: [],
        // the countries at the top of the list. defaults to united states and united kingdom
        preferredCountries: [ "us", "gb" ],
        // display the country dial code next to the selected flag so it's not part of the typed number
        separateDialCode: false,
        // specify the path to the libphonenumber script to enable validation/formatting
        utilsScript: ""
    }, keys = {
        UP: 38,
        DOWN: 40,
        ENTER: 13,
        ESC: 27,
        PLUS: 43,
        A: 65,
        Z: 90,
        SPACE: 32,
        TAB: 9
    };
    // keep track of if the window.load event has fired as impossible to check after the fact
    $(window).on("load", function() {
        // UPDATE: use a public static field so we can fudge it in the tests
        $.fn[pluginName].windowLoaded = true;
    });
    function Plugin(element, options) {
        this.telInput = $(element);
        this.options = $.extend({}, defaults, options);
        // event namespace
        this.ns = "." + pluginName + id++;
        // Chrome, FF, Safari, IE9+
        this.isGoodBrowser = Boolean(element.setSelectionRange);
        this.hadInitialPlaceholder = Boolean($(element).attr("placeholder"));
    }
    Plugin.prototype = {
        _init: function() {
            // if in nationalMode, disable options relating to dial codes
            if (this.options.nationalMode) {
                this.options.autoHideDialCode = false;
            }
            // if separateDialCode then doesn't make sense to A) insert dial code into input (autoHideDialCode), and B) display national numbers (because we're displaying the country dial code next to them)
            if (this.options.separateDialCode) {
                this.options.autoHideDialCode = this.options.nationalMode = false;
            }
            // we cannot just test screen size as some smartphones/website meta tags will report desktop resolutions
            // Note: for some reason jasmine breaks if you put this in the main Plugin function with the rest of these declarations
            // Note: to target Android Mobiles (and not Tablets), we must find "Android" and "Mobile"
            this.isMobile = /Android.+Mobile|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
            if (this.isMobile) {
                // trigger the mobile dropdown css
                $("body").addClass("iti-mobile");
                // on mobile, we want a full screen dropdown, so we must append it to the body
                if (!this.options.dropdownContainer) {
                    this.options.dropdownContainer = "body";
                }
            }
            // we return these deferred objects from the _init() call so they can be watched, and then we resolve them when each specific request returns
            // Note: again, jasmine breaks when I put these in the Plugin function
            this.autoCountryDeferred = new $.Deferred();
            this.utilsScriptDeferred = new $.Deferred();
            // process all the data: onlyCountries, excludeCountries, preferredCountries etc
            this._processCountryData();
            // generate the markup
            this._generateMarkup();
            // set the initial state of the input value and the selected flag
            this._setInitialState();
            // start all of the event listeners: autoHideDialCode, input keydown, selectedFlag click
            this._initListeners();
            // utils script, and auto country
            this._initRequests();
            // return the deferreds
            return [ this.autoCountryDeferred, this.utilsScriptDeferred ];
        },
        /********************
   *  PRIVATE METHODS
   ********************/
        // prepare all of the country data, including onlyCountries, excludeCountries and preferredCountries options
        _processCountryData: function() {
            // process onlyCountries or excludeCountries array if present
            this._processAllCountries();
            // process the countryCodes map
            this._processCountryCodes();
            // process the preferredCountries
            this._processPreferredCountries();
        },
        // add a country code to this.countryCodes
        _addCountryCode: function(iso2, dialCode, priority) {
            if (!(dialCode in this.countryCodes)) {
                this.countryCodes[dialCode] = [];
            }
            var index = priority || 0;
            this.countryCodes[dialCode][index] = iso2;
        },
        // filter the given countries using the process function
        _filterCountries: function(countryArray, processFunc) {
            var i;
            // standardise case
            for (i = 0; i < countryArray.length; i++) {
                countryArray[i] = countryArray[i].toLowerCase();
            }
            // build instance country array
            this.countries = [];
            for (i = 0; i < allCountries.length; i++) {
                if (processFunc($.inArray(allCountries[i].iso2, countryArray))) {
                    this.countries.push(allCountries[i]);
                }
            }
        },
        // process onlyCountries or excludeCountries array if present
        _processAllCountries: function() {
            if (this.options.onlyCountries.length) {
                // process onlyCountries option
                this._filterCountries(this.options.onlyCountries, function(inArray) {
                    // if country is in array
                    return inArray != -1;
                });
            } else if (this.options.excludeCountries.length) {
                // process excludeCountries option
                this._filterCountries(this.options.excludeCountries, function(inArray) {
                    // if country is not in array
                    return inArray == -1;
                });
            } else {
                this.countries = allCountries;
            }
        },
        // process the countryCodes map
        _processCountryCodes: function() {
            this.countryCodes = {};
            for (var i = 0; i < this.countries.length; i++) {
                var c = this.countries[i];
                this._addCountryCode(c.iso2, c.dialCode, c.priority);
                // area codes
                if (c.areaCodes) {
                    for (var j = 0; j < c.areaCodes.length; j++) {
                        // full dial code is country code + dial code
                        this._addCountryCode(c.iso2, c.dialCode + c.areaCodes[j]);
                    }
                }
            }
        },
        // process preferred countries - iterate through the preferences, fetching the country data for each one
        _processPreferredCountries: function() {
            this.preferredCountries = [];
            for (var i = 0; i < this.options.preferredCountries.length; i++) {
                var countryCode = this.options.preferredCountries[i].toLowerCase(), countryData = this._getCountryData(countryCode, false, true);
                if (countryData) {
                    this.preferredCountries.push(countryData);
                }
            }
        },
        // generate all of the markup for the plugin: the selected flag overlay, and the dropdown
        _generateMarkup: function() {
            // prevent autocomplete as there's no safe, cross-browser event we can react to, so it can easily put the plugin in an inconsistent state e.g. the wrong flag selected for the autocompleted number, which on submit could mean the wrong number is saved (esp in nationalMode)
            this.telInput.attr("autocomplete", "off");
            // containers (mostly for positioning)
            var parentClass = "intl-tel-input";
            if (this.options.allowDropdown) {
                parentClass += " allow-dropdown";
            }
            if (this.options.separateDialCode) {
                parentClass += " separate-dial-code";
            }
            this.telInput.wrap($("<div>", {
                "class": parentClass
            }));
            this.flagsContainer = $("<div>", {
                "class": "flag-container"
            }).insertBefore(this.telInput);
            // currently selected flag (displayed to left of input)
            var selectedFlag = $("<div>", {
                "class": "selected-flag"
            });
            selectedFlag.appendTo(this.flagsContainer);
            this.selectedFlagInner = $("<div>", {
                "class": "iti-flag"
            }).appendTo(selectedFlag);
            if (this.options.separateDialCode) {
                this.selectedDialCode = $("<div>", {
                    "class": "selected-dial-code"
                }).appendTo(selectedFlag);
            }
            if (this.options.allowDropdown) {
                // make element focusable and tab naviagable
                selectedFlag.attr("tabindex", "0");
                // CSS triangle
                $("<div>", {
                    "class": "iti-arrow"
                }).appendTo(selectedFlag);
                // country dropdown: preferred countries, then divider, then all countries
                this.countryList = $("<ul>", {
                    "class": "country-list hide"
                });
                if (this.preferredCountries.length) {
                    this._appendListItems(this.preferredCountries, "preferred");
                    $("<li>", {
                        "class": "divider"
                    }).appendTo(this.countryList);
                }
                this._appendListItems(this.countries, "");
                // this is useful in lots of places
                this.countryListItems = this.countryList.children(".country");
                // create dropdownContainer markup
                if (this.options.dropdownContainer) {
                    this.dropdown = $("<div>", {
                        "class": "intl-tel-input iti-container"
                    }).append(this.countryList);
                } else {
                    this.countryList.appendTo(this.flagsContainer);
                }
            } else {
                // a little hack so we don't break anything
                this.countryListItems = $();
            }
        },
        // add a country <li> to the countryList <ul> container
        _appendListItems: function(countries, className) {
            // we create so many DOM elements, it is faster to build a temp string
            // and then add everything to the DOM in one go at the end
            var tmp = "";
            // for each country
            for (var i = 0; i < countries.length; i++) {
                var c = countries[i];
                // open the list item
                tmp += "<li class='country " + className + "' data-dial-code='" + c.dialCode + "' data-country-code='" + c.iso2 + "'>";
                // add the flag
                tmp += "<div class='flag-box'><div class='iti-flag " + c.iso2 + "'></div></div>";
                // and the country name and dial code
                tmp += "<span class='country-name'>" + c.name + "</span>";
                tmp += "<span class='dial-code'>+" + c.dialCode + "</span>";
                // close the list item
                tmp += "</li>";
            }
            this.countryList.append(tmp);
        },
        // set the initial state of the input value and the selected flag by:
        // 1. extracting a dial code from the given number
        // 2. using explicit initialCountry
        // 3. picking the first preferred country
        // 4. picking the first country
        _setInitialState: function() {
            var val = this.telInput.val();
            // if we already have a dial code we can go ahead and set the flag, else fall back to default
            if (this._getDialCode(val)) {
                this._updateFlagFromNumber(val, true);
            } else if (this.options.initialCountry !== "auto") {
                // see if we should select a flag
                if (this.options.initialCountry) {
                    this._setFlag(this.options.initialCountry.toLowerCase(), true);
                } else {
                    // no dial code and no initialCountry, so default to first in list
                    this.defaultCountry = this.preferredCountries.length ? this.preferredCountries[0].iso2 : this.countries[0].iso2;
                    if (!val) {
                        this._setFlag(this.defaultCountry, true);
                    }
                }
                // if empty and no nationalMode and no autoHideDialCode then insert the default dial code
                if (!val && !this.options.nationalMode && !this.options.autoHideDialCode && !this.options.separateDialCode) {
                    this.telInput.val("+" + this.selectedCountryData.dialCode);
                }
            }
            // NOTE: if initialCountry is set to auto, that will be handled separately
            // format
            if (val) {
                // this wont be run after _updateDialCode as that's only called if no val
                this._updateValFromNumber(val, this.options.formatOnInit);
            }
        },
        // initialise the main event listeners: input keyup, and click selected flag
        _initListeners: function() {
            this._initKeyListeners();
            if (this.options.autoHideDialCode) {
                this._initFocusListeners();
            }
            if (this.options.allowDropdown) {
                this._initDropdownListeners();
            }
        },
        // initialise the dropdown listeners
        _initDropdownListeners: function() {
            var that = this;
            // hack for input nested inside label: clicking the selected-flag to open the dropdown would then automatically trigger a 2nd click on the input which would close it again
            var label = this.telInput.closest("label");
            if (label.length) {
                label.on("click" + this.ns, function(e) {
                    // if the dropdown is closed, then focus the input, else ignore the click
                    if (that.countryList.hasClass("hide")) {
                        that.telInput.focus();
                    } else {
                        e.preventDefault();
                    }
                });
            }
            // toggle country dropdown on click
            var selectedFlag = this.selectedFlagInner.parent();
            selectedFlag.on("click" + this.ns, function(e) {
                // only intercept this event if we're opening the dropdown
                // else let it bubble up to the top ("click-off-to-close" listener)
                // we cannot just stopPropagation as it may be needed to close another instance
                if (that.countryList.hasClass("hide") && !that.telInput.prop("disabled") && !that.telInput.prop("readonly")) {
                    that._showDropdown();
                }
            });
            // open dropdown list if currently focused
            this.flagsContainer.on("keydown" + that.ns, function(e) {
                var isDropdownHidden = that.countryList.hasClass("hide");
                if (isDropdownHidden && (e.which == keys.UP || e.which == keys.DOWN || e.which == keys.SPACE || e.which == keys.ENTER)) {
                    // prevent form from being submitted if "ENTER" was pressed
                    e.preventDefault();
                    // prevent event from being handled again by document
                    e.stopPropagation();
                    that._showDropdown();
                }
                // allow navigation from dropdown to input on TAB
                if (e.which == keys.TAB) {
                    that._closeDropdown();
                }
            });
        },
        // init many requests: utils script / geo ip lookup
        _initRequests: function() {
            var that = this;
            // if the user has specified the path to the utils script, fetch it on window.load, else resolve
            if (this.options.utilsScript) {
                // if the plugin is being initialised after the window.load event has already been fired
                if ($.fn[pluginName].windowLoaded) {
                    $.fn[pluginName].loadUtils(this.options.utilsScript, this.utilsScriptDeferred);
                } else {
                    // wait until the load event so we don't block any other requests e.g. the flags image
                    $(window).on("load", function() {
                        $.fn[pluginName].loadUtils(that.options.utilsScript, that.utilsScriptDeferred);
                    });
                }
            } else {
                this.utilsScriptDeferred.resolve();
            }
            if (this.options.initialCountry === "auto") {
                this._loadAutoCountry();
            } else {
                this.autoCountryDeferred.resolve();
            }
        },
        // perform the geo ip lookup
        _loadAutoCountry: function() {
            var that = this;
            // 3 options:
            // 1) already loaded (we're done)
            // 2) not already started loading (start)
            // 3) already started loading (do nothing - just wait for loading callback to fire)
            if ($.fn[pluginName].autoCountry) {
                this.handleAutoCountry();
            } else if (!$.fn[pluginName].startedLoadingAutoCountry) {
                // don't do this twice!
                $.fn[pluginName].startedLoadingAutoCountry = true;
                if (typeof this.options.geoIpLookup === "function") {
                    this.options.geoIpLookup(function(countryCode) {
                        $.fn[pluginName].autoCountry = countryCode.toLowerCase();
                        // tell all instances the auto country is ready
                        // TODO: this should just be the current instances
                        // UPDATE: use setTimeout in case their geoIpLookup function calls this callback straight away (e.g. if they have already done the geo ip lookup somewhere else). Using setTimeout means that the current thread of execution will finish before executing this, which allows the plugin to finish initialising.
                        setTimeout(function() {
                            $(".intl-tel-input input").intlTelInput("handleAutoCountry");
                        });
                    });
                }
            }
        },
        // initialize any key listeners
        _initKeyListeners: function() {
            var that = this;
            // update flag on keyup
            // (keep this listener separate otherwise the setTimeout breaks all the tests)
            this.telInput.on("keyup" + this.ns, function() {
                that._updateFlagFromNumber(that.telInput.val());
            });
            // update flag on cut/paste events (now supported in all major browsers)
            this.telInput.on("cut" + this.ns + " paste" + this.ns, function() {
                // hack because "paste" event is fired before input is updated
                setTimeout(function() {
                    that._updateFlagFromNumber(that.telInput.val());
                });
            });
        },
        // adhere to the input's maxlength attr
        _cap: function(number) {
            var max = this.telInput.attr("maxlength");
            return max && number.length > max ? number.substr(0, max) : number;
        },
        // listen for mousedown, focus and blur
        _initFocusListeners: function() {
            var that = this;
            // mousedown decides where the cursor goes, so if we're focusing we must preventDefault as we'll be inserting the dial code, and we want the cursor to be at the end no matter where they click
            this.telInput.on("mousedown" + this.ns, function(e) {
                if (!that.telInput.is(":focus") && !that.telInput.val()) {
                    e.preventDefault();
                    // but this also cancels the focus, so we must trigger that manually
                    that.telInput.focus();
                }
            });
            // on focus: if empty, insert the dial code for the currently selected flag
            this.telInput.on("focus" + this.ns, function(e) {
                if (!that.telInput.val() && !that.telInput.prop("readonly") && that.selectedCountryData.dialCode) {
                    // insert the dial code
                    that.telInput.val("+" + that.selectedCountryData.dialCode);
                    // after auto-inserting a dial code, if the first key they hit is '+' then assume they are entering a new number, so remove the dial code. use keypress instead of keydown because keydown gets triggered for the shift key (required to hit the + key), and instead of keyup because that shows the new '+' before removing the old one
                    that.telInput.one("keypress.plus" + that.ns, function(e) {
                        if (e.which == keys.PLUS) {
                            that.telInput.val("");
                        }
                    });
                    // after tabbing in, make sure the cursor is at the end we must use setTimeout to get outside of the focus handler as it seems the selection happens after that
                    setTimeout(function() {
                        var input = that.telInput[0];
                        if (that.isGoodBrowser) {
                            var len = that.telInput.val().length;
                            input.setSelectionRange(len, len);
                        }
                    });
                }
            });
            // on blur or form submit: if just a dial code then remove it
            var form = this.telInput.prop("form");
            if (form) {
                $(form).on("submit" + this.ns, function() {
                    that._removeEmptyDialCode();
                });
            }
            this.telInput.on("blur" + this.ns, function() {
                that._removeEmptyDialCode();
            });
        },
        _removeEmptyDialCode: function() {
            var value = this.telInput.val(), startsPlus = value.charAt(0) == "+";
            if (startsPlus) {
                var numeric = this._getNumeric(value);
                // if just a plus, or if just a dial code
                if (!numeric || this.selectedCountryData.dialCode == numeric) {
                    this.telInput.val("");
                }
            }
            // remove the keypress listener we added on focus
            this.telInput.off("keypress.plus" + this.ns);
        },
        // extract the numeric digits from the given string
        _getNumeric: function(s) {
            return s.replace(/\D/g, "");
        },
        // show the dropdown
        _showDropdown: function() {
            this._setDropdownPosition();
            // update highlighting and scroll to active list item
            var activeListItem = this.countryList.children(".active");
            if (activeListItem.length) {
                this._highlightListItem(activeListItem);
                this._scrollTo(activeListItem);
            }
            // bind all the dropdown-related listeners: mouseover, click, click-off, keydown
            this._bindDropdownListeners();
            // update the arrow
            this.selectedFlagInner.children(".iti-arrow").addClass("up");
        },
        // decide where to position dropdown (depends on position within viewport, and scroll)
        _setDropdownPosition: function() {
            var that = this;
            if (this.options.dropdownContainer) {
                this.dropdown.appendTo(this.options.dropdownContainer);
            }
            // show the menu and grab the dropdown height
            this.dropdownHeight = this.countryList.removeClass("hide").outerHeight();
            if (!this.isMobile) {
                var pos = this.telInput.offset(), inputTop = pos.top, windowTop = $(window).scrollTop(), // dropdownFitsBelow = (dropdownBottom < windowBottom)
                dropdownFitsBelow = inputTop + this.telInput.outerHeight() + this.dropdownHeight < windowTop + $(window).height(), dropdownFitsAbove = inputTop - this.dropdownHeight > windowTop;
                // by default, the dropdown will be below the input. If we want to position it above the input, we add the dropup class.
                this.countryList.toggleClass("dropup", !dropdownFitsBelow && dropdownFitsAbove);
                // if dropdownContainer is enabled, calculate postion
                if (this.options.dropdownContainer) {
                    // by default the dropdown will be directly over the input because it's not in the flow. If we want to position it below, we need to add some extra top value.
                    var extraTop = !dropdownFitsBelow && dropdownFitsAbove ? 0 : this.telInput.innerHeight();
                    // calculate placement
                    this.dropdown.css({
                        top: inputTop + extraTop,
                        left: pos.left
                    });
                    // close menu on window scroll
                    $(window).on("scroll" + this.ns, function() {
                        that._closeDropdown();
                    });
                }
            }
        },
        // we only bind dropdown listeners when the dropdown is open
        _bindDropdownListeners: function() {
            var that = this;
            // when mouse over a list item, just highlight that one
            // we add the class "highlight", so if they hit "enter" we know which one to select
            this.countryList.on("mouseover" + this.ns, ".country", function(e) {
                that._highlightListItem($(this));
            });
            // listen for country selection
            this.countryList.on("click" + this.ns, ".country", function(e) {
                that._selectListItem($(this));
            });
            // click off to close
            // (except when this initial opening click is bubbling up)
            // we cannot just stopPropagation as it may be needed to close another instance
            var isOpening = true;
            $("html").on("click" + this.ns, function(e) {
                if (!isOpening) {
                    that._closeDropdown();
                }
                isOpening = false;
            });
            // listen for up/down scrolling, enter to select, or letters to jump to country name.
            // use keydown as keypress doesn't fire for non-char keys and we want to catch if they
            // just hit down and hold it to scroll down (no keyup event).
            // listen on the document because that's where key events are triggered if no input has focus
            var query = "", queryTimer = null;
            $(document).on("keydown" + this.ns, function(e) {
                // prevent down key from scrolling the whole page,
                // and enter key from submitting a form etc
                e.preventDefault();
                if (e.which == keys.UP || e.which == keys.DOWN) {
                    // up and down to navigate
                    that._handleUpDownKey(e.which);
                } else if (e.which == keys.ENTER) {
                    // enter to select
                    that._handleEnterKey();
                } else if (e.which == keys.ESC) {
                    // esc to close
                    that._closeDropdown();
                } else if (e.which >= keys.A && e.which <= keys.Z || e.which == keys.SPACE) {
                    // upper case letters (note: keyup/keydown only return upper case letters)
                    // jump to countries that start with the query string
                    if (queryTimer) {
                        clearTimeout(queryTimer);
                    }
                    query += String.fromCharCode(e.which);
                    that._searchForCountry(query);
                    // if the timer hits 1 second, reset the query
                    queryTimer = setTimeout(function() {
                        query = "";
                    }, 1e3);
                }
            });
        },
        // highlight the next/prev item in the list (and ensure it is visible)
        _handleUpDownKey: function(key) {
            var current = this.countryList.children(".highlight").first();
            var next = key == keys.UP ? current.prev() : current.next();
            if (next.length) {
                // skip the divider
                if (next.hasClass("divider")) {
                    next = key == keys.UP ? next.prev() : next.next();
                }
                this._highlightListItem(next);
                this._scrollTo(next);
            }
        },
        // select the currently highlighted item
        _handleEnterKey: function() {
            var currentCountry = this.countryList.children(".highlight").first();
            if (currentCountry.length) {
                this._selectListItem(currentCountry);
            }
        },
        // find the first list item whose name starts with the query string
        _searchForCountry: function(query) {
            for (var i = 0; i < this.countries.length; i++) {
                if (this._startsWith(this.countries[i].name, query)) {
                    var listItem = this.countryList.children("[data-country-code=" + this.countries[i].iso2 + "]").not(".preferred");
                    // update highlighting and scroll
                    this._highlightListItem(listItem);
                    this._scrollTo(listItem, true);
                    break;
                }
            }
        },
        // check if (uppercase) string a starts with string b
        _startsWith: function(a, b) {
            return a.substr(0, b.length).toUpperCase() == b;
        },
        // update the input's value to the given val (format first if possible)
        // NOTE: this is called from _setInitialState, handleUtils and setNumber
        _updateValFromNumber: function(number, doFormat) {
            if (doFormat && window.intlTelInputUtils && this.selectedCountryData) {
                var format = !this.options.separateDialCode && (this.options.nationalMode || number.charAt(0) != "+") ? intlTelInputUtils.numberFormat.NATIONAL : intlTelInputUtils.numberFormat.INTERNATIONAL;
                number = intlTelInputUtils.formatNumber(number, this.selectedCountryData.iso2, format);
            }
            number = this._beforeSetNumber(number);
            this.telInput.val(number);
        },
        // check if need to select a new flag based on the given number
        // Note: called from _setInitialState, keyup handler, setNumber
        _updateFlagFromNumber: function(number, isInit) {
            // if we're in nationalMode and we already have US/Canada selected, make sure the number starts with a +1 so _getDialCode will be able to extract the area code
            // update: if we dont yet have selectedCountryData, but we're here (trying to update the flag from the number), that means we're initialising the plugin with a number that already has a dial code, so fine to ignore this bit
            if (number && this.options.nationalMode && this.selectedCountryData && this.selectedCountryData.dialCode == "1" && number.charAt(0) != "+") {
                if (number.charAt(0) != "1") {
                    number = "1" + number;
                }
                number = "+" + number;
            }
            // try and extract valid dial code from input
            var dialCode = this._getDialCode(number), countryCode = null;
            if (dialCode) {
                // check if one of the matching countries is already selected
                var countryCodes = this.countryCodes[this._getNumeric(dialCode)], alreadySelected = this.selectedCountryData && $.inArray(this.selectedCountryData.iso2, countryCodes) != -1;
                // if a matching country is not already selected (or this is an unknown NANP area code): choose the first in the list
                if (!alreadySelected || this._isUnknownNanp(number, dialCode)) {
                    // if using onlyCountries option, countryCodes[0] may be empty, so we must find the first non-empty index
                    for (var j = 0; j < countryCodes.length; j++) {
                        if (countryCodes[j]) {
                            countryCode = countryCodes[j];
                            break;
                        }
                    }
                }
            } else if (number.charAt(0) == "+" && this._getNumeric(number).length) {
                // invalid dial code, so empty
                // Note: use getNumeric here because the number has not been formatted yet, so could contain bad chars
                countryCode = "";
            } else if (!number || number == "+") {
                // empty, or just a plus, so default
                countryCode = this.defaultCountry;
            }
            if (countryCode !== null) {
                this._setFlag(countryCode, isInit);
            }
        },
        // check if the given number contains an unknown area code from the North American Numbering Plan i.e. the only dialCode that could be extracted was +1 (instead of say +1 702) and the actual number's length is >=4
        _isUnknownNanp: function(number, dialCode) {
            return dialCode == "+1" && this._getNumeric(number).length >= 4;
        },
        // remove highlighting from other list items and highlight the given item
        _highlightListItem: function(listItem) {
            this.countryListItems.removeClass("highlight");
            listItem.addClass("highlight");
        },
        // find the country data for the given country code
        // the ignoreOnlyCountriesOption is only used during init() while parsing the onlyCountries array
        _getCountryData: function(countryCode, ignoreOnlyCountriesOption, allowFail) {
            var countryList = ignoreOnlyCountriesOption ? allCountries : this.countries;
            for (var i = 0; i < countryList.length; i++) {
                if (countryList[i].iso2 == countryCode) {
                    return countryList[i];
                }
            }
            if (allowFail) {
                return null;
            } else {
                throw new Error("No country data for '" + countryCode + "'");
            }
        },
        // select the given flag, update the placeholder and the active list item
        // Note: called from _setInitialState, _updateFlagFromNumber, _selectListItem, setCountry
        _setFlag: function(countryCode, isInit) {
            var prevCountry = this.selectedCountryData && this.selectedCountryData.iso2 ? this.selectedCountryData : {};
            // do this first as it will throw an error and stop if countryCode is invalid
            this.selectedCountryData = countryCode ? this._getCountryData(countryCode, false, false) : {};
            // update the defaultCountry - we only need the iso2 from now on, so just store that
            if (this.selectedCountryData.iso2) {
                this.defaultCountry = this.selectedCountryData.iso2;
            }
            this.selectedFlagInner.attr("class", "iti-flag " + countryCode);
            // update the selected country's title attribute
            var title = countryCode ? this.selectedCountryData.name + ": +" + this.selectedCountryData.dialCode : "Unknown";
            this.selectedFlagInner.parent().attr("title", title);
            if (this.options.separateDialCode) {
                var dialCode = this.selectedCountryData.dialCode ? "+" + this.selectedCountryData.dialCode : "", parent = this.telInput.parent();
                if (prevCountry.dialCode) {
                    parent.removeClass("iti-sdc-" + (prevCountry.dialCode.length + 1));
                }
                if (dialCode) {
                    parent.addClass("iti-sdc-" + dialCode.length);
                }
                this.selectedDialCode.text(dialCode);
            }
            // and the input's placeholder
            this._updatePlaceholder();
            // update the active list item
            this.countryListItems.removeClass("active");
            if (countryCode) {
                this.countryListItems.find(".iti-flag." + countryCode).first().closest(".country").addClass("active");
            }
            // on change flag, trigger a custom event
            if (!isInit && prevCountry.iso2 !== countryCode) {
                this.telInput.trigger("countrychange", this.selectedCountryData);
            }
        },
        // update the input placeholder to an example number from the currently selected country
        _updatePlaceholder: function() {
            var shouldSetPlaceholder = this.options.autoPlaceholder === "aggressive" || !this.hadInitialPlaceholder && (this.options.autoPlaceholder === true || this.options.autoPlaceholder === "polite");
            if (window.intlTelInputUtils && shouldSetPlaceholder && this.selectedCountryData) {
                var numberType = intlTelInputUtils.numberType[this.options.numberType], placeholder = this.selectedCountryData.iso2 ? intlTelInputUtils.getExampleNumber(this.selectedCountryData.iso2, this.options.nationalMode, numberType) : "";
                placeholder = this._beforeSetNumber(placeholder);
                if (typeof this.options.customPlaceholder === "function") {
                    placeholder = this.options.customPlaceholder(placeholder, this.selectedCountryData);
                }
                this.telInput.attr("placeholder", placeholder);
            }
        },
        // called when the user selects a list item from the dropdown
        _selectListItem: function(listItem) {
            // update selected flag and active list item
            this._setFlag(listItem.attr("data-country-code"));
            this._closeDropdown();
            this._updateDialCode(listItem.attr("data-dial-code"), true);
            // focus the input
            this.telInput.focus();
            // put cursor at end - this fix is required for FF and IE11 (with nationalMode=false i.e. auto inserting dial code), who try to put the cursor at the beginning the first time
            if (this.isGoodBrowser) {
                var len = this.telInput.val().length;
                this.telInput[0].setSelectionRange(len, len);
            }
        },
        // close the dropdown and unbind any listeners
        _closeDropdown: function() {
            this.countryList.addClass("hide");
            // update the arrow
            this.selectedFlagInner.children(".iti-arrow").removeClass("up");
            // unbind key events
            $(document).off(this.ns);
            // unbind click-off-to-close
            $("html").off(this.ns);
            // unbind hover and click listeners
            this.countryList.off(this.ns);
            // remove menu from container
            if (this.options.dropdownContainer) {
                if (!this.isMobile) {
                    $(window).off("scroll" + this.ns);
                }
                this.dropdown.detach();
            }
        },
        // check if an element is visible within it's container, else scroll until it is
        _scrollTo: function(element, middle) {
            var container = this.countryList, containerHeight = container.height(), containerTop = container.offset().top, containerBottom = containerTop + containerHeight, elementHeight = element.outerHeight(), elementTop = element.offset().top, elementBottom = elementTop + elementHeight, newScrollTop = elementTop - containerTop + container.scrollTop(), middleOffset = containerHeight / 2 - elementHeight / 2;
            if (elementTop < containerTop) {
                // scroll up
                if (middle) {
                    newScrollTop -= middleOffset;
                }
                container.scrollTop(newScrollTop);
            } else if (elementBottom > containerBottom) {
                // scroll down
                if (middle) {
                    newScrollTop += middleOffset;
                }
                var heightDifference = containerHeight - elementHeight;
                container.scrollTop(newScrollTop - heightDifference);
            }
        },
        // replace any existing dial code with the new one
        // Note: called from _selectListItem and setCountry
        _updateDialCode: function(newDialCode, hasSelectedListItem) {
            var inputVal = this.telInput.val(), newNumber;
            // save having to pass this every time
            newDialCode = "+" + newDialCode;
            if (inputVal.charAt(0) == "+") {
                // there's a plus so we're dealing with a replacement (doesn't matter if nationalMode or not)
                var prevDialCode = this._getDialCode(inputVal);
                if (prevDialCode) {
                    // current number contains a valid dial code, so replace it
                    newNumber = inputVal.replace(prevDialCode, newDialCode);
                } else {
                    // current number contains an invalid dial code, so ditch it
                    // (no way to determine where the invalid dial code ends and the rest of the number begins)
                    newNumber = newDialCode;
                }
            } else if (this.options.nationalMode || this.options.separateDialCode) {
                // don't do anything
                return;
            } else {
                // nationalMode is disabled
                if (inputVal) {
                    // there is an existing value with no dial code: prefix the new dial code
                    newNumber = newDialCode + inputVal;
                } else if (hasSelectedListItem || !this.options.autoHideDialCode) {
                    // no existing value and either they've just selected a list item, or autoHideDialCode is disabled: insert new dial code
                    newNumber = newDialCode;
                } else {
                    return;
                }
            }
            this.telInput.val(newNumber);
        },
        // try and extract a valid international dial code from a full telephone number
        // Note: returns the raw string inc plus character and any whitespace/dots etc
        _getDialCode: function(number) {
            var dialCode = "";
            // only interested in international numbers (starting with a plus)
            if (number.charAt(0) == "+") {
                var numericChars = "";
                // iterate over chars
                for (var i = 0; i < number.length; i++) {
                    var c = number.charAt(i);
                    // if char is number
                    if ($.isNumeric(c)) {
                        numericChars += c;
                        // if current numericChars make a valid dial code
                        if (this.countryCodes[numericChars]) {
                            // store the actual raw string (useful for matching later)
                            dialCode = number.substr(0, i + 1);
                        }
                        // longest dial code is 4 chars
                        if (numericChars.length == 4) {
                            break;
                        }
                    }
                }
            }
            return dialCode;
        },
        // get the input val, adding the dial code if separateDialCode is enabled
        _getFullNumber: function() {
            var prefix = this.options.separateDialCode ? "+" + this.selectedCountryData.dialCode : "";
            return prefix + this.telInput.val();
        },
        // remove the dial code if separateDialCode is enabled
        _beforeSetNumber: function(number) {
            if (this.options.separateDialCode) {
                var dialCode = this._getDialCode(number);
                if (dialCode) {
                    // US dialCode is "+1", which is what we want
                    // CA dialCode is "+1 123", which is wrong - should be "+1" (as it has multiple area codes)
                    // AS dialCode is "+1 684", which is what we want
                    // Solution: if the country has area codes, then revert to just the dial code
                    if (this.selectedCountryData.areaCodes !== null) {
                        dialCode = "+" + this.selectedCountryData.dialCode;
                    }
                    // a lot of numbers will have a space separating the dial code and the main number, and some NANP numbers will have a hyphen e.g. +1 684-733-1234 - in both cases we want to get rid of it
                    // NOTE: don't just trim all non-numerics as may want to preserve an open parenthesis etc
                    var start = number[dialCode.length] === " " || number[dialCode.length] === "-" ? dialCode.length + 1 : dialCode.length;
                    number = number.substr(start);
                }
            }
            return this._cap(number);
        },
        /********************
   *  PUBLIC METHODS
   ********************/
        // this is called when the geoip call returns
        handleAutoCountry: function() {
            if (this.options.initialCountry === "auto") {
                // we must set this even if there is an initial val in the input: in case the initial val is invalid and they delete it - they should see their auto country
                this.defaultCountry = $.fn[pluginName].autoCountry;
                // if there's no initial value in the input, then update the flag
                if (!this.telInput.val()) {
                    this.setCountry(this.defaultCountry);
                }
                this.autoCountryDeferred.resolve();
            }
        },
        // remove plugin
        destroy: function() {
            if (this.allowDropdown) {
                // make sure the dropdown is closed (and unbind listeners)
                this._closeDropdown();
                // click event to open dropdown
                this.selectedFlagInner.parent().off(this.ns);
                // label click hack
                this.telInput.closest("label").off(this.ns);
            }
            // unbind submit event handler on form
            if (this.options.autoHideDialCode) {
                var form = this.telInput.prop("form");
                if (form) {
                    $(form).off(this.ns);
                }
            }
            // unbind all events: key events, and focus/blur events if autoHideDialCode=true
            this.telInput.off(this.ns);
            // remove markup (but leave the original input)
            var container = this.telInput.parent();
            container.before(this.telInput).remove();
        },
        // get the extension from the current number
        getExtension: function() {
            if (window.intlTelInputUtils) {
                return intlTelInputUtils.getExtension(this._getFullNumber(), this.selectedCountryData.iso2);
            }
            return "";
        },
        // format the number to the given format
        getNumber: function(format) {
            if (window.intlTelInputUtils) {
                return intlTelInputUtils.formatNumber(this._getFullNumber(), this.selectedCountryData.iso2, format);
            }
            return "";
        },
        // get the type of the entered number e.g. landline/mobile
        getNumberType: function() {
            if (window.intlTelInputUtils) {
                return intlTelInputUtils.getNumberType(this._getFullNumber(), this.selectedCountryData.iso2);
            }
            return -99;
        },
        // get the country data for the currently selected flag
        getSelectedCountryData: function() {
            // if this is undefined, the plugin will return it's instance instead, so in that case an empty object makes more sense
            return this.selectedCountryData || {};
        },
        // get the validation error
        getValidationError: function() {
            if (window.intlTelInputUtils) {
                return intlTelInputUtils.getValidationError(this._getFullNumber(), this.selectedCountryData.iso2);
            }
            return -99;
        },
        // validate the input val - assumes the global function isValidNumber (from utilsScript)
        isValidNumber: function() {
            var val = $.trim(this._getFullNumber()), countryCode = this.options.nationalMode ? this.selectedCountryData.iso2 : "";
            return window.intlTelInputUtils ? intlTelInputUtils.isValidNumber(val, countryCode) : null;
        },
        // update the selected flag, and update the input val accordingly
        setCountry: function(countryCode) {
            countryCode = countryCode.toLowerCase();
            // check if already selected
            if (!this.selectedFlagInner.hasClass(countryCode)) {
                this._setFlag(countryCode);
                this._updateDialCode(this.selectedCountryData.dialCode, false);
            }
        },
        // set the input value and update the flag
        // NOTE: preventFormat arg is for public method
        setNumber: function(number, preventFormat) {
            // we must update the flag first, which updates this.selectedCountryData, which is used for formatting the number before displaying it
            this._updateFlagFromNumber(number);
            this._updateValFromNumber(number, !preventFormat);
        },
        // this is called when the utils request completes
        handleUtils: function() {
            // if the request was successful
            if (window.intlTelInputUtils) {
                // if there's an initial value in the input, then format it
                if (this.telInput.val()) {
                    this._updateValFromNumber(this.telInput.val(), this.options.formatOnInit);
                }
                this._updatePlaceholder();
            }
            this.utilsScriptDeferred.resolve();
        }
    };
    // using https://github.com/jquery-boilerplate/jquery-boilerplate/wiki/Extending-jQuery-Boilerplate
    // (adapted to allow public functions)
    $.fn[pluginName] = function(options) {
        var args = arguments;
        // Is the first parameter an object (options), or was omitted,
        // instantiate a new instance of the plugin.
        if (options === undefined || typeof options === "object") {
            // collect all of the deferred objects for all instances created with this selector
            var deferreds = [];
            this.each(function() {
                if (!$.data(this, "plugin_" + pluginName)) {
                    var instance = new Plugin(this, options);
                    var instanceDeferreds = instance._init();
                    // we now have 2 deffereds: 1 for auto country, 1 for utils script
                    deferreds.push(instanceDeferreds[0]);
                    deferreds.push(instanceDeferreds[1]);
                    $.data(this, "plugin_" + pluginName, instance);
                }
            });
            // return the promise from the "master" deferred object that tracks all the others
            return $.when.apply(null, deferreds);
        } else if (typeof options === "string" && options[0] !== "_") {
            // If the first parameter is a string and it doesn't start
            // with an underscore or "contains" the `init`-function,
            // treat this as a call to a public method.
            // Cache the method call to make it possible to return a value
            var returns;
            this.each(function() {
                var instance = $.data(this, "plugin_" + pluginName);
                // Tests that there's already a plugin-instance
                // and checks that the requested public method exists
                if (instance instanceof Plugin && typeof instance[options] === "function") {
                    // Call the method of our plugin instance,
                    // and pass it the supplied arguments.
                    returns = instance[options].apply(instance, Array.prototype.slice.call(args, 1));
                }
                // Allow instances to be destroyed via the 'destroy' method
                if (options === "destroy") {
                    $.data(this, "plugin_" + pluginName, null);
                }
            });
            // If the earlier cached method gives a value back return the value,
            // otherwise return this to preserve chainability.
            return returns !== undefined ? returns : this;
        }
    };
    /********************
 *  STATIC METHODS
 ********************/
    // get the country data object
    $.fn[pluginName].getCountryData = function() {
        return allCountries;
    };
    // load the utils script
    $.fn[pluginName].loadUtils = function(path, utilsScriptDeferred) {
        if (!$.fn[pluginName].loadedUtilsScript) {
            // don't do this twice! (dont just check if window.intlTelInputUtils exists as if init plugin multiple times in quick succession, it may not have finished loading yet)
            $.fn[pluginName].loadedUtilsScript = true;
            // dont use $.getScript as it prevents caching
            $.ajax({
                type: "GET",
                url: path,
                complete: function() {
                    // tell all instances that the utils request is complete
                    $(".intl-tel-input input").intlTelInput("handleUtils");
                },
                dataType: "script",
                cache: true
            });
        } else if (utilsScriptDeferred) {
            utilsScriptDeferred.resolve();
        }
    };
    // version
    $.fn[pluginName].version = "9.2.4";
    // default options
    $.fn[pluginName].defaults = defaults;
    // Array of country objects for the flag dropdown.
    // Each contains a name, country code (ISO 3166-1 alpha-2) and dial code.
    // Originally from https://github.com/mledoze/countries
    // then with a couple of manual re-arrangements to be alphabetical
    // then changed Kazakhstan from +76 to +7
    // and Vatican City from +379 to +39 (see issue 50)
    // and Caribean Netherlands from +5997 to +599
    // and Curacao from +5999 to +599
    // Removed:  Kosovo, Pitcairn Islands, South Georgia
    // UPDATE Sept 12th 2015
    // List of regions that have iso2 country codes, which I have chosen to omit:
    // (based on this information: https://en.wikipedia.org/wiki/List_of_country_calling_codes)
    // AQ - Antarctica - all different country codes depending on which "base"
    // BV - Bouvet Island - no calling code
    // GS - South Georgia and the South Sandwich Islands - "inhospitable collection of islands" - same flag and calling code as Falkland Islands
    // HM - Heard Island and McDonald Islands - no calling code
    // PN - Pitcairn - tiny population (56), same calling code as New Zealand
    // TF - French Southern Territories - no calling code
    // UM - United States Minor Outlying Islands - no calling code
    // UPDATE the criteria of supported countries or territories (see issue 297)
    // Have an iso2 code: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
    // Have a country calling code: https://en.wikipedia.org/wiki/List_of_country_calling_codes
    // Have a flag
    // Must be supported by libphonenumber: https://github.com/googlei18n/libphonenumber
    // Update: converted objects to arrays to save bytes!
    // Update: added "priority" for countries with the same dialCode as others
    // Update: added array of area codes for countries with the same dialCode as others
    // So each country array has the following information:
    // [
    //    Country name,
    //    iso2 code,
    //    International dial code,
    //    Order (if >1 country with same dial code),
    //    Area codes (if >1 country with same dial code)
    // ]
    var allCountries = [ [ "Afghanistan (‫افغانستان‬‎)", "af", "93" ], [ "Albania (Shqipëri)", "al", "355" ], [ "Algeria (‫الجزائر‬‎)", "dz", "213" ], [ "American Samoa", "as", "1684" ], [ "Andorra", "ad", "376" ], [ "Angola", "ao", "244" ], [ "Anguilla", "ai", "1264" ], [ "Antigua and Barbuda", "ag", "1268" ], [ "Argentina", "ar", "54" ], [ "Armenia (Հայաստան)", "am", "374" ], [ "Aruba", "aw", "297" ], [ "Australia", "au", "61", 0 ], [ "Austria (Österreich)", "at", "43" ], [ "Azerbaijan (Azərbaycan)", "az", "994" ], [ "Bahamas", "bs", "1242" ], [ "Bahrain (‫البحرين‬‎)", "bh", "973" ], [ "Bangladesh (বাংলাদেশ)", "bd", "880" ], [ "Barbados", "bb", "1246" ], [ "Belarus (Беларусь)", "by", "375" ], [ "Belgium (België)", "be", "32" ], [ "Belize", "bz", "501" ], [ "Benin (Bénin)", "bj", "229" ], [ "Bermuda", "bm", "1441" ], [ "Bhutan (འབྲུག)", "bt", "975" ], [ "Bolivia", "bo", "591" ], [ "Bosnia and Herzegovina (Босна и Херцеговина)", "ba", "387" ], [ "Botswana", "bw", "267" ], [ "Brazil (Brasil)", "br", "55" ], [ "British Indian Ocean Territory", "io", "246" ], [ "British Virgin Islands", "vg", "1284" ], [ "Brunei", "bn", "673" ], [ "Bulgaria (България)", "bg", "359" ], [ "Burkina Faso", "bf", "226" ], [ "Burundi (Uburundi)", "bi", "257" ], [ "Cambodia (កម្ពុជា)", "kh", "855" ], [ "Cameroon (Cameroun)", "cm", "237" ], [ "Canada", "ca", "1", 1, [ "204", "226", "236", "249", "250", "289", "306", "343", "365", "387", "403", "416", "418", "431", "437", "438", "450", "506", "514", "519", "548", "579", "581", "587", "604", "613", "639", "647", "672", "705", "709", "742", "778", "780", "782", "807", "819", "825", "867", "873", "902", "905" ] ], [ "Cape Verde (Kabu Verdi)", "cv", "238" ], [ "Caribbean Netherlands", "bq", "599", 1 ], [ "Cayman Islands", "ky", "1345" ], [ "Central African Republic (République centrafricaine)", "cf", "236" ], [ "Chad (Tchad)", "td", "235" ], [ "Chile", "cl", "56" ], [ "China (中国)", "cn", "86" ], [ "Christmas Island", "cx", "61", 2 ], [ "Cocos (Keeling) Islands", "cc", "61", 1 ], [ "Colombia", "co", "57" ], [ "Comoros (‫جزر القمر‬‎)", "km", "269" ], [ "Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)", "cd", "243" ], [ "Congo (Republic) (Congo-Brazzaville)", "cg", "242" ], [ "Cook Islands", "ck", "682" ], [ "Costa Rica", "cr", "506" ], [ "Côte d’Ivoire", "ci", "225" ], [ "Croatia (Hrvatska)", "hr", "385" ], [ "Cuba", "cu", "53" ], [ "Curaçao", "cw", "599", 0 ], [ "Cyprus (Κύπρος)", "cy", "357" ], [ "Czech Republic (Česká republika)", "cz", "420" ], [ "Denmark (Danmark)", "dk", "45" ], [ "Djibouti", "dj", "253" ], [ "Dominica", "dm", "1767" ], [ "Dominican Republic (República Dominicana)", "do", "1", 2, [ "809", "829", "849" ] ], [ "Ecuador", "ec", "593" ], [ "Egypt (‫مصر‬‎)", "eg", "20" ], [ "El Salvador", "sv", "503" ], [ "Equatorial Guinea (Guinea Ecuatorial)", "gq", "240" ], [ "Eritrea", "er", "291" ], [ "Estonia (Eesti)", "ee", "372" ], [ "Ethiopia", "et", "251" ], [ "Falkland Islands (Islas Malvinas)", "fk", "500" ], [ "Faroe Islands (Føroyar)", "fo", "298" ], [ "Fiji", "fj", "679" ], [ "Finland (Suomi)", "fi", "358", 0 ], [ "France", "fr", "33" ], [ "French Guiana (Guyane française)", "gf", "594" ], [ "French Polynesia (Polynésie française)", "pf", "689" ], [ "Gabon", "ga", "241" ], [ "Gambia", "gm", "220" ], [ "Georgia (საქართველო)", "ge", "995" ], [ "Germany (Deutschland)", "de", "49" ], [ "Ghana (Gaana)", "gh", "233" ], [ "Gibraltar", "gi", "350" ], [ "Greece (Ελλάδα)", "gr", "30" ], [ "Greenland (Kalaallit Nunaat)", "gl", "299" ], [ "Grenada", "gd", "1473" ], [ "Guadeloupe", "gp", "590", 0 ], [ "Guam", "gu", "1671" ], [ "Guatemala", "gt", "502" ], [ "Guernsey", "gg", "44", 1 ], [ "Guinea (Guinée)", "gn", "224" ], [ "Guinea-Bissau (Guiné Bissau)", "gw", "245" ], [ "Guyana", "gy", "592" ], [ "Haiti", "ht", "509" ], [ "Honduras", "hn", "504" ], [ "Hong Kong (香港)", "hk", "852" ], [ "Hungary (Magyarország)", "hu", "36" ], [ "Iceland (Ísland)", "is", "354" ], [ "India (भारत)", "in", "91" ], [ "Indonesia", "id", "62" ], [ "Iran (‫ایران‬‎)", "ir", "98" ], [ "Iraq (‫العراق‬‎)", "iq", "964" ], [ "Ireland", "ie", "353" ], [ "Isle of Man", "im", "44", 2 ], [ "Israel (‫ישראל‬‎)", "il", "972" ], [ "Italy (Italia)", "it", "39", 0 ], [ "Jamaica", "jm", "1876" ], [ "Japan (日本)", "jp", "81" ], [ "Jersey", "je", "44", 3 ], [ "Jordan (‫الأردن‬‎)", "jo", "962" ], [ "Kazakhstan (Казахстан)", "kz", "7", 1 ], [ "Kenya", "ke", "254" ], [ "Kiribati", "ki", "686" ], [ "Kosovo", "xk", "383" ], [ "Kuwait (‫الكويت‬‎)", "kw", "965" ], [ "Kyrgyzstan (Кыргызстан)", "kg", "996" ], [ "Laos (ລາວ)", "la", "856" ], [ "Latvia (Latvija)", "lv", "371" ], [ "Lebanon (‫لبنان‬‎)", "lb", "961" ], [ "Lesotho", "ls", "266" ], [ "Liberia", "lr", "231" ], [ "Libya (‫ليبيا‬‎)", "ly", "218" ], [ "Liechtenstein", "li", "423" ], [ "Lithuania (Lietuva)", "lt", "370" ], [ "Luxembourg", "lu", "352" ], [ "Macau (澳門)", "mo", "853" ], [ "Macedonia (FYROM) (Македонија)", "mk", "389" ], [ "Madagascar (Madagasikara)", "mg", "261" ], [ "Malawi", "mw", "265" ], [ "Malaysia", "my", "60" ], [ "Maldives", "mv", "960" ], [ "Mali", "ml", "223" ], [ "Malta", "mt", "356" ], [ "Marshall Islands", "mh", "692" ], [ "Martinique", "mq", "596" ], [ "Mauritania (‫موريتانيا‬‎)", "mr", "222" ], [ "Mauritius (Moris)", "mu", "230" ], [ "Mayotte", "yt", "262", 1 ], [ "Mexico (México)", "mx", "52" ], [ "Micronesia", "fm", "691" ], [ "Moldova (Republica Moldova)", "md", "373" ], [ "Monaco", "mc", "377" ], [ "Mongolia (Монгол)", "mn", "976" ], [ "Montenegro (Crna Gora)", "me", "382" ], [ "Montserrat", "ms", "1664" ], [ "Morocco (‫المغرب‬‎)", "ma", "212", 0 ], [ "Mozambique (Moçambique)", "mz", "258" ], [ "Myanmar (Burma) (မြန်မာ)", "mm", "95" ], [ "Namibia (Namibië)", "na", "264" ], [ "Nauru", "nr", "674" ], [ "Nepal (नेपाल)", "np", "977" ], [ "Netherlands (Nederland)", "nl", "31" ], [ "New Caledonia (Nouvelle-Calédonie)", "nc", "687" ], [ "New Zealand", "nz", "64" ], [ "Nicaragua", "ni", "505" ], [ "Niger (Nijar)", "ne", "227" ], [ "Nigeria", "ng", "234" ], [ "Niue", "nu", "683" ], [ "Norfolk Island", "nf", "672" ], [ "North Korea (조선 민주주의 인민 공화국)", "kp", "850" ], [ "Northern Mariana Islands", "mp", "1670" ], [ "Norway (Norge)", "no", "47", 0 ], [ "Oman (‫عُمان‬‎)", "om", "968" ], [ "Pakistan (‫پاکستان‬‎)", "pk", "92" ], [ "Palau", "pw", "680" ], [ "Palestine (‫فلسطين‬‎)", "ps", "970" ], [ "Panama (Panamá)", "pa", "507" ], [ "Papua New Guinea", "pg", "675" ], [ "Paraguay", "py", "595" ], [ "Peru (Perú)", "pe", "51" ], [ "Philippines", "ph", "63" ], [ "Poland (Polska)", "pl", "48" ], [ "Portugal", "pt", "351" ], [ "Puerto Rico", "pr", "1", 3, [ "787", "939" ] ], [ "Qatar (‫قطر‬‎)", "qa", "974" ], [ "Réunion (La Réunion)", "re", "262", 0 ], [ "Romania (România)", "ro", "40" ], [ "Russia (Россия)", "ru", "7", 0 ], [ "Rwanda", "rw", "250" ], [ "Saint Barthélemy (Saint-Barthélemy)", "bl", "590", 1 ], [ "Saint Helena", "sh", "290" ], [ "Saint Kitts and Nevis", "kn", "1869" ], [ "Saint Lucia", "lc", "1758" ], [ "Saint Martin (Saint-Martin (partie française))", "mf", "590", 2 ], [ "Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)", "pm", "508" ], [ "Saint Vincent and the Grenadines", "vc", "1784" ], [ "Samoa", "ws", "685" ], [ "San Marino", "sm", "378" ], [ "São Tomé and Príncipe (São Tomé e Príncipe)", "st", "239" ], [ "Saudi Arabia (‫المملكة العربية السعودية‬‎)", "sa", "966" ], [ "Senegal (Sénégal)", "sn", "221" ], [ "Serbia (Србија)", "rs", "381" ], [ "Seychelles", "sc", "248" ], [ "Sierra Leone", "sl", "232" ], [ "Singapore", "sg", "65" ], [ "Sint Maarten", "sx", "1721" ], [ "Slovakia (Slovensko)", "sk", "421" ], [ "Slovenia (Slovenija)", "si", "386" ], [ "Solomon Islands", "sb", "677" ], [ "Somalia (Soomaaliya)", "so", "252" ], [ "South Africa", "za", "27" ], [ "South Korea (대한민국)", "kr", "82" ], [ "South Sudan (‫جنوب السودان‬‎)", "ss", "211" ], [ "Spain (España)", "es", "34" ], [ "Sri Lanka (ශ්‍රී ලංකාව)", "lk", "94" ], [ "Sudan (‫السودان‬‎)", "sd", "249" ], [ "Suriname", "sr", "597" ], [ "Svalbard and Jan Mayen", "sj", "47", 1 ], [ "Swaziland", "sz", "268" ], [ "Sweden (Sverige)", "se", "46" ], [ "Switzerland (Schweiz)", "ch", "41" ], [ "Syria (‫سوريا‬‎)", "sy", "963" ], [ "Taiwan (台灣)", "tw", "886" ], [ "Tajikistan", "tj", "992" ], [ "Tanzania", "tz", "255" ], [ "Thailand (ไทย)", "th", "66" ], [ "Timor-Leste", "tl", "670" ], [ "Togo", "tg", "228" ], [ "Tokelau", "tk", "690" ], [ "Tonga", "to", "676" ], [ "Trinidad and Tobago", "tt", "1868" ], [ "Tunisia (‫تونس‬‎)", "tn", "216" ], [ "Turkey (Türkiye)", "tr", "90" ], [ "Turkmenistan", "tm", "993" ], [ "Turks and Caicos Islands", "tc", "1649" ], [ "Tuvalu", "tv", "688" ], [ "U.S. Virgin Islands", "vi", "1340" ], [ "Uganda", "ug", "256" ], [ "Ukraine (Україна)", "ua", "380" ], [ "United Arab Emirates (‫الإمارات العربية المتحدة‬‎)", "ae", "971" ], [ "United Kingdom", "gb", "44", 0 ], [ "United States", "us", "1", 0 ], [ "Uruguay", "uy", "598" ], [ "Uzbekistan (Oʻzbekiston)", "uz", "998" ], [ "Vanuatu", "vu", "678" ], [ "Vatican City (Città del Vaticano)", "va", "39", 1 ], [ "Venezuela", "ve", "58" ], [ "Vietnam (Việt Nam)", "vn", "84" ], [ "Wallis and Futuna", "wf", "681" ], [ "Western Sahara (‫الصحراء الغربية‬‎)", "eh", "212", 1 ], [ "Yemen (‫اليمن‬‎)", "ye", "967" ], [ "Zambia", "zm", "260" ], [ "Zimbabwe", "zw", "263" ], [ "Åland Islands", "ax", "358", 1 ] ];
    // loop over all of the countries above
    for (var i = 0; i < allCountries.length; i++) {
        var c = allCountries[i];
        allCountries[i] = {
            name: c[0],
            iso2: c[1],
            dialCode: c[2],
            priority: c[3] || 0,
            areaCodes: c[4] || null
        };
    }
});
},{"jquery":28}],26:[function(require,module,exports){
/**
 * Exposing intl-tel-input as a component
 */
module.exports = require("./build/js/intlTelInput");

},{"./build/js/intlTelInput":25}],27:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
(function() {
  var $, cardFromNumber, cardFromType, cards, defaultFormat, formatBackCardNumber, formatBackExpiry, formatCardNumber, formatExpiry, formatForwardExpiry, formatForwardSlashAndSpace, hasTextSelected, luhnCheck, reFormatCVC, reFormatCardNumber, reFormatExpiry, reFormatNumeric, replaceFullWidthChars, restrictCVC, restrictCardNumber, restrictExpiry, restrictNumeric, safeVal, setCardType,
    __slice = [].slice,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  $ = window.jQuery || window.Zepto || window.$;

  $.payment = {};

  $.payment.fn = {};

  $.fn.payment = function() {
    var args, method;
    method = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    return $.payment.fn[method].apply(this, args);
  };

  defaultFormat = /(\d{1,4})/g;

  $.payment.cards = cards = [
    {
      type: 'visa',
      patterns: [4],
      format: defaultFormat,
      length: [13, 16],
      cvcLength: [3],
      luhn: true
    },
    {
      type: 'mastercard',
      patterns: [51, 52, 53, 54, 55, 22, 23, 24, 25, 26, 27],
      format: defaultFormat,
      length: [16],
      cvcLength: [3],
      luhn: true
    },
    {
      type: "verve",
      patterns: [506, 56],
      format: defaultFormat,
      length: [19],
      cvcLength: [3],
      luhn: true
    }
  ];

  cardFromNumber = function(num) {
    var card, p, pattern, _i, _j, _len, _len1, _ref;
    num = (num + '').replace(/\D/g, '');
    for (_i = 0, _len = cards.length; _i < _len; _i++) {
      card = cards[_i];
      _ref = card.patterns;
      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
        pattern = _ref[_j];
        p = pattern + '';
        if (num.substr(0, p.length) === p) {
          return card;
        }
      }
    }
  };

  cardFromType = function(type) {
    var card, _i, _len;
    for (_i = 0, _len = cards.length; _i < _len; _i++) {
      card = cards[_i];
      if (card.type === type) {
        return card;
      }
    }
  };

  luhnCheck = function(num) {
    var digit, digits, odd, sum, _i, _len;
    odd = true;
    sum = 0;
    digits = (num + '').split('').reverse();
    for (_i = 0, _len = digits.length; _i < _len; _i++) {
      digit = digits[_i];
      digit = parseInt(digit, 10);
      if ((odd = !odd)) {
        digit *= 2;
      }
      if (digit > 9) {
        digit -= 9;
      }
      sum += digit;
    }
    return sum % 10 === 0;
  };

  hasTextSelected = function($target) {
    var _ref;
    if (($target.prop('selectionStart') != null) && $target.prop('selectionStart') !== $target.prop('selectionEnd')) {
      return true;
    }
    if ((typeof document !== "undefined" && document !== null ? (_ref = document.selection) != null ? _ref.createRange : void 0 : void 0) != null) {
      if (document.selection.createRange().text) {
        return true;
      }
    }
    return false;
  };

  safeVal = function(value, $target) {
    var currPair, cursor, digit, error, last, prevPair;
    try {
      cursor = $target.prop('selectionStart');
    } catch (_error) {
      error = _error;
      cursor = null;
    }
    last = $target.val();
    $target.val(value);
    if (cursor !== null && $target.is(":focus")) {
      if (cursor === last.length) {
        cursor = value.length;
      }
      if (last !== value) {
        prevPair = last.slice(cursor - 1, +cursor + 1 || 9e9);
        currPair = value.slice(cursor - 1, +cursor + 1 || 9e9);
        digit = value[cursor];
        if (/\d/.test(digit) && prevPair === ("" + digit + " ") && currPair === (" " + digit)) {
          cursor = cursor + 1;
        }
      }
      $target.prop('selectionStart', cursor);
      return $target.prop('selectionEnd', cursor);
    }
  };

  replaceFullWidthChars = function(str) {
    var chars, chr, fullWidth, halfWidth, idx, value, _i, _len;
    if (str == null) {
      str = '';
    }
    fullWidth = '\uff10\uff11\uff12\uff13\uff14\uff15\uff16\uff17\uff18\uff19';
    halfWidth = '0123456789';
    value = '';
    chars = str.split('');
    for (_i = 0, _len = chars.length; _i < _len; _i++) {
      chr = chars[_i];
      idx = fullWidth.indexOf(chr);
      if (idx > -1) {
        chr = halfWidth[idx];
      }
      value += chr;
    }
    return value;
  };

  reFormatNumeric = function(e) {
    var $target;
    $target = $(e.currentTarget);
    return setTimeout(function() {
      var value;
      value = $target.val();
      value = replaceFullWidthChars(value);
      value = value.replace(/\D/g, '');
      return safeVal(value, $target);
    });
  };

  reFormatCardNumber = function(e) {
    var $target;
    $target = $(e.currentTarget);
    return setTimeout(function() {
      var value;
      value = $target.val();
      value = replaceFullWidthChars(value);
      value = $.payment.formatCardNumber(value);
      return safeVal(value, $target);
    });
  };

  formatCardNumber = function(e) {
    var $target, card, digit, length, re, upperLength, value;
    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    $target = $(e.currentTarget);
    value = $target.val();
    card = cardFromNumber(value + digit);
    length = (value.replace(/\D/g, '') + digit).length;
    upperLength = 16;
    if (card) {
      upperLength = card.length[card.length.length - 1];
    }
    if (length >= upperLength) {
      return;
    }
    if (($target.prop('selectionStart') != null) && $target.prop('selectionStart') !== value.length) {
      return;
    }
    if (card && card.type === 'amex') {
      re = /^(\d{4}|\d{4}\s\d{6})$/;
    } else {
      re = /(?:^|\s)(\d{4})$/;
    }
    if (re.test(value)) {
      e.preventDefault();
      return setTimeout(function() {
        return $target.val(value + ' ' + digit);
      });
    } else if (re.test(value + digit)) {
      e.preventDefault();
      return setTimeout(function() {
        return $target.val(value + digit + ' ');
      });
    }
  };

  formatBackCardNumber = function(e) {
    var $target, value;
    $target = $(e.currentTarget);
    value = $target.val();
    if (e.which !== 8) {
      return;
    }
    if (($target.prop('selectionStart') != null) && $target.prop('selectionStart') !== value.length) {
      return;
    }
    if (/\d\s$/.test(value)) {
      e.preventDefault();
      return setTimeout(function() {
        return $target.val(value.replace(/\d\s$/, ''));
      });
    } else if (/\s\d?$/.test(value)) {
      e.preventDefault();
      return setTimeout(function() {
        return $target.val(value.replace(/\d$/, ''));
      });
    }
  };

  reFormatExpiry = function(e) {
    var $target;
    $target = $(e.currentTarget);
    return setTimeout(function() {
      var value;
      value = $target.val();
      value = replaceFullWidthChars(value);
      value = $.payment.formatExpiry(value);
      return safeVal(value, $target);
    });
  };

  formatExpiry = function(e) {
    var $target, digit, val;
    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    $target = $(e.currentTarget);
    val = $target.val() + digit;
    if (/^\d$/.test(val) && (val !== '0' && val !== '1')) {
      e.preventDefault();
      return setTimeout(function() {
        return $target.val("0" + val + " / ");
      });
    } else if (/^\d\d$/.test(val)) {
      e.preventDefault();
      return setTimeout(function() {
        var m1, m2;
        m1 = parseInt(val[0], 10);
        m2 = parseInt(val[1], 10);
        if (m2 > 2 && m1 !== 0) {
          return $target.val("0" + m1 + " / " + m2);
        } else {
          return $target.val("" + val + " / ");
        }
      });
    }
  };

  formatForwardExpiry = function(e) {
    var $target, digit, val;
    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    $target = $(e.currentTarget);
    val = $target.val();
    if (/^\d\d$/.test(val)) {
      return $target.val("" + val + " / ");
    }
  };

  formatForwardSlashAndSpace = function(e) {
    var $target, val, which;
    which = String.fromCharCode(e.which);
    if (!(which === '/' || which === ' ')) {
      return;
    }
    $target = $(e.currentTarget);
    val = $target.val();
    if (/^\d$/.test(val) && val !== '0') {
      return $target.val("0" + val + " / ");
    }
  };

  formatBackExpiry = function(e) {
    var $target, value;
    $target = $(e.currentTarget);
    value = $target.val();
    if (e.which !== 8) {
      return;
    }
    if (($target.prop('selectionStart') != null) && $target.prop('selectionStart') !== value.length) {
      return;
    }
    if (/\d\s\/\s$/.test(value)) {
      e.preventDefault();
      return setTimeout(function() {
        return $target.val(value.replace(/\d\s\/\s$/, ''));
      });
    }
  };

  reFormatCVC = function(e) {
    var $target;
    $target = $(e.currentTarget);
    return setTimeout(function() {
      var value;
      value = $target.val();
      value = replaceFullWidthChars(value);
      value = value.replace(/\D/g, '').slice(0, 4);
      return safeVal(value, $target);
    });
  };

  restrictNumeric = function(e) {
    var input;
    if (e.metaKey || e.ctrlKey) {
      return true;
    }
    if (e.which === 32) {
      return false;
    }
    if (e.which === 0) {
      return true;
    }
    if (e.which < 33) {
      return true;
    }
    input = String.fromCharCode(e.which);
    return !!/[\d\s]/.test(input);
  };

  restrictCardNumber = function(e) {
    var $target, card, digit, value;
    $target = $(e.currentTarget);
    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    if (hasTextSelected($target)) {
      return;
    }
    value = ($target.val() + digit).replace(/\D/g, '');
    card = cardFromNumber(value);
    if (card) {
      return value.length <= card.length[card.length.length - 1];
    } else {
      return value.length <= 16;
    }
  };

  restrictExpiry = function(e) {
    var $target, digit, value;
    $target = $(e.currentTarget);
    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    if (hasTextSelected($target)) {
      return;
    }
    value = $target.val() + digit;
    value = value.replace(/\D/g, '');
    if (value.length > 6) {
      return false;
    }
  };

  restrictCVC = function(e) {
    var $target, digit, val;
    $target = $(e.currentTarget);
    digit = String.fromCharCode(e.which);
    if (!/^\d+$/.test(digit)) {
      return;
    }
    if (hasTextSelected($target)) {
      return;
    }
    val = $target.val() + digit;
    return val.length <= 4;
  };

  setCardType = function(e) {
    var $target, allTypes, card, cardType, val;
    $target = $(e.currentTarget);
    val = $target.val();
    cardType = $.payment.cardType(val) || 'unknown';
    if (!$target.hasClass(cardType)) {
      allTypes = (function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = cards.length; _i < _len; _i++) {
          card = cards[_i];
          _results.push(card.type);
        }
        return _results;
      })();
      $target.removeClass('unknown');
      $target.removeClass(allTypes.join(' '));
      $target.addClass(cardType);
      $target.toggleClass('identified', cardType !== 'unknown');
      return $target.trigger('payment.cardType', cardType);
    }
  };

  $.payment.fn.formatCardCVC = function() {
    this.on('keypress', restrictNumeric);
    this.on('keypress', restrictCVC);
    this.on('paste', reFormatCVC);
    this.on('change', reFormatCVC);
    this.on('input', reFormatCVC);
    return this;
  };

  $.payment.fn.formatCardExpiry = function() {
    this.on('keypress', restrictNumeric);
    this.on('keypress', restrictExpiry);
    this.on('keypress', formatExpiry);
    this.on('keypress', formatForwardSlashAndSpace);
    this.on('keypress', formatForwardExpiry);
    this.on('keydown', formatBackExpiry);
    this.on('change', reFormatExpiry);
    this.on('input', reFormatExpiry);
    return this;
  };

  $.payment.fn.formatCardNumber = function() {
    this.on('keypress', restrictNumeric);
    this.on('keypress', restrictCardNumber);
    this.on('keypress', formatCardNumber);
    this.on('keydown', formatBackCardNumber);
    this.on('keyup', setCardType);
    this.on('paste', reFormatCardNumber);
    this.on('change', reFormatCardNumber);
    this.on('input', reFormatCardNumber);
    this.on('input', setCardType);
    return this;
  };

  $.payment.fn.restrictNumeric = function() {
    this.on('keypress', restrictNumeric);
    this.on('paste', reFormatNumeric);
    this.on('change', reFormatNumeric);
    this.on('input', reFormatNumeric);
    return this;
  };

  $.payment.fn.cardExpiryVal = function() {
    return $.payment.cardExpiryVal($(this).val());
  };

  $.payment.cardExpiryVal = function(value) {
    var month, prefix, year, _ref;
    _ref = value.split(/[\s\/]+/, 2), month = _ref[0], year = _ref[1];
    if ((year != null ? year.length : void 0) === 2 && /^\d+$/.test(year)) {
      prefix = (new Date).getFullYear();
      prefix = prefix.toString().slice(0, 2);
      year = prefix + year;
    }
    month = parseInt(month, 10);
    year = parseInt(year, 10);
    return {
      month: month,
      year: year
    };
  };

  $.payment.validateCardNumber = function(num) {
    var card, _ref;
    num = (num + '').replace(/\s+|-/g, '');
    if (!/^\d+$/.test(num)) {
      return false;
    }
    card = cardFromNumber(num);
    if (!card) {
      return false;
    }
    return (_ref = num.length, __indexOf.call(card.length, _ref) >= 0) && (card.luhn === false || luhnCheck(num));
  };

  $.payment.validateCardExpiry = function(month, year) {
    var currentTime, expiry, _ref;
    if (typeof month === 'object' && 'month' in month) {
      _ref = month, month = _ref.month, year = _ref.year;
    }
    if (!(month && year)) {
      return false;
    }
    month = $.trim(month);
    year = $.trim(year);
    if (!/^\d+$/.test(month)) {
      return false;
    }
    if (!/^\d+$/.test(year)) {
      return false;
    }
    if (!((1 <= month && month <= 12))) {
      return false;
    }
    if (year.length === 2) {
      if (year < 70) {
        year = "20" + year;
      } else {
        year = "19" + year;
      }
    }
    if (year.length !== 4) {
      return false;
    }
    expiry = new Date(year, month);
    currentTime = new Date;
    expiry.setMonth(expiry.getMonth() - 1);
    expiry.setMonth(expiry.getMonth() + 1, 1);
    return expiry > currentTime;
  };

  $.payment.validateCardCVC = function(cvc, type) {
    var card, _ref;
    cvc = $.trim(cvc);
    if (!/^\d+$/.test(cvc)) {
      return false;
    }
    card = cardFromType(type);
    if (card != null) {
      return _ref = cvc.length, __indexOf.call(card.cvcLength, _ref) >= 0;
    } else {
      return cvc.length >= 3 && cvc.length <= 4;
    }
  };

  $.payment.cardType = function(num) {
    var _ref;
    if (!num) {
      return null;
    }
    return ((_ref = cardFromNumber(num)) != null ? _ref.type : void 0) || null;
  };

  $.payment.formatCardNumber = function(num) {
    var card, groups, upperLength, _ref;
    num = num.replace(/\D/g, '');
    card = cardFromNumber(num);
    if (!card) {
      return num;
    }
    upperLength = card.length[card.length.length - 1];
    num = num.slice(0, upperLength);
    if (card.format.global) {
      return (_ref = num.match(card.format)) != null ? _ref.join(' ') : void 0;
    } else {
      groups = card.format.exec(num);
      if (groups == null) {
        return;
      }
      groups.shift();
      groups = $.grep(groups, function(n) {
        return n;
      });
      return groups.join(' ');
    }
  };

  $.payment.formatExpiry = function(expiry) {
    var mon, parts, sep, year;
    parts = expiry.match(/^\D*(\d{1,2})(\D+)?(\d{1,4})?/);
    if (!parts) {
      return '';
    }
    mon = parts[1] || '';
    sep = parts[2] || '';
    year = parts[3] || '';
    if (year.length > 0) {
      sep = ' / ';
    } else if (sep === ' /') {
      mon = mon.substring(0, 1);
      sep = '';
    } else if (mon.length === 2 || sep.length > 0) {
      sep = ' / ';
    } else if (mon.length === 1 && (mon !== '0' && mon !== '1')) {
      mon = "0" + mon;
      sep = ' / ';
    }
    return mon + sep + year;
  };

}).call(this);

},{}],28:[function(require,module,exports){
/*!
 * jQuery JavaScript Library v1.11.3
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2015-04-28T16:19Z
 */

(function( global, factory ) {

	if ( typeof module === "object" && typeof module.exports === "object" ) {
		// For CommonJS and CommonJS-like environments where a proper window is present,
		// execute the factory and get jQuery
		// For environments that do not inherently posses a window with a document
		// (such as Node.js), expose a jQuery-making factory as module.exports
		// This accentuates the need for the creation of a real window
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
}(typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Can't do this because several apps including ASP.NET trace
// the stack via arguments.caller.callee and Firefox dies if
// you try to trace through "use strict" call chains. (#13335)
// Support: Firefox 18+
//

var deletedIds = [];

var slice = deletedIds.slice;

var concat = deletedIds.concat;

var push = deletedIds.push;

var indexOf = deletedIds.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var support = {};



var
	version = "1.11.3",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {
		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android<4.1, IE<9
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([\da-z])/gi,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return letter.toUpperCase();
	};

jQuery.fn = jQuery.prototype = {
	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// Start with an empty selector
	selector: "",

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num != null ?

			// Return just the one element from the set
			( num < 0 ? this[ num + this.length ] : this[ num ] ) :

			// Return all the elements in a clean array
			slice.call( this );
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;
		ret.context = this.context;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	// (You can seed the arguments with an array of args, but this is
	// only used internally.)
	each: function( callback, args ) {
		return jQuery.each( this, callback, args );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map(this, function( elem, i ) {
			return callback.call( elem, i, elem );
		}));
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor(null);
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: deletedIds.sort,
	splice: deletedIds.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var src, copyIsArray, copy, name, options, clone,
		target = arguments[0] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
		target = {};
	}

	// extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {
		// Only deal with non-null/undefined values
		if ( (options = arguments[ i ]) != null ) {
			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {
					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray(src) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject(src) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend({
	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	// See test/unit/core.js for details concerning isFunction.
	// Since version 1.3, DOM methods and functions like alert
	// aren't supported. They return false on IE (#2968).
	isFunction: function( obj ) {
		return jQuery.type(obj) === "function";
	},

	isArray: Array.isArray || function( obj ) {
		return jQuery.type(obj) === "array";
	},

	isWindow: function( obj ) {
		/* jshint eqeqeq: false */
		return obj != null && obj == obj.window;
	},

	isNumeric: function( obj ) {
		// parseFloat NaNs numeric-cast false positives (null|true|false|"")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		// adding 1 corrects loss of precision from parseFloat (#15100)
		return !jQuery.isArray( obj ) && (obj - parseFloat( obj ) + 1) >= 0;
	},

	isEmptyObject: function( obj ) {
		var name;
		for ( name in obj ) {
			return false;
		}
		return true;
	},

	isPlainObject: function( obj ) {
		var key;

		// Must be an Object.
		// Because of IE, we also have to check the presence of the constructor property.
		// Make sure that DOM nodes and window objects don't pass through, as well
		if ( !obj || jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
			return false;
		}

		try {
			// Not own constructor property must be Object
			if ( obj.constructor &&
				!hasOwn.call(obj, "constructor") &&
				!hasOwn.call(obj.constructor.prototype, "isPrototypeOf") ) {
				return false;
			}
		} catch ( e ) {
			// IE8,9 Will throw exceptions on certain host objects #9897
			return false;
		}

		// Support: IE<9
		// Handle iteration over inherited properties before own properties.
		if ( support.ownLast ) {
			for ( key in obj ) {
				return hasOwn.call( obj, key );
			}
		}

		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own.
		for ( key in obj ) {}

		return key === undefined || hasOwn.call( obj, key );
	},

	type: function( obj ) {
		if ( obj == null ) {
			return obj + "";
		}
		return typeof obj === "object" || typeof obj === "function" ?
			class2type[ toString.call(obj) ] || "object" :
			typeof obj;
	},

	// Evaluates a script in a global context
	// Workarounds based on findings by Jim Driscoll
	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context
	globalEval: function( data ) {
		if ( data && jQuery.trim( data ) ) {
			// We use execScript on Internet Explorer
			// We use an anonymous function so that context is window
			// rather than jQuery in Firefox
			( window.execScript || function( data ) {
				window[ "eval" ].call( window, data );
			} )( data );
		}
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
	},

	// args is for internal usage only
	each: function( obj, callback, args ) {
		var value,
			i = 0,
			length = obj.length,
			isArray = isArraylike( obj );

		if ( args ) {
			if ( isArray ) {
				for ( ; i < length; i++ ) {
					value = callback.apply( obj[ i ], args );

					if ( value === false ) {
						break;
					}
				}
			} else {
				for ( i in obj ) {
					value = callback.apply( obj[ i ], args );

					if ( value === false ) {
						break;
					}
				}
			}

		// A special, fast, case for the most common use of each
		} else {
			if ( isArray ) {
				for ( ; i < length; i++ ) {
					value = callback.call( obj[ i ], i, obj[ i ] );

					if ( value === false ) {
						break;
					}
				}
			} else {
				for ( i in obj ) {
					value = callback.call( obj[ i ], i, obj[ i ] );

					if ( value === false ) {
						break;
					}
				}
			}
		}

		return obj;
	},

	// Support: Android<4.1, IE<9
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArraylike( Object(arr) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		var len;

		if ( arr ) {
			if ( indexOf ) {
				return indexOf.call( arr, elem, i );
			}

			len = arr.length;
			i = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;

			for ( ; i < len; i++ ) {
				// Skip accessing in sparse arrays
				if ( i in arr && arr[ i ] === elem ) {
					return i;
				}
			}
		}

		return -1;
	},

	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		while ( j < len ) {
			first[ i++ ] = second[ j++ ];
		}

		// Support: IE<9
		// Workaround casting of .length to NaN on otherwise arraylike objects (e.g., NodeLists)
		if ( len !== len ) {
			while ( second[j] !== undefined ) {
				first[ i++ ] = second[ j++ ];
			}
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var value,
			i = 0,
			length = elems.length,
			isArray = isArraylike( elems ),
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArray ) {
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var args, proxy, tmp;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	},

	now: function() {
		return +( new Date() );
	},

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
});

// Populate the class2type map
jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
});

function isArraylike( obj ) {

	// Support: iOS 8.2 (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = "length" in obj && obj.length,
		type = jQuery.type( obj );

	if ( type === "function" || jQuery.isWindow( obj ) ) {
		return false;
	}

	if ( obj.nodeType === 1 && length ) {
		return true;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.2.0-pre
 * http://sizzlejs.com/
 *
 * Copyright 2008, 2014 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2014-12-16
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// General-purpose constants
	MAX_NEGATIVE = 1 << 31,

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// http://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",
	// http://www.w3.org/TR/css3-syntax/#characters
	characterEncoding = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",

	// Loosely modeled on CSS identifier characters
	// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors
	// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = characterEncoding.replace( "w", "w#" ),

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + characterEncoding + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + characterEncoding + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + characterEncoding + ")" ),
		"CLASS": new RegExp( "^\\.(" + characterEncoding + ")" ),
		"TAG": new RegExp( "^(" + characterEncoding.replace( "w", "w*" ) + ")" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,
	rescape = /'|\\/g,

	// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	};

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var match, elem, m, nodeType,
		// QSA vars
		i, groups, old, nid, newContext, newSelector;

	if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
		setDocument( context );
	}

	context = context || document;
	results = results || [];
	nodeType = context.nodeType;

	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	if ( !seed && documentIsHTML ) {

		// Try to shortcut find operations when possible (e.g., not under DocumentFragment)
		if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {
			// Speed-up: Sizzle("#ID")
			if ( (m = match[1]) ) {
				if ( nodeType === 9 ) {
					elem = context.getElementById( m );
					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document (jQuery #6963)
					if ( elem && elem.parentNode ) {
						// Handle the case where IE, Opera, and Webkit return items
						// by name instead of ID
						if ( elem.id === m ) {
							results.push( elem );
							return results;
						}
					} else {
						return results;
					}
				} else {
					// Context is not a document
					if ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&
						contains( context, elem ) && elem.id === m ) {
						results.push( elem );
						return results;
					}
				}

			// Speed-up: Sizzle("TAG")
			} else if ( match[2] ) {
				push.apply( results, context.getElementsByTagName( selector ) );
				return results;

			// Speed-up: Sizzle(".CLASS")
			} else if ( (m = match[3]) && support.getElementsByClassName ) {
				push.apply( results, context.getElementsByClassName( m ) );
				return results;
			}
		}

		// QSA path
		if ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {
			nid = old = expando;
			newContext = context;
			newSelector = nodeType !== 1 && selector;

			// qSA works strangely on Element-rooted queries
			// We can work around this by specifying an extra ID on the root
			// and working up from there (Thanks to Andrew Dupont for the technique)
			// IE 8 doesn't work on object elements
			if ( nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {
				groups = tokenize( selector );

				if ( (old = context.getAttribute("id")) ) {
					nid = old.replace( rescape, "\\$&" );
				} else {
					context.setAttribute( "id", nid );
				}
				nid = "[id='" + nid + "'] ";

				i = groups.length;
				while ( i-- ) {
					groups[i] = nid + toSelector( groups[i] );
				}
				newContext = rsibling.test( selector ) && testContext( context.parentNode ) || context;
				newSelector = groups.join(",");
			}

			if ( newSelector ) {
				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch(qsaError) {
				} finally {
					if ( !old ) {
						context.removeAttribute("id");
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {Function(string, Object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created div and expects a boolean result
 */
function assert( fn ) {
	var div = document.createElement("div");

	try {
		return !!fn( div );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( div.parentNode ) {
			div.parentNode.removeChild( div );
		}
		// release memory in IE
		div = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = attrs.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			( ~b.sourceIndex || MAX_NEGATIVE ) -
			( ~a.sourceIndex || MAX_NEGATIVE );

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, parent,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// If no document and documentElement is available, return
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Set our document
	document = doc;
	docElem = doc.documentElement;
	parent = doc.defaultView;

	// Support: IE>8
	// If iframe document is assigned to "document" variable and if iframe has been reloaded,
	// IE will throw "permission denied" error when accessing "document" variable, see jQuery #13936
	// IE6-8 do not support the defaultView property so parent will be undefined
	if ( parent && parent !== parent.top ) {
		// IE11 does not have attachEvent, so all must suffer
		if ( parent.addEventListener ) {
			parent.addEventListener( "unload", unloadHandler, false );
		} else if ( parent.attachEvent ) {
			parent.attachEvent( "onunload", unloadHandler );
		}
	}

	/* Support tests
	---------------------------------------------------------------------- */
	documentIsHTML = !isXML( doc );

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( div ) {
		div.className = "i";
		return !div.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( div ) {
		div.appendChild( doc.createComment("") );
		return !div.getElementsByTagName("*").length;
	});

	// Support: IE<9
	support.getElementsByClassName = rnative.test( doc.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( div ) {
		docElem.appendChild( div ).id = expando;
		return !doc.getElementsByName || !doc.getElementsByName( expando ).length;
	});

	// ID find and filter
	if ( support.getById ) {
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var m = context.getElementById( id );
				// Check parentNode to catch when Blackberry 4.6 returns
				// nodes that are no longer in the document #6963
				return m && m.parentNode ? [ m ] : [];
			}
		};
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
	} else {
		// Support: IE6/7
		// getElementById is not reliable as a find shortcut
		delete Expr.find["ID"];

		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See http://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( div ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// http://bugs.jquery.com/ticket/12359
			docElem.appendChild( div ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\f]' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( div.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !div.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.2+, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.7+
			if ( !div.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibing-combinator selector` fails
			if ( !div.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});

		assert(function( div ) {
			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = doc.createElement("input");
			input.setAttribute( "type", "hidden" );
			div.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( div.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":enabled").length ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			div.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( div ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( div, "div" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( div, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully does not implement inclusive descendent
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === doc ? -1 :
				b === doc ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return doc;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, outerCache, node, diff, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {
										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {
							// Seek `elem` from a previously-cached index
							outerCache = parent[ expando ] || (parent[ expando ] = {});
							cache = outerCache[ type ] || [];
							nodeIndex = cache[0] === dirruns && cache[1];
							diff = cache[0] === dirruns && cache[2];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									outerCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						// Use previously-cached element index if available
						} else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {
							diff = cache[1];

						// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)
						} else {
							// Use the same loop as above to seek `elem` from the start
							while ( (node = ++nodeIndex && node && node[ dir ] ||
								(diff = nodeIndex = 0) || start.pop()) ) {

								if ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {
									// Cache the index of each encountered element
									if ( useCache ) {
										(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];
									}

									if ( node === elem ) {
										break;
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": function( elem ) {
			return elem.disabled === false;
		},

		"disabled": function( elem ) {
			return elem.disabled === true;
		},

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		checkNonElements = base && dir === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});
						if ( (oldCache = outerCache[ dir ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							outerCache[ dir ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context !== document && context;
			}

			// Add elements passing elementMatchers directly to results
			// Keep `i` a string if there are no elements so `matchedCount` will be "00" below
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context, xml ) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// Apply set filters to unmatched elements
			matchedCount += i;
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is no seed and only one group
	if ( match.length === 1 ) {

		// Take a shortcut and set the context if the root selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				support.getById && context.nodeType === 9 && documentIsHTML &&
				Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( div1 ) {
	// Should return 1, but returns 4 (following)
	return div1.compareDocumentPosition( document.createElement("div") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( div ) {
	div.innerHTML = "<a href='#'></a>";
	return div.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( div ) {
	div.innerHTML = "<input/>";
	div.firstChild.setAttribute( "value", "" );
	return div.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( div ) {
	return div.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
jQuery.expr[":"] = jQuery.expr.pseudos;
jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;



var rneedsContext = jQuery.expr.match.needsContext;

var rsingleTag = (/^<(\w+)\s*\/?>(?:<\/\1>|)$/);



var risSimple = /^.[^:#\[\.,]*$/;

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			/* jshint -W018 */
			return !!qualifier.call( elem, i, elem ) !== not;
		});

	}

	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		});

	}

	if ( typeof qualifier === "string" ) {
		if ( risSimple.test( qualifier ) ) {
			return jQuery.filter( qualifier, elements, not );
		}

		qualifier = jQuery.filter( qualifier, elements );
	}

	return jQuery.grep( elements, function( elem ) {
		return ( jQuery.inArray( elem, qualifier ) >= 0 ) !== not;
	});
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	return elems.length === 1 && elem.nodeType === 1 ?
		jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :
		jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
			return elem.nodeType === 1;
		}));
};

jQuery.fn.extend({
	find: function( selector ) {
		var i,
			ret = [],
			self = this,
			len = self.length;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter(function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			}) );
		}

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		// Needed because $( selector, context ) becomes $( context ).find( selector )
		ret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );
		ret.selector = this.selector ? this.selector + " " + selector : selector;
		return ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow(this, selector || [], false) );
	},
	not: function( selector ) {
		return this.pushStack( winnow(this, selector || [], true) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
});


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// Use the correct document accordingly with window argument (sandbox)
	document = window.document,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,

	init = jQuery.fn.init = function( selector, context ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector.charAt(0) === "<" && selector.charAt( selector.length - 1 ) === ">" && selector.length >= 3 ) {
				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && (match[1] || !context) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[1] ) {
					context = context instanceof jQuery ? context[0] : context;

					// scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[1],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {
							// Properties of context are called as methods if possible
							if ( jQuery.isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[2] );

					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					if ( elem && elem.parentNode ) {
						// Handle the case where IE and Opera return items
						// by name instead of ID
						if ( elem.id !== match[2] ) {
							return rootjQuery.find( selector );
						}

						// Otherwise, we inject the element directly into the jQuery object
						this.length = 1;
						this[0] = elem;
					}

					this.context = document;
					this.selector = selector;
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || rootjQuery ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this.context = this[0] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return typeof rootjQuery.ready !== "undefined" ?
				rootjQuery.ready( selector ) :
				// Execute immediately if ready is not present
				selector( jQuery );
		}

		if ( selector.selector !== undefined ) {
			this.selector = selector.selector;
			this.context = selector.context;
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,
	// methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.extend({
	dir: function( elem, dir, until ) {
		var matched = [],
			cur = elem[ dir ];

		while ( cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery( cur ).is( until )) ) {
			if ( cur.nodeType === 1 ) {
				matched.push( cur );
			}
			cur = cur[dir];
		}
		return matched;
	},

	sibling: function( n, elem ) {
		var r = [];

		for ( ; n; n = n.nextSibling ) {
			if ( n.nodeType === 1 && n !== elem ) {
				r.push( n );
			}
		}

		return r;
	}
});

jQuery.fn.extend({
	has: function( target ) {
		var i,
			targets = jQuery( target, this ),
			len = targets.length;

		return this.filter(function() {
			for ( i = 0; i < len; i++ ) {
				if ( jQuery.contains( this, targets[i] ) ) {
					return true;
				}
			}
		});
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
				jQuery( selectors, context || this.context ) :
				0;

		for ( ; i < l; i++ ) {
			for ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {
				// Always skip document fragments
				if ( cur.nodeType < 11 && (pos ?
					pos.index(cur) > -1 :

					// Don't pass non-elements to Sizzle
					cur.nodeType === 1 &&
						jQuery.find.matchesSelector(cur, selectors)) ) {

					matched.push( cur );
					break;
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.unique( matched ) : matched );
	},

	// Determine the position of an element within
	// the matched set of elements
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[0] && this[0].parentNode ) ? this.first().prevAll().length : -1;
		}

		// index in selector
		if ( typeof elem === "string" ) {
			return jQuery.inArray( this[0], jQuery( elem ) );
		}

		// Locate the position of the desired element
		return jQuery.inArray(
			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[0] : elem, this );
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.unique(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter(selector)
		);
	}
});

function sibling( cur, dir ) {
	do {
		cur = cur[ dir ];
	} while ( cur && cur.nodeType !== 1 );

	return cur;
}

jQuery.each({
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return jQuery.dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return jQuery.dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return jQuery.dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return jQuery.sibling( elem.firstChild );
	},
	contents: function( elem ) {
		return jQuery.nodeName( elem, "iframe" ) ?
			elem.contentDocument || elem.contentWindow.document :
			jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var ret = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			ret = jQuery.filter( selector, ret );
		}

		if ( this.length > 1 ) {
			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				ret = jQuery.unique( ret );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				ret = ret.reverse();
			}
		}

		return this.pushStack( ret );
	};
});
var rnotwhite = (/\S+/g);



// String to Object options format cache
var optionsCache = {};

// Convert String-formatted options into Object-formatted ones and store in cache
function createOptions( options ) {
	var object = optionsCache[ options ] = {};
	jQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	});
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		( optionsCache[ options ] || createOptions( options ) ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,
		// Last fire value (for non-forgettable lists)
		memory,
		// Flag to know if list was already fired
		fired,
		// End of the loop when firing
		firingLength,
		// Index of currently firing callback (modified by remove if needed)
		firingIndex,
		// First callback to fire (used internally by add and fireWith)
		firingStart,
		// Actual callback list
		list = [],
		// Stack of fire calls for repeatable lists
		stack = !options.once && [],
		// Fire callbacks
		fire = function( data ) {
			memory = options.memory && data;
			fired = true;
			firingIndex = firingStart || 0;
			firingStart = 0;
			firingLength = list.length;
			firing = true;
			for ( ; list && firingIndex < firingLength; firingIndex++ ) {
				if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {
					memory = false; // To prevent further calls using add
					break;
				}
			}
			firing = false;
			if ( list ) {
				if ( stack ) {
					if ( stack.length ) {
						fire( stack.shift() );
					}
				} else if ( memory ) {
					list = [];
				} else {
					self.disable();
				}
			}
		},
		// Actual Callbacks object
		self = {
			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {
					// First, we save the current length
					var start = list.length;
					(function add( args ) {
						jQuery.each( args, function( _, arg ) {
							var type = jQuery.type( arg );
							if ( type === "function" ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && type !== "string" ) {
								// Inspect recursively
								add( arg );
							}
						});
					})( arguments );
					// Do we need to add the callbacks to the
					// current firing batch?
					if ( firing ) {
						firingLength = list.length;
					// With memory, if we're not firing then
					// we should call right away
					} else if ( memory ) {
						firingStart = start;
						fire( memory );
					}
				}
				return this;
			},
			// Remove a callback from the list
			remove: function() {
				if ( list ) {
					jQuery.each( arguments, function( _, arg ) {
						var index;
						while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
							list.splice( index, 1 );
							// Handle firing indexes
							if ( firing ) {
								if ( index <= firingLength ) {
									firingLength--;
								}
								if ( index <= firingIndex ) {
									firingIndex--;
								}
							}
						}
					});
				}
				return this;
			},
			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );
			},
			// Remove all callbacks from the list
			empty: function() {
				list = [];
				firingLength = 0;
				return this;
			},
			// Have the list do nothing anymore
			disable: function() {
				list = stack = memory = undefined;
				return this;
			},
			// Is it disabled?
			disabled: function() {
				return !list;
			},
			// Lock the list in its current state
			lock: function() {
				stack = undefined;
				if ( !memory ) {
					self.disable();
				}
				return this;
			},
			// Is it locked?
			locked: function() {
				return !stack;
			},
			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( list && ( !fired || stack ) ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					if ( firing ) {
						stack.push( args );
					} else {
						fire( args );
					}
				}
				return this;
			},
			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},
			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


jQuery.extend({

	Deferred: function( func ) {
		var tuples = [
				// action, add listener, listener list, final state
				[ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ],
				[ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ],
				[ "notify", "progress", jQuery.Callbacks("memory") ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				then: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;
					return jQuery.Deferred(function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {
							var fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];
							// deferred[ done | fail | progress ] for forwarding actions to newDefer
							deferred[ tuple[1] ](function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && jQuery.isFunction( returned.promise ) ) {
									returned.promise()
										.done( newDefer.resolve )
										.fail( newDefer.reject )
										.progress( newDefer.notify );
								} else {
									newDefer[ tuple[ 0 ] + "With" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );
								}
							});
						});
						fns = null;
					}).promise();
				},
				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Keep pipe for back-compat
		promise.pipe = promise.then;

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 3 ];

			// promise[ done | fail | progress ] = list.add
			promise[ tuple[1] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(function() {
					// state = [ resolved | rejected ]
					state = stateString;

				// [ reject_list | resolve_list ].disable; progress_list.lock
				}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
			}

			// deferred[ resolve | reject | notify ]
			deferred[ tuple[0] ] = function() {
				deferred[ tuple[0] + "With" ]( this === deferred ? promise : this, arguments );
				return this;
			};
			deferred[ tuple[0] + "With" ] = list.fireWith;
		});

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( subordinate /* , ..., subordinateN */ ) {
		var i = 0,
			resolveValues = slice.call( arguments ),
			length = resolveValues.length,

			// the count of uncompleted subordinates
			remaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

			// the master Deferred. If resolveValues consist of only a single Deferred, just use that.
			deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

			// Update function for both resolve and progress values
			updateFunc = function( i, contexts, values ) {
				return function( value ) {
					contexts[ i ] = this;
					values[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( values === progressValues ) {
						deferred.notifyWith( contexts, values );

					} else if ( !(--remaining) ) {
						deferred.resolveWith( contexts, values );
					}
				};
			},

			progressValues, progressContexts, resolveContexts;

		// add listeners to Deferred subordinates; treat others as resolved
		if ( length > 1 ) {
			progressValues = new Array( length );
			progressContexts = new Array( length );
			resolveContexts = new Array( length );
			for ( ; i < length; i++ ) {
				if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
					resolveValues[ i ].promise()
						.done( updateFunc( i, resolveContexts, resolveValues ) )
						.fail( deferred.reject )
						.progress( updateFunc( i, progressContexts, progressValues ) );
				} else {
					--remaining;
				}
			}
		}

		// if we're not waiting on anything, resolve the master
		if ( !remaining ) {
			deferred.resolveWith( resolveContexts, resolveValues );
		}

		return deferred.promise();
	}
});


// The deferred used on DOM ready
var readyList;

jQuery.fn.ready = function( fn ) {
	// Add the callback
	jQuery.ready.promise().done( fn );

	return this;
};

jQuery.extend({
	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
		if ( !document.body ) {
			return setTimeout( jQuery.ready );
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );

		// Trigger any bound ready events
		if ( jQuery.fn.triggerHandler ) {
			jQuery( document ).triggerHandler( "ready" );
			jQuery( document ).off( "ready" );
		}
	}
});

/**
 * Clean-up method for dom ready events
 */
function detach() {
	if ( document.addEventListener ) {
		document.removeEventListener( "DOMContentLoaded", completed, false );
		window.removeEventListener( "load", completed, false );

	} else {
		document.detachEvent( "onreadystatechange", completed );
		window.detachEvent( "onload", completed );
	}
}

/**
 * The ready event handler and self cleanup method
 */
function completed() {
	// readyState === "complete" is good enough for us to call the dom ready in oldIE
	if ( document.addEventListener || event.type === "load" || document.readyState === "complete" ) {
		detach();
		jQuery.ready();
	}
}

jQuery.ready.promise = function( obj ) {
	if ( !readyList ) {

		readyList = jQuery.Deferred();

		// Catch cases where $(document).ready() is called after the browser event has already occurred.
		// we once tried to use readyState "interactive" here, but it caused issues like the one
		// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15
		if ( document.readyState === "complete" ) {
			// Handle it asynchronously to allow scripts the opportunity to delay ready
			setTimeout( jQuery.ready );

		// Standards-based browsers support DOMContentLoaded
		} else if ( document.addEventListener ) {
			// Use the handy event callback
			document.addEventListener( "DOMContentLoaded", completed, false );

			// A fallback to window.onload, that will always work
			window.addEventListener( "load", completed, false );

		// If IE event model is used
		} else {
			// Ensure firing before onload, maybe late but safe also for iframes
			document.attachEvent( "onreadystatechange", completed );

			// A fallback to window.onload, that will always work
			window.attachEvent( "onload", completed );

			// If IE and not a frame
			// continually check to see if the document is ready
			var top = false;

			try {
				top = window.frameElement == null && document.documentElement;
			} catch(e) {}

			if ( top && top.doScroll ) {
				(function doScrollCheck() {
					if ( !jQuery.isReady ) {

						try {
							// Use the trick by Diego Perini
							// http://javascript.nwbox.com/IEContentLoaded/
							top.doScroll("left");
						} catch(e) {
							return setTimeout( doScrollCheck, 50 );
						}

						// detach all dom ready events
						detach();

						// and execute any waiting functions
						jQuery.ready();
					}
				})();
			}
		}
	}
	return readyList.promise( obj );
};


var strundefined = typeof undefined;



// Support: IE<9
// Iteration over object's inherited properties before its own
var i;
for ( i in jQuery( support ) ) {
	break;
}
support.ownLast = i !== "0";

// Note: most support tests are defined in their respective modules.
// false until the test is run
support.inlineBlockNeedsLayout = false;

// Execute ASAP in case we need to set body.style.zoom
jQuery(function() {
	// Minified: var a,b,c,d
	var val, div, body, container;

	body = document.getElementsByTagName( "body" )[ 0 ];
	if ( !body || !body.style ) {
		// Return for frameset docs that don't have a body
		return;
	}

	// Setup
	div = document.createElement( "div" );
	container = document.createElement( "div" );
	container.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px";
	body.appendChild( container ).appendChild( div );

	if ( typeof div.style.zoom !== strundefined ) {
		// Support: IE<8
		// Check if natively block-level elements act like inline-block
		// elements when setting their display to 'inline' and giving
		// them layout
		div.style.cssText = "display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1";

		support.inlineBlockNeedsLayout = val = div.offsetWidth === 3;
		if ( val ) {
			// Prevent IE 6 from affecting layout for positioned elements #11048
			// Prevent IE from shrinking the body in IE 7 mode #12869
			// Support: IE<8
			body.style.zoom = 1;
		}
	}

	body.removeChild( container );
});




(function() {
	var div = document.createElement( "div" );

	// Execute the test only if not already executed in another module.
	if (support.deleteExpando == null) {
		// Support: IE<9
		support.deleteExpando = true;
		try {
			delete div.test;
		} catch( e ) {
			support.deleteExpando = false;
		}
	}

	// Null elements to avoid leaks in IE.
	div = null;
})();


/**
 * Determines whether an object can have data
 */
jQuery.acceptData = function( elem ) {
	var noData = jQuery.noData[ (elem.nodeName + " ").toLowerCase() ],
		nodeType = +elem.nodeType || 1;

	// Do not set data on non-element DOM nodes because it will not be cleared (#8335).
	return nodeType !== 1 && nodeType !== 9 ?
		false :

		// Nodes accept data unless otherwise specified; rejection can be conditional
		!noData || noData !== true && elem.getAttribute("classid") === noData;
};


var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /([A-Z])/g;

function dataAttr( elem, key, data ) {
	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {

		var name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();

		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = data === "true" ? true :
					data === "false" ? false :
					data === "null" ? null :
					// Only convert to a number if it doesn't change the string
					+data + "" === data ? +data :
					rbrace.test( data ) ? jQuery.parseJSON( data ) :
					data;
			} catch( e ) {}

			// Make sure we set the data so it isn't changed later
			jQuery.data( elem, key, data );

		} else {
			data = undefined;
		}
	}

	return data;
}

// checks a cache object for emptiness
function isEmptyDataObject( obj ) {
	var name;
	for ( name in obj ) {

		// if the public data object is empty, the private is still empty
		if ( name === "data" && jQuery.isEmptyObject( obj[name] ) ) {
			continue;
		}
		if ( name !== "toJSON" ) {
			return false;
		}
	}

	return true;
}

function internalData( elem, name, data, pvt /* Internal Use Only */ ) {
	if ( !jQuery.acceptData( elem ) ) {
		return;
	}

	var ret, thisCache,
		internalKey = jQuery.expando,

		// We have to handle DOM nodes and JS objects differently because IE6-7
		// can't GC object references properly across the DOM-JS boundary
		isNode = elem.nodeType,

		// Only DOM nodes need the global jQuery cache; JS object data is
		// attached directly to the object so GC can occur automatically
		cache = isNode ? jQuery.cache : elem,

		// Only defining an ID for JS objects if its cache already exists allows
		// the code to shortcut on the same path as a DOM node with no cache
		id = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey;

	// Avoid doing any more work than we need to when trying to get data on an
	// object that has no data at all
	if ( (!id || !cache[id] || (!pvt && !cache[id].data)) && data === undefined && typeof name === "string" ) {
		return;
	}

	if ( !id ) {
		// Only DOM nodes need a new unique ID for each element since their data
		// ends up in the global cache
		if ( isNode ) {
			id = elem[ internalKey ] = deletedIds.pop() || jQuery.guid++;
		} else {
			id = internalKey;
		}
	}

	if ( !cache[ id ] ) {
		// Avoid exposing jQuery metadata on plain JS objects when the object
		// is serialized using JSON.stringify
		cache[ id ] = isNode ? {} : { toJSON: jQuery.noop };
	}

	// An object can be passed to jQuery.data instead of a key/value pair; this gets
	// shallow copied over onto the existing cache
	if ( typeof name === "object" || typeof name === "function" ) {
		if ( pvt ) {
			cache[ id ] = jQuery.extend( cache[ id ], name );
		} else {
			cache[ id ].data = jQuery.extend( cache[ id ].data, name );
		}
	}

	thisCache = cache[ id ];

	// jQuery data() is stored in a separate object inside the object's internal data
	// cache in order to avoid key collisions between internal data and user-defined
	// data.
	if ( !pvt ) {
		if ( !thisCache.data ) {
			thisCache.data = {};
		}

		thisCache = thisCache.data;
	}

	if ( data !== undefined ) {
		thisCache[ jQuery.camelCase( name ) ] = data;
	}

	// Check for both converted-to-camel and non-converted data property names
	// If a data property was specified
	if ( typeof name === "string" ) {

		// First Try to find as-is property data
		ret = thisCache[ name ];

		// Test for null|undefined property data
		if ( ret == null ) {

			// Try to find the camelCased property
			ret = thisCache[ jQuery.camelCase( name ) ];
		}
	} else {
		ret = thisCache;
	}

	return ret;
}

function internalRemoveData( elem, name, pvt ) {
	if ( !jQuery.acceptData( elem ) ) {
		return;
	}

	var thisCache, i,
		isNode = elem.nodeType,

		// See jQuery.data for more information
		cache = isNode ? jQuery.cache : elem,
		id = isNode ? elem[ jQuery.expando ] : jQuery.expando;

	// If there is already no cache entry for this object, there is no
	// purpose in continuing
	if ( !cache[ id ] ) {
		return;
	}

	if ( name ) {

		thisCache = pvt ? cache[ id ] : cache[ id ].data;

		if ( thisCache ) {

			// Support array or space separated string names for data keys
			if ( !jQuery.isArray( name ) ) {

				// try the string as a key before any manipulation
				if ( name in thisCache ) {
					name = [ name ];
				} else {

					// split the camel cased version by spaces unless a key with the spaces exists
					name = jQuery.camelCase( name );
					if ( name in thisCache ) {
						name = [ name ];
					} else {
						name = name.split(" ");
					}
				}
			} else {
				// If "name" is an array of keys...
				// When data is initially created, via ("key", "val") signature,
				// keys will be converted to camelCase.
				// Since there is no way to tell _how_ a key was added, remove
				// both plain key and camelCase key. #12786
				// This will only penalize the array argument path.
				name = name.concat( jQuery.map( name, jQuery.camelCase ) );
			}

			i = name.length;
			while ( i-- ) {
				delete thisCache[ name[i] ];
			}

			// If there is no data left in the cache, we want to continue
			// and let the cache object itself get destroyed
			if ( pvt ? !isEmptyDataObject(thisCache) : !jQuery.isEmptyObject(thisCache) ) {
				return;
			}
		}
	}

	// See jQuery.data for more information
	if ( !pvt ) {
		delete cache[ id ].data;

		// Don't destroy the parent cache unless the internal data object
		// had been the only thing left in it
		if ( !isEmptyDataObject( cache[ id ] ) ) {
			return;
		}
	}

	// Destroy the cache
	if ( isNode ) {
		jQuery.cleanData( [ elem ], true );

	// Use delete when supported for expandos or `cache` is not a window per isWindow (#10080)
	/* jshint eqeqeq: false */
	} else if ( support.deleteExpando || cache != cache.window ) {
		/* jshint eqeqeq: true */
		delete cache[ id ];

	// When all else fails, null
	} else {
		cache[ id ] = null;
	}
}

jQuery.extend({
	cache: {},

	// The following elements (space-suffixed to avoid Object.prototype collisions)
	// throw uncatchable exceptions if you attempt to set expando properties
	noData: {
		"applet ": true,
		"embed ": true,
		// ...but Flash objects (which have this classid) *can* handle expandos
		"object ": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
	},

	hasData: function( elem ) {
		elem = elem.nodeType ? jQuery.cache[ elem[jQuery.expando] ] : elem[ jQuery.expando ];
		return !!elem && !isEmptyDataObject( elem );
	},

	data: function( elem, name, data ) {
		return internalData( elem, name, data );
	},

	removeData: function( elem, name ) {
		return internalRemoveData( elem, name );
	},

	// For internal use only.
	_data: function( elem, name, data ) {
		return internalData( elem, name, data, true );
	},

	_removeData: function( elem, name ) {
		return internalRemoveData( elem, name, true );
	}
});

jQuery.fn.extend({
	data: function( key, value ) {
		var i, name, data,
			elem = this[0],
			attrs = elem && elem.attributes;

		// Special expections of .data basically thwart jQuery.access,
		// so implement the relevant behavior ourselves

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = jQuery.data( elem );

				if ( elem.nodeType === 1 && !jQuery._data( elem, "parsedAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE11+
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = jQuery.camelCase( name.slice(5) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					jQuery._data( elem, "parsedAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each(function() {
				jQuery.data( this, key );
			});
		}

		return arguments.length > 1 ?

			// Sets one value
			this.each(function() {
				jQuery.data( this, key, value );
			}) :

			// Gets one value
			// Try to fetch any internally stored data first
			elem ? dataAttr( elem, key, jQuery.data( elem, key ) ) : undefined;
	},

	removeData: function( key ) {
		return this.each(function() {
			jQuery.removeData( this, key );
		});
	}
});


jQuery.extend({
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = jQuery._data( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || jQuery.isArray(data) ) {
					queue = jQuery._data( elem, type, jQuery.makeArray(data) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// not intended for public consumption - generates a queueHooks object, or returns the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return jQuery._data( elem, key ) || jQuery._data( elem, key, {
			empty: jQuery.Callbacks("once memory").add(function() {
				jQuery._removeData( elem, type + "queue" );
				jQuery._removeData( elem, key );
			})
		});
	}
});

jQuery.fn.extend({
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[0], type );
		}

		return data === undefined ?
			this :
			this.each(function() {
				var queue = jQuery.queue( this, type, data );

				// ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[0] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			});
	},
	dequeue: function( type ) {
		return this.each(function() {
			jQuery.dequeue( this, type );
		});
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},
	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = jQuery._data( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
});
var pnum = (/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/).source;

var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var isHidden = function( elem, el ) {
		// isHidden might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;
		return jQuery.css( elem, "display" ) === "none" || !jQuery.contains( elem.ownerDocument, elem );
	};



// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = jQuery.access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		length = elems.length,
		bulk = key == null;

	// Sets many values
	if ( jQuery.type( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			jQuery.access( elems, fn, i, key[i], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !jQuery.isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {
			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < length; i++ ) {
				fn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );
			}
		}
	}

	return chainable ?
		elems :

		// Gets
		bulk ?
			fn.call( elems ) :
			length ? fn( elems[0], key ) : emptyGet;
};
var rcheckableType = (/^(?:checkbox|radio)$/i);



(function() {
	// Minified: var a,b,c
	var input = document.createElement( "input" ),
		div = document.createElement( "div" ),
		fragment = document.createDocumentFragment();

	// Setup
	div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";

	// IE strips leading whitespace when .innerHTML is used
	support.leadingWhitespace = div.firstChild.nodeType === 3;

	// Make sure that tbody elements aren't automatically inserted
	// IE will insert them into empty tables
	support.tbody = !div.getElementsByTagName( "tbody" ).length;

	// Make sure that link elements get serialized correctly by innerHTML
	// This requires a wrapper element in IE
	support.htmlSerialize = !!div.getElementsByTagName( "link" ).length;

	// Makes sure cloning an html5 element does not cause problems
	// Where outerHTML is undefined, this still works
	support.html5Clone =
		document.createElement( "nav" ).cloneNode( true ).outerHTML !== "<:nav></:nav>";

	// Check if a disconnected checkbox will retain its checked
	// value of true after appended to the DOM (IE6/7)
	input.type = "checkbox";
	input.checked = true;
	fragment.appendChild( input );
	support.appendChecked = input.checked;

	// Make sure textarea (and checkbox) defaultValue is properly cloned
	// Support: IE6-IE11+
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;

	// #11217 - WebKit loses check when the name is after the checked attribute
	fragment.appendChild( div );
	div.innerHTML = "<input type='radio' checked='checked' name='t'/>";

	// Support: Safari 5.1, iOS 5.1, Android 4.x, Android 2.3
	// old WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE<9
	// Opera does not clone events (and typeof div.attachEvent === undefined).
	// IE9-10 clones events bound via attachEvent, but they don't trigger with .click()
	support.noCloneEvent = true;
	if ( div.attachEvent ) {
		div.attachEvent( "onclick", function() {
			support.noCloneEvent = false;
		});

		div.cloneNode( true ).click();
	}

	// Execute the test only if not already executed in another module.
	if (support.deleteExpando == null) {
		// Support: IE<9
		support.deleteExpando = true;
		try {
			delete div.test;
		} catch( e ) {
			support.deleteExpando = false;
		}
	}
})();


(function() {
	var i, eventName,
		div = document.createElement( "div" );

	// Support: IE<9 (lack submit/change bubble), Firefox 23+ (lack focusin event)
	for ( i in { submit: true, change: true, focusin: true }) {
		eventName = "on" + i;

		if ( !(support[ i + "Bubbles" ] = eventName in window) ) {
			// Beware of CSP restrictions (https://developer.mozilla.org/en/Security/CSP)
			div.setAttribute( eventName, "t" );
			support[ i + "Bubbles" ] = div.attributes[ eventName ].expando === false;
		}
	}

	// Null elements to avoid leaks in IE.
	div = null;
})();


var rformElems = /^(?:input|select|textarea)$/i,
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,
	rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)$/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {
		var tmp, events, t, handleObjIn,
			special, eventHandle, handleObj,
			handlers, type, namespaces, origType,
			elemData = jQuery._data( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !(events = elemData.events) ) {
			events = elemData.events = {};
		}
		if ( !(eventHandle = elemData.handle) ) {
			eventHandle = elemData.handle = function( e ) {
				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== strundefined && (!e || jQuery.event.triggered !== e.type) ?
					jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :
					undefined;
			};
			// Add elem as a property of the handle fn to prevent a memory leak with IE non-native events
			eventHandle.elem = elem;
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[t] ) || [];
			type = origType = tmp[1];
			namespaces = ( tmp[2] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend({
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join(".")
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !(handlers = events[ type ]) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener/attachEvent if the special events handler returns false
				if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
					// Bind the global event handler to the element
					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle, false );

					} else if ( elem.attachEvent ) {
						elem.attachEvent( "on" + type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

		// Nullify elem to prevent memory leaks in IE
		elem = null;
	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {
		var j, handleObj, tmp,
			origCount, t, events,
			special, handlers, type,
			namespaces, origType,
			elemData = jQuery.hasData( elem ) && jQuery._data( elem );

		if ( !elemData || !(events = elemData.events) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[t] ) || [];
			type = origType = tmp[1];
			namespaces = ( tmp[2] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[2] && new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector || selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {
					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			delete elemData.handle;

			// removeData also checks for emptiness and clears the expando if empty
			// so use it instead of delete
			jQuery._removeData( elem, "events" );
		}
	},

	trigger: function( event, data, elem, onlyHandlers ) {
		var handle, ontype, cur,
			bubbleType, special, tmp, i,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split(".") : [];

		cur = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf(".") >= 0 ) {
			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split(".");
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf(":") < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join(".");
		event.namespace_re = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === (elem.ownerDocument || document) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {

			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( jQuery._data( cur, "events" ) || {} )[ event.type ] && jQuery._data( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && jQuery.acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&
				jQuery.acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name name as the event.
				// Can't use an .isFunction() check here because IE6/7 fails that test.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && elem[ type ] && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					try {
						elem[ type ]();
					} catch ( e ) {
						// IE<9 dies on focus/blur to hidden element (#1486,#12518)
						// only reproducible on winXP IE8 native, not IE9 in IE8 mode
					}
					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	dispatch: function( event ) {

		// Make a writable jQuery.Event from the native event object
		event = jQuery.event.fix( event );

		var i, ret, handleObj, matched, j,
			handlerQueue = [],
			args = slice.call( arguments ),
			handlers = ( jQuery._data( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[0] = event;
		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {

				// Triggered event must either 1) have no namespace, or
				// 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )
							.apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( (event.result = ret) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var sel, handleObj, matches, i,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		// Black-hole SVG <use> instance trees (#13180)
		// Avoid non-left-click bubbling in Firefox (#3861)
		if ( delegateCount && cur.nodeType && (!event.button || event.type !== "click") ) {

			/* jshint eqeqeq: false */
			for ( ; cur != this; cur = cur.parentNode || this ) {
				/* jshint eqeqeq: true */

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && (cur.disabled !== true || event.type !== "click") ) {
					matches = [];
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matches[ sel ] === undefined ) {
							matches[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) >= 0 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matches[ sel ] ) {
							matches.push( handleObj );
						}
					}
					if ( matches.length ) {
						handlerQueue.push({ elem: cur, handlers: matches });
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		if ( delegateCount < handlers.length ) {
			handlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });
		}

		return handlerQueue;
	},

	fix: function( event ) {
		if ( event[ jQuery.expando ] ) {
			return event;
		}

		// Create a writable copy of the event object and normalize some properties
		var i, prop, copy,
			type = event.type,
			originalEvent = event,
			fixHook = this.fixHooks[ type ];

		if ( !fixHook ) {
			this.fixHooks[ type ] = fixHook =
				rmouseEvent.test( type ) ? this.mouseHooks :
				rkeyEvent.test( type ) ? this.keyHooks :
				{};
		}
		copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

		event = new jQuery.Event( originalEvent );

		i = copy.length;
		while ( i-- ) {
			prop = copy[ i ];
			event[ prop ] = originalEvent[ prop ];
		}

		// Support: IE<9
		// Fix target property (#1925)
		if ( !event.target ) {
			event.target = originalEvent.srcElement || document;
		}

		// Support: Chrome 23+, Safari?
		// Target should not be a text node (#504, #13143)
		if ( event.target.nodeType === 3 ) {
			event.target = event.target.parentNode;
		}

		// Support: IE<9
		// For mouse/key events, metaKey==false if it's undefined (#3368, #11328)
		event.metaKey = !!event.metaKey;

		return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;
	},

	// Includes some event props shared by KeyEvent and MouseEvent
	props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),

	fixHooks: {},

	keyHooks: {
		props: "char charCode key keyCode".split(" "),
		filter: function( event, original ) {

			// Add which for key events
			if ( event.which == null ) {
				event.which = original.charCode != null ? original.charCode : original.keyCode;
			}

			return event;
		}
	},

	mouseHooks: {
		props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
		filter: function( event, original ) {
			var body, eventDoc, doc,
				button = original.button,
				fromElement = original.fromElement;

			// Calculate pageX/Y if missing and clientX/Y available
			if ( event.pageX == null && original.clientX != null ) {
				eventDoc = event.target.ownerDocument || document;
				doc = eventDoc.documentElement;
				body = eventDoc.body;

				event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );
				event.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );
			}

			// Add relatedTarget, if necessary
			if ( !event.relatedTarget && fromElement ) {
				event.relatedTarget = fromElement === event.target ? original.toElement : fromElement;
			}

			// Add which for click: 1 === left; 2 === middle; 3 === right
			// Note: button is not normalized, so don't use it
			if ( !event.which && button !== undefined ) {
				event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
			}

			return event;
		}
	},

	special: {
		load: {
			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {
			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					try {
						this.focus();
						return false;
					} catch ( e ) {
						// Support: IE<9
						// If we error on focus to hidden element (#1486, #12518),
						// let .trigger() run the handlers
					}
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {
			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( jQuery.nodeName( this, "input" ) && this.type === "checkbox" && this.click ) {
					this.click();
					return false;
				}
			},

			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return jQuery.nodeName( event.target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	},

	simulate: function( type, elem, event, bubble ) {
		// Piggyback on a donor event to simulate a different one.
		// Fake originalEvent to avoid donor's stopPropagation, but if the
		// simulated event prevents default then we do the same on the donor.
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true,
				originalEvent: {}
			}
		);
		if ( bubble ) {
			jQuery.event.trigger( e, null, elem );
		} else {
			jQuery.event.dispatch.call( elem, e );
		}
		if ( e.isDefaultPrevented() ) {
			event.preventDefault();
		}
	}
};

jQuery.removeEvent = document.removeEventListener ?
	function( elem, type, handle ) {
		if ( elem.removeEventListener ) {
			elem.removeEventListener( type, handle, false );
		}
	} :
	function( elem, type, handle ) {
		var name = "on" + type;

		if ( elem.detachEvent ) {

			// #8545, #7054, preventing memory leaks for custom events in IE6-8
			// detachEvent needed property on element, by name of that event, to properly expose it to GC
			if ( typeof elem[ name ] === strundefined ) {
				elem[ name ] = null;
			}

			elem.detachEvent( name, handle );
		}
	};

jQuery.Event = function( src, props ) {
	// Allow instantiation without the 'new' keyword
	if ( !(this instanceof jQuery.Event) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&
				// Support: IE < 9, Android < 4.0
				src.returnValue === false ?
			returnTrue :
			returnFalse;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;
		if ( !e ) {
			return;
		}

		// If preventDefault exists, run it on the original event
		if ( e.preventDefault ) {
			e.preventDefault();

		// Support: IE
		// Otherwise set the returnValue property of the original event to false
		} else {
			e.returnValue = false;
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;
		if ( !e ) {
			return;
		}
		// If stopPropagation exists, run it on the original event
		if ( e.stopPropagation ) {
			e.stopPropagation();
		}

		// Support: IE
		// Set the cancelBubble property of the original event to true
		e.cancelBubble = true;
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && e.stopImmediatePropagation ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Create mouseenter/leave events using mouseover/out and event-time checks
jQuery.each({
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mousenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || (related !== target && !jQuery.contains( target, related )) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
});

// IE submit delegation
if ( !support.submitBubbles ) {

	jQuery.event.special.submit = {
		setup: function() {
			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Lazy-add a submit handler when a descendant form may potentially be submitted
			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
				// Node name check avoids a VML-related crash in IE (#9807)
				var elem = e.target,
					form = jQuery.nodeName( elem, "input" ) || jQuery.nodeName( elem, "button" ) ? elem.form : undefined;
				if ( form && !jQuery._data( form, "submitBubbles" ) ) {
					jQuery.event.add( form, "submit._submit", function( event ) {
						event._submit_bubble = true;
					});
					jQuery._data( form, "submitBubbles", true );
				}
			});
			// return undefined since we don't need an event listener
		},

		postDispatch: function( event ) {
			// If form was submitted by the user, bubble the event up the tree
			if ( event._submit_bubble ) {
				delete event._submit_bubble;
				if ( this.parentNode && !event.isTrigger ) {
					jQuery.event.simulate( "submit", this.parentNode, event, true );
				}
			}
		},

		teardown: function() {
			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Remove delegated handlers; cleanData eventually reaps submit handlers attached above
			jQuery.event.remove( this, "._submit" );
		}
	};
}

// IE change delegation and checkbox/radio fix
if ( !support.changeBubbles ) {

	jQuery.event.special.change = {

		setup: function() {

			if ( rformElems.test( this.nodeName ) ) {
				// IE doesn't fire change on a check/radio until blur; trigger it on click
				// after a propertychange. Eat the blur-change in special.change.handle.
				// This still fires onchange a second time for check/radio after blur.
				if ( this.type === "checkbox" || this.type === "radio" ) {
					jQuery.event.add( this, "propertychange._change", function( event ) {
						if ( event.originalEvent.propertyName === "checked" ) {
							this._just_changed = true;
						}
					});
					jQuery.event.add( this, "click._change", function( event ) {
						if ( this._just_changed && !event.isTrigger ) {
							this._just_changed = false;
						}
						// Allow triggered, simulated change events (#11500)
						jQuery.event.simulate( "change", this, event, true );
					});
				}
				return false;
			}
			// Delegated event; lazy-add a change handler on descendant inputs
			jQuery.event.add( this, "beforeactivate._change", function( e ) {
				var elem = e.target;

				if ( rformElems.test( elem.nodeName ) && !jQuery._data( elem, "changeBubbles" ) ) {
					jQuery.event.add( elem, "change._change", function( event ) {
						if ( this.parentNode && !event.isSimulated && !event.isTrigger ) {
							jQuery.event.simulate( "change", this.parentNode, event, true );
						}
					});
					jQuery._data( elem, "changeBubbles", true );
				}
			});
		},

		handle: function( event ) {
			var elem = event.target;

			// Swallow native change events from checkbox/radio, we already triggered them above
			if ( this !== elem || event.isSimulated || event.isTrigger || (elem.type !== "radio" && elem.type !== "checkbox") ) {
				return event.handleObj.handler.apply( this, arguments );
			}
		},

		teardown: function() {
			jQuery.event.remove( this, "._change" );

			return !rformElems.test( this.nodeName );
		}
	};
}

// Create "bubbling" focus and blur events
if ( !support.focusinBubbles ) {
	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
				jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );
			};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = jQuery._data( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				jQuery._data( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = jQuery._data( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					jQuery._removeData( doc, fix );
				} else {
					jQuery._data( doc, fix, attaches );
				}
			}
		};
	});
}

jQuery.fn.extend({

	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
		var type, origFn;

		// Types can be a map of types/handlers
		if ( typeof types === "object" ) {
			// ( types-Object, selector, data )
			if ( typeof selector !== "string" ) {
				// ( types-Object, data )
				data = data || selector;
				selector = undefined;
			}
			for ( type in types ) {
				this.on( type, selector, data, types[ type ], one );
			}
			return this;
		}

		if ( data == null && fn == null ) {
			// ( types, fn )
			fn = selector;
			data = selector = undefined;
		} else if ( fn == null ) {
			if ( typeof selector === "string" ) {
				// ( types, selector, fn )
				fn = data;
				data = undefined;
			} else {
				// ( types, data, fn )
				fn = data;
				data = selector;
				selector = undefined;
			}
		}
		if ( fn === false ) {
			fn = returnFalse;
		} else if ( !fn ) {
			return this;
		}

		if ( one === 1 ) {
			origFn = fn;
			fn = function( event ) {
				// Can use an empty set, since event contains the info
				jQuery().off( event );
				return origFn.apply( this, arguments );
			};
			// Use same guid so caller can remove using origFn
			fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
		}
		return this.each( function() {
			jQuery.event.add( this, types, fn, data, selector );
		});
	},
	one: function( types, selector, data, fn ) {
		return this.on( types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {
			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {
			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {
			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each(function() {
			jQuery.event.remove( this, types, fn, selector );
		});
	},

	trigger: function( type, data ) {
		return this.each(function() {
			jQuery.event.trigger( type, data, this );
		});
	},
	triggerHandler: function( type, data ) {
		var elem = this[0];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
});


function createSafeFragment( document ) {
	var list = nodeNames.split( "|" ),
		safeFrag = document.createDocumentFragment();

	if ( safeFrag.createElement ) {
		while ( list.length ) {
			safeFrag.createElement(
				list.pop()
			);
		}
	}
	return safeFrag;
}

var nodeNames = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|" +
		"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
	rinlinejQuery = / jQuery\d+="(?:null|\d+)"/g,
	rnoshimcache = new RegExp("<(?:" + nodeNames + ")[\\s/>]", "i"),
	rleadingWhitespace = /^\s+/,
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
	rtagName = /<([\w:]+)/,
	rtbody = /<tbody/i,
	rhtml = /<|&#?\w+;/,
	rnoInnerhtml = /<(?:script|style|link)/i,
	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptType = /^$|\/(?:java|ecma)script/i,
	rscriptTypeMasked = /^true\/(.*)/,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,

	// We have to close these tags to support XHTML (#13200)
	wrapMap = {
		option: [ 1, "<select multiple='multiple'>", "</select>" ],
		legend: [ 1, "<fieldset>", "</fieldset>" ],
		area: [ 1, "<map>", "</map>" ],
		param: [ 1, "<object>", "</object>" ],
		thead: [ 1, "<table>", "</table>" ],
		tr: [ 2, "<table><tbody>", "</tbody></table>" ],
		col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],
		td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

		// IE6-8 can't serialize link, script, style, or any html5 (NoScope) tags,
		// unless wrapped in a div with non-breaking characters in front of it.
		_default: support.htmlSerialize ? [ 0, "", "" ] : [ 1, "X<div>", "</div>"  ]
	},
	safeFragment = createSafeFragment( document ),
	fragmentDiv = safeFragment.appendChild( document.createElement("div") );

wrapMap.optgroup = wrapMap.option;
wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

function getAll( context, tag ) {
	var elems, elem,
		i = 0,
		found = typeof context.getElementsByTagName !== strundefined ? context.getElementsByTagName( tag || "*" ) :
			typeof context.querySelectorAll !== strundefined ? context.querySelectorAll( tag || "*" ) :
			undefined;

	if ( !found ) {
		for ( found = [], elems = context.childNodes || context; (elem = elems[i]) != null; i++ ) {
			if ( !tag || jQuery.nodeName( elem, tag ) ) {
				found.push( elem );
			} else {
				jQuery.merge( found, getAll( elem, tag ) );
			}
		}
	}

	return tag === undefined || tag && jQuery.nodeName( context, tag ) ?
		jQuery.merge( [ context ], found ) :
		found;
}

// Used in buildFragment, fixes the defaultChecked property
function fixDefaultChecked( elem ) {
	if ( rcheckableType.test( elem.type ) ) {
		elem.defaultChecked = elem.checked;
	}
}

// Support: IE<8
// Manipulating tables requires a tbody
function manipulationTarget( elem, content ) {
	return jQuery.nodeName( elem, "table" ) &&
		jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ?

		elem.getElementsByTagName("tbody")[0] ||
			elem.appendChild( elem.ownerDocument.createElement("tbody") ) :
		elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = (jQuery.find.attr( elem, "type" ) !== null) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	var match = rscriptTypeMasked.exec( elem.type );
	if ( match ) {
		elem.type = match[1];
	} else {
		elem.removeAttribute("type");
	}
	return elem;
}

// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var elem,
		i = 0;
	for ( ; (elem = elems[i]) != null; i++ ) {
		jQuery._data( elem, "globalEval", !refElements || jQuery._data( refElements[i], "globalEval" ) );
	}
}

function cloneCopyEvent( src, dest ) {

	if ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {
		return;
	}

	var type, i, l,
		oldData = jQuery._data( src ),
		curData = jQuery._data( dest, oldData ),
		events = oldData.events;

	if ( events ) {
		delete curData.handle;
		curData.events = {};

		for ( type in events ) {
			for ( i = 0, l = events[ type ].length; i < l; i++ ) {
				jQuery.event.add( dest, type, events[ type ][ i ] );
			}
		}
	}

	// make the cloned public data object a copy from the original
	if ( curData.data ) {
		curData.data = jQuery.extend( {}, curData.data );
	}
}

function fixCloneNodeIssues( src, dest ) {
	var nodeName, e, data;

	// We do not need to do anything for non-Elements
	if ( dest.nodeType !== 1 ) {
		return;
	}

	nodeName = dest.nodeName.toLowerCase();

	// IE6-8 copies events bound via attachEvent when using cloneNode.
	if ( !support.noCloneEvent && dest[ jQuery.expando ] ) {
		data = jQuery._data( dest );

		for ( e in data.events ) {
			jQuery.removeEvent( dest, e, data.handle );
		}

		// Event data gets referenced instead of copied if the expando gets copied too
		dest.removeAttribute( jQuery.expando );
	}

	// IE blanks contents when cloning scripts, and tries to evaluate newly-set text
	if ( nodeName === "script" && dest.text !== src.text ) {
		disableScript( dest ).text = src.text;
		restoreScript( dest );

	// IE6-10 improperly clones children of object elements using classid.
	// IE10 throws NoModificationAllowedError if parent is null, #12132.
	} else if ( nodeName === "object" ) {
		if ( dest.parentNode ) {
			dest.outerHTML = src.outerHTML;
		}

		// This path appears unavoidable for IE9. When cloning an object
		// element in IE9, the outerHTML strategy above is not sufficient.
		// If the src has innerHTML and the destination does not,
		// copy the src.innerHTML into the dest.innerHTML. #10324
		if ( support.html5Clone && ( src.innerHTML && !jQuery.trim(dest.innerHTML) ) ) {
			dest.innerHTML = src.innerHTML;
		}

	} else if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		// IE6-8 fails to persist the checked state of a cloned checkbox
		// or radio button. Worse, IE6-7 fail to give the cloned element
		// a checked appearance if the defaultChecked value isn't also set

		dest.defaultChecked = dest.checked = src.checked;

		// IE6-7 get confused and end up setting the value of a cloned
		// checkbox/radio button to an empty string instead of "on"
		if ( dest.value !== src.value ) {
			dest.value = src.value;
		}

	// IE6-8 fails to return the selected option to the default selected
	// state when cloning options
	} else if ( nodeName === "option" ) {
		dest.defaultSelected = dest.selected = src.defaultSelected;

	// IE6-8 fails to set the defaultValue to the correct value when
	// cloning other types of input fields
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

jQuery.extend({
	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var destElements, node, clone, i, srcElements,
			inPage = jQuery.contains( elem.ownerDocument, elem );

		if ( support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test( "<" + elem.nodeName + ">" ) ) {
			clone = elem.cloneNode( true );

		// IE<=8 does not properly clone detached, unknown element nodes
		} else {
			fragmentDiv.innerHTML = elem.outerHTML;
			fragmentDiv.removeChild( clone = fragmentDiv.firstChild );
		}

		if ( (!support.noCloneEvent || !support.noCloneChecked) &&
				(elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem) ) {

			// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			// Fix all IE cloning issues
			for ( i = 0; (node = srcElements[i]) != null; ++i ) {
				// Ensure that the destination node is not null; Fixes #9587
				if ( destElements[i] ) {
					fixCloneNodeIssues( node, destElements[i] );
				}
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0; (node = srcElements[i]) != null; i++ ) {
					cloneCopyEvent( node, destElements[i] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		destElements = srcElements = node = null;

		// Return the cloned set
		return clone;
	},

	buildFragment: function( elems, context, scripts, selection ) {
		var j, elem, contains,
			tmp, tag, tbody, wrap,
			l = elems.length,

			// Ensure a safe fragment
			safe = createSafeFragment( context ),

			nodes = [],
			i = 0;

		for ( ; i < l; i++ ) {
			elem = elems[ i ];

			if ( elem || elem === 0 ) {

				// Add nodes directly
				if ( jQuery.type( elem ) === "object" ) {
					jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

				// Convert non-html into a text node
				} else if ( !rhtml.test( elem ) ) {
					nodes.push( context.createTextNode( elem ) );

				// Convert html into DOM nodes
				} else {
					tmp = tmp || safe.appendChild( context.createElement("div") );

					// Deserialize a standard representation
					tag = (rtagName.exec( elem ) || [ "", "" ])[ 1 ].toLowerCase();
					wrap = wrapMap[ tag ] || wrapMap._default;

					tmp.innerHTML = wrap[1] + elem.replace( rxhtmlTag, "<$1></$2>" ) + wrap[2];

					// Descend through wrappers to the right content
					j = wrap[0];
					while ( j-- ) {
						tmp = tmp.lastChild;
					}

					// Manually add leading whitespace removed by IE
					if ( !support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {
						nodes.push( context.createTextNode( rleadingWhitespace.exec( elem )[0] ) );
					}

					// Remove IE's autoinserted <tbody> from table fragments
					if ( !support.tbody ) {

						// String was a <table>, *may* have spurious <tbody>
						elem = tag === "table" && !rtbody.test( elem ) ?
							tmp.firstChild :

							// String was a bare <thead> or <tfoot>
							wrap[1] === "<table>" && !rtbody.test( elem ) ?
								tmp :
								0;

						j = elem && elem.childNodes.length;
						while ( j-- ) {
							if ( jQuery.nodeName( (tbody = elem.childNodes[j]), "tbody" ) && !tbody.childNodes.length ) {
								elem.removeChild( tbody );
							}
						}
					}

					jQuery.merge( nodes, tmp.childNodes );

					// Fix #12392 for WebKit and IE > 9
					tmp.textContent = "";

					// Fix #12392 for oldIE
					while ( tmp.firstChild ) {
						tmp.removeChild( tmp.firstChild );
					}

					// Remember the top-level container for proper cleanup
					tmp = safe.lastChild;
				}
			}
		}

		// Fix #11356: Clear elements from fragment
		if ( tmp ) {
			safe.removeChild( tmp );
		}

		// Reset defaultChecked for any radios and checkboxes
		// about to be appended to the DOM in IE 6/7 (#8060)
		if ( !support.appendChecked ) {
			jQuery.grep( getAll( nodes, "input" ), fixDefaultChecked );
		}

		i = 0;
		while ( (elem = nodes[ i++ ]) ) {

			// #4087 - If origin and destination elements are the same, and this is
			// that element, do not do anything
			if ( selection && jQuery.inArray( elem, selection ) !== -1 ) {
				continue;
			}

			contains = jQuery.contains( elem.ownerDocument, elem );

			// Append to fragment
			tmp = getAll( safe.appendChild( elem ), "script" );

			// Preserve script evaluation history
			if ( contains ) {
				setGlobalEval( tmp );
			}

			// Capture executables
			if ( scripts ) {
				j = 0;
				while ( (elem = tmp[ j++ ]) ) {
					if ( rscriptType.test( elem.type || "" ) ) {
						scripts.push( elem );
					}
				}
			}
		}

		tmp = null;

		return safe;
	},

	cleanData: function( elems, /* internal */ acceptData ) {
		var elem, type, id, data,
			i = 0,
			internalKey = jQuery.expando,
			cache = jQuery.cache,
			deleteExpando = support.deleteExpando,
			special = jQuery.event.special;

		for ( ; (elem = elems[i]) != null; i++ ) {
			if ( acceptData || jQuery.acceptData( elem ) ) {

				id = elem[ internalKey ];
				data = id && cache[ id ];

				if ( data ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Remove cache only if it was not already removed by jQuery.event.remove
					if ( cache[ id ] ) {

						delete cache[ id ];

						// IE does not allow us to delete expando properties from nodes,
						// nor does it have a removeAttribute function on Document nodes;
						// we must handle all of these cases
						if ( deleteExpando ) {
							delete elem[ internalKey ];

						} else if ( typeof elem.removeAttribute !== strundefined ) {
							elem.removeAttribute( internalKey );

						} else {
							elem[ internalKey ] = null;
						}

						deletedIds.push( id );
					}
				}
			}
		}
	}
});

jQuery.fn.extend({
	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().append( ( this[0] && this[0].ownerDocument || document ).createTextNode( value ) );
		}, null, value, arguments.length );
	},

	append: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		});
	},

	prepend: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		});
	},

	before: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		});
	},

	after: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		});
	},

	remove: function( selector, keepData /* Internal Use Only */ ) {
		var elem,
			elems = selector ? jQuery.filter( selector, this ) : this,
			i = 0;

		for ( ; (elem = elems[i]) != null; i++ ) {

			if ( !keepData && elem.nodeType === 1 ) {
				jQuery.cleanData( getAll( elem ) );
			}

			if ( elem.parentNode ) {
				if ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {
					setGlobalEval( getAll( elem, "script" ) );
				}
				elem.parentNode.removeChild( elem );
			}
		}

		return this;
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; (elem = this[i]) != null; i++ ) {
			// Remove element nodes and prevent memory leaks
			if ( elem.nodeType === 1 ) {
				jQuery.cleanData( getAll( elem, false ) );
			}

			// Remove any remaining nodes
			while ( elem.firstChild ) {
				elem.removeChild( elem.firstChild );
			}

			// If this is a select, ensure that it displays empty (#12336)
			// Support: IE<9
			if ( elem.options && jQuery.nodeName( elem, "select" ) ) {
				elem.options.length = 0;
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map(function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		});
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined ) {
				return elem.nodeType === 1 ?
					elem.innerHTML.replace( rinlinejQuery, "" ) :
					undefined;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				( support.htmlSerialize || !rnoshimcache.test( value )  ) &&
				( support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&
				!wrapMap[ (rtagName.exec( value ) || [ "", "" ])[ 1 ].toLowerCase() ] ) {

				value = value.replace( rxhtmlTag, "<$1></$2>" );

				try {
					for (; i < l; i++ ) {
						// Remove element nodes and prevent memory leaks
						elem = this[i] || {};
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch(e) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var arg = arguments[ 0 ];

		// Make the changes, replacing each context element with the new content
		this.domManip( arguments, function( elem ) {
			arg = this.parentNode;

			jQuery.cleanData( getAll( this ) );

			if ( arg ) {
				arg.replaceChild( elem, this );
			}
		});

		// Force removal if there was no new content (e.g., from empty arguments)
		return arg && (arg.length || arg.nodeType) ? this : this.remove();
	},

	detach: function( selector ) {
		return this.remove( selector, true );
	},

	domManip: function( args, callback ) {

		// Flatten any nested arrays
		args = concat.apply( [], args );

		var first, node, hasScripts,
			scripts, doc, fragment,
			i = 0,
			l = this.length,
			set = this,
			iNoClone = l - 1,
			value = args[0],
			isFunction = jQuery.isFunction( value );

		// We can't cloneNode fragments that contain checked, in WebKit
		if ( isFunction ||
				( l > 1 && typeof value === "string" &&
					!support.checkClone && rchecked.test( value ) ) ) {
			return this.each(function( index ) {
				var self = set.eq( index );
				if ( isFunction ) {
					args[0] = value.call( this, index, self.html() );
				}
				self.domManip( args, callback );
			});
		}

		if ( l ) {
			fragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, this );
			first = fragment.firstChild;

			if ( fragment.childNodes.length === 1 ) {
				fragment = first;
			}

			if ( first ) {
				scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
				hasScripts = scripts.length;

				// Use the original fragment for the last item instead of the first because it can end up
				// being emptied incorrectly in certain situations (#8070).
				for ( ; i < l; i++ ) {
					node = fragment;

					if ( i !== iNoClone ) {
						node = jQuery.clone( node, true, true );

						// Keep references to cloned scripts for later restoration
						if ( hasScripts ) {
							jQuery.merge( scripts, getAll( node, "script" ) );
						}
					}

					callback.call( this[i], node, i );
				}

				if ( hasScripts ) {
					doc = scripts[ scripts.length - 1 ].ownerDocument;

					// Reenable scripts
					jQuery.map( scripts, restoreScript );

					// Evaluate executable scripts on first document insertion
					for ( i = 0; i < hasScripts; i++ ) {
						node = scripts[ i ];
						if ( rscriptType.test( node.type || "" ) &&
							!jQuery._data( node, "globalEval" ) && jQuery.contains( doc, node ) ) {

							if ( node.src ) {
								// Optional AJAX dependency, but won't run scripts if not present
								if ( jQuery._evalUrl ) {
									jQuery._evalUrl( node.src );
								}
							} else {
								jQuery.globalEval( ( node.text || node.textContent || node.innerHTML || "" ).replace( rcleanScript, "" ) );
							}
						}
					}
				}

				// Fix #11809: Avoid leaking memory
				fragment = first = null;
			}
		}

		return this;
	}
});

jQuery.each({
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			i = 0,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone(true);
			jQuery( insert[i] )[ original ]( elems );

			// Modern browsers can apply jQuery collections as arrays, but oldIE needs a .get()
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
});


var iframe,
	elemdisplay = {};

/**
 * Retrieve the actual display of a element
 * @param {String} name nodeName of the element
 * @param {Object} doc Document object
 */
// Called only from within defaultDisplay
function actualDisplay( name, doc ) {
	var style,
		elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),

		// getDefaultComputedStyle might be reliably used only on attached element
		display = window.getDefaultComputedStyle && ( style = window.getDefaultComputedStyle( elem[ 0 ] ) ) ?

			// Use of this method is a temporary fix (more like optmization) until something better comes along,
			// since it was removed from specification and supported only in FF
			style.display : jQuery.css( elem[ 0 ], "display" );

	// We don't have any data stored on the element,
	// so use "detach" method as fast way to get rid of the element
	elem.detach();

	return display;
}

/**
 * Try to determine the default display value of an element
 * @param {String} nodeName
 */
function defaultDisplay( nodeName ) {
	var doc = document,
		display = elemdisplay[ nodeName ];

	if ( !display ) {
		display = actualDisplay( nodeName, doc );

		// If the simple way fails, read from inside an iframe
		if ( display === "none" || !display ) {

			// Use the already-created iframe if possible
			iframe = (iframe || jQuery( "<iframe frameborder='0' width='0' height='0'/>" )).appendTo( doc.documentElement );

			// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
			doc = ( iframe[ 0 ].contentWindow || iframe[ 0 ].contentDocument ).document;

			// Support: IE
			doc.write();
			doc.close();

			display = actualDisplay( nodeName, doc );
			iframe.detach();
		}

		// Store the correct default display
		elemdisplay[ nodeName ] = display;
	}

	return display;
}


(function() {
	var shrinkWrapBlocksVal;

	support.shrinkWrapBlocks = function() {
		if ( shrinkWrapBlocksVal != null ) {
			return shrinkWrapBlocksVal;
		}

		// Will be changed later if needed.
		shrinkWrapBlocksVal = false;

		// Minified: var b,c,d
		var div, body, container;

		body = document.getElementsByTagName( "body" )[ 0 ];
		if ( !body || !body.style ) {
			// Test fired too early or in an unsupported environment, exit.
			return;
		}

		// Setup
		div = document.createElement( "div" );
		container = document.createElement( "div" );
		container.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px";
		body.appendChild( container ).appendChild( div );

		// Support: IE6
		// Check if elements with layout shrink-wrap their children
		if ( typeof div.style.zoom !== strundefined ) {
			// Reset CSS: box-sizing; display; margin; border
			div.style.cssText =
				// Support: Firefox<29, Android 2.3
				// Vendor-prefix box-sizing
				"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" +
				"box-sizing:content-box;display:block;margin:0;border:0;" +
				"padding:1px;width:1px;zoom:1";
			div.appendChild( document.createElement( "div" ) ).style.width = "5px";
			shrinkWrapBlocksVal = div.offsetWidth !== 3;
		}

		body.removeChild( container );

		return shrinkWrapBlocksVal;
	};

})();
var rmargin = (/^margin/);

var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );



var getStyles, curCSS,
	rposition = /^(top|right|bottom|left)$/;

if ( window.getComputedStyle ) {
	getStyles = function( elem ) {
		// Support: IE<=11+, Firefox<=30+ (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		if ( elem.ownerDocument.defaultView.opener ) {
			return elem.ownerDocument.defaultView.getComputedStyle( elem, null );
		}

		return window.getComputedStyle( elem, null );
	};

	curCSS = function( elem, name, computed ) {
		var width, minWidth, maxWidth, ret,
			style = elem.style;

		computed = computed || getStyles( elem );

		// getPropertyValue is only needed for .css('filter') in IE9, see #12537
		ret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;

		if ( computed ) {

			if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
				ret = jQuery.style( elem, name );
			}

			// A tribute to the "awesome hack by Dean Edwards"
			// Chrome < 17 and Safari 5.0 uses "computed value" instead of "used value" for margin-right
			// Safari 5.1.7 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels
			// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values
			if ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {

				// Remember the original values
				width = style.width;
				minWidth = style.minWidth;
				maxWidth = style.maxWidth;

				// Put in the new values to get a computed value out
				style.minWidth = style.maxWidth = style.width = ret;
				ret = computed.width;

				// Revert the changed values
				style.width = width;
				style.minWidth = minWidth;
				style.maxWidth = maxWidth;
			}
		}

		// Support: IE
		// IE returns zIndex value as an integer.
		return ret === undefined ?
			ret :
			ret + "";
	};
} else if ( document.documentElement.currentStyle ) {
	getStyles = function( elem ) {
		return elem.currentStyle;
	};

	curCSS = function( elem, name, computed ) {
		var left, rs, rsLeft, ret,
			style = elem.style;

		computed = computed || getStyles( elem );
		ret = computed ? computed[ name ] : undefined;

		// Avoid setting ret to empty string here
		// so we don't default to auto
		if ( ret == null && style && style[ name ] ) {
			ret = style[ name ];
		}

		// From the awesome hack by Dean Edwards
		// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291

		// If we're not dealing with a regular pixel number
		// but a number that has a weird ending, we need to convert it to pixels
		// but not position css attributes, as those are proportional to the parent element instead
		// and we can't measure the parent instead because it might trigger a "stacking dolls" problem
		if ( rnumnonpx.test( ret ) && !rposition.test( name ) ) {

			// Remember the original values
			left = style.left;
			rs = elem.runtimeStyle;
			rsLeft = rs && rs.left;

			// Put in the new values to get a computed value out
			if ( rsLeft ) {
				rs.left = elem.currentStyle.left;
			}
			style.left = name === "fontSize" ? "1em" : ret;
			ret = style.pixelLeft + "px";

			// Revert the changed values
			style.left = left;
			if ( rsLeft ) {
				rs.left = rsLeft;
			}
		}

		// Support: IE
		// IE returns zIndex value as an integer.
		return ret === undefined ?
			ret :
			ret + "" || "auto";
	};
}




function addGetHookIf( conditionFn, hookFn ) {
	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			var condition = conditionFn();

			if ( condition == null ) {
				// The test was not ready at this point; screw the hook this time
				// but check again when needed next time.
				return;
			}

			if ( condition ) {
				// Hook not needed (or it's not possible to use it due to missing dependency),
				// remove it.
				// Since there are no other hooks for marginRight, remove the whole object.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.

			return (this.get = hookFn).apply( this, arguments );
		}
	};
}


(function() {
	// Minified: var b,c,d,e,f,g, h,i
	var div, style, a, pixelPositionVal, boxSizingReliableVal,
		reliableHiddenOffsetsVal, reliableMarginRightVal;

	// Setup
	div = document.createElement( "div" );
	div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";
	a = div.getElementsByTagName( "a" )[ 0 ];
	style = a && a.style;

	// Finish early in limited (non-browser) environments
	if ( !style ) {
		return;
	}

	style.cssText = "float:left;opacity:.5";

	// Support: IE<9
	// Make sure that element opacity exists (as opposed to filter)
	support.opacity = style.opacity === "0.5";

	// Verify style float existence
	// (IE uses styleFloat instead of cssFloat)
	support.cssFloat = !!style.cssFloat;

	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	// Support: Firefox<29, Android 2.3
	// Vendor-prefix box-sizing
	support.boxSizing = style.boxSizing === "" || style.MozBoxSizing === "" ||
		style.WebkitBoxSizing === "";

	jQuery.extend(support, {
		reliableHiddenOffsets: function() {
			if ( reliableHiddenOffsetsVal == null ) {
				computeStyleTests();
			}
			return reliableHiddenOffsetsVal;
		},

		boxSizingReliable: function() {
			if ( boxSizingReliableVal == null ) {
				computeStyleTests();
			}
			return boxSizingReliableVal;
		},

		pixelPosition: function() {
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return pixelPositionVal;
		},

		// Support: Android 2.3
		reliableMarginRight: function() {
			if ( reliableMarginRightVal == null ) {
				computeStyleTests();
			}
			return reliableMarginRightVal;
		}
	});

	function computeStyleTests() {
		// Minified: var b,c,d,j
		var div, body, container, contents;

		body = document.getElementsByTagName( "body" )[ 0 ];
		if ( !body || !body.style ) {
			// Test fired too early or in an unsupported environment, exit.
			return;
		}

		// Setup
		div = document.createElement( "div" );
		container = document.createElement( "div" );
		container.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px";
		body.appendChild( container ).appendChild( div );

		div.style.cssText =
			// Support: Firefox<29, Android 2.3
			// Vendor-prefix box-sizing
			"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;" +
			"box-sizing:border-box;display:block;margin-top:1%;top:1%;" +
			"border:1px;padding:1px;width:4px;position:absolute";

		// Support: IE<9
		// Assume reasonable values in the absence of getComputedStyle
		pixelPositionVal = boxSizingReliableVal = false;
		reliableMarginRightVal = true;

		// Check for getComputedStyle so that this code is not run in IE<9.
		if ( window.getComputedStyle ) {
			pixelPositionVal = ( window.getComputedStyle( div, null ) || {} ).top !== "1%";
			boxSizingReliableVal =
				( window.getComputedStyle( div, null ) || { width: "4px" } ).width === "4px";

			// Support: Android 2.3
			// Div with explicit width and no margin-right incorrectly
			// gets computed margin-right based on width of container (#3333)
			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
			contents = div.appendChild( document.createElement( "div" ) );

			// Reset CSS: box-sizing; display; margin; border; padding
			contents.style.cssText = div.style.cssText =
				// Support: Firefox<29, Android 2.3
				// Vendor-prefix box-sizing
				"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" +
				"box-sizing:content-box;display:block;margin:0;border:0;padding:0";
			contents.style.marginRight = contents.style.width = "0";
			div.style.width = "1px";

			reliableMarginRightVal =
				!parseFloat( ( window.getComputedStyle( contents, null ) || {} ).marginRight );

			div.removeChild( contents );
		}

		// Support: IE8
		// Check if table cells still have offsetWidth/Height when they are set
		// to display:none and there are still other visible table cells in a
		// table row; if so, offsetWidth/Height are not reliable for use when
		// determining if an element has been hidden directly using
		// display:none (it is still safe to use offsets if a parent element is
		// hidden; don safety goggles and see bug #4512 for more information).
		div.innerHTML = "<table><tr><td></td><td>t</td></tr></table>";
		contents = div.getElementsByTagName( "td" );
		contents[ 0 ].style.cssText = "margin:0;border:0;padding:0;display:none";
		reliableHiddenOffsetsVal = contents[ 0 ].offsetHeight === 0;
		if ( reliableHiddenOffsetsVal ) {
			contents[ 0 ].style.display = "";
			contents[ 1 ].style.display = "none";
			reliableHiddenOffsetsVal = contents[ 0 ].offsetHeight === 0;
		}

		body.removeChild( container );
	}

})();


// A method for quickly swapping in/out CSS properties to get correct calculations.
jQuery.swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var
		ralpha = /alpha\([^)]*\)/i,
	ropacity = /opacity\s*=\s*([^)]*)/,

	// swappable if display is none or starts with table except "table", "table-cell", or "table-caption"
	// see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rnumsplit = new RegExp( "^(" + pnum + ")(.*)$", "i" ),
	rrelNum = new RegExp( "^([+-])=(" + pnum + ")", "i" ),

	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	},

	cssPrefixes = [ "Webkit", "O", "Moz", "ms" ];


// return a css property mapped to a potentially vendor prefixed property
function vendorPropName( style, name ) {

	// shortcut for names that are not vendor prefixed
	if ( name in style ) {
		return name;
	}

	// check for vendor prefixed names
	var capName = name.charAt(0).toUpperCase() + name.slice(1),
		origName = name,
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in style ) {
			return name;
		}
	}

	return origName;
}

function showHide( elements, show ) {
	var display, elem, hidden,
		values = [],
		index = 0,
		length = elements.length;

	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		values[ index ] = jQuery._data( elem, "olddisplay" );
		display = elem.style.display;
		if ( show ) {
			// Reset the inline display of this element to learn if it is
			// being hidden by cascaded rules or not
			if ( !values[ index ] && display === "none" ) {
				elem.style.display = "";
			}

			// Set elements which have been overridden with display: none
			// in a stylesheet to whatever the default browser style is
			// for such an element
			if ( elem.style.display === "" && isHidden( elem ) ) {
				values[ index ] = jQuery._data( elem, "olddisplay", defaultDisplay(elem.nodeName) );
			}
		} else {
			hidden = isHidden( elem );

			if ( display && display !== "none" || !hidden ) {
				jQuery._data( elem, "olddisplay", hidden ? display : jQuery.css( elem, "display" ) );
			}
		}
	}

	// Set the display of most of the elements in a second loop
	// to avoid the constant reflow
	for ( index = 0; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}
		if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
			elem.style.display = show ? values[ index ] || "" : "none";
		}
	}

	return elements;
}

function setPositiveNumber( elem, value, subtract ) {
	var matches = rnumsplit.exec( value );
	return matches ?
		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :
		value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
	var i = extra === ( isBorderBox ? "border" : "content" ) ?
		// If we already have the right measurement, avoid augmentation
		4 :
		// Otherwise initialize for horizontal or vertical properties
		name === "width" ? 1 : 0,

		val = 0;

	for ( ; i < 4; i += 2 ) {
		// both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
		}

		if ( isBorderBox ) {
			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// at this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		} else {
			// at this point, extra isn't content, so add padding
			val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// at this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with offset property, which is equivalent to the border-box value
	var valueIsBorderBox = true,
		val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
		styles = getStyles( elem ),
		isBorderBox = support.boxSizing && jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

	// some non-html elements return undefined for offsetWidth, so check for null/undefined
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
	if ( val <= 0 || val == null ) {
		// Fall back to computed then uncomputed css if necessary
		val = curCSS( elem, name, styles );
		if ( val < 0 || val == null ) {
			val = elem.style[ name ];
		}

		// Computed unit is not pixels. Stop here and return.
		if ( rnumnonpx.test(val) ) {
			return val;
		}

		// we need the check for style in case a browser which returns unreliable values
		// for getComputedStyle silently falls back to the reliable elem.style
		valueIsBorderBox = isBorderBox && ( support.boxSizingReliable() || val === elem.style[ name ] );

		// Normalize "", auto, and prepare for extra
		val = parseFloat( val ) || 0;
	}

	// use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles
		)
	) + "px";
}

jQuery.extend({
	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {
					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		// normalize float css property
		"float": support.cssFloat ? "cssFloat" : "styleFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {
		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			style = elem.style;

		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// convert relative number strings (+= or -=) to relative numbers. #7345
			if ( type === "string" && (ret = rrelNum.exec( value )) ) {
				value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );
				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set. See: #7116
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add 'px' to the (except for certain CSS properties)
			if ( type === "number" && !jQuery.cssNumber[ origName ] ) {
				value += "px";
			}

			// Fixes #8908, it can be done more correctly by specifing setters in cssHooks,
			// but it would mean to define eight (for every problematic property) identical functions
			if ( !support.clearCloneStyle && value === "" && name.indexOf("background") === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {

				// Support: IE
				// Swallow errors from 'invalid' CSS values (#5509)
				try {
					style[ name ] = value;
				} catch(e) {}
			}

		} else {
			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {
				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var num, val, hooks,
			origName = jQuery.camelCase( name );

		// Make sure that we're working with the right name
		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		//convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Return, converting to number if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || jQuery.isNumeric( num ) ? num || 0 : val;
		}
		return val;
	}
});

jQuery.each([ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {
				// certain elements can have dimension info if we invisibly show them
				// however, it must have a current display style that would benefit from this
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) && elem.offsetWidth === 0 ?
					jQuery.swap( elem, cssShow, function() {
						return getWidthOrHeight( elem, name, extra );
					}) :
					getWidthOrHeight( elem, name, extra );
			}
		},

		set: function( elem, value, extra ) {
			var styles = extra && getStyles( elem );
			return setPositiveNumber( elem, value, extra ?
				augmentWidthOrHeight(
					elem,
					name,
					extra,
					support.boxSizing && jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
					styles
				) : 0
			);
		}
	};
});

if ( !support.opacity ) {
	jQuery.cssHooks.opacity = {
		get: function( elem, computed ) {
			// IE uses filters for opacity
			return ropacity.test( (computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || "" ) ?
				( 0.01 * parseFloat( RegExp.$1 ) ) + "" :
				computed ? "1" : "";
		},

		set: function( elem, value ) {
			var style = elem.style,
				currentStyle = elem.currentStyle,
				opacity = jQuery.isNumeric( value ) ? "alpha(opacity=" + value * 100 + ")" : "",
				filter = currentStyle && currentStyle.filter || style.filter || "";

			// IE has trouble with opacity if it does not have layout
			// Force it by setting the zoom level
			style.zoom = 1;

			// if setting opacity to 1, and no other filters exist - attempt to remove filter attribute #6652
			// if value === "", then remove inline opacity #12685
			if ( ( value >= 1 || value === "" ) &&
					jQuery.trim( filter.replace( ralpha, "" ) ) === "" &&
					style.removeAttribute ) {

				// Setting style.filter to null, "" & " " still leave "filter:" in the cssText
				// if "filter:" is present at all, clearType is disabled, we want to avoid this
				// style.removeAttribute is IE Only, but so apparently is this code path...
				style.removeAttribute( "filter" );

				// if there is no filter style applied in a css rule or unset inline opacity, we are done
				if ( value === "" || currentStyle && !currentStyle.filter ) {
					return;
				}
			}

			// otherwise, set new filter values
			style.filter = ralpha.test( filter ) ?
				filter.replace( ralpha, opacity ) :
				filter + " " + opacity;
		}
	};
}

jQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,
	function( elem, computed ) {
		if ( computed ) {
			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
			// Work around by temporarily setting element display to inline-block
			return jQuery.swap( elem, { "display": "inline-block" },
				curCSS, [ elem, "marginRight" ] );
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each({
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// assumes a single number if not a string
				parts = typeof value === "string" ? value.split(" ") : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
});

jQuery.fn.extend({
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( jQuery.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	},
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each(function() {
			if ( isHidden( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		});
	}
});


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || "swing";
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			if ( tween.elem[ tween.prop ] != null &&
				(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {
				return tween.elem[ tween.prop ];
			}

			// passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails
			// so, simple values such as "10px" are parsed to Float.
			// complex values such as "rotate(1rad)" are returned as is.
			result = jQuery.css( tween.elem, tween.prop, "" );
			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {
			// use step hook for back compat - use cssHook if its there - use .style if its
			// available and use plain properties where available
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9
// Panic based approach to setting things on disconnected nodes

Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	}
};

jQuery.fx = Tween.prototype.init;

// Back Compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, timerId,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rfxnum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" ),
	rrun = /queueHooks$/,
	animationPrefilters = [ defaultPrefilter ],
	tweeners = {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value ),
				target = tween.cur(),
				parts = rfxnum.exec( value ),
				unit = parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

				// Starting value computation is required for potential unit mismatches
				start = ( jQuery.cssNumber[ prop ] || unit !== "px" && +target ) &&
					rfxnum.exec( jQuery.css( tween.elem, prop ) ),
				scale = 1,
				maxIterations = 20;

			if ( start && start[ 3 ] !== unit ) {
				// Trust units reported by jQuery.css
				unit = unit || start[ 3 ];

				// Make sure we update the tween properties later on
				parts = parts || [];

				// Iteratively approximate from a nonzero starting point
				start = +target || 1;

				do {
					// If previous iteration zeroed out, double until we get *something*
					// Use a string for doubling factor so we don't accidentally see scale as unchanged below
					scale = scale || ".5";

					// Adjust and apply
					start = start / scale;
					jQuery.style( tween.elem, prop, start + unit );

				// Update scale, tolerating zero or NaN from tween.cur()
				// And breaking the loop if scale is unchanged or perfect, or if we've just had enough
				} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );
			}

			// Update tween properties
			if ( parts ) {
				start = tween.start = +start || +target || 0;
				tween.unit = unit;
				// If a +=/-= token was provided, we're doing a relative animation
				tween.end = parts[ 1 ] ?
					start + ( parts[ 1 ] + 1 ) * parts[ 2 ] :
					+parts[ 2 ];
			}

			return tween;
		} ]
	};

// Animations created synchronously will run synchronously
function createFxNow() {
	setTimeout(function() {
		fxNow = undefined;
	});
	return ( fxNow = jQuery.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		attrs = { height: type },
		i = 0;

	// if we include width, step value is 1 to do all cssExpand values,
	// if we don't include width, step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4 ; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( tweeners[ prop ] || [] ).concat( tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( (tween = collection[ index ].call( animation, prop, value )) ) {

			// we're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	/* jshint validthis: true */
	var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHidden( elem ),
		dataShow = jQuery._data( elem, "fxshow" );

	// handle queue: false promises
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always(function() {
			// doing this makes sure that the complete handler will be called
			// before this completes
			anim.always(function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			});
		});
	}

	// height/width overflow pass
	if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {
		// Make sure that nothing sneaks out
		// Record all 3 overflow attributes because IE does not
		// change the overflow attribute when overflowX and
		// overflowY are set to the same value
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Set display property to inline-block for height/width
		// animations on inline elements that are having width/height animated
		display = jQuery.css( elem, "display" );

		// Test default display if display is currently "none"
		checkDisplay = display === "none" ?
			jQuery._data( elem, "olddisplay" ) || defaultDisplay( elem.nodeName ) : display;

		if ( checkDisplay === "inline" && jQuery.css( elem, "float" ) === "none" ) {

			// inline-level elements accept inline-block;
			// block-level elements need to be inline with layout
			if ( !support.inlineBlockNeedsLayout || defaultDisplay( elem.nodeName ) === "inline" ) {
				style.display = "inline-block";
			} else {
				style.zoom = 1;
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		if ( !support.shrinkWrapBlocks() ) {
			anim.always(function() {
				style.overflow = opts.overflow[ 0 ];
				style.overflowX = opts.overflow[ 1 ];
				style.overflowY = opts.overflow[ 2 ];
			});
		}
	}

	// show/hide pass
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.exec( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );

		// Any non-fx value stops us from restoring the original display value
		} else {
			display = undefined;
		}
	}

	if ( !jQuery.isEmptyObject( orig ) ) {
		if ( dataShow ) {
			if ( "hidden" in dataShow ) {
				hidden = dataShow.hidden;
			}
		} else {
			dataShow = jQuery._data( elem, "fxshow", {} );
		}

		// store state if its toggle - enables .stop().toggle() to "reverse"
		if ( toggle ) {
			dataShow.hidden = !hidden;
		}
		if ( hidden ) {
			jQuery( elem ).show();
		} else {
			anim.done(function() {
				jQuery( elem ).hide();
			});
		}
		anim.done(function() {
			var prop;
			jQuery._removeData( elem, "fxshow" );
			for ( prop in orig ) {
				jQuery.style( elem, prop, orig[ prop ] );
			}
		});
		for ( prop in orig ) {
			tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );

			if ( !( prop in dataShow ) ) {
				dataShow[ prop ] = tween.start;
				if ( hidden ) {
					tween.end = tween.start;
					tween.start = prop === "width" || prop === "height" ? 1 : 0;
				}
			}
		}

	// If this is a noop like .hide().hide(), restore an overwritten display value
	} else if ( (display === "none" ? defaultDisplay( elem.nodeName ) : display) === "inline" ) {
		style.display = display;
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( jQuery.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// not quite $.extend, this wont overwrite keys already present.
			// also - reusing 'index' from above because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = animationPrefilters.length,
		deferred = jQuery.Deferred().always( function() {
			// don't match elem in the :animated selector
			delete tick.elem;
		}),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),
				// archaic crash bug won't allow us to use 1 - ( 0.5 || 0 ) (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length ; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ]);

			if ( percent < 1 && length ) {
				return remaining;
			} else {
				deferred.resolveWith( elem, [ animation ] );
				return false;
			}
		},
		animation = deferred.promise({
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, { specialEasing: {} }, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,
					// if we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length ; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// resolve when we played the last frame
				// otherwise, reject
				if ( gotoEnd ) {
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		}),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length ; index++ ) {
		result = animationPrefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		})
	);

	// attach callbacks from options
	return animation.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );
}

jQuery.Animation = jQuery.extend( Animation, {
	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.split(" ");
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length ; index++ ) {
			prop = props[ index ];
			tweeners[ prop ] = tweeners[ prop ] || [];
			tweeners[ prop ].unshift( callback );
		}
	},

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			animationPrefilters.unshift( callback );
		} else {
			animationPrefilters.push( callback );
		}
	}
});

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
		opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

	// normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend({
	fadeTo: function( speed, to, easing, callback ) {

		// show any hidden elements after setting opacity to 0
		return this.filter( isHidden ).css( "opacity", 0 ).show()

			// animate to the value specified
			.end().animate({ opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {
				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || jQuery._data( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each(function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = jQuery._data( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {
					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// start the next in the queue if the last step wasn't forced
			// timers currently will call their complete callbacks, which will dequeue
			// but only if they were gotoEnd
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		});
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each(function() {
			var index,
				data = jQuery._data( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// enable finishing flag on private data
			data.finish = true;

			// empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// turn off finishing flag
			delete data.finish;
		});
	}
});

jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
});

// Generate shortcuts for custom animations
jQuery.each({
	slideDown: genFx("show"),
	slideUp: genFx("hide"),
	slideToggle: genFx("toggle"),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
});

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		timers = jQuery.timers,
		i = 0;

	fxNow = jQuery.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];
		// Checks the timer has not already been removed
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	if ( timer() ) {
		jQuery.fx.start();
	} else {
		jQuery.timers.pop();
	}
};

jQuery.fx.interval = 13;

jQuery.fx.start = function() {
	if ( !timerId ) {
		timerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );
	}
};

jQuery.fx.stop = function() {
	clearInterval( timerId );
	timerId = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,
	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = setTimeout( next, time );
		hooks.stop = function() {
			clearTimeout( timeout );
		};
	});
};


(function() {
	// Minified: var a,b,c,d,e
	var input, div, select, a, opt;

	// Setup
	div = document.createElement( "div" );
	div.setAttribute( "className", "t" );
	div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";
	a = div.getElementsByTagName("a")[ 0 ];

	// First batch of tests.
	select = document.createElement("select");
	opt = select.appendChild( document.createElement("option") );
	input = div.getElementsByTagName("input")[ 0 ];

	a.style.cssText = "top:1px";

	// Test setAttribute on camelCase class. If it works, we need attrFixes when doing get/setAttribute (ie6/7)
	support.getSetAttribute = div.className !== "t";

	// Get the style information from getAttribute
	// (IE uses .cssText instead)
	support.style = /top/.test( a.getAttribute("style") );

	// Make sure that URLs aren't manipulated
	// (IE normalizes it by default)
	support.hrefNormalized = a.getAttribute("href") === "/a";

	// Check the default checkbox/radio value ("" on WebKit; "on" elsewhere)
	support.checkOn = !!input.value;

	// Make sure that a selected-by-default option has a working selected property.
	// (WebKit defaults to false instead of true, IE too, if it's in an optgroup)
	support.optSelected = opt.selected;

	// Tests for enctype support on a form (#6743)
	support.enctype = !!document.createElement("form").enctype;

	// Make sure that the options inside disabled selects aren't marked as disabled
	// (WebKit marks them as disabled)
	select.disabled = true;
	support.optDisabled = !opt.disabled;

	// Support: IE8 only
	// Check if we can trust getAttribute("value")
	input = document.createElement( "input" );
	input.setAttribute( "value", "" );
	support.input = input.getAttribute( "value" ) === "";

	// Check if an input maintains its value after becoming a radio
	input.value = "t";
	input.setAttribute( "type", "radio" );
	support.radioValue = input.value === "t";
})();


var rreturn = /\r/g;

jQuery.fn.extend({
	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[0];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
					return ret;
				}

				ret = elem.value;

				return typeof ret === "string" ?
					// handle most common string cases
					ret.replace(rreturn, "") :
					// handle cases where value is null/undef or number
					ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each(function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";
			} else if ( typeof val === "number" ) {
				val += "";
			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				});
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		});
	}
});

jQuery.extend({
	valHooks: {
		option: {
			get: function( elem ) {
				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :
					// Support: IE10-11+
					// option.text throws exceptions (#14686, #14858)
					jQuery.trim( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one" || index < 0,
					values = one ? null : [],
					max = one ? index + 1 : options.length,
					i = index < 0 ?
						max :
						one ? index : 0;

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// oldIE doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&
							// Don't return options that are disabled or in a disabled optgroup
							( support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null ) &&
							( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					if ( jQuery.inArray( jQuery.valHooks.option.get( option ), values ) >= 0 ) {

						// Support: IE6
						// When new option element is added to select box we need to
						// force reflow of newly added node in order to workaround delay
						// of initialization properties
						try {
							option.selected = optionSet = true;

						} catch ( _ ) {

							// Will be executed only in IE6
							option.scrollHeight;
						}

					} else {
						option.selected = false;
					}
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}

				return options;
			}
		}
	}
});

// Radios and checkboxes getter/setter
jQuery.each([ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			// Support: Webkit
			// "" is returned instead of "on" if a value isn't specified
			return elem.getAttribute("value") === null ? "on" : elem.value;
		};
	}
});




var nodeHook, boolHook,
	attrHandle = jQuery.expr.attrHandle,
	ruseDefault = /^(?:checked|selected)$/i,
	getSetAttribute = support.getSetAttribute,
	getSetInput = support.input;

jQuery.fn.extend({
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each(function() {
			jQuery.removeAttr( this, name );
		});
	}
});

jQuery.extend({
	attr: function( elem, name, value ) {
		var hooks, ret,
			nType = elem.nodeType;

		// don't get/set attributes on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === strundefined ) {
			return jQuery.prop( elem, name, value );
		}

		// All attributes are lowercase
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			name = name.toLowerCase();
			hooks = jQuery.attrHooks[ name ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );
		}

		if ( value !== undefined ) {

			if ( value === null ) {
				jQuery.removeAttr( elem, name );

			} else if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
				return ret;

			} else {
				elem.setAttribute( name, value + "" );
				return value;
			}

		} else if ( hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ) {
			return ret;

		} else {
			ret = jQuery.find.attr( elem, name );

			// Non-existent attributes return null, we normalize to undefined
			return ret == null ?
				undefined :
				ret;
		}
	},

	removeAttr: function( elem, value ) {
		var name, propName,
			i = 0,
			attrNames = value && value.match( rnotwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( (name = attrNames[i++]) ) {
				propName = jQuery.propFix[ name ] || name;

				// Boolean attributes get special treatment (#10870)
				if ( jQuery.expr.match.bool.test( name ) ) {
					// Set corresponding property to false
					if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {
						elem[ propName ] = false;
					// Support: IE<9
					// Also clear defaultChecked/defaultSelected (if appropriate)
					} else {
						elem[ jQuery.camelCase( "default-" + name ) ] =
							elem[ propName ] = false;
					}

				// See #9699 for explanation of this approach (setting first, then removal)
				} else {
					jQuery.attr( elem, name, "" );
				}

				elem.removeAttribute( getSetAttribute ? name : propName );
			}
		}
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" && jQuery.nodeName(elem, "input") ) {
					// Setting the type on a radio button after the value resets the value in IE6-9
					// Reset value to default in case type is set after value during creation
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	}
});

// Hook for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {
			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {
			// IE<8 needs the *property* name
			elem.setAttribute( !getSetAttribute && jQuery.propFix[ name ] || name, name );

		// Use defaultChecked and defaultSelected for oldIE
		} else {
			elem[ jQuery.camelCase( "default-" + name ) ] = elem[ name ] = true;
		}

		return name;
	}
};

// Retrieve booleans specially
jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {

	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = getSetInput && getSetAttribute || !ruseDefault.test( name ) ?
		function( elem, name, isXML ) {
			var ret, handle;
			if ( !isXML ) {
				// Avoid an infinite loop by temporarily removing this function from the getter
				handle = attrHandle[ name ];
				attrHandle[ name ] = ret;
				ret = getter( elem, name, isXML ) != null ?
					name.toLowerCase() :
					null;
				attrHandle[ name ] = handle;
			}
			return ret;
		} :
		function( elem, name, isXML ) {
			if ( !isXML ) {
				return elem[ jQuery.camelCase( "default-" + name ) ] ?
					name.toLowerCase() :
					null;
			}
		};
});

// fix oldIE attroperties
if ( !getSetInput || !getSetAttribute ) {
	jQuery.attrHooks.value = {
		set: function( elem, value, name ) {
			if ( jQuery.nodeName( elem, "input" ) ) {
				// Does not return so that setAttribute is also used
				elem.defaultValue = value;
			} else {
				// Use nodeHook if defined (#1954); otherwise setAttribute is fine
				return nodeHook && nodeHook.set( elem, value, name );
			}
		}
	};
}

// IE6/7 do not support getting/setting some attributes with get/setAttribute
if ( !getSetAttribute ) {

	// Use this for any attribute in IE6/7
	// This fixes almost every IE6/7 issue
	nodeHook = {
		set: function( elem, value, name ) {
			// Set the existing or create a new attribute node
			var ret = elem.getAttributeNode( name );
			if ( !ret ) {
				elem.setAttributeNode(
					(ret = elem.ownerDocument.createAttribute( name ))
				);
			}

			ret.value = value += "";

			// Break association with cloned elements by also using setAttribute (#9646)
			if ( name === "value" || value === elem.getAttribute( name ) ) {
				return value;
			}
		}
	};

	// Some attributes are constructed with empty-string values when not defined
	attrHandle.id = attrHandle.name = attrHandle.coords =
		function( elem, name, isXML ) {
			var ret;
			if ( !isXML ) {
				return (ret = elem.getAttributeNode( name )) && ret.value !== "" ?
					ret.value :
					null;
			}
		};

	// Fixing value retrieval on a button requires this module
	jQuery.valHooks.button = {
		get: function( elem, name ) {
			var ret = elem.getAttributeNode( name );
			if ( ret && ret.specified ) {
				return ret.value;
			}
		},
		set: nodeHook.set
	};

	// Set contenteditable to false on removals(#10429)
	// Setting to empty string throws an error as an invalid value
	jQuery.attrHooks.contenteditable = {
		set: function( elem, value, name ) {
			nodeHook.set( elem, value === "" ? false : value, name );
		}
	};

	// Set width and height to auto instead of 0 on empty string( Bug #8150 )
	// This is for removals
	jQuery.each([ "width", "height" ], function( i, name ) {
		jQuery.attrHooks[ name ] = {
			set: function( elem, value ) {
				if ( value === "" ) {
					elem.setAttribute( name, "auto" );
					return value;
				}
			}
		};
	});
}

if ( !support.style ) {
	jQuery.attrHooks.style = {
		get: function( elem ) {
			// Return undefined in the case of empty string
			// Note: IE uppercases css property names, but if we were to .toLowerCase()
			// .cssText, that would destroy case senstitivity in URL's, like in "background"
			return elem.style.cssText || undefined;
		},
		set: function( elem, value ) {
			return ( elem.style.cssText = value + "" );
		}
	};
}




var rfocusable = /^(?:input|select|textarea|button|object)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend({
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		name = jQuery.propFix[ name ] || name;
		return this.each(function() {
			// try/catch handles cases where IE balks (such as removing a property on window)
			try {
				this[ name ] = undefined;
				delete this[ name ];
			} catch( e ) {}
		});
	}
});

jQuery.extend({
	propFix: {
		"for": "htmlFor",
		"class": "className"
	},

	prop: function( elem, name, value ) {
		var ret, hooks, notxml,
			nType = elem.nodeType;

		// don't get/set properties on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

		if ( notxml ) {
			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			return hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?
				ret :
				( elem[ name ] = value );

		} else {
			return hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ?
				ret :
				elem[ name ];
		}
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {
				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set
				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				return tabindex ?
					parseInt( tabindex, 10 ) :
					rfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) && elem.href ?
						0 :
						-1;
			}
		}
	}
});

// Some attributes require a special call on IE
// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !support.hrefNormalized ) {
	// href/src property should get the full normalized URL (#10299/#12915)
	jQuery.each([ "href", "src" ], function( i, name ) {
		jQuery.propHooks[ name ] = {
			get: function( elem ) {
				return elem.getAttribute( name, 4 );
			}
		};
	});
}

// Support: Safari, IE9+
// mis-reports the default selected property of an option
// Accessing the parent's selectedIndex property fixes it
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {
			var parent = elem.parentNode;

			if ( parent ) {
				parent.selectedIndex;

				// Make sure that it also works with optgroups, see #5701
				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
			return null;
		}
	};
}

jQuery.each([
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
});

// IE6/7 call enctype encoding
if ( !support.enctype ) {
	jQuery.propFix.enctype = "encoding";
}




var rclass = /[\t\r\n\f]/g;

jQuery.fn.extend({
	addClass: function( value ) {
		var classes, elem, cur, clazz, j, finalValue,
			i = 0,
			len = this.length,
			proceed = typeof value === "string" && value;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).addClass( value.call( this, j, this.className ) );
			});
		}

		if ( proceed ) {
			// The disjunction here is for better compressibility (see removeClass)
			classes = ( value || "" ).match( rnotwhite ) || [];

			for ( ; i < len; i++ ) {
				elem = this[ i ];
				cur = elem.nodeType === 1 && ( elem.className ?
					( " " + elem.className + " " ).replace( rclass, " " ) :
					" "
				);

				if ( cur ) {
					j = 0;
					while ( (clazz = classes[j++]) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// only assign if different to avoid unneeded rendering.
					finalValue = jQuery.trim( cur );
					if ( elem.className !== finalValue ) {
						elem.className = finalValue;
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, clazz, j, finalValue,
			i = 0,
			len = this.length,
			proceed = arguments.length === 0 || typeof value === "string" && value;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).removeClass( value.call( this, j, this.className ) );
			});
		}
		if ( proceed ) {
			classes = ( value || "" ).match( rnotwhite ) || [];

			for ( ; i < len; i++ ) {
				elem = this[ i ];
				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( elem.className ?
					( " " + elem.className + " " ).replace( rclass, " " ) :
					""
				);

				if ( cur ) {
					j = 0;
					while ( (clazz = classes[j++]) ) {
						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) >= 0 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// only assign if different to avoid unneeded rendering.
					finalValue = value ? jQuery.trim( cur ) : "";
					if ( elem.className !== finalValue ) {
						elem.className = finalValue;
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value;

		if ( typeof stateVal === "boolean" && type === "string" ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( i ) {
				jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );
			});
		}

		return this.each(function() {
			if ( type === "string" ) {
				// toggle individual class names
				var className,
					i = 0,
					self = jQuery( this ),
					classNames = value.match( rnotwhite ) || [];

				while ( (className = classNames[ i++ ]) ) {
					// check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( type === strundefined || type === "boolean" ) {
				if ( this.className ) {
					// store className if set
					jQuery._data( this, "__className__", this.className );
				}

				// If the element has a class name or if we're passed "false",
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				this.className = this.className || value === false ? "" : jQuery._data( this, "__className__" ) || "";
			}
		});
	},

	hasClass: function( selector ) {
		var className = " " + selector + " ",
			i = 0,
			l = this.length;
		for ( ; i < l; i++ ) {
			if ( this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) >= 0 ) {
				return true;
			}
		}

		return false;
	}
});




// Return jQuery for attributes-only inclusion


jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
});

jQuery.fn.extend({
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	},

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {
		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ? this.off( selector, "**" ) : this.off( types, selector || "**", fn );
	}
});


var nonce = jQuery.now();

var rquery = (/\?/);



var rvalidtokens = /(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;

jQuery.parseJSON = function( data ) {
	// Attempt to parse using the native JSON parser first
	if ( window.JSON && window.JSON.parse ) {
		// Support: Android 2.3
		// Workaround failure to string-cast null input
		return window.JSON.parse( data + "" );
	}

	var requireNonComma,
		depth = null,
		str = jQuery.trim( data + "" );

	// Guard against invalid (and possibly dangerous) input by ensuring that nothing remains
	// after removing valid tokens
	return str && !jQuery.trim( str.replace( rvalidtokens, function( token, comma, open, close ) {

		// Force termination if we see a misplaced comma
		if ( requireNonComma && comma ) {
			depth = 0;
		}

		// Perform no more replacements after returning to outermost depth
		if ( depth === 0 ) {
			return token;
		}

		// Commas must not follow "[", "{", or ","
		requireNonComma = open || comma;

		// Determine new depth
		// array/object open ("[" or "{"): depth += true - false (increment)
		// array/object close ("]" or "}"): depth += false - true (decrement)
		// other cases ("," or primitive): depth += true - true (numeric cast)
		depth += !close - !open;

		// Remove this token
		return "";
	}) ) ?
		( Function( "return " + str ) )() :
		jQuery.error( "Invalid JSON: " + data );
};


// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml, tmp;
	if ( !data || typeof data !== "string" ) {
		return null;
	}
	try {
		if ( window.DOMParser ) { // Standard
			tmp = new DOMParser();
			xml = tmp.parseFromString( data, "text/xml" );
		} else { // IE
			xml = new ActiveXObject( "Microsoft.XMLDOM" );
			xml.async = "false";
			xml.loadXML( data );
		}
	} catch( e ) {
		xml = undefined;
	}
	if ( !xml || !xml.documentElement || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	// Document location
	ajaxLocParts,
	ajaxLocation,

	rhash = /#.*$/,
	rts = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, // IE leaves an \r character at EOL
	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,
	rurl = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat("*");

// #8138, IE may throw an exception when accessing
// a field from window.location if document.domain has been set
try {
	ajaxLocation = location.href;
} catch( e ) {
	// Use the href attribute of an A element
	// since IE will modify it given document.location
	ajaxLocation = document.createElement( "a" );
	ajaxLocation.href = "";
	ajaxLocation = ajaxLocation.href;
}

// Segment location into parts
ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];

		if ( jQuery.isFunction( func ) ) {
			// For each dataType in the dataTypeExpression
			while ( (dataType = dataTypes[i++]) ) {
				// Prepend if requested
				if ( dataType.charAt( 0 ) === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					(structure[ dataType ] = structure[ dataType ] || []).unshift( func );

				// Otherwise append
				} else {
					(structure[ dataType ] = structure[ dataType ] || []).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {
				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		});
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var deep, key,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {
	var firstDataType, ct, finalDataType, type,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {
		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}
		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},
		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {
								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s[ "throws" ] ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return { state: "parsererror", error: conv ? e : "No conversion from " + prev + " to " + current };
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend({

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: ajaxLocation,
		type: "GET",
		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",
		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /xml/,
			html: /html/,
			json: /json/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": jQuery.parseJSON,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var // Cross-domain detection vars
			parts,
			// Loop variable
			i,
			// URL without anti-cache param
			cacheURL,
			// Response headers as string
			responseHeadersString,
			// timeout handle
			timeoutTimer,

			// To know if global events are to be dispatched
			fireGlobals,

			transport,
			// Response headers
			responseHeaders,
			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),
			// Callbacks context
			callbackContext = s.context || s,
			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?
				jQuery( callbackContext ) :
				jQuery.event,
			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks("once memory"),
			// Status-dependent callbacks
			statusCode = s.statusCode || {},
			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},
			// The jqXHR state
			state = 0,
			// Default abort message
			strAbort = "canceled",
			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( state === 2 ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( (match = rheaders.exec( responseHeadersString )) ) {
								responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return state === 2 ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					var lname = name.toLowerCase();
					if ( !state ) {
						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( !state ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( state < 2 ) {
							for ( code in map ) {
								// Lazy-add the new callback in a way that preserves old ones
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						} else {
							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR ).complete = completeDeferred.add;
		jqXHR.success = jqXHR.done;
		jqXHR.error = jqXHR.fail;

		// Remove hash character (#7531: and string promotion)
		// Add protocol if not provided (#5866: IE7 issue with protocol-less urls)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || ajaxLocation ) + "" ).replace( rhash, "" ).replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( rnotwhite ) || [ "" ];

		// A cross-domain request is in order when we have a protocol:host:port mismatch
		if ( s.crossDomain == null ) {
			parts = rurl.exec( s.url.toLowerCase() );
			s.crossDomain = !!( parts &&
				( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||
					( parts[ 3 ] || ( parts[ 1 ] === "http:" ? "80" : "443" ) ) !==
						( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? "80" : "443" ) ) )
			);
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( state === 2 ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger("ajaxStart");
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		cacheURL = s.url;

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// If data is available, append data to url
			if ( s.data ) {
				cacheURL = ( s.url += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data );
				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add anti-cache in url if needed
			if ( s.cache === false ) {
				s.url = rts.test( cacheURL ) ?

					// If there is already a '_' parameter, set its value
					cacheURL.replace( rts, "$1_=" + nonce++ ) :

					// Otherwise add one to the end
					cacheURL + ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + nonce++;
			}
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?
				s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {
			// Abort if not done already and return
			return jqXHR.abort();
		}

		// aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		for ( i in { success: 1, error: 1, complete: 1 } ) {
			jqXHR[ i ]( s[ i ] );
		}

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}
			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = setTimeout(function() {
					jqXHR.abort("timeout");
				}, s.timeout );
			}

			try {
				state = 1;
				transport.send( requestHeaders, done );
			} catch ( e ) {
				// Propagate exception as error if not done
				if ( state < 2 ) {
					done( -1, e );
				// Simply rethrow otherwise
				} else {
					throw e;
				}
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Called once
			if ( state === 2 ) {
				return;
			}

			// State is "done" now
			state = 2;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader("Last-Modified");
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader("etag");
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {
				// We extract error from statusText
				// then normalize statusText and status for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );
				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger("ajaxStop");
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
});

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {
		// shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		return jQuery.ajax({
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		});
	};
});


jQuery._evalUrl = function( url ) {
	return jQuery.ajax({
		url: url,
		type: "GET",
		dataType: "script",
		async: false,
		global: false,
		"throws": true
	});
};


jQuery.fn.extend({
	wrapAll: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapAll( html.call(this, i) );
			});
		}

		if ( this[0] ) {
			// The elements to wrap the target around
			var wrap = jQuery( html, this[0].ownerDocument ).eq(0).clone(true);

			if ( this[0].parentNode ) {
				wrap.insertBefore( this[0] );
			}

			wrap.map(function() {
				var elem = this;

				while ( elem.firstChild && elem.firstChild.nodeType === 1 ) {
					elem = elem.firstChild;
				}

				return elem;
			}).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapInner( html.call(this, i) );
			});
		}

		return this.each(function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		});
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each(function(i) {
			jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );
		});
	},

	unwrap: function() {
		return this.parent().each(function() {
			if ( !jQuery.nodeName( this, "body" ) ) {
				jQuery( this ).replaceWith( this.childNodes );
			}
		}).end();
	}
});


jQuery.expr.filters.hidden = function( elem ) {
	// Support: Opera <= 12.12
	// Opera reports offsetWidths and offsetHeights less than zero on some elements
	return elem.offsetWidth <= 0 && elem.offsetHeight <= 0 ||
		(!support.reliableHiddenOffsets() &&
			((elem.style && elem.style.display) || jQuery.css( elem, "display" )) === "none");
};

jQuery.expr.filters.visible = function( elem ) {
	return !jQuery.expr.filters.hidden( elem );
};




var r20 = /%20/g,
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( jQuery.isArray( obj ) ) {
		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {
				// Treat each array item as a scalar.
				add( prefix, v );

			} else {
				// Item is non-scalar (array or object), encode its numeric index.
				buildParams( prefix + "[" + ( typeof v === "object" ? i : "" ) + "]", v, traditional, add );
			}
		});

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {
		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {
		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, value ) {
			// If value is a function, invoke it and return its value
			value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
			s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
		};

	// Set traditional to true for jQuery <= 1.3.2 behavior.
	if ( traditional === undefined ) {
		traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		});

	} else {
		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" ).replace( r20, "+" );
};

jQuery.fn.extend({
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map(function() {
			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		})
		.filter(function() {
			var type = this.type;
			// Use .is(":disabled") so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		})
		.map(function( i, elem ) {
			var val = jQuery( this ).val();

			return val == null ?
				null :
				jQuery.isArray( val ) ?
					jQuery.map( val, function( val ) {
						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
					}) :
					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		}).get();
	}
});


// Create the request object
// (This is still attached to ajaxSettings for backward compatibility)
jQuery.ajaxSettings.xhr = window.ActiveXObject !== undefined ?
	// Support: IE6+
	function() {

		// XHR cannot access local files, always use ActiveX for that case
		return !this.isLocal &&

			// Support: IE7-8
			// oldIE XHR does not support non-RFC2616 methods (#13240)
			// See http://msdn.microsoft.com/en-us/library/ie/ms536648(v=vs.85).aspx
			// and http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9
			// Although this check for six methods instead of eight
			// since IE also does not support "trace" and "connect"
			/^(get|post|head|put|delete|options)$/i.test( this.type ) &&

			createStandardXHR() || createActiveXHR();
	} :
	// For all other browsers, use the standard XMLHttpRequest object
	createStandardXHR;

var xhrId = 0,
	xhrCallbacks = {},
	xhrSupported = jQuery.ajaxSettings.xhr();

// Support: IE<10
// Open requests must be manually aborted on unload (#5280)
// See https://support.microsoft.com/kb/2856746 for more info
if ( window.attachEvent ) {
	window.attachEvent( "onunload", function() {
		for ( var key in xhrCallbacks ) {
			xhrCallbacks[ key ]( undefined, true );
		}
	});
}

// Determine support properties
support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
xhrSupported = support.ajax = !!xhrSupported;

// Create transport if the browser can provide an xhr
if ( xhrSupported ) {

	jQuery.ajaxTransport(function( options ) {
		// Cross domain only allowed if supported through XMLHttpRequest
		if ( !options.crossDomain || support.cors ) {

			var callback;

			return {
				send: function( headers, complete ) {
					var i,
						xhr = options.xhr(),
						id = ++xhrId;

					// Open the socket
					xhr.open( options.type, options.url, options.async, options.username, options.password );

					// Apply custom fields if provided
					if ( options.xhrFields ) {
						for ( i in options.xhrFields ) {
							xhr[ i ] = options.xhrFields[ i ];
						}
					}

					// Override mime type if needed
					if ( options.mimeType && xhr.overrideMimeType ) {
						xhr.overrideMimeType( options.mimeType );
					}

					// X-Requested-With header
					// For cross-domain requests, seeing as conditions for a preflight are
					// akin to a jigsaw puzzle, we simply never set it to be sure.
					// (it can always be set on a per-request basis or even using ajaxSetup)
					// For same-domain requests, won't change header if already provided.
					if ( !options.crossDomain && !headers["X-Requested-With"] ) {
						headers["X-Requested-With"] = "XMLHttpRequest";
					}

					// Set headers
					for ( i in headers ) {
						// Support: IE<9
						// IE's ActiveXObject throws a 'Type Mismatch' exception when setting
						// request header to a null-value.
						//
						// To keep consistent with other XHR implementations, cast the value
						// to string and ignore `undefined`.
						if ( headers[ i ] !== undefined ) {
							xhr.setRequestHeader( i, headers[ i ] + "" );
						}
					}

					// Do send the request
					// This may raise an exception which is actually
					// handled in jQuery.ajax (so no try/catch here)
					xhr.send( ( options.hasContent && options.data ) || null );

					// Listener
					callback = function( _, isAbort ) {
						var status, statusText, responses;

						// Was never called and is aborted or complete
						if ( callback && ( isAbort || xhr.readyState === 4 ) ) {
							// Clean up
							delete xhrCallbacks[ id ];
							callback = undefined;
							xhr.onreadystatechange = jQuery.noop;

							// Abort manually if needed
							if ( isAbort ) {
								if ( xhr.readyState !== 4 ) {
									xhr.abort();
								}
							} else {
								responses = {};
								status = xhr.status;

								// Support: IE<10
								// Accessing binary-data responseText throws an exception
								// (#11426)
								if ( typeof xhr.responseText === "string" ) {
									responses.text = xhr.responseText;
								}

								// Firefox throws an exception when accessing
								// statusText for faulty cross-domain requests
								try {
									statusText = xhr.statusText;
								} catch( e ) {
									// We normalize with Webkit giving an empty statusText
									statusText = "";
								}

								// Filter status for non standard behaviors

								// If the request is local and we have data: assume a success
								// (success with no data won't get notified, that's the best we
								// can do given current implementations)
								if ( !status && options.isLocal && !options.crossDomain ) {
									status = responses.text ? 200 : 404;
								// IE - #1450: sometimes returns 1223 when it should be 204
								} else if ( status === 1223 ) {
									status = 204;
								}
							}
						}

						// Call complete if needed
						if ( responses ) {
							complete( status, statusText, responses, xhr.getAllResponseHeaders() );
						}
					};

					if ( !options.async ) {
						// if we're in sync mode we fire the callback
						callback();
					} else if ( xhr.readyState === 4 ) {
						// (IE6 & IE7) if it's in cache and has been
						// retrieved directly we need to fire the callback
						setTimeout( callback );
					} else {
						// Add to the list of active xhr callbacks
						xhr.onreadystatechange = xhrCallbacks[ id ] = callback;
					}
				},

				abort: function() {
					if ( callback ) {
						callback( undefined, true );
					}
				}
			};
		}
	});
}

// Functions to create xhrs
function createStandardXHR() {
	try {
		return new window.XMLHttpRequest();
	} catch( e ) {}
}

function createActiveXHR() {
	try {
		return new window.ActiveXObject( "Microsoft.XMLHTTP" );
	} catch( e ) {}
}




// Install script dataType
jQuery.ajaxSetup({
	accepts: {
		script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /(?:java|ecma)script/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
});

// Handle cache's special case and global
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
		s.global = false;
	}
});

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function(s) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {

		var script,
			head = document.head || jQuery("head")[0] || document.documentElement;

		return {

			send: function( _, callback ) {

				script = document.createElement("script");

				script.async = true;

				if ( s.scriptCharset ) {
					script.charset = s.scriptCharset;
				}

				script.src = s.url;

				// Attach handlers for all browsers
				script.onload = script.onreadystatechange = function( _, isAbort ) {

					if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {

						// Handle memory leak in IE
						script.onload = script.onreadystatechange = null;

						// Remove the script
						if ( script.parentNode ) {
							script.parentNode.removeChild( script );
						}

						// Dereference the script
						script = null;

						// Callback if not abort
						if ( !isAbort ) {
							callback( 200, "success" );
						}
					}
				};

				// Circumvent IE6 bugs with base elements (#2709 and #4378) by prepending
				// Use native DOM manipulation to avoid our domManip AJAX trickery
				head.insertBefore( script, head.firstChild );
			},

			abort: function() {
				if ( script ) {
					script.onload( undefined, true );
				}
			}
		};
	}
});




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup({
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
});

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" && !( s.contentType || "" ).indexOf("application/x-www-form-urlencoded") && rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters["script json"] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always(function() {
			// Restore preexisting value
			window[ callbackName ] = overwritten;

			// Save back as free
			if ( s[ callbackName ] ) {
				// make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		});

		// Delegate to script
		return "script";
	}
});




// data: string of html
// context (optional): If specified, the fragment will be created in this context, defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( !data || typeof data !== "string" ) {
		return null;
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}
	context = context || document;

	var parsed = rsingleTag.exec( data ),
		scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[1] ) ];
	}

	parsed = jQuery.buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


// Keep a copy of the old load method
var _load = jQuery.fn.load;

/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	if ( typeof url !== "string" && _load ) {
		return _load.apply( this, arguments );
	}

	var selector, response, type,
		self = this,
		off = url.indexOf(" ");

	if ( off >= 0 ) {
		selector = jQuery.trim( url.slice( off, url.length ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax({
			url: url,

			// if "type" variable is undefined, then "GET" method will be used
			type: type,
			dataType: "html",
			data: params
		}).done(function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery("<div>").append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		}).complete( callback && function( jqXHR, status ) {
			self.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );
		});
	}

	return this;
};




// Attach a bunch of functions for handling common AJAX events
jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
});




jQuery.expr.filters.animated = function( elem ) {
	return jQuery.grep(jQuery.timers, function( fn ) {
		return elem === fn.elem;
	}).length;
};





var docElem = window.document.documentElement;

/**
 * Gets a window from an element
 */
function getWindow( elem ) {
	return jQuery.isWindow( elem ) ?
		elem :
		elem.nodeType === 9 ?
			elem.defaultView || elem.parentWindow :
			false;
}

jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			jQuery.inArray("auto", [ curCSSTop, curCSSLeft ] ) > -1;

		// need to be able to calculate position if either top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;
		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {
			options = options.call( elem, i, curOffset );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );
		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend({
	offset: function( options ) {
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each(function( i ) {
					jQuery.offset.setOffset( this, options, i );
				});
		}

		var docElem, win,
			box = { top: 0, left: 0 },
			elem = this[ 0 ],
			doc = elem && elem.ownerDocument;

		if ( !doc ) {
			return;
		}

		docElem = doc.documentElement;

		// Make sure it's not a disconnected DOM node
		if ( !jQuery.contains( docElem, elem ) ) {
			return box;
		}

		// If we don't have gBCR, just use 0,0 rather than error
		// BlackBerry 5, iOS 3 (original iPhone)
		if ( typeof elem.getBoundingClientRect !== strundefined ) {
			box = elem.getBoundingClientRect();
		}
		win = getWindow( doc );
		return {
			top: box.top  + ( win.pageYOffset || docElem.scrollTop )  - ( docElem.clientTop  || 0 ),
			left: box.left + ( win.pageXOffset || docElem.scrollLeft ) - ( docElem.clientLeft || 0 )
		};
	},

	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset,
			parentOffset = { top: 0, left: 0 },
			elem = this[ 0 ];

		// fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is its only offset parent
		if ( jQuery.css( elem, "position" ) === "fixed" ) {
			// we assume that getBoundingClientRect is available when computed position is fixed
			offset = elem.getBoundingClientRect();
		} else {
			// Get *real* offsetParent
			offsetParent = this.offsetParent();

			// Get correct offsets
			offset = this.offset();
			if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
				parentOffset = offsetParent.offset();
			}

			// Add offsetParent borders
			parentOffset.top  += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );
			parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );
		}

		// Subtract parent offsets and element margins
		// note: when an element has margin: auto the offsetLeft and marginLeft
		// are the same in Safari causing offset.left to incorrectly be 0
		return {
			top:  offset.top  - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true)
		};
	},

	offsetParent: function() {
		return this.map(function() {
			var offsetParent = this.offsetParent || docElem;

			while ( offsetParent && ( !jQuery.nodeName( offsetParent, "html" ) && jQuery.css( offsetParent, "position" ) === "static" ) ) {
				offsetParent = offsetParent.offsetParent;
			}
			return offsetParent || docElem;
		});
	}
});

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = /Y/.test( prop );

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {
			var win = getWindow( elem );

			if ( val === undefined ) {
				return win ? (prop in win) ? win[ prop ] :
					win.document.documentElement[ method ] :
					elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : jQuery( win ).scrollLeft(),
					top ? val : jQuery( win ).scrollTop()
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length, null );
	};
});

// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// getComputedStyle returns percent when specified for top/left/bottom/right
// rather than make the css module depend on the offset module, we just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );
				// if curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
});


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
		// margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {
					// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
					// isn't a whole lot we can do. See pull request at this URL for discussion:
					// https://github.com/jquery/jquery/pull/764
					return elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height], whichever is greatest
					// unfortunately, this causes bug #3838 in IE6/8 only, but there is currently no good, small way to fix it.
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?
					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable, null );
		};
	});
});


// The number of elements contained in the matched element set
jQuery.fn.size = function() {
	return this.length;
};

jQuery.fn.andSelf = jQuery.fn.addBack;




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( typeof define === "function" && define.amd ) {
	define( "jquery", [], function() {
		return jQuery;
	});
}




var
	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in
// AMD (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( typeof noGlobal === strundefined ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;

}));

},{}],29:[function(require,module,exports){
(function (global){
/*!
* Parsley.js
* Version 2.6.0 - built Wed, Nov 2nd 2016, 10:27 am
* http://parsleyjs.org
* Guillaume Potier - <guillaume@wisembly.com>
* Marc-Andre Lafortune - <petroselinum@marc-andre.ca>
* MIT Licensed
*/

// The source code below is generated by babel as
// Parsley is written in ECMAScript 6
//
var _slice = Array.prototype.slice;

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }

(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('jquery')) : typeof define === 'function' && define.amd ? define(['jquery'], factory) : global.parsley = factory(global.jQuery);
})(this, function ($) {
  'use strict';

  var globalID = 1;
  var pastWarnings = {};

  var ParsleyUtils__ParsleyUtils = {
    // Parsley DOM-API
    // returns object from dom attributes and values
    attr: function attr($element, namespace, obj) {
      var i;
      var attribute;
      var attributes;
      var regex = new RegExp('^' + namespace, 'i');

      if ('undefined' === typeof obj) obj = {};else {
        // Clear all own properties. This won't affect prototype's values
        for (i in obj) {
          if (obj.hasOwnProperty(i)) delete obj[i];
        }
      }

      if ('undefined' === typeof $element || 'undefined' === typeof $element[0]) return obj;

      attributes = $element[0].attributes;
      for (i = attributes.length; i--;) {
        attribute = attributes[i];

        if (attribute && attribute.specified && regex.test(attribute.name)) {
          obj[this.camelize(attribute.name.slice(namespace.length))] = this.deserializeValue(attribute.value);
        }
      }

      return obj;
    },

    checkAttr: function checkAttr($element, namespace, _checkAttr) {
      return $element.is('[' + namespace + _checkAttr + ']');
    },

    setAttr: function setAttr($element, namespace, attr, value) {
      $element[0].setAttribute(this.dasherize(namespace + attr), String(value));
    },

    generateID: function generateID() {
      return '' + globalID++;
    },

    /** Third party functions **/
    // Zepto deserialize function
    deserializeValue: function deserializeValue(value) {
      var num;

      try {
        return value ? value == "true" || (value == "false" ? false : value == "null" ? null : !isNaN(num = Number(value)) ? num : /^[\[\{]/.test(value) ? $.parseJSON(value) : value) : value;
      } catch (e) {
        return value;
      }
    },

    // Zepto camelize function
    camelize: function camelize(str) {
      return str.replace(/-+(.)?/g, function (match, chr) {
        return chr ? chr.toUpperCase() : '';
      });
    },

    // Zepto dasherize function
    dasherize: function dasherize(str) {
      return str.replace(/::/g, '/').replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2').replace(/([a-z\d])([A-Z])/g, '$1_$2').replace(/_/g, '-').toLowerCase();
    },

    warn: function warn() {
      var _window$console;

      if (window.console && 'function' === typeof window.console.warn) (_window$console = window.console).warn.apply(_window$console, arguments);
    },

    warnOnce: function warnOnce(msg) {
      if (!pastWarnings[msg]) {
        pastWarnings[msg] = true;
        this.warn.apply(this, arguments);
      }
    },

    _resetWarnings: function _resetWarnings() {
      pastWarnings = {};
    },

    trimString: function trimString(string) {
      return string.replace(/^\s+|\s+$/g, '');
    },

    namespaceEvents: function namespaceEvents(events, namespace) {
      events = this.trimString(events || '').split(/\s+/);
      if (!events[0]) return '';
      return $.map(events, function (evt) {
        return evt + '.' + namespace;
      }).join(' ');
    },

    difference: function difference(array, remove) {
      // This is O(N^2), should be optimized
      var result = [];
      $.each(array, function (_, elem) {
        if (remove.indexOf(elem) == -1) result.push(elem);
      });
      return result;
    },

    // Alter-ego to native Promise.all, but for jQuery
    all: function all(promises) {
      // jQuery treats $.when() and $.when(singlePromise) differently; let's avoid that and add spurious elements
      return $.when.apply($, _toConsumableArray(promises).concat([42, 42]));
    },

    // Object.create polyfill, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create#Polyfill
    objectCreate: Object.create || (function () {
      var Object = function Object() {};
      return function (prototype) {
        if (arguments.length > 1) {
          throw Error('Second argument not supported');
        }
        if (typeof prototype != 'object') {
          throw TypeError('Argument must be an object');
        }
        Object.prototype = prototype;
        var result = new Object();
        Object.prototype = null;
        return result;
      };
    })(),

    _SubmitSelector: 'input[type="submit"], button:submit'
  };

  var ParsleyUtils__default = ParsleyUtils__ParsleyUtils;

  // All these options could be overriden and specified directly in DOM using
  // `data-parsley-` default DOM-API
  // eg: `inputs` can be set in DOM using `data-parsley-inputs="input, textarea"`
  // eg: `data-parsley-stop-on-first-failing-constraint="false"`

  var ParsleyDefaults = {
    // ### General

    // Default data-namespace for DOM API
    namespace: 'data-parsley-',

    // Supported inputs by default
    inputs: 'input, textarea, select',

    // Excluded inputs by default
    excluded: 'input[type=button], input[type=submit], input[type=reset], input[type=hidden]',

    // Stop validating field on highest priority failing constraint
    priorityEnabled: true,

    // ### Field only

    // identifier used to group together inputs (e.g. radio buttons...)
    multiple: null,

    // identifier (or array of identifiers) used to validate only a select group of inputs
    group: null,

    // ### UI
    // Enable\Disable error messages
    uiEnabled: true,

    // Key events threshold before validation
    validationThreshold: 3,

    // Focused field on form validation error. 'first'|'last'|'none'
    focus: 'first',

    // event(s) that will trigger validation before first failure. eg: `input`...
    trigger: false,

    // event(s) that will trigger validation after first failure.
    triggerAfterFailure: 'input',

    // Class that would be added on every failing validation Parsley field
    errorClass: 'parsley-error',

    // Same for success validation
    successClass: 'parsley-success',

    // Return the `$element` that will receive these above success or error classes
    // Could also be (and given directly from DOM) a valid selector like `'#div'`
    classHandler: function classHandler(ParsleyField) {},

    // Return the `$element` where errors will be appended
    // Could also be (and given directly from DOM) a valid selector like `'#div'`
    errorsContainer: function errorsContainer(ParsleyField) {},

    // ul elem that would receive errors' list
    errorsWrapper: '<ul class="parsley-errors-list"></ul>',

    // li elem that would receive error message
    errorTemplate: '<li></li>'
  };

  var ParsleyAbstract = function ParsleyAbstract() {
    this.__id__ = ParsleyUtils__default.generateID();
  };

  ParsleyAbstract.prototype = {
    asyncSupport: true, // Deprecated

    _pipeAccordingToValidationResult: function _pipeAccordingToValidationResult() {
      var _this = this;

      var pipe = function pipe() {
        var r = $.Deferred();
        if (true !== _this.validationResult) r.reject();
        return r.resolve().promise();
      };
      return [pipe, pipe];
    },

    actualizeOptions: function actualizeOptions() {
      ParsleyUtils__default.attr(this.$element, this.options.namespace, this.domOptions);
      if (this.parent && this.parent.actualizeOptions) this.parent.actualizeOptions();
      return this;
    },

    _resetOptions: function _resetOptions(initOptions) {
      this.domOptions = ParsleyUtils__default.objectCreate(this.parent.options);
      this.options = ParsleyUtils__default.objectCreate(this.domOptions);
      // Shallow copy of ownProperties of initOptions:
      for (var i in initOptions) {
        if (initOptions.hasOwnProperty(i)) this.options[i] = initOptions[i];
      }
      this.actualizeOptions();
    },

    _listeners: null,

    // Register a callback for the given event name
    // Callback is called with context as the first argument and the `this`
    // The context is the current parsley instance, or window.Parsley if global
    // A return value of `false` will interrupt the calls
    on: function on(name, fn) {
      this._listeners = this._listeners || {};
      var queue = this._listeners[name] = this._listeners[name] || [];
      queue.push(fn);

      return this;
    },

    // Deprecated. Use `on` instead
    subscribe: function subscribe(name, fn) {
      $.listenTo(this, name.toLowerCase(), fn);
    },

    // Unregister a callback (or all if none is given) for the given event name
    off: function off(name, fn) {
      var queue = this._listeners && this._listeners[name];
      if (queue) {
        if (!fn) {
          delete this._listeners[name];
        } else {
          for (var i = queue.length; i--;) if (queue[i] === fn) queue.splice(i, 1);
        }
      }
      return this;
    },

    // Deprecated. Use `off`
    unsubscribe: function unsubscribe(name, fn) {
      $.unsubscribeTo(this, name.toLowerCase());
    },

    // Trigger an event of the given name
    // A return value of `false` interrupts the callback chain
    // Returns false if execution was interrupted
    trigger: function trigger(name, target, extraArg) {
      target = target || this;
      var queue = this._listeners && this._listeners[name];
      var result;
      var parentResult;
      if (queue) {
        for (var i = queue.length; i--;) {
          result = queue[i].call(target, target, extraArg);
          if (result === false) return result;
        }
      }
      if (this.parent) {
        return this.parent.trigger(name, target, extraArg);
      }
      return true;
    },

    // Reset UI
    reset: function reset() {
      // Field case: just emit a reset event for UI
      if ('ParsleyForm' !== this.__class__) {
        this._resetUI();
        return this._trigger('reset');
      }

      // Form case: emit a reset event for each field
      for (var i = 0; i < this.fields.length; i++) this.fields[i].reset();

      this._trigger('reset');
    },

    // Destroy Parsley instance (+ UI)
    destroy: function destroy() {
      // Field case: emit destroy event to clean UI and then destroy stored instance
      this._destroyUI();
      if ('ParsleyForm' !== this.__class__) {
        this.$element.removeData('Parsley');
        this.$element.removeData('ParsleyFieldMultiple');
        this._trigger('destroy');

        return;
      }

      // Form case: destroy all its fields and then destroy stored instance
      for (var i = 0; i < this.fields.length; i++) this.fields[i].destroy();

      this.$element.removeData('Parsley');
      this._trigger('destroy');
    },

    asyncIsValid: function asyncIsValid(group, force) {
      ParsleyUtils__default.warnOnce("asyncIsValid is deprecated; please use whenValid instead");
      return this.whenValid({ group: group, force: force });
    },

    _findRelated: function _findRelated() {
      return this.options.multiple ? this.parent.$element.find('[' + this.options.namespace + 'multiple="' + this.options.multiple + '"]') : this.$element;
    }
  };

  var requirementConverters = {
    string: function string(_string) {
      return _string;
    },
    integer: function integer(string) {
      if (isNaN(string)) throw 'Requirement is not an integer: "' + string + '"';
      return parseInt(string, 10);
    },
    number: function number(string) {
      if (isNaN(string)) throw 'Requirement is not a number: "' + string + '"';
      return parseFloat(string);
    },
    reference: function reference(string) {
      // Unused for now
      var result = $(string);
      if (result.length === 0) throw 'No such reference: "' + string + '"';
      return result;
    },
    boolean: function boolean(string) {
      return string !== 'false';
    },
    object: function object(string) {
      return ParsleyUtils__default.deserializeValue(string);
    },
    regexp: function regexp(_regexp) {
      var flags = '';

      // Test if RegExp is literal, if not, nothing to be done, otherwise, we need to isolate flags and pattern
      if (/^\/.*\/(?:[gimy]*)$/.test(_regexp)) {
        // Replace the regexp literal string with the first match group: ([gimy]*)
        // If no flag is present, this will be a blank string
        flags = _regexp.replace(/.*\/([gimy]*)$/, '$1');
        // Again, replace the regexp literal string with the first match group:
        // everything excluding the opening and closing slashes and the flags
        _regexp = _regexp.replace(new RegExp('^/(.*?)/' + flags + '$'), '$1');
      } else {
        // Anchor regexp:
        _regexp = '^' + _regexp + '$';
      }
      return new RegExp(_regexp, flags);
    }
  };

  var convertArrayRequirement = function convertArrayRequirement(string, length) {
    var m = string.match(/^\s*\[(.*)\]\s*$/);
    if (!m) throw 'Requirement is not an array: "' + string + '"';
    var values = m[1].split(',').map(ParsleyUtils__default.trimString);
    if (values.length !== length) throw 'Requirement has ' + values.length + ' values when ' + length + ' are needed';
    return values;
  };

  var convertRequirement = function convertRequirement(requirementType, string) {
    var converter = requirementConverters[requirementType || 'string'];
    if (!converter) throw 'Unknown requirement specification: "' + requirementType + '"';
    return converter(string);
  };

  var convertExtraOptionRequirement = function convertExtraOptionRequirement(requirementSpec, string, extraOptionReader) {
    var main = null;
    var extra = {};
    for (var key in requirementSpec) {
      if (key) {
        var value = extraOptionReader(key);
        if ('string' === typeof value) value = convertRequirement(requirementSpec[key], value);
        extra[key] = value;
      } else {
        main = convertRequirement(requirementSpec[key], string);
      }
    }
    return [main, extra];
  };

  // A Validator needs to implement the methods `validate` and `parseRequirements`

  var ParsleyValidator = function ParsleyValidator(spec) {
    $.extend(true, this, spec);
  };

  ParsleyValidator.prototype = {
    // Returns `true` iff the given `value` is valid according the given requirements.
    validate: function validate(value, requirementFirstArg) {
      if (this.fn) {
        // Legacy style validator

        if (arguments.length > 3) // If more args then value, requirement, instance...
          requirementFirstArg = [].slice.call(arguments, 1, -1); // Skip first arg (value) and last (instance), combining the rest
        return this.fn.call(this, value, requirementFirstArg);
      }

      if ($.isArray(value)) {
        if (!this.validateMultiple) throw 'Validator `' + this.name + '` does not handle multiple values';
        return this.validateMultiple.apply(this, arguments);
      } else {
        if (this.validateNumber) {
          if (isNaN(value)) return false;
          arguments[0] = parseFloat(arguments[0]);
          return this.validateNumber.apply(this, arguments);
        }
        if (this.validateString) {
          return this.validateString.apply(this, arguments);
        }
        throw 'Validator `' + this.name + '` only handles multiple values';
      }
    },

    // Parses `requirements` into an array of arguments,
    // according to `this.requirementType`
    parseRequirements: function parseRequirements(requirements, extraOptionReader) {
      if ('string' !== typeof requirements) {
        // Assume requirement already parsed
        // but make sure we return an array
        return $.isArray(requirements) ? requirements : [requirements];
      }
      var type = this.requirementType;
      if ($.isArray(type)) {
        var values = convertArrayRequirement(requirements, type.length);
        for (var i = 0; i < values.length; i++) values[i] = convertRequirement(type[i], values[i]);
        return values;
      } else if ($.isPlainObject(type)) {
        return convertExtraOptionRequirement(type, requirements, extraOptionReader);
      } else {
        return [convertRequirement(type, requirements)];
      }
    },
    // Defaults:
    requirementType: 'string',

    priority: 2

  };

  var ParsleyValidatorRegistry = function ParsleyValidatorRegistry(validators, catalog) {
    this.__class__ = 'ParsleyValidatorRegistry';

    // Default Parsley locale is en
    this.locale = 'en';

    this.init(validators || {}, catalog || {});
  };

  var typeRegexes = {
    email: /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i,

    // Follow https://www.w3.org/TR/html5/infrastructure.html#floating-point-numbers
    number: /^-?(\d*\.)?\d+(e[-+]?\d+)?$/i,

    integer: /^-?\d+$/,

    digits: /^\d+$/,

    alphanum: /^\w+$/i,

    url: new RegExp("^" +
    // protocol identifier
    "(?:(?:https?|ftp)://)?" + // ** mod: make scheme optional
    // user:pass authentication
    "(?:\\S+(?::\\S*)?@)?" + "(?:" +
    // IP address exclusion
    // private & local networks
    // "(?!(?:10|127)(?:\\.\\d{1,3}){3})" +   // ** mod: allow local networks
    // "(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})" +  // ** mod: allow local networks
    // "(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})" +  // ** mod: allow local networks
    // IP address dotted notation octets
    // excludes loopback network 0.0.0.0
    // excludes reserved space >= 224.0.0.0
    // excludes network & broacast addresses
    // (first & last IP address of each class)
    "(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])" + "(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}" + "(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))" + "|" +
    // host name
    '(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)' +
    // domain name
    '(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*' +
    // TLD identifier
    '(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))' + ")" +
    // port number
    "(?::\\d{2,5})?" +
    // resource path
    "(?:/\\S*)?" + "$", 'i')
  };
  typeRegexes.range = typeRegexes.number;

  // See http://stackoverflow.com/a/10454560/8279
  var decimalPlaces = function decimalPlaces(num) {
    var match = ('' + num).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);
    if (!match) {
      return 0;
    }
    return Math.max(0,
    // Number of digits right of decimal point.
    (match[1] ? match[1].length : 0) - (
    // Adjust for scientific notation.
    match[2] ? +match[2] : 0));
  };

  ParsleyValidatorRegistry.prototype = {
    init: function init(validators, catalog) {
      this.catalog = catalog;
      // Copy prototype's validators:
      this.validators = $.extend({}, this.validators);

      for (var name in validators) this.addValidator(name, validators[name].fn, validators[name].priority);

      window.Parsley.trigger('parsley:validator:init');
    },

    // Set new messages locale if we have dictionary loaded in ParsleyConfig.i18n
    setLocale: function setLocale(locale) {
      if ('undefined' === typeof this.catalog[locale]) throw new Error(locale + ' is not available in the catalog');

      this.locale = locale;

      return this;
    },

    // Add a new messages catalog for a given locale. Set locale for this catalog if set === `true`
    addCatalog: function addCatalog(locale, messages, set) {
      if ('object' === typeof messages) this.catalog[locale] = messages;

      if (true === set) return this.setLocale(locale);

      return this;
    },

    // Add a specific message for a given constraint in a given locale
    addMessage: function addMessage(locale, name, message) {
      if ('undefined' === typeof this.catalog[locale]) this.catalog[locale] = {};

      this.catalog[locale][name] = message;

      return this;
    },

    // Add messages for a given locale
    addMessages: function addMessages(locale, nameMessageObject) {
      for (var name in nameMessageObject) this.addMessage(locale, name, nameMessageObject[name]);

      return this;
    },

    // Add a new validator
    //
    //    addValidator('custom', {
    //        requirementType: ['integer', 'integer'],
    //        validateString: function(value, from, to) {},
    //        priority: 22,
    //        messages: {
    //          en: "Hey, that's no good",
    //          fr: "Aye aye, pas bon du tout",
    //        }
    //    })
    //
    // Old API was addValidator(name, function, priority)
    //
    addValidator: function addValidator(name, arg1, arg2) {
      if (this.validators[name]) ParsleyUtils__default.warn('Validator "' + name + '" is already defined.');else if (ParsleyDefaults.hasOwnProperty(name)) {
        ParsleyUtils__default.warn('"' + name + '" is a restricted keyword and is not a valid validator name.');
        return;
      }
      return this._setValidator.apply(this, arguments);
    },

    updateValidator: function updateValidator(name, arg1, arg2) {
      if (!this.validators[name]) {
        ParsleyUtils__default.warn('Validator "' + name + '" is not already defined.');
        return this.addValidator.apply(this, arguments);
      }
      return this._setValidator.apply(this, arguments);
    },

    removeValidator: function removeValidator(name) {
      if (!this.validators[name]) ParsleyUtils__default.warn('Validator "' + name + '" is not defined.');

      delete this.validators[name];

      return this;
    },

    _setValidator: function _setValidator(name, validator, priority) {
      if ('object' !== typeof validator) {
        // Old style validator, with `fn` and `priority`
        validator = {
          fn: validator,
          priority: priority
        };
      }
      if (!validator.validate) {
        validator = new ParsleyValidator(validator);
      }
      this.validators[name] = validator;

      for (var locale in validator.messages || {}) this.addMessage(locale, name, validator.messages[locale]);

      return this;
    },

    getErrorMessage: function getErrorMessage(constraint) {
      var message;

      // Type constraints are a bit different, we have to match their requirements too to find right error message
      if ('type' === constraint.name) {
        var typeMessages = this.catalog[this.locale][constraint.name] || {};
        message = typeMessages[constraint.requirements];
      } else message = this.formatMessage(this.catalog[this.locale][constraint.name], constraint.requirements);

      return message || this.catalog[this.locale].defaultMessage || this.catalog.en.defaultMessage;
    },

    // Kind of light `sprintf()` implementation
    formatMessage: function formatMessage(string, parameters) {
      if ('object' === typeof parameters) {
        for (var i in parameters) string = this.formatMessage(string, parameters[i]);

        return string;
      }

      return 'string' === typeof string ? string.replace(/%s/i, parameters) : '';
    },

    // Here is the Parsley default validators list.
    // A validator is an object with the following key values:
    //  - priority: an integer
    //  - requirement: 'string' (default), 'integer', 'number', 'regexp' or an Array of these
    //  - validateString, validateMultiple, validateNumber: functions returning `true`, `false` or a promise
    // Alternatively, a validator can be a function that returns such an object
    //
    validators: {
      notblank: {
        validateString: function validateString(value) {
          return (/\S/.test(value)
          );
        },
        priority: 2
      },
      required: {
        validateMultiple: function validateMultiple(values) {
          return values.length > 0;
        },
        validateString: function validateString(value) {
          return (/\S/.test(value)
          );
        },
        priority: 512
      },
      type: {
        validateString: function validateString(value, type) {
          var _ref = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

          var _ref$step = _ref.step;
          var step = _ref$step === undefined ? 'any' : _ref$step;
          var _ref$base = _ref.base;
          var base = _ref$base === undefined ? 0 : _ref$base;

          var regex = typeRegexes[type];
          if (!regex) {
            throw new Error('validator type `' + type + '` is not supported');
          }
          if (!regex.test(value)) return false;
          if ('number' === type) {
            if (!/^any$/i.test(step || '')) {
              var nb = Number(value);
              var decimals = Math.max(decimalPlaces(step), decimalPlaces(base));
              if (decimalPlaces(nb) > decimals) // Value can't have too many decimals
                return false;
              // Be careful of rounding errors by using integers.
              var toInt = function toInt(f) {
                return Math.round(f * Math.pow(10, decimals));
              };
              if ((toInt(nb) - toInt(base)) % toInt(step) != 0) return false;
            }
          }
          return true;
        },
        requirementType: {
          '': 'string',
          step: 'string',
          base: 'number'
        },
        priority: 256
      },
      pattern: {
        validateString: function validateString(value, regexp) {
          return regexp.test(value);
        },
        requirementType: 'regexp',
        priority: 64
      },
      minlength: {
        validateString: function validateString(value, requirement) {
          return value.length >= requirement;
        },
        requirementType: 'integer',
        priority: 30
      },
      maxlength: {
        validateString: function validateString(value, requirement) {
          return value.length <= requirement;
        },
        requirementType: 'integer',
        priority: 30
      },
      length: {
        validateString: function validateString(value, min, max) {
          return value.length >= min && value.length <= max;
        },
        requirementType: ['integer', 'integer'],
        priority: 30
      },
      mincheck: {
        validateMultiple: function validateMultiple(values, requirement) {
          return values.length >= requirement;
        },
        requirementType: 'integer',
        priority: 30
      },
      maxcheck: {
        validateMultiple: function validateMultiple(values, requirement) {
          return values.length <= requirement;
        },
        requirementType: 'integer',
        priority: 30
      },
      check: {
        validateMultiple: function validateMultiple(values, min, max) {
          return values.length >= min && values.length <= max;
        },
        requirementType: ['integer', 'integer'],
        priority: 30
      },
      min: {
        validateNumber: function validateNumber(value, requirement) {
          return value >= requirement;
        },
        requirementType: 'number',
        priority: 30
      },
      max: {
        validateNumber: function validateNumber(value, requirement) {
          return value <= requirement;
        },
        requirementType: 'number',
        priority: 30
      },
      range: {
        validateNumber: function validateNumber(value, min, max) {
          return value >= min && value <= max;
        },
        requirementType: ['number', 'number'],
        priority: 30
      },
      equalto: {
        validateString: function validateString(value, refOrValue) {
          var $reference = $(refOrValue);
          if ($reference.length) return value === $reference.val();else return value === refOrValue;
        },
        priority: 256
      }
    }
  };

  var ParsleyUI = {};

  var diffResults = function diffResults(newResult, oldResult, deep) {
    var added = [];
    var kept = [];

    for (var i = 0; i < newResult.length; i++) {
      var found = false;

      for (var j = 0; j < oldResult.length; j++) if (newResult[i].assert.name === oldResult[j].assert.name) {
        found = true;
        break;
      }

      if (found) kept.push(newResult[i]);else added.push(newResult[i]);
    }

    return {
      kept: kept,
      added: added,
      removed: !deep ? diffResults(oldResult, newResult, true).added : []
    };
  };

  ParsleyUI.Form = {

    _actualizeTriggers: function _actualizeTriggers() {
      var _this2 = this;

      this.$element.on('submit.Parsley', function (evt) {
        _this2.onSubmitValidate(evt);
      });
      this.$element.on('click.Parsley', ParsleyUtils__default._SubmitSelector, function (evt) {
        _this2.onSubmitButton(evt);
      });

      // UI could be disabled
      if (false === this.options.uiEnabled) return;

      this.$element.attr('novalidate', '');
    },

    focus: function focus() {
      this._focusedField = null;

      if (true === this.validationResult || 'none' === this.options.focus) return null;

      for (var i = 0; i < this.fields.length; i++) {
        var field = this.fields[i];
        if (true !== field.validationResult && field.validationResult.length > 0 && 'undefined' === typeof field.options.noFocus) {
          this._focusedField = field.$element;
          if ('first' === this.options.focus) break;
        }
      }

      if (null === this._focusedField) return null;

      return this._focusedField.focus();
    },

    _destroyUI: function _destroyUI() {
      // Reset all event listeners
      this.$element.off('.Parsley');
    }

  };

  ParsleyUI.Field = {

    _reflowUI: function _reflowUI() {
      this._buildUI();

      // If this field doesn't have an active UI don't bother doing something
      if (!this._ui) return;

      // Diff between two validation results
      var diff = diffResults(this.validationResult, this._ui.lastValidationResult);

      // Then store current validation result for next reflow
      this._ui.lastValidationResult = this.validationResult;

      // Handle valid / invalid / none field class
      this._manageStatusClass();

      // Add, remove, updated errors messages
      this._manageErrorsMessages(diff);

      // Triggers impl
      this._actualizeTriggers();

      // If field is not valid for the first time, bind keyup trigger to ease UX and quickly inform user
      if ((diff.kept.length || diff.added.length) && !this._failedOnce) {
        this._failedOnce = true;
        this._actualizeTriggers();
      }
    },

    // Returns an array of field's error message(s)
    getErrorsMessages: function getErrorsMessages() {
      // No error message, field is valid
      if (true === this.validationResult) return [];

      var messages = [];

      for (var i = 0; i < this.validationResult.length; i++) messages.push(this.validationResult[i].errorMessage || this._getErrorMessage(this.validationResult[i].assert));

      return messages;
    },

    // It's a goal of Parsley that this method is no longer required [#1073]
    addError: function addError(name) {
      var _ref2 = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

      var message = _ref2.message;
      var assert = _ref2.assert;
      var _ref2$updateClass = _ref2.updateClass;
      var updateClass = _ref2$updateClass === undefined ? true : _ref2$updateClass;

      this._buildUI();
      this._addError(name, { message: message, assert: assert });

      if (updateClass) this._errorClass();
    },

    // It's a goal of Parsley that this method is no longer required [#1073]
    updateError: function updateError(name) {
      var _ref3 = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

      var message = _ref3.message;
      var assert = _ref3.assert;
      var _ref3$updateClass = _ref3.updateClass;
      var updateClass = _ref3$updateClass === undefined ? true : _ref3$updateClass;

      this._buildUI();
      this._updateError(name, { message: message, assert: assert });

      if (updateClass) this._errorClass();
    },

    // It's a goal of Parsley that this method is no longer required [#1073]
    removeError: function removeError(name) {
      var _ref4 = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

      var _ref4$updateClass = _ref4.updateClass;
      var updateClass = _ref4$updateClass === undefined ? true : _ref4$updateClass;

      this._buildUI();
      this._removeError(name);

      // edge case possible here: remove a standard Parsley error that is still failing in this.validationResult
      // but highly improbable cuz' manually removing a well Parsley handled error makes no sense.
      if (updateClass) this._manageStatusClass();
    },

    _manageStatusClass: function _manageStatusClass() {
      if (this.hasConstraints() && this.needsValidation() && true === this.validationResult) this._successClass();else if (this.validationResult.length > 0) this._errorClass();else this._resetClass();
    },

    _manageErrorsMessages: function _manageErrorsMessages(diff) {
      if ('undefined' !== typeof this.options.errorsMessagesDisabled) return;

      // Case where we have errorMessage option that configure an unique field error message, regardless failing validators
      if ('undefined' !== typeof this.options.errorMessage) {
        if (diff.added.length || diff.kept.length) {
          this._insertErrorWrapper();

          if (0 === this._ui.$errorsWrapper.find('.parsley-custom-error-message').length) this._ui.$errorsWrapper.append($(this.options.errorTemplate).addClass('parsley-custom-error-message'));

          return this._ui.$errorsWrapper.addClass('filled').find('.parsley-custom-error-message').html(this.options.errorMessage);
        }

        return this._ui.$errorsWrapper.removeClass('filled').find('.parsley-custom-error-message').remove();
      }

      // Show, hide, update failing constraints messages
      for (var i = 0; i < diff.removed.length; i++) this._removeError(diff.removed[i].assert.name);

      for (i = 0; i < diff.added.length; i++) this._addError(diff.added[i].assert.name, { message: diff.added[i].errorMessage, assert: diff.added[i].assert });

      for (i = 0; i < diff.kept.length; i++) this._updateError(diff.kept[i].assert.name, { message: diff.kept[i].errorMessage, assert: diff.kept[i].assert });
    },

    _addError: function _addError(name, _ref5) {
      var message = _ref5.message;
      var assert = _ref5.assert;

      this._insertErrorWrapper();
      this._ui.$errorsWrapper.addClass('filled').append($(this.options.errorTemplate).addClass('parsley-' + name).html(message || this._getErrorMessage(assert)));
    },

    _updateError: function _updateError(name, _ref6) {
      var message = _ref6.message;
      var assert = _ref6.assert;

      this._ui.$errorsWrapper.addClass('filled').find('.parsley-' + name).html(message || this._getErrorMessage(assert));
    },

    _removeError: function _removeError(name) {
      this._ui.$errorsWrapper.removeClass('filled').find('.parsley-' + name).remove();
    },

    _getErrorMessage: function _getErrorMessage(constraint) {
      var customConstraintErrorMessage = constraint.name + 'Message';

      if ('undefined' !== typeof this.options[customConstraintErrorMessage]) return window.Parsley.formatMessage(this.options[customConstraintErrorMessage], constraint.requirements);

      return window.Parsley.getErrorMessage(constraint);
    },

    _buildUI: function _buildUI() {
      // UI could be already built or disabled
      if (this._ui || false === this.options.uiEnabled) return;

      var _ui = {};

      // Give field its Parsley id in DOM
      this.$element.attr(this.options.namespace + 'id', this.__id__);

      /** Generate important UI elements and store them in this **/
      // $errorClassHandler is the $element that woul have parsley-error and parsley-success classes
      _ui.$errorClassHandler = this._manageClassHandler();

      // $errorsWrapper is a div that would contain the various field errors, it will be appended into $errorsContainer
      _ui.errorsWrapperId = 'parsley-id-' + (this.options.multiple ? 'multiple-' + this.options.multiple : this.__id__);
      _ui.$errorsWrapper = $(this.options.errorsWrapper).attr('id', _ui.errorsWrapperId);

      // ValidationResult UI storage to detect what have changed bwt two validations, and update DOM accordingly
      _ui.lastValidationResult = [];
      _ui.validationInformationVisible = false;

      // Store it in this for later
      this._ui = _ui;
    },

    // Determine which element will have `parsley-error` and `parsley-success` classes
    _manageClassHandler: function _manageClassHandler() {
      // An element selector could be passed through DOM with `data-parsley-class-handler=#foo`
      if ('string' === typeof this.options.classHandler && $(this.options.classHandler).length) return $(this.options.classHandler);

      // Class handled could also be determined by function given in Parsley options
      var $handler = this.options.classHandler.call(this, this);

      // If this function returned a valid existing DOM element, go for it
      if ('undefined' !== typeof $handler && $handler.length) return $handler;

      return this._inputHolder();
    },

    _inputHolder: function _inputHolder() {
      // if simple element (input, texatrea, select...) it will perfectly host the classes and precede the error container
      if (!this.options.multiple || this.$element.is('select')) return this.$element;

      // But if multiple element (radio, checkbox), that would be their parent
      return this.$element.parent();
    },

    _insertErrorWrapper: function _insertErrorWrapper() {
      var $errorsContainer;

      // Nothing to do if already inserted
      if (0 !== this._ui.$errorsWrapper.parent().length) return this._ui.$errorsWrapper.parent();

      if ('string' === typeof this.options.errorsContainer) {
        if ($(this.options.errorsContainer).length) return $(this.options.errorsContainer).append(this._ui.$errorsWrapper);else ParsleyUtils__default.warn('The errors container `' + this.options.errorsContainer + '` does not exist in DOM');
      } else if ('function' === typeof this.options.errorsContainer) $errorsContainer = this.options.errorsContainer.call(this, this);

      if ('undefined' !== typeof $errorsContainer && $errorsContainer.length) return $errorsContainer.append(this._ui.$errorsWrapper);

      return this._inputHolder().after(this._ui.$errorsWrapper);
    },

    _actualizeTriggers: function _actualizeTriggers() {
      var _this3 = this;

      var $toBind = this._findRelated();
      var trigger;

      // Remove Parsley events already bound on this field
      $toBind.off('.Parsley');
      if (this._failedOnce) $toBind.on(ParsleyUtils__default.namespaceEvents(this.options.triggerAfterFailure, 'Parsley'), function () {
        _this3._validateIfNeeded();
      });else if (trigger = ParsleyUtils__default.namespaceEvents(this.options.trigger, 'Parsley')) {
        $toBind.on(trigger, function (event) {
          _this3._validateIfNeeded(event);
        });
      }
    },

    _validateIfNeeded: function _validateIfNeeded(event) {
      var _this4 = this;

      // For keyup, keypress, keydown, input... events that could be a little bit obstrusive
      // do not validate if val length < min threshold on first validation. Once field have been validated once and info
      // about success or failure have been displayed, always validate with this trigger to reflect every yalidation change.
      if (event && /key|input/.test(event.type)) if (!(this._ui && this._ui.validationInformationVisible) && this.getValue().length <= this.options.validationThreshold) return;

      if (this.options.debounce) {
        window.clearTimeout(this._debounced);
        this._debounced = window.setTimeout(function () {
          return _this4.validate();
        }, this.options.debounce);
      } else this.validate();
    },

    _resetUI: function _resetUI() {
      // Reset all event listeners
      this._failedOnce = false;
      this._actualizeTriggers();

      // Nothing to do if UI never initialized for this field
      if ('undefined' === typeof this._ui) return;

      // Reset all errors' li
      this._ui.$errorsWrapper.removeClass('filled').children().remove();

      // Reset validation class
      this._resetClass();

      // Reset validation flags and last validation result
      this._ui.lastValidationResult = [];
      this._ui.validationInformationVisible = false;
    },

    _destroyUI: function _destroyUI() {
      this._resetUI();

      if ('undefined' !== typeof this._ui) this._ui.$errorsWrapper.remove();

      delete this._ui;
    },

    _successClass: function _successClass() {
      this._ui.validationInformationVisible = true;
      this._ui.$errorClassHandler.removeClass(this.options.errorClass).addClass(this.options.successClass);
    },
    _errorClass: function _errorClass() {
      this._ui.validationInformationVisible = true;
      this._ui.$errorClassHandler.removeClass(this.options.successClass).addClass(this.options.errorClass);
    },
    _resetClass: function _resetClass() {
      this._ui.$errorClassHandler.removeClass(this.options.successClass).removeClass(this.options.errorClass);
    }
  };

  var ParsleyForm = function ParsleyForm(element, domOptions, options) {
    this.__class__ = 'ParsleyForm';

    this.$element = $(element);
    this.domOptions = domOptions;
    this.options = options;
    this.parent = window.Parsley;

    this.fields = [];
    this.validationResult = null;
  };

  var ParsleyForm__statusMapping = { pending: null, resolved: true, rejected: false };

  ParsleyForm.prototype = {
    onSubmitValidate: function onSubmitValidate(event) {
      var _this5 = this;

      // This is a Parsley generated submit event, do not validate, do not prevent, simply exit and keep normal behavior
      if (true === event.parsley) return;

      // If we didn't come here through a submit button, use the first one in the form
      var $submitSource = this._$submitSource || this.$element.find(ParsleyUtils__default._SubmitSelector).first();
      this._$submitSource = null;
      this.$element.find('.parsley-synthetic-submit-button').prop('disabled', true);
      if ($submitSource.is('[formnovalidate]')) return;

      var promise = this.whenValidate({ event: event });

      if ('resolved' === promise.state() && false !== this._trigger('submit')) {
        // All good, let event go through. We make this distinction because browsers
        // differ in their handling of `submit` being called from inside a submit event [#1047]
      } else {
          // Rejected or pending: cancel this submit
          event.stopImmediatePropagation();
          event.preventDefault();
          if ('pending' === promise.state()) promise.done(function () {
            _this5._submit($submitSource);
          });
        }
    },

    onSubmitButton: function onSubmitButton(event) {
      this._$submitSource = $(event.currentTarget);
    },
    // internal
    // _submit submits the form, this time without going through the validations.
    // Care must be taken to "fake" the actual submit button being clicked.
    _submit: function _submit($submitSource) {
      if (false === this._trigger('submit')) return;
      // Add submit button's data
      if ($submitSource) {
        var $synthetic = this.$element.find('.parsley-synthetic-submit-button').prop('disabled', false);
        if (0 === $synthetic.length) $synthetic = $('<input class="parsley-synthetic-submit-button" type="hidden">').appendTo(this.$element);
        $synthetic.attr({
          name: $submitSource.attr('name'),
          value: $submitSource.attr('value')
        });
      }

      this.$element.trigger($.extend($.Event('submit'), { parsley: true }));
    },

    // Performs validation on fields while triggering events.
    // @returns `true` if all validations succeeds, `false`
    // if a failure is immediately detected, or `null`
    // if dependant on a promise.
    // Consider using `whenValidate` instead.
    validate: function validate(options) {
      if (arguments.length >= 1 && !$.isPlainObject(options)) {
        ParsleyUtils__default.warnOnce('Calling validate on a parsley form without passing arguments as an object is deprecated.');

        var _arguments = _slice.call(arguments);

        var group = _arguments[0];
        var force = _arguments[1];
        var event = _arguments[2];

        options = { group: group, force: force, event: event };
      }
      return ParsleyForm__statusMapping[this.whenValidate(options).state()];
    },

    whenValidate: function whenValidate() {
      var _ParsleyUtils__default$all$done$fail$always,
          _this6 = this;

      var _ref7 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

      var group = _ref7.group;
      var force = _ref7.force;
      var event = _ref7.event;

      this.submitEvent = event;
      if (event) {
        this.submitEvent = $.extend({}, event, { preventDefault: function preventDefault() {
            ParsleyUtils__default.warnOnce("Using `this.submitEvent.preventDefault()` is deprecated; instead, call `this.validationResult = false`");
            _this6.validationResult = false;
          } });
      }
      this.validationResult = true;

      // fire validate event to eventually modify things before every validation
      this._trigger('validate');

      // Refresh form DOM options and form's fields that could have changed
      this._refreshFields();

      var promises = this._withoutReactualizingFormOptions(function () {
        return $.map(_this6.fields, function (field) {
          return field.whenValidate({ force: force, group: group });
        });
      });

      return (_ParsleyUtils__default$all$done$fail$always = ParsleyUtils__default.all(promises).done(function () {
        _this6._trigger('success');
      }).fail(function () {
        _this6.validationResult = false;
        _this6.focus();
        _this6._trigger('error');
      }).always(function () {
        _this6._trigger('validated');
      })).pipe.apply(_ParsleyUtils__default$all$done$fail$always, _toConsumableArray(this._pipeAccordingToValidationResult()));
    },

    // Iterate over refreshed fields, and stop on first failure.
    // Returns `true` if all fields are valid, `false` if a failure is detected
    // or `null` if the result depends on an unresolved promise.
    // Prefer using `whenValid` instead.
    isValid: function isValid(options) {
      if (arguments.length >= 1 && !$.isPlainObject(options)) {
        ParsleyUtils__default.warnOnce('Calling isValid on a parsley form without passing arguments as an object is deprecated.');

        var _arguments2 = _slice.call(arguments);

        var group = _arguments2[0];
        var force = _arguments2[1];

        options = { group: group, force: force };
      }
      return ParsleyForm__statusMapping[this.whenValid(options).state()];
    },

    // Iterate over refreshed fields and validate them.
    // Returns a promise.
    // A validation that immediately fails will interrupt the validations.
    whenValid: function whenValid() {
      var _this7 = this;

      var _ref8 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

      var group = _ref8.group;
      var force = _ref8.force;

      this._refreshFields();

      var promises = this._withoutReactualizingFormOptions(function () {
        return $.map(_this7.fields, function (field) {
          return field.whenValid({ group: group, force: force });
        });
      });
      return ParsleyUtils__default.all(promises);
    },

    _refreshFields: function _refreshFields() {
      return this.actualizeOptions()._bindFields();
    },

    _bindFields: function _bindFields() {
      var _this8 = this;

      var oldFields = this.fields;

      this.fields = [];
      this.fieldsMappedById = {};

      this._withoutReactualizingFormOptions(function () {
        _this8.$element.find(_this8.options.inputs).not(_this8.options.excluded).each(function (_, element) {
          var fieldInstance = new window.Parsley.Factory(element, {}, _this8);

          // Only add valid and not excluded `ParsleyField` and `ParsleyFieldMultiple` children
          if (('ParsleyField' === fieldInstance.__class__ || 'ParsleyFieldMultiple' === fieldInstance.__class__) && true !== fieldInstance.options.excluded) if ('undefined' === typeof _this8.fieldsMappedById[fieldInstance.__class__ + '-' + fieldInstance.__id__]) {
            _this8.fieldsMappedById[fieldInstance.__class__ + '-' + fieldInstance.__id__] = fieldInstance;
            _this8.fields.push(fieldInstance);
          }
        });

        $.each(ParsleyUtils__default.difference(oldFields, _this8.fields), function (_, field) {
          field._trigger('reset');
        });
      });
      return this;
    },

    // Internal only.
    // Looping on a form's fields to do validation or similar
    // will trigger reactualizing options on all of them, which
    // in turn will reactualize the form's options.
    // To avoid calling actualizeOptions so many times on the form
    // for nothing, _withoutReactualizingFormOptions temporarily disables
    // the method actualizeOptions on this form while `fn` is called.
    _withoutReactualizingFormOptions: function _withoutReactualizingFormOptions(fn) {
      var oldActualizeOptions = this.actualizeOptions;
      this.actualizeOptions = function () {
        return this;
      };
      var result = fn();
      this.actualizeOptions = oldActualizeOptions;
      return result;
    },

    // Internal only.
    // Shortcut to trigger an event
    // Returns true iff event is not interrupted and default not prevented.
    _trigger: function _trigger(eventName) {
      return this.trigger('form:' + eventName);
    }

  };

  var ConstraintFactory = function ConstraintFactory(parsleyField, name, requirements, priority, isDomConstraint) {
    if (!/ParsleyField/.test(parsleyField.__class__)) throw new Error('ParsleyField or ParsleyFieldMultiple instance expected');

    var validatorSpec = window.Parsley._validatorRegistry.validators[name];
    var validator = new ParsleyValidator(validatorSpec);

    $.extend(this, {
      validator: validator,
      name: name,
      requirements: requirements,
      priority: priority || parsleyField.options[name + 'Priority'] || validator.priority,
      isDomConstraint: true === isDomConstraint
    });
    this._parseRequirements(parsleyField.options);
  };

  var capitalize = function capitalize(str) {
    var cap = str[0].toUpperCase();
    return cap + str.slice(1);
  };

  ConstraintFactory.prototype = {
    validate: function validate(value, instance) {
      var _validator;

      return (_validator = this.validator).validate.apply(_validator, [value].concat(_toConsumableArray(this.requirementList), [instance]));
    },

    _parseRequirements: function _parseRequirements(options) {
      var _this9 = this;

      this.requirementList = this.validator.parseRequirements(this.requirements, function (key) {
        return options[_this9.name + capitalize(key)];
      });
    }
  };

  var ParsleyField = function ParsleyField(field, domOptions, options, parsleyFormInstance) {
    this.__class__ = 'ParsleyField';

    this.$element = $(field);

    // Set parent if we have one
    if ('undefined' !== typeof parsleyFormInstance) {
      this.parent = parsleyFormInstance;
    }

    this.options = options;
    this.domOptions = domOptions;

    // Initialize some properties
    this.constraints = [];
    this.constraintsByName = {};
    this.validationResult = true;

    // Bind constraints
    this._bindConstraints();
  };

  var parsley_field__statusMapping = { pending: null, resolved: true, rejected: false };

  ParsleyField.prototype = {
    // # Public API
    // Validate field and trigger some events for mainly `ParsleyUI`
    // @returns `true`, an array of the validators that failed, or
    // `null` if validation is not finished. Prefer using whenValidate
    validate: function validate(options) {
      if (arguments.length >= 1 && !$.isPlainObject(options)) {
        ParsleyUtils__default.warnOnce('Calling validate on a parsley field without passing arguments as an object is deprecated.');
        options = { options: options };
      }
      var promise = this.whenValidate(options);
      if (!promise) // If excluded with `group` option
        return true;
      switch (promise.state()) {
        case 'pending':
          return null;
        case 'resolved':
          return true;
        case 'rejected':
          return this.validationResult;
      }
    },

    // Validate field and trigger some events for mainly `ParsleyUI`
    // @returns a promise that succeeds only when all validations do
    // or `undefined` if field is not in the given `group`.
    whenValidate: function whenValidate() {
      var _whenValid$always$done$fail$always,
          _this10 = this;

      var _ref9 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

      var force = _ref9.force;
      var group = _ref9.group;

      // do not validate a field if not the same as given validation group
      this.refreshConstraints();
      if (group && !this._isInGroup(group)) return;

      this.value = this.getValue();

      // Field Validate event. `this.value` could be altered for custom needs
      this._trigger('validate');

      return (_whenValid$always$done$fail$always = this.whenValid({ force: force, value: this.value, _refreshed: true }).always(function () {
        _this10._reflowUI();
      }).done(function () {
        _this10._trigger('success');
      }).fail(function () {
        _this10._trigger('error');
      }).always(function () {
        _this10._trigger('validated');
      })).pipe.apply(_whenValid$always$done$fail$always, _toConsumableArray(this._pipeAccordingToValidationResult()));
    },

    hasConstraints: function hasConstraints() {
      return 0 !== this.constraints.length;
    },

    // An empty optional field does not need validation
    needsValidation: function needsValidation(value) {
      if ('undefined' === typeof value) value = this.getValue();

      // If a field is empty and not required, it is valid
      // Except if `data-parsley-validate-if-empty` explicitely added, useful for some custom validators
      if (!value.length && !this._isRequired() && 'undefined' === typeof this.options.validateIfEmpty) return false;

      return true;
    },

    _isInGroup: function _isInGroup(group) {
      if ($.isArray(this.options.group)) return -1 !== $.inArray(group, this.options.group);
      return this.options.group === group;
    },

    // Just validate field. Do not trigger any event.
    // Returns `true` iff all constraints pass, `false` if there are failures,
    // or `null` if the result can not be determined yet (depends on a promise)
    // See also `whenValid`.
    isValid: function isValid(options) {
      if (arguments.length >= 1 && !$.isPlainObject(options)) {
        ParsleyUtils__default.warnOnce('Calling isValid on a parsley field without passing arguments as an object is deprecated.');

        var _arguments3 = _slice.call(arguments);

        var force = _arguments3[0];
        var value = _arguments3[1];

        options = { force: force, value: value };
      }
      var promise = this.whenValid(options);
      if (!promise) // Excluded via `group`
        return true;
      return parsley_field__statusMapping[promise.state()];
    },

    // Just validate field. Do not trigger any event.
    // @returns a promise that succeeds only when all validations do
    // or `undefined` if the field is not in the given `group`.
    // The argument `force` will force validation of empty fields.
    // If a `value` is given, it will be validated instead of the value of the input.
    whenValid: function whenValid() {
      var _this11 = this;

      var _ref10 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

      var _ref10$force = _ref10.force;
      var force = _ref10$force === undefined ? false : _ref10$force;
      var value = _ref10.value;
      var group = _ref10.group;
      var _refreshed = _ref10._refreshed;

      // Recompute options and rebind constraints to have latest changes
      if (!_refreshed) this.refreshConstraints();
      // do not validate a field if not the same as given validation group
      if (group && !this._isInGroup(group)) return;

      this.validationResult = true;

      // A field without constraint is valid
      if (!this.hasConstraints()) return $.when();

      // Value could be passed as argument, needed to add more power to 'field:validate'
      if ('undefined' === typeof value || null === value) value = this.getValue();

      if (!this.needsValidation(value) && true !== force) return $.when();

      var groupedConstraints = this._getGroupedConstraints();
      var promises = [];
      $.each(groupedConstraints, function (_, constraints) {
        // Process one group of constraints at a time, we validate the constraints
        // and combine the promises together.
        var promise = ParsleyUtils__default.all($.map(constraints, function (constraint) {
          return _this11._validateConstraint(value, constraint);
        }));
        promises.push(promise);
        if (promise.state() === 'rejected') return false; // Interrupt processing if a group has already failed
      });
      return ParsleyUtils__default.all(promises);
    },

    // @returns a promise
    _validateConstraint: function _validateConstraint(value, constraint) {
      var _this12 = this;

      var result = constraint.validate(value, this);
      // Map false to a failed promise
      if (false === result) result = $.Deferred().reject();
      // Make sure we return a promise and that we record failures
      return ParsleyUtils__default.all([result]).fail(function (errorMessage) {
        if (!(_this12.validationResult instanceof Array)) _this12.validationResult = [];
        _this12.validationResult.push({
          assert: constraint,
          errorMessage: 'string' === typeof errorMessage && errorMessage
        });
      });
    },

    // @returns Parsley field computed value that could be overrided or configured in DOM
    getValue: function getValue() {
      var value;

      // Value could be overriden in DOM or with explicit options
      if ('function' === typeof this.options.value) value = this.options.value(this);else if ('undefined' !== typeof this.options.value) value = this.options.value;else value = this.$element.val();

      // Handle wrong DOM or configurations
      if ('undefined' === typeof value || null === value) return '';

      return this._handleWhitespace(value);
    },

    // Actualize options that could have change since previous validation
    // Re-bind accordingly constraints (could be some new, removed or updated)
    refreshConstraints: function refreshConstraints() {
      return this.actualizeOptions()._bindConstraints();
    },

    /**
    * Add a new constraint to a field
    *
    * @param {String}   name
    * @param {Mixed}    requirements      optional
    * @param {Number}   priority          optional
    * @param {Boolean}  isDomConstraint   optional
    */
    addConstraint: function addConstraint(name, requirements, priority, isDomConstraint) {

      if (window.Parsley._validatorRegistry.validators[name]) {
        var constraint = new ConstraintFactory(this, name, requirements, priority, isDomConstraint);

        // if constraint already exist, delete it and push new version
        if ('undefined' !== this.constraintsByName[constraint.name]) this.removeConstraint(constraint.name);

        this.constraints.push(constraint);
        this.constraintsByName[constraint.name] = constraint;
      }

      return this;
    },

    // Remove a constraint
    removeConstraint: function removeConstraint(name) {
      for (var i = 0; i < this.constraints.length; i++) if (name === this.constraints[i].name) {
        this.constraints.splice(i, 1);
        break;
      }
      delete this.constraintsByName[name];
      return this;
    },

    // Update a constraint (Remove + re-add)
    updateConstraint: function updateConstraint(name, parameters, priority) {
      return this.removeConstraint(name).addConstraint(name, parameters, priority);
    },

    // # Internals

    // Internal only.
    // Bind constraints from config + options + DOM
    _bindConstraints: function _bindConstraints() {
      var constraints = [];
      var constraintsByName = {};

      // clean all existing DOM constraints to only keep javascript user constraints
      for (var i = 0; i < this.constraints.length; i++) if (false === this.constraints[i].isDomConstraint) {
        constraints.push(this.constraints[i]);
        constraintsByName[this.constraints[i].name] = this.constraints[i];
      }

      this.constraints = constraints;
      this.constraintsByName = constraintsByName;

      // then re-add Parsley DOM-API constraints
      for (var name in this.options) this.addConstraint(name, this.options[name], undefined, true);

      // finally, bind special HTML5 constraints
      return this._bindHtml5Constraints();
    },

    // Internal only.
    // Bind specific HTML5 constraints to be HTML5 compliant
    _bindHtml5Constraints: function _bindHtml5Constraints() {
      // html5 required
      if (this.$element.attr('required')) this.addConstraint('required', true, undefined, true);

      // html5 pattern
      if ('string' === typeof this.$element.attr('pattern')) this.addConstraint('pattern', this.$element.attr('pattern'), undefined, true);

      // range
      if ('undefined' !== typeof this.$element.attr('min') && 'undefined' !== typeof this.$element.attr('max')) this.addConstraint('range', [this.$element.attr('min'), this.$element.attr('max')], undefined, true);

      // HTML5 min
      else if ('undefined' !== typeof this.$element.attr('min')) this.addConstraint('min', this.$element.attr('min'), undefined, true);

        // HTML5 max
        else if ('undefined' !== typeof this.$element.attr('max')) this.addConstraint('max', this.$element.attr('max'), undefined, true);

      // length
      if ('undefined' !== typeof this.$element.attr('minlength') && 'undefined' !== typeof this.$element.attr('maxlength')) this.addConstraint('length', [this.$element.attr('minlength'), this.$element.attr('maxlength')], undefined, true);

      // HTML5 minlength
      else if ('undefined' !== typeof this.$element.attr('minlength')) this.addConstraint('minlength', this.$element.attr('minlength'), undefined, true);

        // HTML5 maxlength
        else if ('undefined' !== typeof this.$element.attr('maxlength')) this.addConstraint('maxlength', this.$element.attr('maxlength'), undefined, true);

      // html5 types
      var type = this.$element.attr('type');

      if ('undefined' === typeof type) return this;

      // Small special case here for HTML5 number: integer validator if step attribute is undefined or an integer value, number otherwise
      if ('number' === type) {
        return this.addConstraint('type', ['number', {
          step: this.$element.attr('step') || '1',
          base: this.$element.attr('min') || this.$element.attr('value')
        }], undefined, true);
        // Regular other HTML5 supported types
      } else if (/^(email|url|range)$/i.test(type)) {
          return this.addConstraint('type', type, undefined, true);
        }
      return this;
    },

    // Internal only.
    // Field is required if have required constraint without `false` value
    _isRequired: function _isRequired() {
      if ('undefined' === typeof this.constraintsByName.required) return false;

      return false !== this.constraintsByName.required.requirements;
    },

    // Internal only.
    // Shortcut to trigger an event
    _trigger: function _trigger(eventName) {
      return this.trigger('field:' + eventName);
    },

    // Internal only
    // Handles whitespace in a value
    // Use `data-parsley-whitespace="squish"` to auto squish input value
    // Use `data-parsley-whitespace="trim"` to auto trim input value
    _handleWhitespace: function _handleWhitespace(value) {
      if (true === this.options.trimValue) ParsleyUtils__default.warnOnce('data-parsley-trim-value="true" is deprecated, please use data-parsley-whitespace="trim"');

      if ('squish' === this.options.whitespace) value = value.replace(/\s{2,}/g, ' ');

      if ('trim' === this.options.whitespace || 'squish' === this.options.whitespace || true === this.options.trimValue) value = ParsleyUtils__default.trimString(value);

      return value;
    },

    // Internal only.
    // Returns the constraints, grouped by descending priority.
    // The result is thus an array of arrays of constraints.
    _getGroupedConstraints: function _getGroupedConstraints() {
      if (false === this.options.priorityEnabled) return [this.constraints];

      var groupedConstraints = [];
      var index = {};

      // Create array unique of priorities
      for (var i = 0; i < this.constraints.length; i++) {
        var p = this.constraints[i].priority;
        if (!index[p]) groupedConstraints.push(index[p] = []);
        index[p].push(this.constraints[i]);
      }
      // Sort them by priority DESC
      groupedConstraints.sort(function (a, b) {
        return b[0].priority - a[0].priority;
      });

      return groupedConstraints;
    }

  };

  var parsley_field = ParsleyField;

  var ParsleyMultiple = function ParsleyMultiple() {
    this.__class__ = 'ParsleyFieldMultiple';
  };

  ParsleyMultiple.prototype = {
    // Add new `$element` sibling for multiple field
    addElement: function addElement($element) {
      this.$elements.push($element);

      return this;
    },

    // See `ParsleyField.refreshConstraints()`
    refreshConstraints: function refreshConstraints() {
      var fieldConstraints;

      this.constraints = [];

      // Select multiple special treatment
      if (this.$element.is('select')) {
        this.actualizeOptions()._bindConstraints();

        return this;
      }

      // Gather all constraints for each input in the multiple group
      for (var i = 0; i < this.$elements.length; i++) {

        // Check if element have not been dynamically removed since last binding
        if (!$('html').has(this.$elements[i]).length) {
          this.$elements.splice(i, 1);
          continue;
        }

        fieldConstraints = this.$elements[i].data('ParsleyFieldMultiple').refreshConstraints().constraints;

        for (var j = 0; j < fieldConstraints.length; j++) this.addConstraint(fieldConstraints[j].name, fieldConstraints[j].requirements, fieldConstraints[j].priority, fieldConstraints[j].isDomConstraint);
      }

      return this;
    },

    // See `ParsleyField.getValue()`
    getValue: function getValue() {
      // Value could be overriden in DOM
      if ('function' === typeof this.options.value) return this.options.value(this);else if ('undefined' !== typeof this.options.value) return this.options.value;

      // Radio input case
      if (this.$element.is('input[type=radio]')) return this._findRelated().filter(':checked').val() || '';

      // checkbox input case
      if (this.$element.is('input[type=checkbox]')) {
        var values = [];

        this._findRelated().filter(':checked').each(function () {
          values.push($(this).val());
        });

        return values;
      }

      // Select multiple case
      if (this.$element.is('select') && null === this.$element.val()) return [];

      // Default case that should never happen
      return this.$element.val();
    },

    _init: function _init() {
      this.$elements = [this.$element];

      return this;
    }
  };

  var ParsleyFactory = function ParsleyFactory(element, options, parsleyFormInstance) {
    this.$element = $(element);

    // If the element has already been bound, returns its saved Parsley instance
    var savedparsleyFormInstance = this.$element.data('Parsley');
    if (savedparsleyFormInstance) {

      // If the saved instance has been bound without a ParsleyForm parent and there is one given in this call, add it
      if ('undefined' !== typeof parsleyFormInstance && savedparsleyFormInstance.parent === window.Parsley) {
        savedparsleyFormInstance.parent = parsleyFormInstance;
        savedparsleyFormInstance._resetOptions(savedparsleyFormInstance.options);
      }

      if ('object' === typeof options) {
        $.extend(savedparsleyFormInstance.options, options);
      }

      return savedparsleyFormInstance;
    }

    // Parsley must be instantiated with a DOM element or jQuery $element
    if (!this.$element.length) throw new Error('You must bind Parsley on an existing element.');

    if ('undefined' !== typeof parsleyFormInstance && 'ParsleyForm' !== parsleyFormInstance.__class__) throw new Error('Parent instance must be a ParsleyForm instance');

    this.parent = parsleyFormInstance || window.Parsley;
    return this.init(options);
  };

  ParsleyFactory.prototype = {
    init: function init(options) {
      this.__class__ = 'Parsley';
      this.__version__ = '2.6.0';
      this.__id__ = ParsleyUtils__default.generateID();

      // Pre-compute options
      this._resetOptions(options);

      // A ParsleyForm instance is obviously a `<form>` element but also every node that is not an input and has the `data-parsley-validate` attribute
      if (this.$element.is('form') || ParsleyUtils__default.checkAttr(this.$element, this.options.namespace, 'validate') && !this.$element.is(this.options.inputs)) return this.bind('parsleyForm');

      // Every other element is bound as a `ParsleyField` or `ParsleyFieldMultiple`
      return this.isMultiple() ? this.handleMultiple() : this.bind('parsleyField');
    },

    isMultiple: function isMultiple() {
      return this.$element.is('input[type=radio], input[type=checkbox]') || this.$element.is('select') && 'undefined' !== typeof this.$element.attr('multiple');
    },

    // Multiples fields are a real nightmare :(
    // Maybe some refactoring would be appreciated here...
    handleMultiple: function handleMultiple() {
      var _this13 = this;

      var name;
      var multiple;
      var parsleyMultipleInstance;

      // Handle multiple name
      if (this.options.multiple) ; // We already have our 'multiple' identifier
      else if ('undefined' !== typeof this.$element.attr('name') && this.$element.attr('name').length) this.options.multiple = name = this.$element.attr('name');else if ('undefined' !== typeof this.$element.attr('id') && this.$element.attr('id').length) this.options.multiple = this.$element.attr('id');

      // Special select multiple input
      if (this.$element.is('select') && 'undefined' !== typeof this.$element.attr('multiple')) {
        this.options.multiple = this.options.multiple || this.__id__;
        return this.bind('parsleyFieldMultiple');

        // Else for radio / checkboxes, we need a `name` or `data-parsley-multiple` to properly bind it
      } else if (!this.options.multiple) {
          ParsleyUtils__default.warn('To be bound by Parsley, a radio, a checkbox and a multiple select input must have either a name or a multiple option.', this.$element);
          return this;
        }

      // Remove special chars
      this.options.multiple = this.options.multiple.replace(/(:|\.|\[|\]|\{|\}|\$)/g, '');

      // Add proper `data-parsley-multiple` to siblings if we have a valid multiple name
      if ('undefined' !== typeof name) {
        $('input[name="' + name + '"]').each(function (i, input) {
          if ($(input).is('input[type=radio], input[type=checkbox]')) $(input).attr(_this13.options.namespace + 'multiple', _this13.options.multiple);
        });
      }

      // Check here if we don't already have a related multiple instance saved
      var $previouslyRelated = this._findRelated();
      for (var i = 0; i < $previouslyRelated.length; i++) {
        parsleyMultipleInstance = $($previouslyRelated.get(i)).data('Parsley');
        if ('undefined' !== typeof parsleyMultipleInstance) {

          if (!this.$element.data('ParsleyFieldMultiple')) {
            parsleyMultipleInstance.addElement(this.$element);
          }

          break;
        }
      }

      // Create a secret ParsleyField instance for every multiple field. It will be stored in `data('ParsleyFieldMultiple')`
      // And will be useful later to access classic `ParsleyField` stuff while being in a `ParsleyFieldMultiple` instance
      this.bind('parsleyField', true);

      return parsleyMultipleInstance || this.bind('parsleyFieldMultiple');
    },

    // Return proper `ParsleyForm`, `ParsleyField` or `ParsleyFieldMultiple`
    bind: function bind(type, doNotStore) {
      var parsleyInstance;

      switch (type) {
        case 'parsleyForm':
          parsleyInstance = $.extend(new ParsleyForm(this.$element, this.domOptions, this.options), new ParsleyAbstract(), window.ParsleyExtend)._bindFields();
          break;
        case 'parsleyField':
          parsleyInstance = $.extend(new parsley_field(this.$element, this.domOptions, this.options, this.parent), new ParsleyAbstract(), window.ParsleyExtend);
          break;
        case 'parsleyFieldMultiple':
          parsleyInstance = $.extend(new parsley_field(this.$element, this.domOptions, this.options, this.parent), new ParsleyMultiple(), new ParsleyAbstract(), window.ParsleyExtend)._init();
          break;
        default:
          throw new Error(type + 'is not a supported Parsley type');
      }

      if (this.options.multiple) ParsleyUtils__default.setAttr(this.$element, this.options.namespace, 'multiple', this.options.multiple);

      if ('undefined' !== typeof doNotStore) {
        this.$element.data('ParsleyFieldMultiple', parsleyInstance);

        return parsleyInstance;
      }

      // Store the freshly bound instance in a DOM element for later access using jQuery `data()`
      this.$element.data('Parsley', parsleyInstance);

      // Tell the world we have a new ParsleyForm or ParsleyField instance!
      parsleyInstance._actualizeTriggers();
      parsleyInstance._trigger('init');

      return parsleyInstance;
    }
  };

  var vernums = $.fn.jquery.split('.');
  if (parseInt(vernums[0]) <= 1 && parseInt(vernums[1]) < 8) {
    throw "The loaded version of jQuery is too old. Please upgrade to 1.8.x or better.";
  }
  if (!vernums.forEach) {
    ParsleyUtils__default.warn('Parsley requires ES5 to run properly. Please include https://github.com/es-shims/es5-shim');
  }
  // Inherit `on`, `off` & `trigger` to Parsley:
  var Parsley = $.extend(new ParsleyAbstract(), {
    $element: $(document),
    actualizeOptions: null,
    _resetOptions: null,
    Factory: ParsleyFactory,
    version: '2.6.0'
  });

  // Supplement ParsleyField and Form with ParsleyAbstract
  // This way, the constructors will have access to those methods
  $.extend(parsley_field.prototype, ParsleyUI.Field, ParsleyAbstract.prototype);
  $.extend(ParsleyForm.prototype, ParsleyUI.Form, ParsleyAbstract.prototype);
  // Inherit actualizeOptions and _resetOptions:
  $.extend(ParsleyFactory.prototype, ParsleyAbstract.prototype);

  // ### jQuery API
  // `$('.elem').parsley(options)` or `$('.elem').psly(options)`
  $.fn.parsley = $.fn.psly = function (options) {
    if (this.length > 1) {
      var instances = [];

      this.each(function () {
        instances.push($(this).parsley(options));
      });

      return instances;
    }

    // Return undefined if applied to non existing DOM element
    if (!$(this).length) {
      ParsleyUtils__default.warn('You must bind Parsley on an existing element.');

      return;
    }

    return new ParsleyFactory(this, options);
  };

  // ### ParsleyField and ParsleyForm extension
  // Ensure the extension is now defined if it wasn't previously
  if ('undefined' === typeof window.ParsleyExtend) window.ParsleyExtend = {};

  // ### Parsley config
  // Inherit from ParsleyDefault, and copy over any existing values
  Parsley.options = $.extend(ParsleyUtils__default.objectCreate(ParsleyDefaults), window.ParsleyConfig);
  window.ParsleyConfig = Parsley.options; // Old way of accessing global options

  // ### Globals
  window.Parsley = window.psly = Parsley;
  window.ParsleyUtils = ParsleyUtils__default;

  // ### Define methods that forward to the registry, and deprecate all access except through window.Parsley
  var registry = window.Parsley._validatorRegistry = new ParsleyValidatorRegistry(window.ParsleyConfig.validators, window.ParsleyConfig.i18n);
  window.ParsleyValidator = {};
  $.each('setLocale addCatalog addMessage addMessages getErrorMessage formatMessage addValidator updateValidator removeValidator'.split(' '), function (i, method) {
    window.Parsley[method] = $.proxy(registry, method);
    window.ParsleyValidator[method] = function () {
      var _window$Parsley;

      ParsleyUtils__default.warnOnce('Accessing the method \'' + method + '\' through ParsleyValidator is deprecated. Simply call \'window.Parsley.' + method + '(...)\'');
      return (_window$Parsley = window.Parsley)[method].apply(_window$Parsley, arguments);
    };
  });

  // ### ParsleyUI
  // Deprecated global object
  window.Parsley.UI = ParsleyUI;
  window.ParsleyUI = {
    removeError: function removeError(instance, name, doNotUpdateClass) {
      var updateClass = true !== doNotUpdateClass;
      ParsleyUtils__default.warnOnce('Accessing ParsleyUI is deprecated. Call \'removeError\' on the instance directly. Please comment in issue 1073 as to your need to call this method.');
      return instance.removeError(name, { updateClass: updateClass });
    },
    getErrorsMessages: function getErrorsMessages(instance) {
      ParsleyUtils__default.warnOnce('Accessing ParsleyUI is deprecated. Call \'getErrorsMessages\' on the instance directly.');
      return instance.getErrorsMessages();
    }
  };
  $.each('addError updateError'.split(' '), function (i, method) {
    window.ParsleyUI[method] = function (instance, name, message, assert, doNotUpdateClass) {
      var updateClass = true !== doNotUpdateClass;
      ParsleyUtils__default.warnOnce('Accessing ParsleyUI is deprecated. Call \'' + method + '\' on the instance directly. Please comment in issue 1073 as to your need to call this method.');
      return instance[method](name, { message: message, assert: assert, updateClass: updateClass });
    };
  });

  // ### PARSLEY auto-binding
  // Prevent it by setting `ParsleyConfig.autoBind` to `false`
  if (false !== window.ParsleyConfig.autoBind) {
    $(function () {
      // Works only on `data-parsley-validate`.
      if ($('[data-parsley-validate]').length) $('[data-parsley-validate]').parsley();
    });
  }

  var o = $({});
  var deprecated = function deprecated() {
    ParsleyUtils__default.warnOnce("Parsley's pubsub module is deprecated; use the 'on' and 'off' methods on parsley instances or window.Parsley");
  };

  // Returns an event handler that calls `fn` with the arguments it expects
  function adapt(fn, context) {
    // Store to allow unbinding
    if (!fn.parsleyAdaptedCallback) {
      fn.parsleyAdaptedCallback = function () {
        var args = Array.prototype.slice.call(arguments, 0);
        args.unshift(this);
        fn.apply(context || o, args);
      };
    }
    return fn.parsleyAdaptedCallback;
  }

  var eventPrefix = 'parsley:';
  // Converts 'parsley:form:validate' into 'form:validate'
  function eventName(name) {
    if (name.lastIndexOf(eventPrefix, 0) === 0) return name.substr(eventPrefix.length);
    return name;
  }

  // $.listen is deprecated. Use Parsley.on instead.
  $.listen = function (name, callback) {
    var context;
    deprecated();
    if ('object' === typeof arguments[1] && 'function' === typeof arguments[2]) {
      context = arguments[1];
      callback = arguments[2];
    }

    if ('function' !== typeof callback) throw new Error('Wrong parameters');

    window.Parsley.on(eventName(name), adapt(callback, context));
  };

  $.listenTo = function (instance, name, fn) {
    deprecated();
    if (!(instance instanceof parsley_field) && !(instance instanceof ParsleyForm)) throw new Error('Must give Parsley instance');

    if ('string' !== typeof name || 'function' !== typeof fn) throw new Error('Wrong parameters');

    instance.on(eventName(name), adapt(fn));
  };

  $.unsubscribe = function (name, fn) {
    deprecated();
    if ('string' !== typeof name || 'function' !== typeof fn) throw new Error('Wrong arguments');
    window.Parsley.off(eventName(name), fn.parsleyAdaptedCallback);
  };

  $.unsubscribeTo = function (instance, name) {
    deprecated();
    if (!(instance instanceof parsley_field) && !(instance instanceof ParsleyForm)) throw new Error('Must give Parsley instance');
    instance.off(eventName(name));
  };

  $.unsubscribeAll = function (name) {
    deprecated();
    window.Parsley.off(eventName(name));
    $('form,input,textarea,select').each(function () {
      var instance = $(this).data('Parsley');
      if (instance) {
        instance.off(eventName(name));
      }
    });
  };

  // $.emit is deprecated. Use jQuery events instead.
  $.emit = function (name, instance) {
    var _instance;

    deprecated();
    var instanceGiven = instance instanceof parsley_field || instance instanceof ParsleyForm;
    var args = Array.prototype.slice.call(arguments, instanceGiven ? 2 : 1);
    args.unshift(eventName(name));
    if (!instanceGiven) {
      instance = window.Parsley;
    }
    (_instance = instance).trigger.apply(_instance, _toConsumableArray(args));
  };

  var pubsub = {};

  $.extend(true, Parsley, {
    asyncValidators: {
      'default': {
        fn: function fn(xhr) {
          // By default, only status 2xx are deemed successful.
          // Note: we use status instead of state() because responses with status 200
          // but invalid messages (e.g. an empty body for content type set to JSON) will
          // result in state() === 'rejected'.
          return xhr.status >= 200 && xhr.status < 300;
        },
        url: false
      },
      reverse: {
        fn: function fn(xhr) {
          // If reverse option is set, a failing ajax request is considered successful
          return xhr.status < 200 || xhr.status >= 300;
        },
        url: false
      }
    },

    addAsyncValidator: function addAsyncValidator(name, fn, url, options) {
      Parsley.asyncValidators[name] = {
        fn: fn,
        url: url || false,
        options: options || {}
      };

      return this;
    }

  });

  Parsley.addValidator('remote', {
    requirementType: {
      '': 'string',
      'validator': 'string',
      'reverse': 'boolean',
      'options': 'object'
    },

    validateString: function validateString(value, url, options, instance) {
      var data = {};
      var ajaxOptions;
      var csr;
      var validator = options.validator || (true === options.reverse ? 'reverse' : 'default');

      if ('undefined' === typeof Parsley.asyncValidators[validator]) throw new Error('Calling an undefined async validator: `' + validator + '`');

      url = Parsley.asyncValidators[validator].url || url;

      // Fill current value
      if (url.indexOf('{value}') > -1) {
        url = url.replace('{value}', encodeURIComponent(value));
      } else {
        data[instance.$element.attr('name') || instance.$element.attr('id')] = value;
      }

      // Merge options passed in from the function with the ones in the attribute
      var remoteOptions = $.extend(true, options.options || {}, Parsley.asyncValidators[validator].options);

      // All `$.ajax(options)` could be overridden or extended directly from DOM in `data-parsley-remote-options`
      ajaxOptions = $.extend(true, {}, {
        url: url,
        data: data,
        type: 'GET'
      }, remoteOptions);

      // Generate store key based on ajax options
      instance.trigger('field:ajaxoptions', instance, ajaxOptions);

      csr = $.param(ajaxOptions);

      // Initialise querry cache
      if ('undefined' === typeof Parsley._remoteCache) Parsley._remoteCache = {};

      // Try to retrieve stored xhr
      var xhr = Parsley._remoteCache[csr] = Parsley._remoteCache[csr] || $.ajax(ajaxOptions);

      var handleXhr = function handleXhr() {
        var result = Parsley.asyncValidators[validator].fn.call(instance, xhr, url, options);
        if (!result) // Map falsy results to rejected promise
          result = $.Deferred().reject();
        return $.when(result);
      };

      return xhr.then(handleXhr, handleXhr);
    },

    priority: -1
  });

  Parsley.on('form:submit', function () {
    Parsley._remoteCache = {};
  });

  window.ParsleyExtend.addAsyncValidator = function () {
    ParsleyUtils.warnOnce('Accessing the method `addAsyncValidator` through an instance is deprecated. Simply call `Parsley.addAsyncValidator(...)`');
    return Parsley.addAsyncValidator.apply(Parsley, arguments);
  };

  // This is included with the Parsley library itself,
  // thus there is no use in adding it to your project.
  Parsley.addMessages('en', {
    defaultMessage: "This value seems to be invalid.",
    type: {
      email: "This value should be a valid email.",
      url: "This value should be a valid url.",
      number: "This value should be a valid number.",
      integer: "This value should be a valid integer.",
      digits: "This value should be digits.",
      alphanum: "This value should be alphanumeric."
    },
    notblank: "This value should not be blank.",
    required: "This value is required.",
    pattern: "This value seems to be invalid.",
    min: "This value should be greater than or equal to %s.",
    max: "This value should be lower than or equal to %s.",
    range: "This value should be between %s and %s.",
    minlength: "This value is too short. It should have %s characters or more.",
    maxlength: "This value is too long. It should have %s characters or fewer.",
    length: "This value length is invalid. It should be between %s and %s characters long.",
    mincheck: "You must select at least %s choices.",
    maxcheck: "You must select %s choices or fewer.",
    check: "You must select between %s and %s choices.",
    equalto: "This value should be the same."
  });

  Parsley.setLocale('en');

  /**
   * inputevent - Alleviate browser bugs for input events
   * https://github.com/marcandre/inputevent
   * @version v0.0.3 - (built Thu, Apr 14th 2016, 5:58 pm)
   * @author Marc-Andre Lafortune <github@marc-andre.ca>
   * @license MIT
   */

  function InputEvent() {
    var _this14 = this;

    var globals = window || global;

    // Slightly odd way construct our object. This way methods are force bound.
    // Used to test for duplicate library.
    $.extend(this, {

      // For browsers that do not support isTrusted, assumes event is native.
      isNativeEvent: function isNativeEvent(evt) {
        return evt.originalEvent && evt.originalEvent.isTrusted !== false;
      },

      fakeInputEvent: function fakeInputEvent(evt) {
        if (_this14.isNativeEvent(evt)) {
          $(evt.target).trigger('input');
        }
      },

      misbehaves: function misbehaves(evt) {
        if (_this14.isNativeEvent(evt)) {
          _this14.behavesOk(evt);
          $(document).on('change.inputevent', evt.data.selector, _this14.fakeInputEvent);
          _this14.fakeInputEvent(evt);
        }
      },

      behavesOk: function behavesOk(evt) {
        if (_this14.isNativeEvent(evt)) {
          $(document) // Simply unbinds the testing handler
          .off('input.inputevent', evt.data.selector, _this14.behavesOk).off('change.inputevent', evt.data.selector, _this14.misbehaves);
        }
      },

      // Bind the testing handlers
      install: function install() {
        if (globals.inputEventPatched) {
          return;
        }
        globals.inputEventPatched = '0.0.3';
        var _arr = ['select', 'input[type="checkbox"]', 'input[type="radio"]', 'input[type="file"]'];
        for (var _i = 0; _i < _arr.length; _i++) {
          var selector = _arr[_i];
          $(document).on('input.inputevent', selector, { selector: selector }, _this14.behavesOk).on('change.inputevent', selector, { selector: selector }, _this14.misbehaves);
        }
      },

      uninstall: function uninstall() {
        delete globals.inputEventPatched;
        $(document).off('.inputevent');
      }

    });
  };

  var inputevent = new InputEvent();

  inputevent.install();

  var parsley = Parsley;

  return parsley;
});


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"jquery":28}],30:[function(require,module,exports){
//fgnass.github.com/spin.js#v1.2.5
/**
 * Copyright (c) 2011 Felix Gnass [fgnass at neteye dot de]
 * Licensed under the MIT license
 */

var prefixes = ['webkit', 'Moz', 'ms', 'O']; /* Vendor prefixes */
var animations = {}; /* Animation rules keyed by their name */
var useCssAnimations;

/**
 * Utility function to create elements. If no tag name is given,
 * a DIV is created. Optionally properties can be passed.
 */
function createEl(tag, prop) {
  var el = document.createElement(tag || 'div');
  var n;

  for(n in prop) {
    el[n] = prop[n];
  }
  return el;
}

/**
 * Appends children and returns the parent.
 */
function ins(parent /* child1, child2, ...*/) {
  for (var i=1, n=arguments.length; i<n; i++) {
    parent.appendChild(arguments[i]);
  }
  return parent;
}

/**
 * Insert a new stylesheet to hold the @keyframe or VML rules.
 */
var sheet = function() {
  var el = createEl('style');
  ins(document.getElementsByTagName('head')[0], el);
  return el.sheet || el.styleSheet;
}();

/**
 * Creates an opacity keyframe animation rule and returns its name.
 * Since most mobile Webkits have timing issues with animation-delay,
 * we create separate rules for each line/segment.
 */
function addAnimation(alpha, trail, i, lines) {
  var name = ['opacity', trail, ~~(alpha*100), i, lines].join('-');
  var start = 0.01 + i/lines*100;
  var z = Math.max(1-(1-alpha)/trail*(100-start) , alpha);
  var prefix = useCssAnimations.substring(0, useCssAnimations.indexOf('Animation')).toLowerCase();
  var pre = prefix && '-'+prefix+'-' || '';

  if (!animations[name]) {
    sheet.insertRule(
      '@' + pre + 'keyframes ' + name + '{' +
      '0%{opacity:'+z+'}' +
      start + '%{opacity:'+ alpha + '}' +
      (start+0.01) + '%{opacity:1}' +
      (start+trail)%100 + '%{opacity:'+ alpha + '}' +
      '100%{opacity:'+ z + '}' +
      '}', 0);
    animations[name] = 1;
  }
  return name;
}

/**
 * Tries various vendor prefixes and returns the first supported property.
 **/
function vendor(el, prop) {
  var s = el.style;
  var pp;
  var i;

  if(s[prop] !== undefined) return prop;
  prop = prop.charAt(0).toUpperCase() + prop.slice(1);
  for(i=0; i<prefixes.length; i++) {
    pp = prefixes[i]+prop;
    if(s[pp] !== undefined) return pp;
  }
}

/**
 * Sets multiple style properties at once.
 */
function css(el, prop) {
  for (var n in prop) {
    el.style[vendor(el, n)||n] = prop[n];
  }
  return el;
}

/**
 * Fills in default values.
 */
function merge(obj) {
  for (var i=1; i < arguments.length; i++) {
    var def = arguments[i];
    for (var n in def) {
      if (obj[n] === undefined) obj[n] = def[n];
    }
  }
  return obj;
}

/**
 * Returns the absolute page-offset of the given element.
 */
function pos(el) {
  var o = {x:el.offsetLeft, y:el.offsetTop};
  while((el = el.offsetParent)) {
    o.x+=el.offsetLeft;
    o.y+=el.offsetTop;
  }
  return o;
}

var defaults = {
  lines: 12,            // The number of lines to draw
  length: 7,            // The length of each line
  width: 5,             // The line thickness
  radius: 10,           // The radius of the inner circle
  rotate: 0,            // rotation offset
  color: '#000',        // #rgb or #rrggbb
  speed: 1,             // Rounds per second
  trail: 100,           // Afterglow percentage
  opacity: 1/4,         // Opacity of the lines
  fps: 20,              // Frames per second when using setTimeout()
  zIndex: 2e9,          // Use a high z-index by default
  className: 'spinner', // CSS class to assign to the element
  top: 'auto',          // center vertically
  left: 'auto'          // center horizontally
};

/** The constructor */
var Spinner = function Spinner(o) {
  if (!this.spin) return new Spinner(o);
  this.opts = merge(o || {}, Spinner.defaults, defaults);
};

Spinner.defaults = {};
merge(Spinner.prototype, {
  spin: function(target) {
    this.stop();
    var self = this;
    var o = self.opts;
    var el = self.el = css(createEl(0, {className: o.className}), {position: 'relative', zIndex: o.zIndex});
    var mid = o.radius+o.length+o.width;
    var ep; // element position
    var tp; // target position

    if (target) {
      target.insertBefore(el, target.firstChild||null);
      tp = pos(target);
      ep = pos(el);
      css(el, {
        left: (o.left == 'auto' ? tp.x-ep.x + (target.offsetWidth >> 1) : o.left+mid) + 'px',
        top: (o.top == 'auto' ? tp.y-ep.y + (target.offsetHeight >> 1) : o.top+mid)  + 'px'
      });
    }

    el.setAttribute('aria-role', 'progressbar');
    self.lines(el, self.opts);

    if (!useCssAnimations) {
      // No CSS animation support, use setTimeout() instead
      var i = 0;
      var fps = o.fps;
      var f = fps/o.speed;
      var ostep = (1-o.opacity)/(f*o.trail / 100);
      var astep = f/o.lines;

      !function anim() {
        i++;
        for (var s=o.lines; s; s--) {
          var alpha = Math.max(1-(i+s*astep)%f * ostep, o.opacity);
          self.opacity(el, o.lines-s, alpha, o);
        }
        self.timeout = self.el && setTimeout(anim, ~~(1000/fps));
      }();
    }
    return self;
  },
  stop: function() {
    var el = this.el;
    if (el) {
      clearTimeout(this.timeout);
      if (el.parentNode) el.parentNode.removeChild(el);
      this.el = undefined;
    }
    return this;
  },
  lines: function(el, o) {
    var i = 0;
    var seg;

    function fill(color, shadow) {
      return css(createEl(), {
        position: 'absolute',
        width: (o.length+o.width) + 'px',
        height: o.width + 'px',
        background: color,
        boxShadow: shadow,
        transformOrigin: 'left',
        transform: 'rotate(' + ~~(360/o.lines*i+o.rotate) + 'deg) translate(' + o.radius+'px' +',0)',
        borderRadius: (o.width>>1) + 'px'
      });
    }
    for (; i < o.lines; i++) {
      seg = css(createEl(), {
        position: 'absolute',
        top: 1+~(o.width/2) + 'px',
        transform: o.hwaccel ? 'translate3d(0,0,0)' : '',
        opacity: o.opacity,
        animation: useCssAnimations && addAnimation(o.opacity, o.trail, i, o.lines) + ' ' + 1/o.speed + 's linear infinite'
      });
      if (o.shadow) ins(seg, css(fill('#000', '0 0 4px ' + '#000'), {top: 2+'px'}));
      ins(el, ins(seg, fill(o.color, '0 0 1px rgba(0,0,0,.1)')));
    }
    return el;
  },
  opacity: function(el, i, val) {
    if (i < el.childNodes.length) el.childNodes[i].style.opacity = val;
  }
});

/////////////////////////////////////////////////////////////////////////
// VML rendering for IE
/////////////////////////////////////////////////////////////////////////

/**
 * Check and init VML support
 */
!function() {

  function vml(tag, attr) {
    return createEl('<' + tag + ' xmlns="urn:schemas-microsoft.com:vml" class="spin-vml">', attr);
  }

  var s = css(createEl('group'), {behavior: 'url(#default#VML)'});

  if (!vendor(s, 'transform') && s.adj) {

    // VML support detected. Insert CSS rule ...
    sheet.addRule('.spin-vml', 'behavior:url(#default#VML)');

    Spinner.prototype.lines = function(el, o) {
      var r = o.length+o.width;
      var s = 2*r;

      function grp() {
        return css(vml('group', {coordsize: s +' '+s, coordorigin: -r +' '+-r}), {width: s, height: s});
      }

      var margin = -(o.width+o.length)*2+'px';
      var g = css(grp(), {position: 'absolute', top: margin, left: margin});

      var i;

      function seg(i, dx, filter) {
        ins(g,
          ins(css(grp(), {rotation: 360 / o.lines * i + 'deg', left: ~~dx}),
            ins(css(vml('roundrect', {arcsize: 1}), {
                width: r,
                height: o.width,
                left: o.radius,
                top: -o.width>>1,
                filter: filter
              }),
              vml('fill', {color: o.color, opacity: o.opacity}),
              vml('stroke', {opacity: 0}) // transparent stroke to fix color bleeding upon opacity change
            )
          )
        );
      }

      if (o.shadow) {
        for (i = 1; i <= o.lines; i++) {
          seg(i, -2, 'progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)');
        }
      }
      for (i = 1; i <= o.lines; i++) seg(i);
      return ins(el, g);
    };
    Spinner.prototype.opacity = function(el, i, val, o) {
      var c = el.firstChild;
      o = o.shadow && o.lines || 0;
      if (c && i+o < c.childNodes.length) {
        c = c.childNodes[i+o]; c = c && c.firstChild; c = c && c.firstChild;
        if (c) c.opacity = val;
      }
    };
  }
  else {
    useCssAnimations = vendor(s, 'animation');
  }
}();

module.exports = Spinner;

},{}],31:[function(require,module,exports){
(function (global){
(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
	typeof define === 'function' && define.amd ? define(factory) :
	(global.tippy = factory());
}(this, (function () { 'use strict';

var Browser = {};

if (typeof window !== 'undefined') {
  Browser.SUPPORTED = 'requestAnimationFrame' in window;
  Browser.SUPPORTS_TOUCH = 'ontouchstart' in window;
  Browser.touch = false;
  Browser.dynamicInputDetection = true;
  // Chrome device/touch emulation can make this dynamic
  Browser.iOS = function () {
    return (/iPhone|iPad|iPod/.test(navigator.userAgent) && !window.MSStream
    );
  };
}

/**
* The global storage array which holds all data reference objects
* from every instance
* This allows us to hide tooltips from all instances, finding the ref when
* clicking on the body, and for followCursor
*/
var Store = [];

/**
* Selector constants used for grabbing elements
*/
var Selectors = {
  POPPER: '.tippy-popper',
  TOOLTIP: '.tippy-tooltip',
  CONTENT: '.tippy-tooltip-content',
  CIRCLE: '[x-circle]',
  ARROW: '[x-arrow]',
  TOOLTIPPED_EL: '[data-tooltipped]',
  CONTROLLER: '[data-tippy-controller]'

  /**
  * The default settings applied to each instance
  */
};var Defaults = {
  html: false,
  position: 'top',
  animation: 'shift',
  animateFill: true,
  arrow: false,
  arrowSize: 'regular',
  delay: 0,
  trigger: 'mouseenter focus',
  duration: 350,
  interactive: false,
  interactiveBorder: 2,
  theme: 'dark',
  size: 'regular',
  distance: 10,
  offset: 0,
  hideOnClick: true,
  multiple: false,
  followCursor: false,
  inertia: false,
  flipDuration: 350,
  sticky: false,
  stickyDuration: 200,
  appendTo: function appendTo() {
    return document.body;
  },
  zIndex: 9999,
  touchHold: false,
  performance: false,
  dynamicTitle: false,
  popperOptions: {}

  /**
  * The keys of the defaults object for reducing down into a new object
  * Used in `getIndividualSettings()`
  */
};var DefaultsKeys = Browser.SUPPORTED && Object.keys(Defaults);

/**
* Hides all poppers
* @param {Object} exclude - refData to exclude if needed
*/
function hideAllPoppers(exclude) {
  Store.forEach(function (refData) {
    var popper = refData.popper,
        tippyInstance = refData.tippyInstance,
        _refData$settings = refData.settings,
        appendTo = _refData$settings.appendTo,
        hideOnClick = _refData$settings.hideOnClick,
        trigger = _refData$settings.trigger;

    // Don't hide already hidden ones

    if (!appendTo.contains(popper)) return;

    // hideOnClick can have the truthy value of 'persistent', so strict check is needed
    var isHideOnClick = hideOnClick === true || trigger.indexOf('focus') !== -1;
    var isNotCurrentRef = !exclude || popper !== exclude.popper;

    if (isHideOnClick && isNotCurrentRef) {
      tippyInstance.hide(popper);
    }
  });
}

var matches = {};

if (typeof Element !== 'undefined') {
  var e = Element.prototype;
  matches = e.matches || e.matchesSelector || e.webkitMatchesSelector || e.mozMatchesSelector || e.msMatchesSelector || function (s) {
    var matches = (this.document || this.ownerDocument).querySelectorAll(s),
        i = matches.length;
    while (--i >= 0 && matches.item(i) !== this) {}
    return i > -1;
  };
}

var matches$1 = matches;

/**
* Ponyfill to get the closest parent element
* @param {Element} element - child of parent to be returned
* @param {String} parentSelector - selector to match the parent if found
* @return {Element}
*/
function closest(element, parentSelector) {
  var _closest = Element.prototype.closest || function (selector) {
    var el = this;
    while (el) {
      if (matches$1.call(el, selector)) {
        return el;
      }
      el = el.parentElement;
    }
  };

  return _closest.call(element, parentSelector);
}

/**
* Ponyfill for Array.prototype.find
* @param {Array} arr
* @param {Function} checkFn
* @return item in the array
*/
function find(arr, checkFn) {
  if (Array.prototype.find) {
    return arr.find(checkFn);
  }

  // use `filter` as fallback
  return arr.filter(checkFn)[0];
}

/**
* Adds the needed event listeners
*/
function bindEventListeners() {
  var touchHandler = function touchHandler() {
    Browser.touch = true;

    if (Browser.iOS()) {
      document.body.classList.add('tippy-touch');
    }

    if (Browser.dynamicInputDetection && window.performance) {
      document.addEventListener('mousemove', mousemoveHandler);
    }
  };

  var mousemoveHandler = function () {
    var time = void 0;

    return function () {
      var now = performance.now();

      // Chrome 60+ is 1 mousemove per rAF, use 20ms time difference
      if (now - time < 20) {
        Browser.touch = false;
        document.removeEventListener('mousemove', mousemoveHandler);
        if (!Browser.iOS()) {
          document.body.classList.remove('tippy-touch');
        }
      }

      time = now;
    };
  }();

  var clickHandler = function clickHandler(event) {
    // Simulated events dispatched on the document
    if (!(event.target instanceof Element)) {
      return hideAllPoppers();
    }

    var el = closest(event.target, Selectors.TOOLTIPPED_EL);
    var popper = closest(event.target, Selectors.POPPER);

    if (popper) {
      var ref = find(Store, function (ref) {
        return ref.popper === popper;
      });
      var interactive = ref.settings.interactive;

      if (interactive) return;
    }

    if (el) {
      var _ref = find(Store, function (ref) {
        return ref.el === el;
      });
      var _ref$settings = _ref.settings,
          hideOnClick = _ref$settings.hideOnClick,
          multiple = _ref$settings.multiple,
          trigger = _ref$settings.trigger;

      // Hide all poppers except the one belonging to the element that was clicked IF
      // `multiple` is false AND they are a touch user, OR
      // `multiple` is false AND it's triggered by a click

      if (!multiple && Browser.touch || !multiple && trigger.indexOf('click') !== -1) {
        return hideAllPoppers(_ref);
      }

      // If hideOnClick is not strictly true or triggered by a click don't hide poppers
      if (hideOnClick !== true || trigger.indexOf('click') !== -1) return;
    }

    // Don't trigger a hide for tippy controllers, and don't needlessly run loop
    if (closest(event.target, Selectors.CONTROLLER) || !document.querySelector(Selectors.POPPER)) return;

    hideAllPoppers();
  };

  var blurHandler = function blurHandler(event) {
    var _document = document,
        el = _document.activeElement;

    if (el && el.blur && matches$1.call(el, Selectors.TOOLTIPPED_EL)) {
      el.blur();
    }
  };

  // Hook events
  document.addEventListener('click', clickHandler);
  document.addEventListener('touchstart', touchHandler);
  window.addEventListener('blur', blurHandler);

  if (!Browser.SUPPORTS_TOUCH && (navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0)) {
    document.addEventListener('pointerdown', touchHandler);
  }
}

/**
* To run a single time, once DOM is presumed to be ready
* @return {Boolean} whether the function has run or not
*/
function init() {
  if (init.done) return false;
  init.done = true;

  bindEventListeners();

  return true;
}

/**
* Waits until next repaint to execute a fn
* @param {Function} fn
*/
function defer(fn) {
  window.requestAnimationFrame(function () {
    setTimeout(fn, 0);
  });
}

/**
* Returns the supported prefixed property - only `webkit` is needed, `moz`, `ms` and `o` are obsolete
* @param {String} property
* @return {String} - browser supported prefixed property
*/
function prefix(property) {
  var prefixes = [false, 'webkit'];
  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);

  for (var i = 0; i < prefixes.length; i++) {
    var _prefix = prefixes[i];
    var prefixedProp = _prefix ? '' + _prefix + upperProp : property;
    if (typeof window.document.body.style[prefixedProp] !== 'undefined') {
      return prefixedProp;
    }
  }

  return null;
}

/**
* Ponyfill for Array.prototype.findIndex
* @param {Array} arr
* @param {Function} checkFn
* @return index of the item in the array
*/
function findIndex(arr, checkFn) {
  if (Array.prototype.findIndex) {
    return arr.findIndex(checkFn);
  }

  // fallback
  return arr.indexOf(find(arr, checkFn));
}

/**
* Removes the title from the tooltipped element, setting `data-original-title`
* appropriately
* @param {Element} el
*/
function removeTitle(el) {
  var title = el.getAttribute('title');

  // Only set `data-original-title` attr if there is a title
  if (title) {
    el.setAttribute('data-original-title', title);
  }

  el.removeAttribute('title');
}

/**
* Determines if an element is visible in the viewport
* @param {Element} el
* @return {Boolean}
*/
function elementIsInViewport(el) {
  var rect = el.getBoundingClientRect();

  return rect.top >= 0 && rect.left >= 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && rect.right <= (window.innerWidth || document.documentElement.clientWidth);
}

/**
* Triggers a document repaint or reflow for CSS transition
* @param {Element} tooltip
* @param {Element} circle
*/
function triggerReflow(tooltip, circle) {
  // Safari needs the specific 'transform' property to be accessed
  circle ? window.getComputedStyle(circle)[prefix('transform')] : window.getComputedStyle(tooltip).opacity;
}

/**
* Modifies elements' class lists
* @param {Element[]} els - Array of elements
* @param {Function} callback
*/
function modifyClassList(els, callback) {
  els.forEach(function (el) {
    if (!el) return;
    callback(el.classList);
  });
}

/**
* Returns inner elements of the popper element
* @param {Element} popper
* @return {Object}
*/
function getInnerElements(popper) {
  return {
    tooltip: popper.querySelector(Selectors.TOOLTIP),
    circle: popper.querySelector(Selectors.CIRCLE),
    content: popper.querySelector(Selectors.CONTENT)
  };
}

/**
* Applies the transition duration to each element
* @param {Element[]} els - Array of elements
* @param {Number} duration
*/
function applyTransitionDuration(els, duration) {
  els.forEach(function (el) {
    if (!el) return;

    var isContent = matches$1.call(el, Selectors.CONTENT);

    var _duration = isContent ? Math.round(duration / 1.3) : duration;

    el.style[prefix('transitionDuration')] = _duration + 'ms';
  });
}

/**
* Determines if a popper is currently visible
* @param {Element} popper
* @return {Boolean}
*/
function isVisible(popper) {
  return popper.style.visibility === 'visible';
}

function noop() {}

/**
* Returns the non-shifted placement (e.g., 'bottom-start' => 'bottom')
* @param {String} placement
* @return {String}
*/
function getCorePlacement(placement) {
  return placement.replace(/-.+/, '');
}

/**
* Mousemove event listener callback method for follow cursor setting
* @param {MouseEvent} e
*/
function followCursorHandler(e) {
  var _this = this;

  var refData = find(Store, function (refData) {
    return refData.el === _this;
  });

  var popper = refData.popper,
      offset = refData.settings.offset;


  var position = getCorePlacement(popper.getAttribute('x-placement'));
  var halfPopperWidth = Math.round(popper.offsetWidth / 2);
  var halfPopperHeight = Math.round(popper.offsetHeight / 2);
  var viewportPadding = 5;
  var pageWidth = document.documentElement.offsetWidth || document.body.offsetWidth;

  var pageX = e.pageX,
      pageY = e.pageY;


  var x = void 0,
      y = void 0;

  switch (position) {
    case 'top':
      x = pageX - halfPopperWidth + offset;
      y = pageY - 2.25 * halfPopperHeight;
      break;
    case 'left':
      x = pageX - 2 * halfPopperWidth - 10;
      y = pageY - halfPopperHeight + offset;
      break;
    case 'right':
      x = pageX + halfPopperHeight;
      y = pageY - halfPopperHeight + offset;
      break;
    case 'bottom':
      x = pageX - halfPopperWidth + offset;
      y = pageY + halfPopperHeight / 1.5;
      break;
  }

  var isRightOverflowing = pageX + viewportPadding + halfPopperWidth + offset > pageWidth;
  var isLeftOverflowing = pageX - viewportPadding - halfPopperWidth + offset < 0;

  // Prevent left/right overflow
  if (position === 'top' || position === 'bottom') {
    if (isRightOverflowing) {
      x = pageWidth - viewportPadding - 2 * halfPopperWidth;
    }

    if (isLeftOverflowing) {
      x = viewportPadding;
    }
  }

  popper.style[prefix('transform')] = 'translate3d(' + x + 'px, ' + y + 'px, 0)';
}

/**
* Returns an array of elements based on the selector input
* @param {String|Element|Element[]} selector
* @return {Element[]}
*/
function getArrayOfElements(selector) {
  if (selector instanceof Element) {
    return [selector];
  }

  if (Array.isArray(selector)) {
    return selector;
  }

  if (selector.constructor.name === 'NodeList') {
    return [].slice.call(selector);
  }

  return [].slice.call(document.querySelectorAll(selector));
}

/**
* Prepares the callback functions for `show` and `hide` methods
* @param {Object} data
* @param {Number} duration
* @param {Function} callback - callback function to fire once transitions complete
*/
function onTransitionEnd(data, duration, callback) {
  // Make callback synchronous if duration is 0
  if (!duration) {
    return callback();
  }

  var _getInnerElements = getInnerElements(data.popper),
      tooltip = _getInnerElements.tooltip;

  var transitionendFired = false;

  var listenerCallback = function listenerCallback(e) {
    if (e.target === tooltip && !transitionendFired) {
      transitionendFired = true;
      callback();
    }
  };

  // Fire callback upon transition completion
  tooltip.addEventListener('webkitTransitionEnd', listenerCallback);
  tooltip.addEventListener('transitionend', listenerCallback);

  // Fallback: transitionend listener sometimes may not fire
  clearTimeout(data._transitionendTimeout);
  data._transitionendTimeout = setTimeout(function () {
    if (!transitionendFired) {
      callback();
    }
  }, duration);
}

/**!
 * @fileOverview Kickass library to create and place poppers near their reference elements.
 * @version 1.12.4
 * @license
 * Copyright (c) 2016 Federico Zivolo and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
var nativeHints = ['native code', '[object MutationObserverConstructor]'];

/**
 * Determine if a function is implemented natively (as opposed to a polyfill).
 * @method
 * @memberof Popper.Utils
 * @argument {Function | undefined} fn the function to check
 * @returns {Boolean}
 */
var isNative = function isNative(fn) {
  return nativeHints.some(function (hint) {
    return (fn || '').toString().indexOf(hint) > -1;
  });
};

var isBrowser = typeof window !== 'undefined';
var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];
var timeoutDuration = 0;
for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {
    timeoutDuration = 1;
    break;
  }
}

function microtaskDebounce(fn) {
  var scheduled = false;
  var i = 0;
  var elem = document.createElement('span');

  // MutationObserver provides a mechanism for scheduling microtasks, which
  // are scheduled *before* the next task. This gives us a way to debounce
  // a function but ensure it's called *before* the next paint.
  var observer = new MutationObserver(function () {
    fn();
    scheduled = false;
  });

  observer.observe(elem, { attributes: true });

  return function () {
    if (!scheduled) {
      scheduled = true;
      elem.setAttribute('x-index', i);
      i = i + 1; // don't use compund (+=) because it doesn't get optimized in V8
    }
  };
}

function taskDebounce(fn) {
  var scheduled = false;
  return function () {
    if (!scheduled) {
      scheduled = true;
      setTimeout(function () {
        scheduled = false;
        fn();
      }, timeoutDuration);
    }
  };
}

// It's common for MutationObserver polyfills to be seen in the wild, however
// these rely on Mutation Events which only occur when an element is connected
// to the DOM. The algorithm used in this module does not use a connected element,
// and so we must ensure that a *native* MutationObserver is available.
var supportsNativeMutationObserver = isBrowser && isNative(window.MutationObserver);

/**
* Create a debounced version of a method, that's asynchronously deferred
* but called in the minimum time possible.
*
* @method
* @memberof Popper.Utils
* @argument {Function} fn
* @returns {Function}
*/
var debounce = supportsNativeMutationObserver ? microtaskDebounce : taskDebounce;

/**
 * Check if the given variable is a function
 * @method
 * @memberof Popper.Utils
 * @argument {Any} functionToCheck - variable to check
 * @returns {Boolean} answer to: is a function?
 */
function isFunction(functionToCheck) {
  var getType = {};
  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
}

/**
 * Get CSS computed property of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Eement} element
 * @argument {String} property
 */
function getStyleComputedProperty(element, property) {
  if (element.nodeType !== 1) {
    return [];
  }
  // NOTE: 1 DOM access here
  var css = window.getComputedStyle(element, null);
  return property ? css[property] : css;
}

/**
 * Returns the parentNode or the host of the element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} parent
 */
function getParentNode(element) {
  if (element.nodeName === 'HTML') {
    return element;
  }
  return element.parentNode || element.host;
}

/**
 * Returns the scrolling parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} scroll parent
 */
function getScrollParent(element) {
  // Return body, `getScroll` will take care to get the correct `scrollTop` from it
  if (!element || ['HTML', 'BODY', '#document'].indexOf(element.nodeName) !== -1) {
    return window.document.body;
  }

  // Firefox want us to check `-x` and `-y` variations as well

  var _getStyleComputedProp = getStyleComputedProperty(element),
      overflow = _getStyleComputedProp.overflow,
      overflowX = _getStyleComputedProp.overflowX,
      overflowY = _getStyleComputedProp.overflowY;

  if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {
    return element;
  }

  return getScrollParent(getParentNode(element));
}

/**
 * Returns the offset parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} offset parent
 */
function getOffsetParent(element) {
  // NOTE: 1 DOM access here
  var offsetParent = element && element.offsetParent;
  var nodeName = offsetParent && offsetParent.nodeName;

  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {
    return window.document.documentElement;
  }

  // .offsetParent will return the closest TD or TABLE in case
  // no offsetParent is present, I hate this job...
  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {
    return getOffsetParent(offsetParent);
  }

  return offsetParent;
}

function isOffsetContainer(element) {
  var nodeName = element.nodeName;

  if (nodeName === 'BODY') {
    return false;
  }
  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;
}

/**
 * Finds the root node (document, shadowDOM root) of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} node
 * @returns {Element} root node
 */
function getRoot(node) {
  if (node.parentNode !== null) {
    return getRoot(node.parentNode);
  }

  return node;
}

/**
 * Finds the offset parent common to the two provided nodes
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element1
 * @argument {Element} element2
 * @returns {Element} common offset parent
 */
function findCommonOffsetParent(element1, element2) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
    return window.document.documentElement;
  }

  // Here we make sure to give as "start" the element that comes first in the DOM
  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
  var start = order ? element1 : element2;
  var end = order ? element2 : element1;

  // Get common ancestor container
  var range = document.createRange();
  range.setStart(start, 0);
  range.setEnd(end, 0);
  var commonAncestorContainer = range.commonAncestorContainer;

  // Both nodes are inside #document

  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
    if (isOffsetContainer(commonAncestorContainer)) {
      return commonAncestorContainer;
    }

    return getOffsetParent(commonAncestorContainer);
  }

  // one of the nodes is inside shadowDOM, find which one
  var element1root = getRoot(element1);
  if (element1root.host) {
    return findCommonOffsetParent(element1root.host, element2);
  } else {
    return findCommonOffsetParent(element1, getRoot(element2).host);
  }
}

/**
 * Gets the scroll value of the given element in the given side (top and left)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {String} side `top` or `left`
 * @returns {number} amount of scrolled pixels
 */
function getScroll(element) {
  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';

  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
  var nodeName = element.nodeName;

  if (nodeName === 'BODY' || nodeName === 'HTML') {
    var html = window.document.documentElement;
    var scrollingElement = window.document.scrollingElement || html;
    return scrollingElement[upperSide];
  }

  return element[upperSide];
}

/*
 * Sum or subtract the element scroll values (left and top) from a given rect object
 * @method
 * @memberof Popper.Utils
 * @param {Object} rect - Rect object you want to change
 * @param {HTMLElement} element - The element from the function reads the scroll values
 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
 * @return {Object} rect - The modifier rect object
 */
function includeScroll(rect, element) {
  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var scrollTop = getScroll(element, 'top');
  var scrollLeft = getScroll(element, 'left');
  var modifier = subtract ? -1 : 1;
  rect.top += scrollTop * modifier;
  rect.bottom += scrollTop * modifier;
  rect.left += scrollLeft * modifier;
  rect.right += scrollLeft * modifier;
  return rect;
}

/*
 * Helper to detect borders of a given element
 * @method
 * @memberof Popper.Utils
 * @param {CSSStyleDeclaration} styles
 * Result of `getStyleComputedProperty` on the given element
 * @param {String} axis - `x` or `y`
 * @return {number} borders - The borders size of the given axis
 */

function getBordersSize(styles, axis) {
  var sideA = axis === 'x' ? 'Left' : 'Top';
  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';

  return +styles['border' + sideA + 'Width'].split('px')[0] + +styles['border' + sideB + 'Width'].split('px')[0];
}

/**
 * Tells if you are running Internet Explorer 10
 * @method
 * @memberof Popper.Utils
 * @returns {Boolean} isIE10
 */
var isIE10 = undefined;

var isIE10$1 = function isIE10$1() {
  if (isIE10 === undefined) {
    isIE10 = navigator.appVersion.indexOf('MSIE 10') !== -1;
  }
  return isIE10;
};

function getSize(axis, body, html, computedStyle, includeScroll) {
  return Math.max(body['offset' + axis], includeScroll ? body['scroll' + axis] : 0, html['client' + axis], html['offset' + axis], includeScroll ? html['scroll' + axis] : 0, isIE10$1() ? html['offset' + axis] + computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')] + computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')] : 0);
}

function getWindowSizes() {
  var includeScroll = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

  var body = window.document.body;
  var html = window.document.documentElement;
  var computedStyle = isIE10$1() && window.getComputedStyle(html);

  return {
    height: getSize('Height', body, html, computedStyle, includeScroll),
    width: getSize('Width', body, html, computedStyle, includeScroll)
  };
}

var classCallCheck = function classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var defineProperty = function defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/**
 * Given element offsets, generate an output similar to getBoundingClientRect
 * @method
 * @memberof Popper.Utils
 * @argument {Object} offsets
 * @returns {Object} ClientRect like output
 */
function getClientRect(offsets) {
  return _extends({}, offsets, {
    right: offsets.left + offsets.width,
    bottom: offsets.top + offsets.height
  });
}

/**
 * Get bounding client rect of given element
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} element
 * @return {Object} client rect
 */
function getBoundingClientRect(element) {
  var rect = {};

  // IE10 10 FIX: Please, don't ask, the element isn't
  // considered in DOM in some circumstances...
  // This isn't reproducible in IE10 compatibility mode of IE11
  if (isIE10$1()) {
    try {
      rect = element.getBoundingClientRect();
      var scrollTop = getScroll(element, 'top');
      var scrollLeft = getScroll(element, 'left');
      rect.top += scrollTop;
      rect.left += scrollLeft;
      rect.bottom += scrollTop;
      rect.right += scrollLeft;
    } catch (err) {}
  } else {
    rect = element.getBoundingClientRect();
  }

  var result = {
    left: rect.left,
    top: rect.top,
    width: rect.right - rect.left,
    height: rect.bottom - rect.top
  };

  // subtract scrollbar size from sizes
  var sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};
  var width = sizes.width || element.clientWidth || result.right - result.left;
  var height = sizes.height || element.clientHeight || result.bottom - result.top;

  var horizScrollbar = element.offsetWidth - width;
  var vertScrollbar = element.offsetHeight - height;

  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
  // we make this check conditional for performance reasons
  if (horizScrollbar || vertScrollbar) {
    var styles = getStyleComputedProperty(element);
    horizScrollbar -= getBordersSize(styles, 'x');
    vertScrollbar -= getBordersSize(styles, 'y');

    result.width -= horizScrollbar;
    result.height -= vertScrollbar;
  }

  return getClientRect(result);
}

function getOffsetRectRelativeToArbitraryNode(children, parent) {
  var isIE10 = isIE10$1();
  var isHTML = parent.nodeName === 'HTML';
  var childrenRect = getBoundingClientRect(children);
  var parentRect = getBoundingClientRect(parent);
  var scrollParent = getScrollParent(children);

  var styles = getStyleComputedProperty(parent);
  var borderTopWidth = +styles.borderTopWidth.split('px')[0];
  var borderLeftWidth = +styles.borderLeftWidth.split('px')[0];

  var offsets = getClientRect({
    top: childrenRect.top - parentRect.top - borderTopWidth,
    left: childrenRect.left - parentRect.left - borderLeftWidth,
    width: childrenRect.width,
    height: childrenRect.height
  });
  offsets.marginTop = 0;
  offsets.marginLeft = 0;

  // Subtract margins of documentElement in case it's being used as parent
  // we do this only on HTML because it's the only element that behaves
  // differently when margins are applied to it. The margins are included in
  // the box of the documentElement, in the other cases not.
  if (!isIE10 && isHTML) {
    var marginTop = +styles.marginTop.split('px')[0];
    var marginLeft = +styles.marginLeft.split('px')[0];

    offsets.top -= borderTopWidth - marginTop;
    offsets.bottom -= borderTopWidth - marginTop;
    offsets.left -= borderLeftWidth - marginLeft;
    offsets.right -= borderLeftWidth - marginLeft;

    // Attach marginTop and marginLeft because in some circumstances we may need them
    offsets.marginTop = marginTop;
    offsets.marginLeft = marginLeft;
  }

  if (isIE10 ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {
    offsets = includeScroll(offsets, parent);
  }

  return offsets;
}

function getViewportOffsetRectRelativeToArtbitraryNode(element) {
  var html = window.document.documentElement;
  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
  var width = Math.max(html.clientWidth, window.innerWidth || 0);
  var height = Math.max(html.clientHeight, window.innerHeight || 0);

  var scrollTop = getScroll(html);
  var scrollLeft = getScroll(html, 'left');

  var offset = {
    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
    width: width,
    height: height
  };

  return getClientRect(offset);
}

/**
 * Check if the given element is fixed or is inside a fixed parent
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {Element} customContainer
 * @returns {Boolean} answer to "isFixed?"
 */
function isFixed(element) {
  var nodeName = element.nodeName;
  if (nodeName === 'BODY' || nodeName === 'HTML') {
    return false;
  }
  if (getStyleComputedProperty(element, 'position') === 'fixed') {
    return true;
  }
  return isFixed(getParentNode(element));
}

/**
 * Computed the boundaries limits and return them
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} popper
 * @param {HTMLElement} reference
 * @param {number} padding
 * @param {HTMLElement} boundariesElement - Element used to define the boundaries
 * @returns {Object} Coordinates of the boundaries
 */
function getBoundaries(popper, reference, padding, boundariesElement) {
  // NOTE: 1 DOM access here
  var boundaries = { top: 0, left: 0 };
  var offsetParent = findCommonOffsetParent(popper, reference);

  // Handle viewport case
  if (boundariesElement === 'viewport') {
    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent);
  } else {
    // Handle other cases based on DOM element used as boundaries
    var boundariesNode = void 0;
    if (boundariesElement === 'scrollParent') {
      boundariesNode = getScrollParent(getParentNode(popper));
      if (boundariesNode.nodeName === 'BODY') {
        boundariesNode = window.document.documentElement;
      }
    } else if (boundariesElement === 'window') {
      boundariesNode = window.document.documentElement;
    } else {
      boundariesNode = boundariesElement;
    }

    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent);

    // In case of HTML, we need a different computation
    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {
      var _getWindowSizes = getWindowSizes(false),
          height = _getWindowSizes.height,
          width = _getWindowSizes.width;

      boundaries.top += offsets.top - offsets.marginTop;
      boundaries.bottom = height + offsets.top;
      boundaries.left += offsets.left - offsets.marginLeft;
      boundaries.right = width + offsets.left;
    } else {
      // for all the other DOM elements, this one is good
      boundaries = offsets;
    }
  }

  // Add paddings
  boundaries.left += padding;
  boundaries.top += padding;
  boundaries.right -= padding;
  boundaries.bottom -= padding;

  return boundaries;
}

function getArea(_ref) {
  var width = _ref.width,
      height = _ref.height;

  return width * height;
}

/**
 * Utility used to transform the `auto` placement to the placement with more
 * available space.
 * @method
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;

  if (placement.indexOf('auto') === -1) {
    return placement;
  }

  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);

  var rects = {
    top: {
      width: boundaries.width,
      height: refRect.top - boundaries.top
    },
    right: {
      width: boundaries.right - refRect.right,
      height: boundaries.height
    },
    bottom: {
      width: boundaries.width,
      height: boundaries.bottom - refRect.bottom
    },
    left: {
      width: refRect.left - boundaries.left,
      height: boundaries.height
    }
  };

  var sortedAreas = Object.keys(rects).map(function (key) {
    return _extends({
      key: key
    }, rects[key], {
      area: getArea(rects[key])
    });
  }).sort(function (a, b) {
    return b.area - a.area;
  });

  var filteredAreas = sortedAreas.filter(function (_ref2) {
    var width = _ref2.width,
        height = _ref2.height;
    return width >= popper.clientWidth && height >= popper.clientHeight;
  });

  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;

  var variation = placement.split('-')[1];

  return computedPlacement + (variation ? '-' + variation : '');
}

/**
 * Get offsets to the reference element
 * @method
 * @memberof Popper.Utils
 * @param {Object} state
 * @param {Element} popper - the popper element
 * @param {Element} reference - the reference element (the popper will be relative to this)
 * @returns {Object} An object containing the offsets which will be applied to the popper
 */
function getReferenceOffsets(state, popper, reference) {
  var commonOffsetParent = findCommonOffsetParent(popper, reference);
  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent);
}

/**
 * Get the outer sizes of the given element (offset size + margins)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Object} object containing width and height properties
 */
function getOuterSizes(element) {
  var styles = window.getComputedStyle(element);
  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);
  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);
  var result = {
    width: element.offsetWidth + y,
    height: element.offsetHeight + x
  };
  return result;
}

/**
 * Get the opposite placement of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement
 * @returns {String} flipped placement
 */
function getOppositePlacement(placement) {
  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash[matched];
  });
}

/**
 * Get offsets to the popper
 * @method
 * @memberof Popper.Utils
 * @param {Object} position - CSS position the Popper will get applied
 * @param {HTMLElement} popper - the popper element
 * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
 * @param {String} placement - one of the valid placement options
 * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
 */
function getPopperOffsets(popper, referenceOffsets, placement) {
  placement = placement.split('-')[0];

  // Get popper node sizes
  var popperRect = getOuterSizes(popper);

  // Add position, width and height to our offsets object
  var popperOffsets = {
    width: popperRect.width,
    height: popperRect.height
  };

  // depending by the popper placement we have to compute its offsets slightly differently
  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;
  var mainSide = isHoriz ? 'top' : 'left';
  var secondarySide = isHoriz ? 'left' : 'top';
  var measurement = isHoriz ? 'height' : 'width';
  var secondaryMeasurement = !isHoriz ? 'height' : 'width';

  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;
  if (placement === secondarySide) {
    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
  } else {
    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
  }

  return popperOffsets;
}

/**
 * Mimics the `find` method of Array
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */
function find$1(arr, check) {
  // use native find if supported
  if (Array.prototype.find) {
    return arr.find(check);
  }

  // use `filter` to obtain the same behavior of `find`
  return arr.filter(check)[0];
}

/**
 * Return the index of the matching object
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */
function findIndex$1(arr, prop, value) {
  // use native findIndex if supported
  if (Array.prototype.findIndex) {
    return arr.findIndex(function (cur) {
      return cur[prop] === value;
    });
  }

  // use `find` + `indexOf` if `findIndex` isn't supported
  var match = find$1(arr, function (obj) {
    return obj[prop] === value;
  });
  return arr.indexOf(match);
}

/**
 * Loop trough the list of modifiers and run them in order,
 * each of them will then edit the data object.
 * @method
 * @memberof Popper.Utils
 * @param {dataObject} data
 * @param {Array} modifiers
 * @param {String} ends - Optional modifier name used as stopper
 * @returns {dataObject}
 */
function runModifiers(modifiers, data, ends) {
  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex$1(modifiers, 'name', ends));

  modifiersToRun.forEach(function (modifier) {
    if (modifier.function) {
      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
    }
    var fn = modifier.function || modifier.fn;
    if (modifier.enabled && isFunction(fn)) {
      // Add properties to offsets to make them a complete clientRect object
      // we do this before each modifier to make sure the previous one doesn't
      // mess with these values
      data.offsets.popper = getClientRect(data.offsets.popper);
      data.offsets.reference = getClientRect(data.offsets.reference);

      data = fn(data, modifier);
    }
  });

  return data;
}

/**
 * Updates the position of the popper, computing the new offsets and applying
 * the new style.<br />
 * Prefer `scheduleUpdate` over `update` because of performance reasons.
 * @method
 * @memberof Popper
 */
function update() {
  // if popper is destroyed, don't perform any further update
  if (this.state.isDestroyed) {
    return;
  }

  var data = {
    instance: this,
    styles: {},
    arrowStyles: {},
    attributes: {},
    flipped: false,
    offsets: {}
  };

  // compute reference element offsets
  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference);

  // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value
  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);

  // store the computed placement inside `originalPlacement`
  data.originalPlacement = data.placement;

  // compute the popper offsets
  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);
  data.offsets.popper.position = 'absolute';

  // run the modifiers
  data = runModifiers(this.modifiers, data);

  // the first `update` will call `onCreate` callback
  // the other ones will call `onUpdate` callback
  if (!this.state.isCreated) {
    this.state.isCreated = true;
    this.options.onCreate(data);
  } else {
    this.options.onUpdate(data);
  }
}

/**
 * Helper used to know if the given modifier is enabled.
 * @method
 * @memberof Popper.Utils
 * @returns {Boolean}
 */
function isModifierEnabled(modifiers, modifierName) {
  return modifiers.some(function (_ref) {
    var name = _ref.name,
        enabled = _ref.enabled;
    return enabled && name === modifierName;
  });
}

/**
 * Get the prefixed supported property name
 * @method
 * @memberof Popper.Utils
 * @argument {String} property (camelCase)
 * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
 */
function getSupportedPropertyName(property) {
  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];
  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);

  for (var i = 0; i < prefixes.length - 1; i++) {
    var prefix = prefixes[i];
    var toCheck = prefix ? '' + prefix + upperProp : property;
    if (typeof window.document.body.style[toCheck] !== 'undefined') {
      return toCheck;
    }
  }
  return null;
}

/**
 * Destroy the popper
 * @method
 * @memberof Popper
 */
function destroy() {
  this.state.isDestroyed = true;

  // touch DOM only if `applyStyle` modifier is enabled
  if (isModifierEnabled(this.modifiers, 'applyStyle')) {
    this.popper.removeAttribute('x-placement');
    this.popper.style.left = '';
    this.popper.style.position = '';
    this.popper.style.top = '';
    this.popper.style[getSupportedPropertyName('transform')] = '';
  }

  this.disableEventListeners();

  // remove the popper if user explicity asked for the deletion on destroy
  // do not use `remove` because IE11 doesn't support it
  if (this.options.removeOnDestroy) {
    this.popper.parentNode.removeChild(this.popper);
  }
  return this;
}

function attachToScrollParents(scrollParent, event, callback, scrollParents) {
  var isBody = scrollParent.nodeName === 'BODY';
  var target = isBody ? window : scrollParent;
  target.addEventListener(event, callback, { passive: true });

  if (!isBody) {
    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
  }
  scrollParents.push(target);
}

/**
 * Setup needed event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */
function setupEventListeners(reference, options, state, updateBound) {
  // Resize event listener on window
  state.updateBound = updateBound;
  window.addEventListener('resize', state.updateBound, { passive: true });

  // Scroll event listener on scroll parents
  var scrollElement = getScrollParent(reference);
  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);
  state.scrollElement = scrollElement;
  state.eventsEnabled = true;

  return state;
}

/**
 * It will add resize/scroll events and start recalculating
 * position of the popper element when they are triggered.
 * @method
 * @memberof Popper
 */
function enableEventListeners() {
  if (!this.state.eventsEnabled) {
    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
  }
}

/**
 * Remove event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */
function removeEventListeners(reference, state) {
  // Remove resize event listener on window
  window.removeEventListener('resize', state.updateBound);

  // Remove scroll event listener on scroll parents
  state.scrollParents.forEach(function (target) {
    target.removeEventListener('scroll', state.updateBound);
  });

  // Reset state
  state.updateBound = null;
  state.scrollParents = [];
  state.scrollElement = null;
  state.eventsEnabled = false;
  return state;
}

/**
 * It will remove resize/scroll events and won't recalculate popper position
 * when they are triggered. It also won't trigger onUpdate callback anymore,
 * unless you call `update` method manually.
 * @method
 * @memberof Popper
 */
function disableEventListeners() {
  if (this.state.eventsEnabled) {
    window.cancelAnimationFrame(this.scheduleUpdate);
    this.state = removeEventListeners(this.reference, this.state);
  }
}

/**
 * Tells if a given input is a number
 * @method
 * @memberof Popper.Utils
 * @param {*} input to check
 * @return {Boolean}
 */
function isNumeric(n) {
  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
}

/**
 * Set the style to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the style to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */
function setStyles(element, styles) {
  Object.keys(styles).forEach(function (prop) {
    var unit = '';
    // add unit if the value is numeric and is one of the following
    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {
      unit = 'px';
    }
    element.style[prop] = styles[prop] + unit;
  });
}

/**
 * Set the attributes to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the attributes to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */
function setAttributes(element, attributes) {
  Object.keys(attributes).forEach(function (prop) {
    var value = attributes[prop];
    if (value !== false) {
      element.setAttribute(prop, attributes[prop]);
    } else {
      element.removeAttribute(prop);
    }
  });
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} data.styles - List of style properties - values to apply to popper element
 * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The same data object
 */
function applyStyle(data) {
  // any property present in `data.styles` will be applied to the popper,
  // in this way we can make the 3rd party modifiers add custom styles to it
  // Be aware, modifiers could override the properties defined in the previous
  // lines of this modifier!
  setStyles(data.instance.popper, data.styles);

  // any property present in `data.attributes` will be applied to the popper,
  // they will be set as HTML attributes of the element
  setAttributes(data.instance.popper, data.attributes);

  // if arrowElement is defined and arrowStyles has some properties
  if (data.arrowElement && Object.keys(data.arrowStyles).length) {
    setStyles(data.arrowElement, data.arrowStyles);
  }

  return data;
}

/**
 * Set the x-placement attribute before everything else because it could be used
 * to add margins to the popper margins needs to be calculated to get the
 * correct popper offsets.
 * @method
 * @memberof Popper.modifiers
 * @param {HTMLElement} reference - The reference element used to position the popper
 * @param {HTMLElement} popper - The HTML element used as popper.
 * @param {Object} options - Popper.js options
 */
function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
  // compute reference element offsets
  var referenceOffsets = getReferenceOffsets(state, popper, reference);

  // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value
  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);

  popper.setAttribute('x-placement', placement);

  // Apply `position` to popper before anything else because
  // without the position applied we can't guarantee correct computations
  setStyles(popper, { position: 'absolute' });

  return options;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function computeStyle(data, options) {
  var x = options.x,
      y = options.y;
  var popper = data.offsets.popper;

  // Remove this legacy support in Popper.js v2

  var legacyGpuAccelerationOption = find$1(data.instance.modifiers, function (modifier) {
    return modifier.name === 'applyStyle';
  }).gpuAcceleration;
  if (legacyGpuAccelerationOption !== undefined) {
    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
  }
  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;

  var offsetParent = getOffsetParent(data.instance.popper);
  var offsetParentRect = getBoundingClientRect(offsetParent);

  // Styles
  var styles = {
    position: popper.position
  };

  // floor sides to avoid blurry text
  var offsets = {
    left: Math.floor(popper.left),
    top: Math.floor(popper.top),
    bottom: Math.floor(popper.bottom),
    right: Math.floor(popper.right)
  };

  var sideA = x === 'bottom' ? 'top' : 'bottom';
  var sideB = y === 'right' ? 'left' : 'right';

  // if gpuAcceleration is set to `true` and transform is supported,
  //  we use `translate3d` to apply the position to the popper we
  // automatically use the supported prefixed version if needed
  var prefixedProperty = getSupportedPropertyName('transform');

  // now, let's make a step back and look at this code closely (wtf?)
  // If the content of the popper grows once it's been positioned, it
  // may happen that the popper gets misplaced because of the new content
  // overflowing its reference element
  // To avoid this problem, we provide two options (x and y), which allow
  // the consumer to define the offset origin.
  // If we position a popper on top of a reference element, we can set
  // `x` to `top` to make the popper grow towards its top instead of
  // its bottom.
  var left = void 0,
      top = void 0;
  if (sideA === 'bottom') {
    top = -offsetParentRect.height + offsets.bottom;
  } else {
    top = offsets.top;
  }
  if (sideB === 'right') {
    left = -offsetParentRect.width + offsets.right;
  } else {
    left = offsets.left;
  }
  if (gpuAcceleration && prefixedProperty) {
    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
    styles[sideA] = 0;
    styles[sideB] = 0;
    styles.willChange = 'transform';
  } else {
    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
    var invertTop = sideA === 'bottom' ? -1 : 1;
    var invertLeft = sideB === 'right' ? -1 : 1;
    styles[sideA] = top * invertTop;
    styles[sideB] = left * invertLeft;
    styles.willChange = sideA + ', ' + sideB;
  }

  // Attributes
  var attributes = {
    'x-placement': data.placement
  };

  // Update `data` attributes, styles and arrowStyles
  data.attributes = _extends({}, attributes, data.attributes);
  data.styles = _extends({}, styles, data.styles);
  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);

  return data;
}

/**
 * Helper used to know if the given modifier depends from another one.<br />
 * It checks if the needed modifier is listed and enabled.
 * @method
 * @memberof Popper.Utils
 * @param {Array} modifiers - list of modifiers
 * @param {String} requestingName - name of requesting modifier
 * @param {String} requestedName - name of requested modifier
 * @returns {Boolean}
 */
function isModifierRequired(modifiers, requestingName, requestedName) {
  var requesting = find$1(modifiers, function (_ref) {
    var name = _ref.name;
    return name === requestingName;
  });

  var isRequired = !!requesting && modifiers.some(function (modifier) {
    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
  });

  if (!isRequired) {
    var _requesting = '`' + requestingName + '`';
    var requested = '`' + requestedName + '`';
    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
  }
  return isRequired;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function arrow(data, options) {
  // arrow depends on keepTogether in order to work
  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {
    return data;
  }

  var arrowElement = options.element;

  // if arrowElement is a string, suppose it's a CSS selector
  if (typeof arrowElement === 'string') {
    arrowElement = data.instance.popper.querySelector(arrowElement);

    // if arrowElement is not found, don't run the modifier
    if (!arrowElement) {
      return data;
    }
  } else {
    // if the arrowElement isn't a query selector we must check that the
    // provided DOM node is child of its popper node
    if (!data.instance.popper.contains(arrowElement)) {
      console.warn('WARNING: `arrow.element` must be child of its popper element!');
      return data;
    }
  }

  var placement = data.placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var isVertical = ['left', 'right'].indexOf(placement) !== -1;

  var len = isVertical ? 'height' : 'width';
  var sideCapitalized = isVertical ? 'Top' : 'Left';
  var side = sideCapitalized.toLowerCase();
  var altSide = isVertical ? 'left' : 'top';
  var opSide = isVertical ? 'bottom' : 'right';
  var arrowElementSize = getOuterSizes(arrowElement)[len];

  //
  // extends keepTogether behavior making sure the popper and its
  // reference have enough pixels in conjuction
  //

  // top/left side
  if (reference[opSide] - arrowElementSize < popper[side]) {
    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
  }
  // bottom/right side
  if (reference[side] + arrowElementSize > popper[opSide]) {
    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
  }

  // compute center of the popper
  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;

  // Compute the sideValue using the updated popper offsets
  // take popper margin in account because we don't have this info available
  var popperMarginSide = getStyleComputedProperty(data.instance.popper, 'margin' + sideCapitalized).replace('px', '');
  var sideValue = center - getClientRect(data.offsets.popper)[side] - popperMarginSide;

  // prevent arrowElement from being placed not contiguously to its popper
  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);

  data.arrowElement = arrowElement;
  data.offsets.arrow = {};
  data.offsets.arrow[side] = Math.round(sideValue);
  data.offsets.arrow[altSide] = ''; // make sure to unset any eventual altSide value from the DOM node

  return data;
}

/**
 * Get the opposite placement variation of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement variation
 * @returns {String} flipped placement variation
 */
function getOppositeVariation(variation) {
  if (variation === 'end') {
    return 'start';
  } else if (variation === 'start') {
    return 'end';
  }
  return variation;
}

/**
 * List of accepted placements to use as values of the `placement` option.<br />
 * Valid placements are:
 * - `auto`
 * - `top`
 * - `right`
 * - `bottom`
 * - `left`
 *
 * Each placement can have a variation from this list:
 * - `-start`
 * - `-end`
 *
 * Variations are interpreted easily if you think of them as the left to right
 * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
 * is right.<br />
 * Vertically (`left` and `right`), `start` is top and `end` is bottom.
 *
 * Some valid examples are:
 * - `top-end` (on top of reference, right aligned)
 * - `right-start` (on right of reference, top aligned)
 * - `bottom` (on bottom, centered)
 * - `auto-right` (on the side with more space available, alignment depends by placement)
 *
 * @static
 * @type {Array}
 * @enum {String}
 * @readonly
 * @method placements
 * @memberof Popper
 */
var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];

// Get rid of `auto` `auto-start` and `auto-end`
var validPlacements = placements.slice(3);

/**
 * Given an initial placement, returns all the subsequent placements
 * clockwise (or counter-clockwise).
 *
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement - A valid placement (it accepts variations)
 * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
 * @returns {Array} placements including their variations
 */
function clockwise(placement) {
  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var index = validPlacements.indexOf(placement);
  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
  return counter ? arr.reverse() : arr;
}

var BEHAVIORS = {
  FLIP: 'flip',
  CLOCKWISE: 'clockwise',
  COUNTERCLOCKWISE: 'counterclockwise'
};

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function flip(data, options) {
  // if `inner` modifier is enabled, we can't use the `flip` modifier
  if (isModifierEnabled(data.instance.modifiers, 'inner')) {
    return data;
  }

  if (data.flipped && data.placement === data.originalPlacement) {
    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
    return data;
  }

  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement);

  var placement = data.placement.split('-')[0];
  var placementOpposite = getOppositePlacement(placement);
  var variation = data.placement.split('-')[1] || '';

  var flipOrder = [];

  switch (options.behavior) {
    case BEHAVIORS.FLIP:
      flipOrder = [placement, placementOpposite];
      break;
    case BEHAVIORS.CLOCKWISE:
      flipOrder = clockwise(placement);
      break;
    case BEHAVIORS.COUNTERCLOCKWISE:
      flipOrder = clockwise(placement, true);
      break;
    default:
      flipOrder = options.behavior;
  }

  flipOrder.forEach(function (step, index) {
    if (placement !== step || flipOrder.length === index + 1) {
      return data;
    }

    placement = data.placement.split('-')[0];
    placementOpposite = getOppositePlacement(placement);

    var popperOffsets = data.offsets.popper;
    var refOffsets = data.offsets.reference;

    // using floor because the reference offsets may contain decimals we are not going to consider here
    var floor = Math.floor;
    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);

    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);

    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;

    // flip the variation if required
    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);

    if (overlapsRef || overflowsBoundaries || flippedVariation) {
      // this boolean to detect any flip loop
      data.flipped = true;

      if (overlapsRef || overflowsBoundaries) {
        placement = flipOrder[index + 1];
      }

      if (flippedVariation) {
        variation = getOppositeVariation(variation);
      }

      data.placement = placement + (variation ? '-' + variation : '');

      // this object contains `position`, we want to preserve it along with
      // any additional property we may add in the future
      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));

      data = runModifiers(data.instance.modifiers, data, 'flip');
    }
  });
  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function keepTogether(data) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var placement = data.placement.split('-')[0];
  var floor = Math.floor;
  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
  var side = isVertical ? 'right' : 'bottom';
  var opSide = isVertical ? 'left' : 'top';
  var measurement = isVertical ? 'width' : 'height';

  if (popper[side] < floor(reference[opSide])) {
    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
  }
  if (popper[opSide] > floor(reference[side])) {
    data.offsets.popper[opSide] = floor(reference[side]);
  }

  return data;
}

/**
 * Converts a string containing value + unit into a px value number
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} str - Value + unit string
 * @argument {String} measurement - `height` or `width`
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @returns {Number|String}
 * Value in pixels, or original string if no values were extracted
 */
function toValue(str, measurement, popperOffsets, referenceOffsets) {
  // separate value from unit
  var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
  var value = +split[1];
  var unit = split[2];

  // If it's not a number it's an operator, I guess
  if (!value) {
    return str;
  }

  if (unit.indexOf('%') === 0) {
    var element = void 0;
    switch (unit) {
      case '%p':
        element = popperOffsets;
        break;
      case '%':
      case '%r':
      default:
        element = referenceOffsets;
    }

    var rect = getClientRect(element);
    return rect[measurement] / 100 * value;
  } else if (unit === 'vh' || unit === 'vw') {
    // if is a vh or vw, we calculate the size based on the viewport
    var size = void 0;
    if (unit === 'vh') {
      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
    } else {
      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
    }
    return size / 100 * value;
  } else {
    // if is an explicit pixel unit, we get rid of the unit and keep the value
    // if is an implicit unit, it's px, and we return just the value
    return value;
  }
}

/**
 * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} offset
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @argument {String} basePlacement
 * @returns {Array} a two cells array with x and y offsets in numbers
 */
function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {
  var offsets = [0, 0];

  // Use height if placement is left or right and index is 0 otherwise use width
  // in this way the first offset will use an axis and the second one
  // will use the other one
  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;

  // Split the offset string to obtain a list of values and operands
  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)
  var fragments = offset.split(/(\+|\-)/).map(function (frag) {
    return frag.trim();
  });

  // Detect if the offset string contains a pair of values or a single one
  // they could be separated by comma or space
  var divider = fragments.indexOf(find$1(fragments, function (frag) {
    return frag.search(/,|\s/) !== -1;
  }));

  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {
    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
  }

  // If divider is found, we divide the list of values and operands to divide
  // them by ofset X and Y.
  var splitRegex = /\s*,\s*|\s+/;
  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];

  // Convert the values with units to absolute pixels to allow our computations
  ops = ops.map(function (op, index) {
    // Most of the units rely on the orientation of the popper
    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';
    var mergeWithPrevious = false;
    return op
    // This aggregates any `+` or `-` sign that aren't considered operators
    // e.g.: 10 + +5 => [10, +, +5]
    .reduce(function (a, b) {
      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {
        a[a.length - 1] = b;
        mergeWithPrevious = true;
        return a;
      } else if (mergeWithPrevious) {
        a[a.length - 1] += b;
        mergeWithPrevious = false;
        return a;
      } else {
        return a.concat(b);
      }
    }, [])
    // Here we convert the string values into number values (in px)
    .map(function (str) {
      return toValue(str, measurement, popperOffsets, referenceOffsets);
    });
  });

  // Loop trough the offsets arrays and execute the operations
  ops.forEach(function (op, index) {
    op.forEach(function (frag, index2) {
      if (isNumeric(frag)) {
        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
      }
    });
  });
  return offsets;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @argument {Number|String} options.offset=0
 * The offset value as described in the modifier description
 * @returns {Object} The data object, properly modified
 */
function offset(data, _ref) {
  var offset = _ref.offset;
  var placement = data.placement,
      _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var basePlacement = placement.split('-')[0];

  var offsets = void 0;
  if (isNumeric(+offset)) {
    offsets = [+offset, 0];
  } else {
    offsets = parseOffset(offset, popper, reference, basePlacement);
  }

  if (basePlacement === 'left') {
    popper.top += offsets[0];
    popper.left -= offsets[1];
  } else if (basePlacement === 'right') {
    popper.top += offsets[0];
    popper.left += offsets[1];
  } else if (basePlacement === 'top') {
    popper.left += offsets[0];
    popper.top -= offsets[1];
  } else if (basePlacement === 'bottom') {
    popper.left += offsets[0];
    popper.top += offsets[1];
  }

  data.popper = popper;
  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function preventOverflow(data, options) {
  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);

  // If offsetParent is the reference element, we really want to
  // go one step up and use the next offsetParent as reference to
  // avoid to make this modifier completely useless and look like broken
  if (data.instance.reference === boundariesElement) {
    boundariesElement = getOffsetParent(boundariesElement);
  }

  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement);
  options.boundaries = boundaries;

  var order = options.priority;
  var popper = data.offsets.popper;

  var check = {
    primary: function primary(placement) {
      var value = popper[placement];
      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
        value = Math.max(popper[placement], boundaries[placement]);
      }
      return defineProperty({}, placement, value);
    },
    secondary: function secondary(placement) {
      var mainSide = placement === 'right' ? 'left' : 'top';
      var value = popper[mainSide];
      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
      }
      return defineProperty({}, mainSide, value);
    }
  };

  order.forEach(function (placement) {
    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';
    popper = _extends({}, popper, check[side](placement));
  });

  data.offsets.popper = popper;

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function shift(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var shiftvariation = placement.split('-')[1];

  // if shift shiftvariation is specified, run the modifier
  if (shiftvariation) {
    var _data$offsets = data.offsets,
        reference = _data$offsets.reference,
        popper = _data$offsets.popper;

    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;
    var side = isVertical ? 'left' : 'top';
    var measurement = isVertical ? 'width' : 'height';

    var shiftOffsets = {
      start: defineProperty({}, side, reference[side]),
      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
    };

    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);
  }

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function hide(data) {
  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {
    return data;
  }

  var refRect = data.offsets.reference;
  var bound = find$1(data.instance.modifiers, function (modifier) {
    return modifier.name === 'preventOverflow';
  }).boundaries;

  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === true) {
      return data;
    }

    data.hide = true;
    data.attributes['x-out-of-boundaries'] = '';
  } else {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === false) {
      return data;
    }

    data.hide = false;
    data.attributes['x-out-of-boundaries'] = false;
  }

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function inner(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;

  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;

  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);

  data.placement = getOppositePlacement(placement);
  data.offsets.popper = getClientRect(popper);

  return data;
}

/**
 * Modifier function, each modifier can have a function of this type assigned
 * to its `fn` property.<br />
 * These functions will be called on each update, this means that you must
 * make sure they are performant enough to avoid performance bottlenecks.
 *
 * @function ModifierFn
 * @argument {dataObject} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {dataObject} The data object, properly modified
 */

/**
 * Modifiers are plugins used to alter the behavior of your poppers.<br />
 * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
 * needed by the library.
 *
 * Usually you don't want to override the `order`, `fn` and `onLoad` props.
 * All the other properties are configurations that could be tweaked.
 * @namespace modifiers
 */
var modifiers = {
  /**
   * Modifier used to shift the popper on the start or end of its reference
   * element.<br />
   * It will read the variation of the `placement` property.<br />
   * It can be one either `-end` or `-start`.
   * @memberof modifiers
   * @inner
   */
  shift: {
    /** @prop {number} order=100 - Index used to define the order of execution */
    order: 100,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: shift
  },

  /**
   * The `offset` modifier can shift your popper on both its axis.
   *
   * It accepts the following units:
   * - `px` or unitless, interpreted as pixels
   * - `%` or `%r`, percentage relative to the length of the reference element
   * - `%p`, percentage relative to the length of the popper element
   * - `vw`, CSS viewport width unit
   * - `vh`, CSS viewport height unit
   *
   * For length is intended the main axis relative to the placement of the popper.<br />
   * This means that if the placement is `top` or `bottom`, the length will be the
   * `width`. In case of `left` or `right`, it will be the height.
   *
   * You can provide a single value (as `Number` or `String`), or a pair of values
   * as `String` divided by a comma or one (or more) white spaces.<br />
   * The latter is a deprecated method because it leads to confusion and will be
   * removed in v2.<br />
   * Additionally, it accepts additions and subtractions between different units.
   * Note that multiplications and divisions aren't supported.
   *
   * Valid examples are:
   * ```
   * 10
   * '10%'
   * '10, 10'
   * '10%, 10'
   * '10 + 10%'
   * '10 - 5vh + 3%'
   * '-10px + 5vh, 5px - 6%'
   * ```
   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
   * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)
   *
   * @memberof modifiers
   * @inner
   */
  offset: {
    /** @prop {number} order=200 - Index used to define the order of execution */
    order: 200,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: offset,
    /** @prop {Number|String} offset=0
     * The offset value as described in the modifier description
     */
    offset: 0
  },

  /**
   * Modifier used to prevent the popper from being positioned outside the boundary.
   *
   * An scenario exists where the reference itself is not within the boundaries.<br />
   * We can say it has "escaped the boundaries" — or just "escaped".<br />
   * In this case we need to decide whether the popper should either:
   *
   * - detach from the reference and remain "trapped" in the boundaries, or
   * - if it should ignore the boundary and "escape with its reference"
   *
   * When `escapeWithReference` is set to`true` and reference is completely
   * outside its boundaries, the popper will overflow (or completely leave)
   * the boundaries in order to remain attached to the edge of the reference.
   *
   * @memberof modifiers
   * @inner
   */
  preventOverflow: {
    /** @prop {number} order=300 - Index used to define the order of execution */
    order: 300,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: preventOverflow,
    /**
     * @prop {Array} [priority=['left','right','top','bottom']]
     * Popper will try to prevent overflow following these priorities by default,
     * then, it could overflow on the left and on top of the `boundariesElement`
     */
    priority: ['left', 'right', 'top', 'bottom'],
    /**
     * @prop {number} padding=5
     * Amount of pixel used to define a minimum distance between the boundaries
     * and the popper this makes sure the popper has always a little padding
     * between the edges of its container
     */
    padding: 5,
    /**
     * @prop {String|HTMLElement} boundariesElement='scrollParent'
     * Boundaries used by the modifier, can be `scrollParent`, `window`,
     * `viewport` or any DOM element.
     */
    boundariesElement: 'scrollParent'
  },

  /**
   * Modifier used to make sure the reference and its popper stay near eachothers
   * without leaving any gap between the two. Expecially useful when the arrow is
   * enabled and you want to assure it to point to its reference element.
   * It cares only about the first axis, you can still have poppers with margin
   * between the popper and its reference element.
   * @memberof modifiers
   * @inner
   */
  keepTogether: {
    /** @prop {number} order=400 - Index used to define the order of execution */
    order: 400,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: keepTogether
  },

  /**
   * This modifier is used to move the `arrowElement` of the popper to make
   * sure it is positioned between the reference element and its popper element.
   * It will read the outer size of the `arrowElement` node to detect how many
   * pixels of conjuction are needed.
   *
   * It has no effect if no `arrowElement` is provided.
   * @memberof modifiers
   * @inner
   */
  arrow: {
    /** @prop {number} order=500 - Index used to define the order of execution */
    order: 500,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: arrow,
    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
    element: '[x-arrow]'
  },

  /**
   * Modifier used to flip the popper's placement when it starts to overlap its
   * reference element.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   *
   * **NOTE:** this modifier will interrupt the current update cycle and will
   * restart it if it detects the need to flip the placement.
   * @memberof modifiers
   * @inner
   */
  flip: {
    /** @prop {number} order=600 - Index used to define the order of execution */
    order: 600,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: flip,
    /**
     * @prop {String|Array} behavior='flip'
     * The behavior used to change the popper's placement. It can be one of
     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
     * placements (with optional variations).
     */
    behavior: 'flip',
    /**
     * @prop {number} padding=5
     * The popper will flip if it hits the edges of the `boundariesElement`
     */
    padding: 5,
    /**
     * @prop {String|HTMLElement} boundariesElement='viewport'
     * The element which will define the boundaries of the popper position,
     * the popper will never be placed outside of the defined boundaries
     * (except if keepTogether is enabled)
     */
    boundariesElement: 'viewport'
  },

  /**
   * Modifier used to make the popper flow toward the inner of the reference element.
   * By default, when this modifier is disabled, the popper will be placed outside
   * the reference element.
   * @memberof modifiers
   * @inner
   */
  inner: {
    /** @prop {number} order=700 - Index used to define the order of execution */
    order: 700,
    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
    enabled: false,
    /** @prop {ModifierFn} */
    fn: inner
  },

  /**
   * Modifier used to hide the popper when its reference element is outside of the
   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
   * be used to hide with a CSS selector the popper when its reference is
   * out of boundaries.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   * @memberof modifiers
   * @inner
   */
  hide: {
    /** @prop {number} order=800 - Index used to define the order of execution */
    order: 800,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: hide
  },

  /**
   * Computes the style that will be applied to the popper element to gets
   * properly positioned.
   *
   * Note that this modifier will not touch the DOM, it just prepares the styles
   * so that `applyStyle` modifier can apply it. This separation is useful
   * in case you need to replace `applyStyle` with a custom implementation.
   *
   * This modifier has `850` as `order` value to maintain backward compatibility
   * with previous versions of Popper.js. Expect the modifiers ordering method
   * to change in future major versions of the library.
   *
   * @memberof modifiers
   * @inner
   */
  computeStyle: {
    /** @prop {number} order=850 - Index used to define the order of execution */
    order: 850,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: computeStyle,
    /**
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3d transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties.
     */
    gpuAcceleration: true,
    /**
     * @prop {string} [x='bottom']
     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
     * Change this if your popper should grow in a direction different from `bottom`
     */
    x: 'bottom',
    /**
     * @prop {string} [x='left']
     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
     * Change this if your popper should grow in a direction different from `right`
     */
    y: 'right'
  },

  /**
   * Applies the computed styles to the popper element.
   *
   * All the DOM manipulations are limited to this modifier. This is useful in case
   * you want to integrate Popper.js inside a framework or view library and you
   * want to delegate all the DOM manipulations to it.
   *
   * Note that if you disable this modifier, you must make sure the popper element
   * has its position set to `absolute` before Popper.js can do its work!
   *
   * Just disable this modifier and define you own to achieve the desired effect.
   *
   * @memberof modifiers
   * @inner
   */
  applyStyle: {
    /** @prop {number} order=900 - Index used to define the order of execution */
    order: 900,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: applyStyle,
    /** @prop {Function} */
    onLoad: applyStyleOnLoad,
    /**
     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3d transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties.
     */
    gpuAcceleration: undefined
  }
};

/**
 * The `dataObject` is an object containing all the informations used by Popper.js
 * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
 * @name dataObject
 * @property {Object} data.instance The Popper.js instance
 * @property {String} data.placement Placement applied to popper
 * @property {String} data.originalPlacement Placement originally defined on init
 * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
 * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.
 * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
 * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.boundaries Offsets of the popper boundaries
 * @property {Object} data.offsets The measurements of popper, reference and arrow elements.
 * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
 */

/**
 * Default options provided to Popper.js constructor.<br />
 * These can be overriden using the `options` argument of Popper.js.<br />
 * To override an option, simply pass as 3rd argument an object with the same
 * structure of this object, example:
 * ```
 * new Popper(ref, pop, {
 *   modifiers: {
 *     preventOverflow: { enabled: false }
 *   }
 * })
 * ```
 * @type {Object}
 * @static
 * @memberof Popper
 */
var Defaults$1 = {
  /**
   * Popper's placement
   * @prop {Popper.placements} placement='bottom'
   */
  placement: 'bottom',

  /**
   * Whether events (resize, scroll) are initially enabled
   * @prop {Boolean} eventsEnabled=true
   */
  eventsEnabled: true,

  /**
   * Set to true if you want to automatically remove the popper when
   * you call the `destroy` method.
   * @prop {Boolean} removeOnDestroy=false
   */
  removeOnDestroy: false,

  /**
   * Callback called when the popper is created.<br />
   * By default, is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onCreate}
   */
  onCreate: function onCreate() {},

  /**
   * Callback called when the popper is updated, this callback is not called
   * on the initialization/creation of the popper, but only on subsequent
   * updates.<br />
   * By default, is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onUpdate}
   */
  onUpdate: function onUpdate() {},

  /**
   * List of modifiers used to modify the offsets before they are applied to the popper.
   * They provide most of the functionalities of Popper.js
   * @prop {modifiers}
   */
  modifiers: modifiers
};

/**
 * @callback onCreate
 * @param {dataObject} data
 */

/**
 * @callback onUpdate
 * @param {dataObject} data
 */

// Utils
// Methods
var Popper = function () {
  /**
   * Create a new Popper.js instance
   * @class Popper
   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper
   * @param {HTMLElement} popper - The HTML element used as popper.
   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
   * @return {Object} instance - The generated Popper.js instance
   */
  function Popper(reference, popper) {
    var _this = this;

    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    classCallCheck(this, Popper);

    this.scheduleUpdate = function () {
      return requestAnimationFrame(_this.update);
    };

    // make update() debounced, so that it only runs at most once-per-tick
    this.update = debounce(this.update.bind(this));

    // with {} we create a new object with the options inside it
    this.options = _extends({}, Popper.Defaults, options);

    // init state
    this.state = {
      isDestroyed: false,
      isCreated: false,
      scrollParents: []
    };

    // get reference and popper elements (allow jQuery wrappers)
    this.reference = reference.jquery ? reference[0] : reference;
    this.popper = popper.jquery ? popper[0] : popper;

    // Deep merge modifiers options
    this.options.modifiers = {};
    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {
      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
    });

    // Refactoring modifiers' list (Object => Array)
    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {
      return _extends({
        name: name
      }, _this.options.modifiers[name]);
    })
    // sort the modifiers by order
    .sort(function (a, b) {
      return a.order - b.order;
    });

    // modifiers have the ability to execute arbitrary code when Popper.js get inited
    // such code is executed in the same order of its modifier
    // they could add new properties to their options configuration
    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!
    this.modifiers.forEach(function (modifierOptions) {
      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {
        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
      }
    });

    // fire the first update to position the popper in the right place
    this.update();

    var eventsEnabled = this.options.eventsEnabled;
    if (eventsEnabled) {
      // setup event listeners, they will take care of update the position in specific situations
      this.enableEventListeners();
    }

    this.state.eventsEnabled = eventsEnabled;
  }

  // We can't use class properties because they don't get listed in the
  // class prototype and break stuff like Sinon stubs


  createClass(Popper, [{
    key: 'update',
    value: function update$$1() {
      return update.call(this);
    }
  }, {
    key: 'destroy',
    value: function destroy$$1() {
      return destroy.call(this);
    }
  }, {
    key: 'enableEventListeners',
    value: function enableEventListeners$$1() {
      return enableEventListeners.call(this);
    }
  }, {
    key: 'disableEventListeners',
    value: function disableEventListeners$$1() {
      return disableEventListeners.call(this);
    }

    /**
     * Schedule an update, it will run on the next UI update available
     * @method scheduleUpdate
     * @memberof Popper
     */

    /**
     * Collection of utilities useful when writing custom modifiers.
     * Starting from version 1.7, this method is available only if you
     * include `popper-utils.js` before `popper.js`.
     *
     * **DEPRECATION**: This way to access PopperUtils is deprecated
     * and will be removed in v2! Use the PopperUtils module directly instead.
     * Due to the high instability of the methods contained in Utils, we can't
     * guarantee them to follow semver. Use them at your own risk!
     * @static
     * @private
     * @type {Object}
     * @deprecated since version 1.8
     * @member Utils
     * @memberof Popper
     */

  }]);
  return Popper;
}();

/**
 * The `referenceObject` is an object that provides an interface compatible with Popper.js
 * and lets you use it as replacement of a real DOM node.<br />
 * You can use this method to position a popper relatively to a set of coordinates
 * in case you don't have a DOM node to use as reference.
 *
 * ```
 * new Popper(referenceObject, popperNode);
 * ```
 *
 * NB: This feature isn't supported in Internet Explorer 10
 * @name referenceObject
 * @property {Function} data.getBoundingClientRect
 * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
 * @property {number} data.clientWidth
 * An ES6 getter that will return the width of the virtual reference element.
 * @property {number} data.clientHeight
 * An ES6 getter that will return the height of the virtual reference element.
 */

Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
Popper.placements = placements;
Popper.Defaults = Defaults$1;

/**
* Returns the distance taking into account the default distance due to
* the transform: translate setting in CSS
* @param {Number} distance
* @return {String}
*/
function getOffsetDistanceInPx(distance) {
  return -(distance - Defaults.distance) + 'px';
}

var classCallCheck$1 = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass$1 = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();







var _extends$1 = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/**
* Creates a new popper instance
* @param {Object} data
* @return {Object} - the popper instance
*/
function createPopperInstance(data) {
  var el = data.el,
      popper = data.popper,
      _data$settings = data.settings,
      position = _data$settings.position,
      popperOptions = _data$settings.popperOptions,
      offset = _data$settings.offset,
      distance = _data$settings.distance,
      flipDuration = _data$settings.flipDuration;

  var _getInnerElements = getInnerElements(popper),
      tooltip = _getInnerElements.tooltip;

  var config = _extends$1({
    placement: position
  }, popperOptions || {}, {
    modifiers: _extends$1({}, popperOptions ? popperOptions.modifiers : {}, {
      flip: _extends$1({
        padding: distance + 5 /* 5px from viewport boundary */
      }, popperOptions && popperOptions.modifiers ? popperOptions.modifiers.flip : {}),
      offset: _extends$1({
        offset: offset
      }, popperOptions && popperOptions.modifiers ? popperOptions.modifiers.offset : {})
    }),
    onUpdate: function onUpdate() {
      var styles = tooltip.style;
      styles.top = '';
      styles.bottom = '';
      styles.left = '';
      styles.right = '';
      styles[getCorePlacement(popper.getAttribute('x-placement'))] = getOffsetDistanceInPx(distance);
    }
  });

  // Update the popper's position whenever its content changes
  // Not supported in IE10 unless polyfilled
  if (window.MutationObserver) {
    var styles = popper.style;

    var observer = new MutationObserver(function () {
      styles[prefix('transitionDuration')] = '0ms';
      data.popperInstance.update();
      defer(function () {
        styles[prefix('transitionDuration')] = flipDuration + 'ms';
      });
    });

    observer.observe(popper, {
      childList: true,
      subtree: true,
      characterData: true
    });

    data._mutationObservers.push(observer);
  }

  return new Popper(el, popper, config);
}

/**
* Appends the popper and creates a popper instance if one does not exist
* Also updates its position if need be and enables event listeners
* @param {Object} data -  the element/popper reference data
*/
function mountPopper(data) {
  var el = data.el,
      popper = data.popper,
      _data$settings = data.settings,
      appendTo = _data$settings.appendTo,
      followCursor = _data$settings.followCursor;

  // Already on the DOM

  if (appendTo.contains(popper)) return;

  appendTo.appendChild(popper);

  if (!data.popperInstance) {
    data.popperInstance = createPopperInstance(data);
  } else {
    data.popperInstance.update();
    if (!followCursor || Browser.touch) {
      data.popperInstance.enableEventListeners();
    }
  }

  // Since touch is determined dynamically, followCursor is set on mount
  if (followCursor && !Browser.touch) {
    el.addEventListener('mousemove', followCursorHandler);
    data.popperInstance.disableEventListeners();
  }
}

/**
* Updates a popper's position on each animation frame to make it stick to a moving element
* @param {Object} refData
*/
function makeSticky(refData) {
  var popper = refData.popper,
      popperInstance = refData.popperInstance,
      stickyDuration = refData.settings.stickyDuration;


  var applyTransitionDuration = function applyTransitionDuration() {
    return popper.style[prefix('transitionDuration')] = stickyDuration + 'ms';
  };

  var removeTransitionDuration = function removeTransitionDuration() {
    return popper.style[prefix('transitionDuration')] = '';
  };

  var updatePosition = function updatePosition() {
    popperInstance && popperInstance.scheduleUpdate();

    applyTransitionDuration();

    isVisible(popper) ? window.requestAnimationFrame(updatePosition) : removeTransitionDuration();
  };

  // Wait until Popper's position has been updated initially
  defer(updatePosition);
}

/**
* Returns an object of settings to override global settings
* @param {Element} el - the tooltipped element
* @param {Object} instanceSettings
* @return {Object} - individual settings
*/
function getIndividualSettings(el, instanceSettings) {
  var settings = DefaultsKeys.reduce(function (acc, key) {
    var val = el.getAttribute('data-' + key.toLowerCase()) || instanceSettings[key];

    // Convert strings to booleans
    if (val === 'false') val = false;
    if (val === 'true') val = true;

    // Convert number strings to true numbers
    if (isFinite(val) && !isNaN(parseFloat(val))) {
      val = parseFloat(val);
    }

    // Convert array strings to actual arrays
    if (typeof val === 'string' && val.trim().charAt(0) === '[') {
      val = JSON.parse(val);
    }

    acc[key] = val;

    return acc;
  }, {});

  return _extends$1({}, instanceSettings, settings);
}

/**
* Creates a popper element then returns it
* @param {Number} id - the popper id
* @param {String} title - the tooltip's `title` attribute
* @param {Object} settings - individual settings
* @return {Element} - the popper element
*/
function createPopperElement(id, title, settings) {
  var position = settings.position,
      distance = settings.distance,
      arrow = settings.arrow,
      animateFill = settings.animateFill,
      inertia = settings.inertia,
      animation = settings.animation,
      arrowSize = settings.arrowSize,
      size = settings.size,
      theme = settings.theme,
      html = settings.html,
      zIndex = settings.zIndex,
      interactive = settings.interactive;


  var popper = document.createElement('div');
  popper.setAttribute('class', 'tippy-popper');
  popper.setAttribute('role', 'tooltip');
  popper.setAttribute('aria-hidden', 'true');
  popper.setAttribute('id', 'tippy-tooltip-' + id);
  popper.style.zIndex = zIndex;

  var tooltip = document.createElement('div');
  tooltip.setAttribute('class', 'tippy-tooltip tippy-tooltip--' + size + ' leave');
  tooltip.setAttribute('data-animation', animation);

  theme.split(' ').forEach(function (t) {
    tooltip.classList.add(t + '-theme');
  });

  if (arrow) {
    // Add an arrow
    var _arrow = document.createElement('div');
    _arrow.setAttribute('class', 'arrow-' + arrowSize);
    _arrow.setAttribute('x-arrow', '');
    tooltip.appendChild(_arrow);
  }

  if (animateFill) {
    // Create animateFill circle element for animation
    tooltip.setAttribute('data-animatefill', '');
    var circle = document.createElement('div');
    circle.setAttribute('class', 'leave');
    circle.setAttribute('x-circle', '');
    tooltip.appendChild(circle);
  }

  if (inertia) {
    // Change transition timing function cubic bezier
    tooltip.setAttribute('data-inertia', '');
  }

  if (interactive) {
    tooltip.setAttribute('data-interactive', '');
  }

  // Tooltip content (text or HTML)
  var content = document.createElement('div');
  content.setAttribute('class', 'tippy-tooltip-content');

  if (html) {
    var templateId = void 0;

    if (html instanceof Element) {
      content.appendChild(html);
      templateId = '#' + html.id || 'tippy-html-template';
    } else {
      content.innerHTML = document.getElementById(html.replace('#', '')).innerHTML;
      templateId = html;
    }

    popper.classList.add('html-template');
    interactive && popper.setAttribute('tabindex', '-1');
    tooltip.setAttribute('data-template-id', templateId);
  } else {
    content.innerHTML = title;
  }

  // Init distance. Further updates are made in the popper instance's `onUpdate()` method
  tooltip.style[getCorePlacement(position)] = getOffsetDistanceInPx(distance);

  tooltip.appendChild(content);
  popper.appendChild(tooltip);

  return popper;
}

/**
* Creates a trigger
* @param {Object} event - the custom event specified in the `trigger` setting
* @param {Element} el - tooltipped element
* @param {Object} handlers - the handlers for each listener
* @param {Boolean} touchHold
* @return {Array} - array of listener objects
*/
function createTrigger(event, el, handlers, touchHold) {
  var listeners = [];

  if (event === 'manual') return listeners;

  // Enter
  el.addEventListener(event, handlers.handleTrigger);
  listeners.push({
    event: event,
    handler: handlers.handleTrigger
  });

  // Leave
  if (event === 'mouseenter') {
    if (Browser.SUPPORTS_TOUCH && touchHold) {
      el.addEventListener('touchstart', handlers.handleTrigger);
      listeners.push({
        event: 'touchstart',
        handler: handlers.handleTrigger
      });
      el.addEventListener('touchend', handlers.handleMouseleave);
      listeners.push({
        event: 'touchend',
        handler: handlers.handleMouseleave
      });
    }

    el.addEventListener('mouseleave', handlers.handleMouseleave);
    listeners.push({
      event: 'mouseleave',
      handler: handlers.handleMouseleave
    });
  }

  if (event === 'focus') {
    el.addEventListener('blur', handlers.handleBlur);
    listeners.push({
      event: 'blur',
      handler: handlers.handleBlur
    });
  }

  return listeners;
}

/**
* Determines if the mouse's cursor is outside the interactive border
* @param {MouseEvent} event
* @param {Element} popper
* @param {Object} settings
* @return {Boolean}
*/
function cursorIsOutsideInteractiveBorder(event, popper, settings) {
  if (!popper.getAttribute('x-placement')) return true;

  var x = event.clientX,
      y = event.clientY;
  var interactiveBorder = settings.interactiveBorder,
      distance = settings.distance;


  var rect = popper.getBoundingClientRect();
  var corePosition = getCorePlacement(popper.getAttribute('x-placement'));
  var borderWithDistance = interactiveBorder + distance;

  var exceeds = {
    top: rect.top - y > interactiveBorder,
    bottom: y - rect.bottom > interactiveBorder,
    left: rect.left - x > interactiveBorder,
    right: x - rect.right > interactiveBorder
  };

  switch (corePosition) {
    case 'top':
      exceeds.top = rect.top - y > borderWithDistance;
      break;
    case 'bottom':
      exceeds.bottom = y - rect.bottom > borderWithDistance;
      break;
    case 'left':
      exceeds.left = rect.left - x > borderWithDistance;
      break;
    case 'right':
      exceeds.right = x - rect.right > borderWithDistance;
      break;
  }

  return exceeds.top || exceeds.bottom || exceeds.left || exceeds.right;
}

/**
* Returns relevant listener callbacks for each ref
* @param {Element} el
* @param {Element} popper
* @param {Object} settings
* @return {Object} - relevant listener handlers
*/
function getEventListenerHandlers(el, popper, settings) {
  var _this = this;

  var position = settings.position,
      delay = settings.delay,
      duration = settings.duration,
      interactive = settings.interactive,
      interactiveBorder = settings.interactiveBorder,
      distance = settings.distance,
      hideOnClick = settings.hideOnClick,
      trigger = settings.trigger,
      touchHold = settings.touchHold,
      touchWait = settings.touchWait;


  var showDelay = void 0,
      hideDelay = void 0;

  var clearTimeouts = function clearTimeouts() {
    clearTimeout(showDelay);
    clearTimeout(hideDelay);
  };

  var _show = function _show() {
    clearTimeouts();

    // Not hidden. For clicking when it also has a `focus` event listener
    if (isVisible(popper)) return;

    var _delay = Array.isArray(delay) ? delay[0] : delay;

    if (delay) {
      showDelay = setTimeout(function () {
        return _this.show(popper);
      }, _delay);
    } else {
      _this.show(popper);
    }
  };

  var show = function show(event) {
    return _this.callbacks.wait ? _this.callbacks.wait.call(popper, _show, event) : _show();
  };

  var hide = function hide() {
    clearTimeouts();

    var _delay = Array.isArray(delay) ? delay[1] : delay;

    if (delay) {
      hideDelay = setTimeout(function () {
        return _this.hide(popper);
      }, _delay);
    } else {
      _this.hide(popper);
    }
  };

  var handleTrigger = function handleTrigger(event) {
    var mouseenterTouch = event.type === 'mouseenter' && Browser.SUPPORTS_TOUCH && Browser.touch;

    if (mouseenterTouch && touchHold) return;

    // Toggle show/hide when clicking click-triggered tooltips
    var isClick = event.type === 'click';
    var isNotPersistent = hideOnClick !== 'persistent';

    isClick && isVisible(popper) && isNotPersistent ? hide() : show(event);

    if (mouseenterTouch && Browser.iOS() && el.click) {
      el.click();
    }
  };

  var handleMouseleave = function handleMouseleave(event) {

    // Don't fire 'mouseleave', use the 'touchend'
    if (event.type === 'mouseleave' && Browser.SUPPORTS_TOUCH && Browser.touch && touchHold) {
      return;
    }

    if (interactive) {
      // Temporarily handle mousemove to check if the mouse left somewhere
      // other than its popper
      var handleMousemove = function handleMousemove(event) {

        var triggerHide = function triggerHide() {
          document.body.removeEventListener('mouseleave', hide);
          document.removeEventListener('mousemove', handleMousemove);
          hide();
        };

        var closestTooltippedEl = closest(event.target, Selectors.TOOLTIPPED_EL);

        var isOverPopper = closest(event.target, Selectors.POPPER) === popper;
        var isOverEl = closestTooltippedEl === el;
        var isClickTriggered = trigger.indexOf('click') !== -1;
        var isOverOtherTooltippedEl = closestTooltippedEl && closestTooltippedEl !== el;

        if (isOverOtherTooltippedEl) {
          return triggerHide();
        }

        if (isOverPopper || isOverEl || isClickTriggered) return;

        if (cursorIsOutsideInteractiveBorder(event, popper, settings)) {
          triggerHide();
        }
      };

      document.body.addEventListener('mouseleave', hide);
      document.addEventListener('mousemove', handleMousemove);

      return;
    }

    // If it's not interactive, just hide it
    hide();
  };

  var handleBlur = function handleBlur(event) {
    // Ignore blur on touch devices, if there is no `relatedTarget`, hide
    // If the related target is a popper, ignore
    if (!event.relatedTarget || Browser.touch) return;
    if (closest(event.relatedTarget, Selectors.POPPER)) return;

    hide();
  };

  return {
    handleTrigger: handleTrigger,
    handleMouseleave: handleMouseleave,
    handleBlur: handleBlur
  };
}

/**
* Evaluates/modifies the settings object for appropriate behavior
* @param {Object} settings
* @return {Object} modified/evaluated settings
*/
function evaluateSettings(settings) {
  // animateFill is disabled if an arrow is true
  if (settings.arrow) {
    settings.animateFill = false;
  }

  // reassign appendTo into the result of evaluating appendTo
  // if it's set as a function instead of Element
  if (settings.appendTo && typeof settings.appendTo === 'function') {
    settings.appendTo = settings.appendTo();
  }

  return settings;
}

var idCounter = 1;

/**
* Creates tooltips for all el elements that match the instance's selector
* @param {Element[]} els
* @return {Object[]} Array of ref data objects
*/
function createTooltips(els) {
  var _this = this;

  return els.reduce(function (acc, el) {
    var id = idCounter;

    var settings = _extends$1({}, evaluateSettings(_this.settings.performance ? _this.settings : getIndividualSettings(el, _this.settings)));

    if (typeof settings.html === 'function') settings.html = settings.html(el);

    var html = settings.html,
        trigger = settings.trigger,
        touchHold = settings.touchHold,
        dynamicTitle = settings.dynamicTitle;


    var title = el.getAttribute('title');
    if (!title && !html) return acc;

    el.setAttribute('data-tooltipped', '');
    el.setAttribute('aria-describedby', 'tippy-tooltip-' + id);
    removeTitle(el);

    var popper = createPopperElement(id, title, settings);
    var handlers = getEventListenerHandlers.call(_this, el, popper, settings);

    var listeners = [];

    trigger.trim().split(' ').forEach(function (event) {
      return listeners = listeners.concat(createTrigger(event, el, handlers, touchHold));
    });

    // Add a mutation observer to observe the reference element for `title`
    // attribute changes, then automatically update tooltip content
    var observer = void 0;

    if (dynamicTitle && window.MutationObserver) {
      var _getInnerElements = getInnerElements(popper),
          content = _getInnerElements.content;

      observer = new MutationObserver(function () {
        var title = el.getAttribute('title');
        if (title) {
          content.innerHTML = title;
          removeTitle(el);
        }
      });

      observer.observe(el, { attributes: true });
    }

    acc.push({
      id: id,
      el: el,
      popper: popper,
      settings: settings,
      listeners: listeners,
      tippyInstance: _this,
      _mutationObservers: [observer]
    });

    idCounter++;

    return acc;
  }, []);
}

/* Utility functions */
/* Core library functions */
/**
* @param {String|Element|Element[]} selector
* @param {Object} settings (optional) - the object of settings to be applied to the instance
*/

var Tippy = function () {
  function Tippy(selector) {
    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    classCallCheck$1(this, Tippy);

    // Use default browser tooltip on unsupported browsers
    if (!Browser.SUPPORTED) return;

    init();

    this.state = {
      destroyed: false
    };

    this.selector = selector;

    this.settings = _extends$1({}, Defaults, settings);

    if (settings.show || settings.shown || settings.hide || settings.hidden) {
      console.warn('Callbacks without the `on` prefix are deprecated (with the exception of `wait`).' + ' Use onShow, onShown, onHide, and onHidden instead.');
    }

    this.callbacks = {
      wait: settings.wait,
      show: settings.onShow || settings.show || noop,
      shown: settings.onShown || settings.shown || noop,
      hide: settings.onHide || settings.hide || noop,
      hidden: settings.onHidden || settings.hidden || noop
    };

    this.store = createTooltips.call(this, getArrayOfElements(selector));
    Store.push.apply(Store, this.store);
  }

  /**
  * Returns the reference element's popper element
  * @param {Element} el
  * @return {Element}
  */


  createClass$1(Tippy, [{
    key: 'getPopperElement',
    value: function getPopperElement(el) {
      try {
        return find(this.store, function (data) {
          return data.el === el;
        }).popper;
      } catch (e) {
        console.error('[getPopperElement]: Element passed as the argument does not exist in the instance');
      }
    }

    /**
    * Returns a popper's reference element
    * @param {Element} popper
    * @return {Element}
    */

  }, {
    key: 'getReferenceElement',
    value: function getReferenceElement(popper) {
      try {
        return find(this.store, function (data) {
          return data.popper === popper;
        }).el;
      } catch (e) {
        console.error('[getReferenceElement]: Popper passed as the argument does not exist in the instance');
      }
    }

    /**
    * Returns the reference data object from either the reference element or popper element
    * @param {Element} x (reference element or popper)
    * @return {Object}
    */

  }, {
    key: 'getReferenceData',
    value: function getReferenceData(x) {
      return find(this.store, function (data) {
        return data.el === x || data.popper === x;
      });
    }

    /**
    * Shows a popper
    * @param {Element} popper
    * @param {Number} customDuration (optional)
    */

  }, {
    key: 'show',
    value: function show(popper, customDuration) {
      var _this = this;

      if (this.state.destroyed) return;

      var data = find(this.store, function (data) {
        return data.popper === popper;
      });

      var _getInnerElements = getInnerElements(popper),
          tooltip = _getInnerElements.tooltip,
          circle = _getInnerElements.circle,
          content = _getInnerElements.content;

      if (!document.body.contains(data.el)) {
        this.destroy(popper);
        return;
      }

      this.callbacks.show.call(popper);

      var el = data.el,
          _data$settings = data.settings,
          appendTo = _data$settings.appendTo,
          sticky = _data$settings.sticky,
          interactive = _data$settings.interactive,
          followCursor = _data$settings.followCursor,
          flipDuration = _data$settings.flipDuration,
          duration = _data$settings.duration;


      var _duration = customDuration !== undefined ? customDuration : Array.isArray(duration) ? duration[0] : duration;

      // Prevent a transition when popper changes position
      applyTransitionDuration([popper, tooltip, circle], 0);

      mountPopper(data);

      popper.style.visibility = 'visible';
      popper.setAttribute('aria-hidden', 'false');

      // Wait for popper's position to update
      defer(function () {
        if (!isVisible(popper)) return;

        // Sometimes the arrow will not be in the correct position, force another update
        if (!followCursor || Browser.touch) {
          data.popperInstance.update();
          applyTransitionDuration([popper], flipDuration);
        }

        // Re-apply transition durations
        applyTransitionDuration([tooltip, circle], _duration);

        // Make content fade out a bit faster than the tooltip if `animateFill`
        if (circle) content.style.opacity = 1;

        // Interactive tooltips receive a class of 'active'
        interactive && el.classList.add('active');

        // Update popper's position on every animation frame
        sticky && makeSticky(data);

        // Repaint/reflow is required for CSS transition when appending
        triggerReflow(tooltip, circle);

        modifyClassList([tooltip, circle], function (list) {
          list.contains('tippy-notransition') && list.remove('tippy-notransition');
          list.remove('leave');
          list.add('enter');
        });

        // Wait for transitions to complete
        onTransitionEnd(data, _duration, function () {
          if (!isVisible(popper) || data._onShownFired) return;

          // Focus interactive tooltips only
          interactive && popper.focus();
          // Remove transitions from tooltip
          tooltip.classList.add('tippy-notransition');
          // Prevents shown() from firing more than once from early transition cancellations
          data._onShownFired = true;

          _this.callbacks.shown.call(popper);
        });
      });
    }

    /**
    * Hides a popper
    * @param {Element} popper
    * @param {Number} customDuration (optional)
    */

  }, {
    key: 'hide',
    value: function hide(popper, customDuration) {
      var _this2 = this;

      if (this.state.destroyed) return;

      this.callbacks.hide.call(popper);

      var data = find(this.store, function (data) {
        return data.popper === popper;
      });

      var _getInnerElements2 = getInnerElements(popper),
          tooltip = _getInnerElements2.tooltip,
          circle = _getInnerElements2.circle,
          content = _getInnerElements2.content;

      var el = data.el,
          _data$settings2 = data.settings,
          appendTo = _data$settings2.appendTo,
          sticky = _data$settings2.sticky,
          interactive = _data$settings2.interactive,
          followCursor = _data$settings2.followCursor,
          html = _data$settings2.html,
          trigger = _data$settings2.trigger,
          duration = _data$settings2.duration;


      var _duration = customDuration !== undefined ? customDuration : Array.isArray(duration) ? duration[1] : duration;

      data._onShownFired = false;
      interactive && el.classList.remove('active');

      popper.style.visibility = 'hidden';
      popper.setAttribute('aria-hidden', 'true');

      applyTransitionDuration([tooltip, circle, circle ? content : null], _duration);

      if (circle) content.style.opacity = 0;

      modifyClassList([tooltip, circle], function (list) {
        list.contains('tippy-tooltip') && list.remove('tippy-notransition');
        list.remove('enter');
        list.add('leave');
      });

      // Re-focus click-triggered html elements
      // and the tooltipped element IS in the viewport (otherwise it causes unsightly scrolling
      // if the tooltip is closed and the element isn't in the viewport anymore)
      if (html && trigger.indexOf('click') !== -1 && elementIsInViewport(el)) {
        el.focus();
      }

      // Wait for transitions to complete
      onTransitionEnd(data, _duration, function () {
        // `isVisible` is not completely reliable to determine if we shouldn't
        // run the hidden callback, we need to check the computed opacity style.
        // This prevents glitchy behavior of the transition when quickly showing
        // and hiding a tooltip.
        if (isVisible(popper) || !appendTo.contains(popper) || getComputedStyle(tooltip).opacity === '1') return;

        el.removeEventListener('mousemove', followCursorHandler);
        data.popperInstance.disableEventListeners();
        appendTo.removeChild(popper);

        _this2.callbacks.hidden.call(popper);
      });
    }

    /**
    * Updates a popper with new content
    * @param {Element} popper
    */

  }, {
    key: 'update',
    value: function update(popper) {
      if (this.state.destroyed) return;

      var data = find(this.store, function (data) {
        return data.popper === popper;
      });

      var _getInnerElements3 = getInnerElements(popper),
          content = _getInnerElements3.content;

      var el = data.el,
          html = data.settings.html;


      if (html instanceof Element) {
        console.warn('Aborted: update() should not be used if `html` is a DOM element');
        return;
      }

      content.innerHTML = html ? document.getElementById(html.replace('#', '')).innerHTML : el.getAttribute('title') || el.getAttribute('data-original-title');

      if (!html) removeTitle(el);
    }

    /**
    * Destroys a popper
    * @param {Element} popper
    * @param {Boolean} _isLast - private param used by destroyAll to optimize
    */

  }, {
    key: 'destroy',
    value: function destroy(popper, _isLast) {
      var _this3 = this;

      if (this.state.destroyed) return;

      var data = find(this.store, function (data) {
        return data.popper === popper;
      });

      var el = data.el,
          popperInstance = data.popperInstance,
          listeners = data.listeners,
          _mutationObservers = data._mutationObservers;

      // Ensure the popper is hidden

      if (isVisible(popper)) {
        this.hide(popper, 0);
      }

      // Remove Tippy-only event listeners from tooltipped element
      listeners.forEach(function (listener) {
        return el.removeEventListener(listener.event, listener.handler);
      });

      // Restore original title
      el.setAttribute('title', el.getAttribute('data-original-title'));

      el.removeAttribute('data-original-title');
      el.removeAttribute('data-tooltipped');
      el.removeAttribute('aria-describedby');

      popperInstance && popperInstance.destroy();

      _mutationObservers.forEach(function (observer) {
        observer && observer.disconnect();
      });

      // Remove from store
      Store.splice(findIndex(Store, function (data) {
        return data.popper === popper;
      }), 1);

      // Ensure filter is called only once
      if (_isLast === undefined || _isLast) {
        this.store = Store.filter(function (data) {
          return data.tippyInstance === _this3;
        });
      }
    }

    /**
    * Destroys all tooltips created by the instance
    */

  }, {
    key: 'destroyAll',
    value: function destroyAll() {
      var _this4 = this;

      if (this.state.destroyed) return;

      var storeLength = this.store.length;

      this.store.forEach(function (_ref, index) {
        var popper = _ref.popper;

        _this4.destroy(popper, index === storeLength - 1);
      });

      this.store = null;
      this.state.destroyed = true;
    }
  }]);
  return Tippy;
}();

function tippy$2(selector, settings) {
  return new Tippy(selector, settings);
}

tippy$2.Browser = Browser;
tippy$2.Defaults = Defaults;
tippy$2.disableDynamicInputDetection = function () {
  return Browser.dynamicInputDetection = false;
};
tippy$2.enableDynamicInputDetection = function () {
  return Browser.dynamicInputDetection = true;
};

return tippy$2;

})));

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],32:[function(require,module,exports){
//     Underscore.js 1.8.3
//     http://underscorejs.org
//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.

(function() {

  // Baseline setup
  // --------------

  // Establish the root object, `window` in the browser, or `exports` on the server.
  var root = this;

  // Save the previous value of the `_` variable.
  var previousUnderscore = root._;

  // Save bytes in the minified (but not gzipped) version:
  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;

  // Create quick reference variables for speed access to core prototypes.
  var
    push             = ArrayProto.push,
    slice            = ArrayProto.slice,
    toString         = ObjProto.toString,
    hasOwnProperty   = ObjProto.hasOwnProperty;

  // All **ECMAScript 5** native function implementations that we hope to use
  // are declared here.
  var
    nativeIsArray      = Array.isArray,
    nativeKeys         = Object.keys,
    nativeBind         = FuncProto.bind,
    nativeCreate       = Object.create;

  // Naked function reference for surrogate-prototype-swapping.
  var Ctor = function(){};

  // Create a safe reference to the Underscore object for use below.
  var _ = function(obj) {
    if (obj instanceof _) return obj;
    if (!(this instanceof _)) return new _(obj);
    this._wrapped = obj;
  };

  // Export the Underscore object for **Node.js**, with
  // backwards-compatibility for the old `require()` API. If we're in
  // the browser, add `_` as a global object.
  if (typeof exports !== 'undefined') {
    if (typeof module !== 'undefined' && module.exports) {
      exports = module.exports = _;
    }
    exports._ = _;
  } else {
    root._ = _;
  }

  // Current version.
  _.VERSION = '1.8.3';

  // Internal function that returns an efficient (for current engines) version
  // of the passed-in callback, to be repeatedly applied in other Underscore
  // functions.
  var optimizeCb = function(func, context, argCount) {
    if (context === void 0) return func;
    switch (argCount == null ? 3 : argCount) {
      case 1: return function(value) {
        return func.call(context, value);
      };
      case 2: return function(value, other) {
        return func.call(context, value, other);
      };
      case 3: return function(value, index, collection) {
        return func.call(context, value, index, collection);
      };
      case 4: return function(accumulator, value, index, collection) {
        return func.call(context, accumulator, value, index, collection);
      };
    }
    return function() {
      return func.apply(context, arguments);
    };
  };

  // A mostly-internal function to generate callbacks that can be applied
  // to each element in a collection, returning the desired result — either
  // identity, an arbitrary callback, a property matcher, or a property accessor.
  var cb = function(value, context, argCount) {
    if (value == null) return _.identity;
    if (_.isFunction(value)) return optimizeCb(value, context, argCount);
    if (_.isObject(value)) return _.matcher(value);
    return _.property(value);
  };
  _.iteratee = function(value, context) {
    return cb(value, context, Infinity);
  };

  // An internal function for creating assigner functions.
  var createAssigner = function(keysFunc, undefinedOnly) {
    return function(obj) {
      var length = arguments.length;
      if (length < 2 || obj == null) return obj;
      for (var index = 1; index < length; index++) {
        var source = arguments[index],
            keys = keysFunc(source),
            l = keys.length;
        for (var i = 0; i < l; i++) {
          var key = keys[i];
          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];
        }
      }
      return obj;
    };
  };

  // An internal function for creating a new object that inherits from another.
  var baseCreate = function(prototype) {
    if (!_.isObject(prototype)) return {};
    if (nativeCreate) return nativeCreate(prototype);
    Ctor.prototype = prototype;
    var result = new Ctor;
    Ctor.prototype = null;
    return result;
  };

  var property = function(key) {
    return function(obj) {
      return obj == null ? void 0 : obj[key];
    };
  };

  // Helper for collection methods to determine whether a collection
  // should be iterated as an array or as an object
  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength
  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094
  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;
  var getLength = property('length');
  var isArrayLike = function(collection) {
    var length = getLength(collection);
    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;
  };

  // Collection Functions
  // --------------------

  // The cornerstone, an `each` implementation, aka `forEach`.
  // Handles raw objects in addition to array-likes. Treats all
  // sparse array-likes as if they were dense.
  _.each = _.forEach = function(obj, iteratee, context) {
    iteratee = optimizeCb(iteratee, context);
    var i, length;
    if (isArrayLike(obj)) {
      for (i = 0, length = obj.length; i < length; i++) {
        iteratee(obj[i], i, obj);
      }
    } else {
      var keys = _.keys(obj);
      for (i = 0, length = keys.length; i < length; i++) {
        iteratee(obj[keys[i]], keys[i], obj);
      }
    }
    return obj;
  };

  // Return the results of applying the iteratee to each element.
  _.map = _.collect = function(obj, iteratee, context) {
    iteratee = cb(iteratee, context);
    var keys = !isArrayLike(obj) && _.keys(obj),
        length = (keys || obj).length,
        results = Array(length);
    for (var index = 0; index < length; index++) {
      var currentKey = keys ? keys[index] : index;
      results[index] = iteratee(obj[currentKey], currentKey, obj);
    }
    return results;
  };

  // Create a reducing function iterating left or right.
  function createReduce(dir) {
    // Optimized iterator function as using arguments.length
    // in the main function will deoptimize the, see #1991.
    function iterator(obj, iteratee, memo, keys, index, length) {
      for (; index >= 0 && index < length; index += dir) {
        var currentKey = keys ? keys[index] : index;
        memo = iteratee(memo, obj[currentKey], currentKey, obj);
      }
      return memo;
    }

    return function(obj, iteratee, memo, context) {
      iteratee = optimizeCb(iteratee, context, 4);
      var keys = !isArrayLike(obj) && _.keys(obj),
          length = (keys || obj).length,
          index = dir > 0 ? 0 : length - 1;
      // Determine the initial value if none is provided.
      if (arguments.length < 3) {
        memo = obj[keys ? keys[index] : index];
        index += dir;
      }
      return iterator(obj, iteratee, memo, keys, index, length);
    };
  }

  // **Reduce** builds up a single result from a list of values, aka `inject`,
  // or `foldl`.
  _.reduce = _.foldl = _.inject = createReduce(1);

  // The right-associative version of reduce, also known as `foldr`.
  _.reduceRight = _.foldr = createReduce(-1);

  // Return the first value which passes a truth test. Aliased as `detect`.
  _.find = _.detect = function(obj, predicate, context) {
    var key;
    if (isArrayLike(obj)) {
      key = _.findIndex(obj, predicate, context);
    } else {
      key = _.findKey(obj, predicate, context);
    }
    if (key !== void 0 && key !== -1) return obj[key];
  };

  // Return all the elements that pass a truth test.
  // Aliased as `select`.
  _.filter = _.select = function(obj, predicate, context) {
    var results = [];
    predicate = cb(predicate, context);
    _.each(obj, function(value, index, list) {
      if (predicate(value, index, list)) results.push(value);
    });
    return results;
  };

  // Return all the elements for which a truth test fails.
  _.reject = function(obj, predicate, context) {
    return _.filter(obj, _.negate(cb(predicate)), context);
  };

  // Determine whether all of the elements match a truth test.
  // Aliased as `all`.
  _.every = _.all = function(obj, predicate, context) {
    predicate = cb(predicate, context);
    var keys = !isArrayLike(obj) && _.keys(obj),
        length = (keys || obj).length;
    for (var index = 0; index < length; index++) {
      var currentKey = keys ? keys[index] : index;
      if (!predicate(obj[currentKey], currentKey, obj)) return false;
    }
    return true;
  };

  // Determine if at least one element in the object matches a truth test.
  // Aliased as `any`.
  _.some = _.any = function(obj, predicate, context) {
    predicate = cb(predicate, context);
    var keys = !isArrayLike(obj) && _.keys(obj),
        length = (keys || obj).length;
    for (var index = 0; index < length; index++) {
      var currentKey = keys ? keys[index] : index;
      if (predicate(obj[currentKey], currentKey, obj)) return true;
    }
    return false;
  };

  // Determine if the array or object contains a given item (using `===`).
  // Aliased as `includes` and `include`.
  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {
    if (!isArrayLike(obj)) obj = _.values(obj);
    if (typeof fromIndex != 'number' || guard) fromIndex = 0;
    return _.indexOf(obj, item, fromIndex) >= 0;
  };

  // Invoke a method (with arguments) on every item in a collection.
  _.invoke = function(obj, method) {
    var args = slice.call(arguments, 2);
    var isFunc = _.isFunction(method);
    return _.map(obj, function(value) {
      var func = isFunc ? method : value[method];
      return func == null ? func : func.apply(value, args);
    });
  };

  // Convenience version of a common use case of `map`: fetching a property.
  _.pluck = function(obj, key) {
    return _.map(obj, _.property(key));
  };

  // Convenience version of a common use case of `filter`: selecting only objects
  // containing specific `key:value` pairs.
  _.where = function(obj, attrs) {
    return _.filter(obj, _.matcher(attrs));
  };

  // Convenience version of a common use case of `find`: getting the first object
  // containing specific `key:value` pairs.
  _.findWhere = function(obj, attrs) {
    return _.find(obj, _.matcher(attrs));
  };

  // Return the maximum element (or element-based computation).
  _.max = function(obj, iteratee, context) {
    var result = -Infinity, lastComputed = -Infinity,
        value, computed;
    if (iteratee == null && obj != null) {
      obj = isArrayLike(obj) ? obj : _.values(obj);
      for (var i = 0, length = obj.length; i < length; i++) {
        value = obj[i];
        if (value > result) {
          result = value;
        }
      }
    } else {
      iteratee = cb(iteratee, context);
      _.each(obj, function(value, index, list) {
        computed = iteratee(value, index, list);
        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {
          result = value;
          lastComputed = computed;
        }
      });
    }
    return result;
  };

  // Return the minimum element (or element-based computation).
  _.min = function(obj, iteratee, context) {
    var result = Infinity, lastComputed = Infinity,
        value, computed;
    if (iteratee == null && obj != null) {
      obj = isArrayLike(obj) ? obj : _.values(obj);
      for (var i = 0, length = obj.length; i < length; i++) {
        value = obj[i];
        if (value < result) {
          result = value;
        }
      }
    } else {
      iteratee = cb(iteratee, context);
      _.each(obj, function(value, index, list) {
        computed = iteratee(value, index, list);
        if (computed < lastComputed || computed === Infinity && result === Infinity) {
          result = value;
          lastComputed = computed;
        }
      });
    }
    return result;
  };

  // Shuffle a collection, using the modern version of the
  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).
  _.shuffle = function(obj) {
    var set = isArrayLike(obj) ? obj : _.values(obj);
    var length = set.length;
    var shuffled = Array(length);
    for (var index = 0, rand; index < length; index++) {
      rand = _.random(0, index);
      if (rand !== index) shuffled[index] = shuffled[rand];
      shuffled[rand] = set[index];
    }
    return shuffled;
  };

  // Sample **n** random values from a collection.
  // If **n** is not specified, returns a single random element.
  // The internal `guard` argument allows it to work with `map`.
  _.sample = function(obj, n, guard) {
    if (n == null || guard) {
      if (!isArrayLike(obj)) obj = _.values(obj);
      return obj[_.random(obj.length - 1)];
    }
    return _.shuffle(obj).slice(0, Math.max(0, n));
  };

  // Sort the object's values by a criterion produced by an iteratee.
  _.sortBy = function(obj, iteratee, context) {
    iteratee = cb(iteratee, context);
    return _.pluck(_.map(obj, function(value, index, list) {
      return {
        value: value,
        index: index,
        criteria: iteratee(value, index, list)
      };
    }).sort(function(left, right) {
      var a = left.criteria;
      var b = right.criteria;
      if (a !== b) {
        if (a > b || a === void 0) return 1;
        if (a < b || b === void 0) return -1;
      }
      return left.index - right.index;
    }), 'value');
  };

  // An internal function used for aggregate "group by" operations.
  var group = function(behavior) {
    return function(obj, iteratee, context) {
      var result = {};
      iteratee = cb(iteratee, context);
      _.each(obj, function(value, index) {
        var key = iteratee(value, index, obj);
        behavior(result, value, key);
      });
      return result;
    };
  };

  // Groups the object's values by a criterion. Pass either a string attribute
  // to group by, or a function that returns the criterion.
  _.groupBy = group(function(result, value, key) {
    if (_.has(result, key)) result[key].push(value); else result[key] = [value];
  });

  // Indexes the object's values by a criterion, similar to `groupBy`, but for
  // when you know that your index values will be unique.
  _.indexBy = group(function(result, value, key) {
    result[key] = value;
  });

  // Counts instances of an object that group by a certain criterion. Pass
  // either a string attribute to count by, or a function that returns the
  // criterion.
  _.countBy = group(function(result, value, key) {
    if (_.has(result, key)) result[key]++; else result[key] = 1;
  });

  // Safely create a real, live array from anything iterable.
  _.toArray = function(obj) {
    if (!obj) return [];
    if (_.isArray(obj)) return slice.call(obj);
    if (isArrayLike(obj)) return _.map(obj, _.identity);
    return _.values(obj);
  };

  // Return the number of elements in an object.
  _.size = function(obj) {
    if (obj == null) return 0;
    return isArrayLike(obj) ? obj.length : _.keys(obj).length;
  };

  // Split a collection into two arrays: one whose elements all satisfy the given
  // predicate, and one whose elements all do not satisfy the predicate.
  _.partition = function(obj, predicate, context) {
    predicate = cb(predicate, context);
    var pass = [], fail = [];
    _.each(obj, function(value, key, obj) {
      (predicate(value, key, obj) ? pass : fail).push(value);
    });
    return [pass, fail];
  };

  // Array Functions
  // ---------------

  // Get the first element of an array. Passing **n** will return the first N
  // values in the array. Aliased as `head` and `take`. The **guard** check
  // allows it to work with `_.map`.
  _.first = _.head = _.take = function(array, n, guard) {
    if (array == null) return void 0;
    if (n == null || guard) return array[0];
    return _.initial(array, array.length - n);
  };

  // Returns everything but the last entry of the array. Especially useful on
  // the arguments object. Passing **n** will return all the values in
  // the array, excluding the last N.
  _.initial = function(array, n, guard) {
    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));
  };

  // Get the last element of an array. Passing **n** will return the last N
  // values in the array.
  _.last = function(array, n, guard) {
    if (array == null) return void 0;
    if (n == null || guard) return array[array.length - 1];
    return _.rest(array, Math.max(0, array.length - n));
  };

  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
  // Especially useful on the arguments object. Passing an **n** will return
  // the rest N values in the array.
  _.rest = _.tail = _.drop = function(array, n, guard) {
    return slice.call(array, n == null || guard ? 1 : n);
  };

  // Trim out all falsy values from an array.
  _.compact = function(array) {
    return _.filter(array, _.identity);
  };

  // Internal implementation of a recursive `flatten` function.
  var flatten = function(input, shallow, strict, startIndex) {
    var output = [], idx = 0;
    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {
      var value = input[i];
      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {
        //flatten current level of array or arguments object
        if (!shallow) value = flatten(value, shallow, strict);
        var j = 0, len = value.length;
        output.length += len;
        while (j < len) {
          output[idx++] = value[j++];
        }
      } else if (!strict) {
        output[idx++] = value;
      }
    }
    return output;
  };

  // Flatten out an array, either recursively (by default), or just one level.
  _.flatten = function(array, shallow) {
    return flatten(array, shallow, false);
  };

  // Return a version of the array that does not contain the specified value(s).
  _.without = function(array) {
    return _.difference(array, slice.call(arguments, 1));
  };

  // Produce a duplicate-free version of the array. If the array has already
  // been sorted, you have the option of using a faster algorithm.
  // Aliased as `unique`.
  _.uniq = _.unique = function(array, isSorted, iteratee, context) {
    if (!_.isBoolean(isSorted)) {
      context = iteratee;
      iteratee = isSorted;
      isSorted = false;
    }
    if (iteratee != null) iteratee = cb(iteratee, context);
    var result = [];
    var seen = [];
    for (var i = 0, length = getLength(array); i < length; i++) {
      var value = array[i],
          computed = iteratee ? iteratee(value, i, array) : value;
      if (isSorted) {
        if (!i || seen !== computed) result.push(value);
        seen = computed;
      } else if (iteratee) {
        if (!_.contains(seen, computed)) {
          seen.push(computed);
          result.push(value);
        }
      } else if (!_.contains(result, value)) {
        result.push(value);
      }
    }
    return result;
  };

  // Produce an array that contains the union: each distinct element from all of
  // the passed-in arrays.
  _.union = function() {
    return _.uniq(flatten(arguments, true, true));
  };

  // Produce an array that contains every item shared between all the
  // passed-in arrays.
  _.intersection = function(array) {
    var result = [];
    var argsLength = arguments.length;
    for (var i = 0, length = getLength(array); i < length; i++) {
      var item = array[i];
      if (_.contains(result, item)) continue;
      for (var j = 1; j < argsLength; j++) {
        if (!_.contains(arguments[j], item)) break;
      }
      if (j === argsLength) result.push(item);
    }
    return result;
  };

  // Take the difference between one array and a number of other arrays.
  // Only the elements present in just the first array will remain.
  _.difference = function(array) {
    var rest = flatten(arguments, true, true, 1);
    return _.filter(array, function(value){
      return !_.contains(rest, value);
    });
  };

  // Zip together multiple lists into a single array -- elements that share
  // an index go together.
  _.zip = function() {
    return _.unzip(arguments);
  };

  // Complement of _.zip. Unzip accepts an array of arrays and groups
  // each array's elements on shared indices
  _.unzip = function(array) {
    var length = array && _.max(array, getLength).length || 0;
    var result = Array(length);

    for (var index = 0; index < length; index++) {
      result[index] = _.pluck(array, index);
    }
    return result;
  };

  // Converts lists into objects. Pass either a single array of `[key, value]`
  // pairs, or two parallel arrays of the same length -- one of keys, and one of
  // the corresponding values.
  _.object = function(list, values) {
    var result = {};
    for (var i = 0, length = getLength(list); i < length; i++) {
      if (values) {
        result[list[i]] = values[i];
      } else {
        result[list[i][0]] = list[i][1];
      }
    }
    return result;
  };

  // Generator function to create the findIndex and findLastIndex functions
  function createPredicateIndexFinder(dir) {
    return function(array, predicate, context) {
      predicate = cb(predicate, context);
      var length = getLength(array);
      var index = dir > 0 ? 0 : length - 1;
      for (; index >= 0 && index < length; index += dir) {
        if (predicate(array[index], index, array)) return index;
      }
      return -1;
    };
  }

  // Returns the first index on an array-like that passes a predicate test
  _.findIndex = createPredicateIndexFinder(1);
  _.findLastIndex = createPredicateIndexFinder(-1);

  // Use a comparator function to figure out the smallest index at which
  // an object should be inserted so as to maintain order. Uses binary search.
  _.sortedIndex = function(array, obj, iteratee, context) {
    iteratee = cb(iteratee, context, 1);
    var value = iteratee(obj);
    var low = 0, high = getLength(array);
    while (low < high) {
      var mid = Math.floor((low + high) / 2);
      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;
    }
    return low;
  };

  // Generator function to create the indexOf and lastIndexOf functions
  function createIndexFinder(dir, predicateFind, sortedIndex) {
    return function(array, item, idx) {
      var i = 0, length = getLength(array);
      if (typeof idx == 'number') {
        if (dir > 0) {
            i = idx >= 0 ? idx : Math.max(idx + length, i);
        } else {
            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;
        }
      } else if (sortedIndex && idx && length) {
        idx = sortedIndex(array, item);
        return array[idx] === item ? idx : -1;
      }
      if (item !== item) {
        idx = predicateFind(slice.call(array, i, length), _.isNaN);
        return idx >= 0 ? idx + i : -1;
      }
      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {
        if (array[idx] === item) return idx;
      }
      return -1;
    };
  }

  // Return the position of the first occurrence of an item in an array,
  // or -1 if the item is not included in the array.
  // If the array is large and already in sort order, pass `true`
  // for **isSorted** to use binary search.
  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);
  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);

  // Generate an integer Array containing an arithmetic progression. A port of
  // the native Python `range()` function. See
  // [the Python documentation](http://docs.python.org/library/functions.html#range).
  _.range = function(start, stop, step) {
    if (stop == null) {
      stop = start || 0;
      start = 0;
    }
    step = step || 1;

    var length = Math.max(Math.ceil((stop - start) / step), 0);
    var range = Array(length);

    for (var idx = 0; idx < length; idx++, start += step) {
      range[idx] = start;
    }

    return range;
  };

  // Function (ahem) Functions
  // ------------------

  // Determines whether to execute a function as a constructor
  // or a normal function with the provided arguments
  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {
    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);
    var self = baseCreate(sourceFunc.prototype);
    var result = sourceFunc.apply(self, args);
    if (_.isObject(result)) return result;
    return self;
  };

  // Create a function bound to a given object (assigning `this`, and arguments,
  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
  // available.
  _.bind = function(func, context) {
    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));
    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');
    var args = slice.call(arguments, 2);
    var bound = function() {
      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));
    };
    return bound;
  };

  // Partially apply a function by creating a version that has had some of its
  // arguments pre-filled, without changing its dynamic `this` context. _ acts
  // as a placeholder, allowing any combination of arguments to be pre-filled.
  _.partial = function(func) {
    var boundArgs = slice.call(arguments, 1);
    var bound = function() {
      var position = 0, length = boundArgs.length;
      var args = Array(length);
      for (var i = 0; i < length; i++) {
        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];
      }
      while (position < arguments.length) args.push(arguments[position++]);
      return executeBound(func, bound, this, this, args);
    };
    return bound;
  };

  // Bind a number of an object's methods to that object. Remaining arguments
  // are the method names to be bound. Useful for ensuring that all callbacks
  // defined on an object belong to it.
  _.bindAll = function(obj) {
    var i, length = arguments.length, key;
    if (length <= 1) throw new Error('bindAll must be passed function names');
    for (i = 1; i < length; i++) {
      key = arguments[i];
      obj[key] = _.bind(obj[key], obj);
    }
    return obj;
  };

  // Memoize an expensive function by storing its results.
  _.memoize = function(func, hasher) {
    var memoize = function(key) {
      var cache = memoize.cache;
      var address = '' + (hasher ? hasher.apply(this, arguments) : key);
      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);
      return cache[address];
    };
    memoize.cache = {};
    return memoize;
  };

  // Delays a function for the given number of milliseconds, and then calls
  // it with the arguments supplied.
  _.delay = function(func, wait) {
    var args = slice.call(arguments, 2);
    return setTimeout(function(){
      return func.apply(null, args);
    }, wait);
  };

  // Defers a function, scheduling it to run after the current call stack has
  // cleared.
  _.defer = _.partial(_.delay, _, 1);

  // Returns a function, that, when invoked, will only be triggered at most once
  // during a given window of time. Normally, the throttled function will run
  // as much as it can, without ever going more than once per `wait` duration;
  // but if you'd like to disable the execution on the leading edge, pass
  // `{leading: false}`. To disable execution on the trailing edge, ditto.
  _.throttle = function(func, wait, options) {
    var context, args, result;
    var timeout = null;
    var previous = 0;
    if (!options) options = {};
    var later = function() {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    };
    return function() {
      var now = _.now();
      if (!previous && options.leading === false) previous = now;
      var remaining = wait - (now - previous);
      context = this;
      args = arguments;
      if (remaining <= 0 || remaining > wait) {
        if (timeout) {
          clearTimeout(timeout);
          timeout = null;
        }
        previous = now;
        result = func.apply(context, args);
        if (!timeout) context = args = null;
      } else if (!timeout && options.trailing !== false) {
        timeout = setTimeout(later, remaining);
      }
      return result;
    };
  };

  // Returns a function, that, as long as it continues to be invoked, will not
  // be triggered. The function will be called after it stops being called for
  // N milliseconds. If `immediate` is passed, trigger the function on the
  // leading edge, instead of the trailing.
  _.debounce = function(func, wait, immediate) {
    var timeout, args, context, timestamp, result;

    var later = function() {
      var last = _.now() - timestamp;

      if (last < wait && last >= 0) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        }
      }
    };

    return function() {
      context = this;
      args = arguments;
      timestamp = _.now();
      var callNow = immediate && !timeout;
      if (!timeout) timeout = setTimeout(later, wait);
      if (callNow) {
        result = func.apply(context, args);
        context = args = null;
      }

      return result;
    };
  };

  // Returns the first function passed as an argument to the second,
  // allowing you to adjust arguments, run code before and after, and
  // conditionally execute the original function.
  _.wrap = function(func, wrapper) {
    return _.partial(wrapper, func);
  };

  // Returns a negated version of the passed-in predicate.
  _.negate = function(predicate) {
    return function() {
      return !predicate.apply(this, arguments);
    };
  };

  // Returns a function that is the composition of a list of functions, each
  // consuming the return value of the function that follows.
  _.compose = function() {
    var args = arguments;
    var start = args.length - 1;
    return function() {
      var i = start;
      var result = args[start].apply(this, arguments);
      while (i--) result = args[i].call(this, result);
      return result;
    };
  };

  // Returns a function that will only be executed on and after the Nth call.
  _.after = function(times, func) {
    return function() {
      if (--times < 1) {
        return func.apply(this, arguments);
      }
    };
  };

  // Returns a function that will only be executed up to (but not including) the Nth call.
  _.before = function(times, func) {
    var memo;
    return function() {
      if (--times > 0) {
        memo = func.apply(this, arguments);
      }
      if (times <= 1) func = null;
      return memo;
    };
  };

  // Returns a function that will be executed at most one time, no matter how
  // often you call it. Useful for lazy initialization.
  _.once = _.partial(_.before, 2);

  // Object Functions
  // ----------------

  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.
  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');
  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',
                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];

  function collectNonEnumProps(obj, keys) {
    var nonEnumIdx = nonEnumerableProps.length;
    var constructor = obj.constructor;
    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;

    // Constructor is a special case.
    var prop = 'constructor';
    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);

    while (nonEnumIdx--) {
      prop = nonEnumerableProps[nonEnumIdx];
      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {
        keys.push(prop);
      }
    }
  }

  // Retrieve the names of an object's own properties.
  // Delegates to **ECMAScript 5**'s native `Object.keys`
  _.keys = function(obj) {
    if (!_.isObject(obj)) return [];
    if (nativeKeys) return nativeKeys(obj);
    var keys = [];
    for (var key in obj) if (_.has(obj, key)) keys.push(key);
    // Ahem, IE < 9.
    if (hasEnumBug) collectNonEnumProps(obj, keys);
    return keys;
  };

  // Retrieve all the property names of an object.
  _.allKeys = function(obj) {
    if (!_.isObject(obj)) return [];
    var keys = [];
    for (var key in obj) keys.push(key);
    // Ahem, IE < 9.
    if (hasEnumBug) collectNonEnumProps(obj, keys);
    return keys;
  };

  // Retrieve the values of an object's properties.
  _.values = function(obj) {
    var keys = _.keys(obj);
    var length = keys.length;
    var values = Array(length);
    for (var i = 0; i < length; i++) {
      values[i] = obj[keys[i]];
    }
    return values;
  };

  // Returns the results of applying the iteratee to each element of the object
  // In contrast to _.map it returns an object
  _.mapObject = function(obj, iteratee, context) {
    iteratee = cb(iteratee, context);
    var keys =  _.keys(obj),
          length = keys.length,
          results = {},
          currentKey;
      for (var index = 0; index < length; index++) {
        currentKey = keys[index];
        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);
      }
      return results;
  };

  // Convert an object into a list of `[key, value]` pairs.
  _.pairs = function(obj) {
    var keys = _.keys(obj);
    var length = keys.length;
    var pairs = Array(length);
    for (var i = 0; i < length; i++) {
      pairs[i] = [keys[i], obj[keys[i]]];
    }
    return pairs;
  };

  // Invert the keys and values of an object. The values must be serializable.
  _.invert = function(obj) {
    var result = {};
    var keys = _.keys(obj);
    for (var i = 0, length = keys.length; i < length; i++) {
      result[obj[keys[i]]] = keys[i];
    }
    return result;
  };

  // Return a sorted list of the function names available on the object.
  // Aliased as `methods`
  _.functions = _.methods = function(obj) {
    var names = [];
    for (var key in obj) {
      if (_.isFunction(obj[key])) names.push(key);
    }
    return names.sort();
  };

  // Extend a given object with all the properties in passed-in object(s).
  _.extend = createAssigner(_.allKeys);

  // Assigns a given object with all the own properties in the passed-in object(s)
  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)
  _.extendOwn = _.assign = createAssigner(_.keys);

  // Returns the first key on an object that passes a predicate test
  _.findKey = function(obj, predicate, context) {
    predicate = cb(predicate, context);
    var keys = _.keys(obj), key;
    for (var i = 0, length = keys.length; i < length; i++) {
      key = keys[i];
      if (predicate(obj[key], key, obj)) return key;
    }
  };

  // Return a copy of the object only containing the whitelisted properties.
  _.pick = function(object, oiteratee, context) {
    var result = {}, obj = object, iteratee, keys;
    if (obj == null) return result;
    if (_.isFunction(oiteratee)) {
      keys = _.allKeys(obj);
      iteratee = optimizeCb(oiteratee, context);
    } else {
      keys = flatten(arguments, false, false, 1);
      iteratee = function(value, key, obj) { return key in obj; };
      obj = Object(obj);
    }
    for (var i = 0, length = keys.length; i < length; i++) {
      var key = keys[i];
      var value = obj[key];
      if (iteratee(value, key, obj)) result[key] = value;
    }
    return result;
  };

   // Return a copy of the object without the blacklisted properties.
  _.omit = function(obj, iteratee, context) {
    if (_.isFunction(iteratee)) {
      iteratee = _.negate(iteratee);
    } else {
      var keys = _.map(flatten(arguments, false, false, 1), String);
      iteratee = function(value, key) {
        return !_.contains(keys, key);
      };
    }
    return _.pick(obj, iteratee, context);
  };

  // Fill in a given object with default properties.
  _.defaults = createAssigner(_.allKeys, true);

  // Creates an object that inherits from the given prototype object.
  // If additional properties are provided then they will be added to the
  // created object.
  _.create = function(prototype, props) {
    var result = baseCreate(prototype);
    if (props) _.extendOwn(result, props);
    return result;
  };

  // Create a (shallow-cloned) duplicate of an object.
  _.clone = function(obj) {
    if (!_.isObject(obj)) return obj;
    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
  };

  // Invokes interceptor with the obj, and then returns obj.
  // The primary purpose of this method is to "tap into" a method chain, in
  // order to perform operations on intermediate results within the chain.
  _.tap = function(obj, interceptor) {
    interceptor(obj);
    return obj;
  };

  // Returns whether an object has a given set of `key:value` pairs.
  _.isMatch = function(object, attrs) {
    var keys = _.keys(attrs), length = keys.length;
    if (object == null) return !length;
    var obj = Object(object);
    for (var i = 0; i < length; i++) {
      var key = keys[i];
      if (attrs[key] !== obj[key] || !(key in obj)) return false;
    }
    return true;
  };


  // Internal recursive comparison function for `isEqual`.
  var eq = function(a, b, aStack, bStack) {
    // Identical objects are equal. `0 === -0`, but they aren't identical.
    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
    if (a === b) return a !== 0 || 1 / a === 1 / b;
    // A strict comparison is necessary because `null == undefined`.
    if (a == null || b == null) return a === b;
    // Unwrap any wrapped objects.
    if (a instanceof _) a = a._wrapped;
    if (b instanceof _) b = b._wrapped;
    // Compare `[[Class]]` names.
    var className = toString.call(a);
    if (className !== toString.call(b)) return false;
    switch (className) {
      // Strings, numbers, regular expressions, dates, and booleans are compared by value.
      case '[object RegExp]':
      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')
      case '[object String]':
        // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
        // equivalent to `new String("5")`.
        return '' + a === '' + b;
      case '[object Number]':
        // `NaN`s are equivalent, but non-reflexive.
        // Object(NaN) is equivalent to NaN
        if (+a !== +a) return +b !== +b;
        // An `egal` comparison is performed for other numeric values.
        return +a === 0 ? 1 / +a === 1 / b : +a === +b;
      case '[object Date]':
      case '[object Boolean]':
        // Coerce dates and booleans to numeric primitive values. Dates are compared by their
        // millisecond representations. Note that invalid dates with millisecond representations
        // of `NaN` are not equivalent.
        return +a === +b;
    }

    var areArrays = className === '[object Array]';
    if (!areArrays) {
      if (typeof a != 'object' || typeof b != 'object') return false;

      // Objects with different constructors are not equivalent, but `Object`s or `Array`s
      // from different frames are.
      var aCtor = a.constructor, bCtor = b.constructor;
      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&
                               _.isFunction(bCtor) && bCtor instanceof bCtor)
                          && ('constructor' in a && 'constructor' in b)) {
        return false;
      }
    }
    // Assume equality for cyclic structures. The algorithm for detecting cyclic
    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.

    // Initializing stack of traversed objects.
    // It's done here since we only need them for objects and arrays comparison.
    aStack = aStack || [];
    bStack = bStack || [];
    var length = aStack.length;
    while (length--) {
      // Linear search. Performance is inversely proportional to the number of
      // unique nested structures.
      if (aStack[length] === a) return bStack[length] === b;
    }

    // Add the first object to the stack of traversed objects.
    aStack.push(a);
    bStack.push(b);

    // Recursively compare objects and arrays.
    if (areArrays) {
      // Compare array lengths to determine if a deep comparison is necessary.
      length = a.length;
      if (length !== b.length) return false;
      // Deep compare the contents, ignoring non-numeric properties.
      while (length--) {
        if (!eq(a[length], b[length], aStack, bStack)) return false;
      }
    } else {
      // Deep compare objects.
      var keys = _.keys(a), key;
      length = keys.length;
      // Ensure that both objects contain the same number of properties before comparing deep equality.
      if (_.keys(b).length !== length) return false;
      while (length--) {
        // Deep compare each member
        key = keys[length];
        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;
      }
    }
    // Remove the first object from the stack of traversed objects.
    aStack.pop();
    bStack.pop();
    return true;
  };

  // Perform a deep comparison to check if two objects are equal.
  _.isEqual = function(a, b) {
    return eq(a, b);
  };

  // Is a given array, string, or object empty?
  // An "empty" object has no enumerable own-properties.
  _.isEmpty = function(obj) {
    if (obj == null) return true;
    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;
    return _.keys(obj).length === 0;
  };

  // Is a given value a DOM element?
  _.isElement = function(obj) {
    return !!(obj && obj.nodeType === 1);
  };

  // Is a given value an array?
  // Delegates to ECMA5's native Array.isArray
  _.isArray = nativeIsArray || function(obj) {
    return toString.call(obj) === '[object Array]';
  };

  // Is a given variable an object?
  _.isObject = function(obj) {
    var type = typeof obj;
    return type === 'function' || type === 'object' && !!obj;
  };

  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.
  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {
    _['is' + name] = function(obj) {
      return toString.call(obj) === '[object ' + name + ']';
    };
  });

  // Define a fallback version of the method in browsers (ahem, IE < 9), where
  // there isn't any inspectable "Arguments" type.
  if (!_.isArguments(arguments)) {
    _.isArguments = function(obj) {
      return _.has(obj, 'callee');
    };
  }

  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,
  // IE 11 (#1621), and in Safari 8 (#1929).
  if (typeof /./ != 'function' && typeof Int8Array != 'object') {
    _.isFunction = function(obj) {
      return typeof obj == 'function' || false;
    };
  }

  // Is a given object a finite number?
  _.isFinite = function(obj) {
    return isFinite(obj) && !isNaN(parseFloat(obj));
  };

  // Is the given value `NaN`? (NaN is the only number which does not equal itself).
  _.isNaN = function(obj) {
    return _.isNumber(obj) && obj !== +obj;
  };

  // Is a given value a boolean?
  _.isBoolean = function(obj) {
    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';
  };

  // Is a given value equal to null?
  _.isNull = function(obj) {
    return obj === null;
  };

  // Is a given variable undefined?
  _.isUndefined = function(obj) {
    return obj === void 0;
  };

  // Shortcut function for checking if an object has a given property directly
  // on itself (in other words, not on a prototype).
  _.has = function(obj, key) {
    return obj != null && hasOwnProperty.call(obj, key);
  };

  // Utility Functions
  // -----------------

  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
  // previous owner. Returns a reference to the Underscore object.
  _.noConflict = function() {
    root._ = previousUnderscore;
    return this;
  };

  // Keep the identity function around for default iteratees.
  _.identity = function(value) {
    return value;
  };

  // Predicate-generating functions. Often useful outside of Underscore.
  _.constant = function(value) {
    return function() {
      return value;
    };
  };

  _.noop = function(){};

  _.property = property;

  // Generates a function for a given object that returns a given property.
  _.propertyOf = function(obj) {
    return obj == null ? function(){} : function(key) {
      return obj[key];
    };
  };

  // Returns a predicate for checking whether an object has a given set of
  // `key:value` pairs.
  _.matcher = _.matches = function(attrs) {
    attrs = _.extendOwn({}, attrs);
    return function(obj) {
      return _.isMatch(obj, attrs);
    };
  };

  // Run a function **n** times.
  _.times = function(n, iteratee, context) {
    var accum = Array(Math.max(0, n));
    iteratee = optimizeCb(iteratee, context, 1);
    for (var i = 0; i < n; i++) accum[i] = iteratee(i);
    return accum;
  };

  // Return a random integer between min and max (inclusive).
  _.random = function(min, max) {
    if (max == null) {
      max = min;
      min = 0;
    }
    return min + Math.floor(Math.random() * (max - min + 1));
  };

  // A (possibly faster) way to get the current timestamp as an integer.
  _.now = Date.now || function() {
    return new Date().getTime();
  };

   // List of HTML entities for escaping.
  var escapeMap = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#x27;',
    '`': '&#x60;'
  };
  var unescapeMap = _.invert(escapeMap);

  // Functions for escaping and unescaping strings to/from HTML interpolation.
  var createEscaper = function(map) {
    var escaper = function(match) {
      return map[match];
    };
    // Regexes for identifying a key that needs to be escaped
    var source = '(?:' + _.keys(map).join('|') + ')';
    var testRegexp = RegExp(source);
    var replaceRegexp = RegExp(source, 'g');
    return function(string) {
      string = string == null ? '' : '' + string;
      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;
    };
  };
  _.escape = createEscaper(escapeMap);
  _.unescape = createEscaper(unescapeMap);

  // If the value of the named `property` is a function then invoke it with the
  // `object` as context; otherwise, return it.
  _.result = function(object, property, fallback) {
    var value = object == null ? void 0 : object[property];
    if (value === void 0) {
      value = fallback;
    }
    return _.isFunction(value) ? value.call(object) : value;
  };

  // Generate a unique integer id (unique within the entire client session).
  // Useful for temporary DOM ids.
  var idCounter = 0;
  _.uniqueId = function(prefix) {
    var id = ++idCounter + '';
    return prefix ? prefix + id : id;
  };

  // By default, Underscore uses ERB-style template delimiters, change the
  // following template settings to use alternative delimiters.
  _.templateSettings = {
    evaluate    : /<%([\s\S]+?)%>/g,
    interpolate : /<%=([\s\S]+?)%>/g,
    escape      : /<%-([\s\S]+?)%>/g
  };

  // When customizing `templateSettings`, if you don't want to define an
  // interpolation, evaluation or escaping regex, we need one that is
  // guaranteed not to match.
  var noMatch = /(.)^/;

  // Certain characters need to be escaped so that they can be put into a
  // string literal.
  var escapes = {
    "'":      "'",
    '\\':     '\\',
    '\r':     'r',
    '\n':     'n',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  var escaper = /\\|'|\r|\n|\u2028|\u2029/g;

  var escapeChar = function(match) {
    return '\\' + escapes[match];
  };

  // JavaScript micro-templating, similar to John Resig's implementation.
  // Underscore templating handles arbitrary delimiters, preserves whitespace,
  // and correctly escapes quotes within interpolated code.
  // NB: `oldSettings` only exists for backwards compatibility.
  _.template = function(text, settings, oldSettings) {
    if (!settings && oldSettings) settings = oldSettings;
    settings = _.defaults({}, settings, _.templateSettings);

    // Combine delimiters into one regular expression via alternation.
    var matcher = RegExp([
      (settings.escape || noMatch).source,
      (settings.interpolate || noMatch).source,
      (settings.evaluate || noMatch).source
    ].join('|') + '|$', 'g');

    // Compile the template source, escaping string literals appropriately.
    var index = 0;
    var source = "__p+='";
    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {
      source += text.slice(index, offset).replace(escaper, escapeChar);
      index = offset + match.length;

      if (escape) {
        source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
      } else if (interpolate) {
        source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
      } else if (evaluate) {
        source += "';\n" + evaluate + "\n__p+='";
      }

      // Adobe VMs need the match returned to produce the correct offest.
      return match;
    });
    source += "';\n";

    // If a variable is not specified, place data values in local scope.
    if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';

    source = "var __t,__p='',__j=Array.prototype.join," +
      "print=function(){__p+=__j.call(arguments,'');};\n" +
      source + 'return __p;\n';

    try {
      var render = new Function(settings.variable || 'obj', '_', source);
    } catch (e) {
      e.source = source;
      throw e;
    }

    var template = function(data) {
      return render.call(this, data, _);
    };

    // Provide the compiled source as a convenience for precompilation.
    var argument = settings.variable || 'obj';
    template.source = 'function(' + argument + '){\n' + source + '}';

    return template;
  };

  // Add a "chain" function. Start chaining a wrapped Underscore object.
  _.chain = function(obj) {
    var instance = _(obj);
    instance._chain = true;
    return instance;
  };

  // OOP
  // ---------------
  // If Underscore is called as a function, it returns a wrapped object that
  // can be used OO-style. This wrapper holds altered versions of all the
  // underscore functions. Wrapped objects may be chained.

  // Helper function to continue chaining intermediate results.
  var result = function(instance, obj) {
    return instance._chain ? _(obj).chain() : obj;
  };

  // Add your own custom functions to the Underscore object.
  _.mixin = function(obj) {
    _.each(_.functions(obj), function(name) {
      var func = _[name] = obj[name];
      _.prototype[name] = function() {
        var args = [this._wrapped];
        push.apply(args, arguments);
        return result(this, func.apply(_, args));
      };
    });
  };

  // Add all of the Underscore functions to the wrapper object.
  _.mixin(_);

  // Add all mutator Array functions to the wrapper.
  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {
    var method = ArrayProto[name];
    _.prototype[name] = function() {
      var obj = this._wrapped;
      method.apply(obj, arguments);
      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];
      return result(this, obj);
    };
  });

  // Add all accessor Array functions to the wrapper.
  _.each(['concat', 'join', 'slice'], function(name) {
    var method = ArrayProto[name];
    _.prototype[name] = function() {
      return result(this, method.apply(this._wrapped, arguments));
    };
  });

  // Extracts the result from a wrapped and chained object.
  _.prototype.value = function() {
    return this._wrapped;
  };

  // Provide unwrapping proxy for some methods used in engine operations
  // such as arithmetic and JSON stringification.
  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;

  _.prototype.toString = function() {
    return '' + this._wrapped;
  };

  // AMD registration happens at the end for compatibility with AMD loaders
  // that may not enforce next-turn semantics on modules. Even though general
  // practice for AMD registration is to be anonymous, underscore registers
  // as a named module because, like jQuery, it is a base library that is
  // popular enough to be bundled in a third party lib, but not be part of
  // an AMD load request. Those cases could generate an error when an
  // anonymous define() is called outside of a loader request.
  if (typeof define === 'function' && define.amd) {
    define('underscore', [], function() {
      return _;
    });
  }
}.call(this));

},{}],33:[function(require,module,exports){
var _ = require('underscore');
// Application Model
var jQuery = require('jquery'),
  MainModel = require('./models/main_model'),
  MerchantModel = require('./models/merchant_model'),
  ResponseModel = require('./models/response_model'),
  CardModel = require('./models/card_model'),
  PayModel = require('./models/pay_model'),
  UserModel = require('./models/user_model'),
  WalletModel = require('./models/wallet_model'),
  CardinalModel = require('./models/cardinal_model'),
  RewardModel = require('./models/reward_model'),
  BbmModel = require('./models/bbm_model'),
  ChannelAuthenticateModel = require('./models/channel_authenticate_model'),
  FingerprintModel = require('./models/fingerprint_model'),
  NoncardModel = require('./models/noncard_model'),

  //payment models
  MobilePayModel = require('./models/mobile_pay_model'),
  PaycodePayModel = require('./models/payment_options/paycode_pay_model.js'),
  CreditPayModel = require('./models/payment_options/credit_pay_model.js');
UssdPayModel = require('./models/payment_options/ussd_pay_model.js');

var Main = require('./views/main/main');

if (window.IpgApp) {
  if (window.IpgApp.merchantName) {
    if (window.IpgApp.merchantName.toLowerCase() == 'quickteller') {
      if (window.IpgApp.siteRedirectUrl) {
        var tempRedirect = window.IpgApp.siteRedirectUrl.toLowerCase();
        if (tempRedirect.indexOf('www.quickteller') < 0) {
          window.IpgApp.merchantName = "Merchant site";
        }
      } else {
        window.IpgApp.merchantName = "Merchant site"
      }
    }
  }
}

//Remap Non configuration fields

//create a copy of IpgApp.

var appParameters = JSON.parse(JSON.stringify(window.IpgApp));
var modifiedProviders = [];

// modifiedProviders.push({ providerCode: 'CARD', enabled: false });

var cardPresent = false;

if (appParameters.nonCardOptions && appParameters.nonCardOptions.length > 0) {

  for (var i = 0; i < appParameters.nonCardOptions.length; i++) {
    var entry = appParameters.nonCardOptions[i];

    //Remap mobile
    if (entry.providerCode == 'CARD') {
      entry.providerCode = 'card';
      modifiedProviders.push(entry);

      cardPresent = true;
      continue;
    }

    //Remap qr
    if (entry.providerCode == 'QR') {
      entry.providerCode = 'qr';
      modifiedProviders.push(entry);
      continue;
    }

    //Remap mobile
    if (entry.providerCode == 'MMO') {
      entry.providerCode = 'mobile';
      modifiedProviders.push(entry);
      continue;
    }

    //Remap paycode
    if (entry.providerCode == 'PYC') {
      entry.providerCode = 'paycode';
      modifiedProviders.push(entry);
      continue;
    }

    //Remap paycode
    if (entry.providerCode == 'CRD') {
      entry.providerCode = 'credit';
      modifiedProviders.push(entry);
      continue;
    }

    //Remap paycode
    if (entry.providerCode == 'USSD') {
      entry.providerCode = 'ussd';
      modifiedProviders.push(entry);
      continue;
    }
  }
}
//add card by default if it was not present in options
if(!cardPresent) {
  modifiedProviders.push({providerCode: 'card', enabled: true});
}

//modifiedProviders.push({ providerCode: 'credit', enabled: true });

appParameters.nonCardOptions = modifiedProviders;
//END


var merchantModel = new MerchantModel(appParameters);

var cardModel = new CardModel();
var payModel = new PayModel();
var mainModel = new MainModel();
var userModel = new UserModel();
var walletModel = new WalletModel();
var cardinalModel = new CardinalModel();
var rewardModel = new RewardModel();
var channelAuthenticateModel = new ChannelAuthenticateModel(appParameters);
var bbmModel = new BbmModel();
var fingerprintModel = new FingerprintModel();
var noncardModel = new NoncardModel({});
var mobilePayModel = new MobilePayModel({});
var paycodePayModel = new PaycodePayModel({});
var creditPayModel = new CreditPayModel({});
var ussdPayModel = new UssdPayModel({});


mainModel.set('userCountry', 'ng');

/*
if(window.IpgApp.channelProvider != "BBM") {
    $.get('https://ipinfo.io', function(){}, 'jsonp')
       .done(function(resp) {
            mainModel.set('userCountry', resp.country.toLowerCase());
        })
        .fail(function(error) {
            mainModel.set('userCountry', 'ng');
        });
}
*/

mainModel.set('merchantModel', merchantModel);
mainModel.set('cardModel', cardModel);
mainModel.set('userModel', userModel);
mainModel.set('payModel', payModel);
mainModel.set('walletModel', walletModel);
mainModel.set('cardinalModel', cardinalModel);
mainModel.set('rewardModel', rewardModel);
mainModel.set('channelAuthenticateModel', channelAuthenticateModel);
mainModel.set('bbmModel', bbmModel);
mainModel.set('fingerprintModel', fingerprintModel);
mainModel.set('noncardModel', noncardModel);
mainModel.set('mobilePayModel', mobilePayModel);
mainModel.set('paycodePayModel', paycodePayModel);
mainModel.set('creditPayModel', creditPayModel);
mainModel.set('ussdPayModel', ussdPayModel);


/*
var dFP = Utils.deviceFingerPrint();
dFP(window.IpgApp.baseUrl + "public/images/", function(response) {
    var deviceJSON = JSON.stringify({ deviceId: response });
    payModel.set('deviceFingerPrint', response);
});
*/

var FastClick = require('../js/libraries/fast-click');
jQuery(window).ready(function () {
  new FastClick(document.body);
});
new Main({ model: mainModel });

//setup redirect control
window.webpayAllowCancellation = true;
},{"../js/libraries/fast-click":40,"./models/bbm_model":41,"./models/card_model":42,"./models/cardinal_model":44,"./models/channel_authenticate_model":45,"./models/fingerprint_model":48,"./models/main_model":51,"./models/merchant_model":52,"./models/mobile_pay_model":53,"./models/noncard_model":54,"./models/pay_model":55,"./models/payment_options/credit_pay_model.js":56,"./models/payment_options/paycode_pay_model.js":57,"./models/payment_options/ussd_pay_model.js":58,"./models/response_model":60,"./models/reward_model":61,"./models/user_model":62,"./models/wallet_model":64,"./views/main/main":118,"jquery":28,"underscore":32}],34:[function(require,module,exports){
module.exports = (function(){
    return  {
        PUBLIC_KEY_EXPONENTS:"010001",
        PUBLIC_KEY_MODULES:"009c7b3ba621a26c4b02f48cfc07ef6ee0aed8e12b4bd11c5cc0abf80d5206be69e1891e60fc88e2d565e2fabe4d0cf630e318a6c721c3ded718d0c530cdf050387ad0a30a336899bbda877d0ec7c7c3ffe693988bfae0ffbab71b25468c7814924f022cb5fda36e0d2c30a7161fa1c6fb5fbd7d05adbef7e68d48f8b6c5f511827c4b1c5ed15b6f20555affc4d0857ef7ab2b5c18ba22bea5d3a79bd1834badb5878d8c7a4b19da20c1f62340b1f7fbf01d2f2e97c9714a9df376ac0ea58072b2b77aeb7872b54a89667519de44d0fc73540beeaec4cb778a45eebfbefe2d817a8a8319b2bc6d9fa714f5289ec7c0dbc43496d71cf2a642cb679b0fc4072fd2cf"
    };
})();



},{}],35:[function(require,module,exports){
module.exports = (function(){
    return  {
        'CARD':{
            '403':'CARD_INVALID',
            '401':'CARD_INVALID',
            '409':'CARD_ERROR',
            '400': 'CARD_DETAILS_INVALID',
            '500':'CARD_ERROR'
        },
        'LOGIN':{
            '403':'LOGIN_INVALID',
            '401':'LOGIN_INVALID',
            '409':'LOGIN_ERROR',
            '500':'LOGIN_ERROR'
        }
    };
})();
},{}],36:[function(require,module,exports){
module.exports = (function(){
    return  {
        '00' : 'APPROVED_FINANCIAL_INSTUTION',
        '01' : 'REFER_FINANCIAL_INSTITUTION',
        '02' : 'REFER_TO_FINANCIAL_INSTITUTION_SPECIAL_CONDITION',
        '03' : 'INVALID_MERCHANT',
        '04' : 'PICK_UP_CARD',
        '05' : 'DO_NOT_HONOR',
        '06' : 'ERROR',
        '07' : 'PICK_UP_CARD_SPECIAL_CONDITION',
        '08' : 'HONOR_WITH_IDENTIFICATION',
        '09' : 'REQUEST_IN_PROGRESS',
        '10' : 'APPROVED_BY_FINANCIAL_INSTITUTION',
        '11' : 'APPROVED_BY_FINANCIAL_INSTITUTION',
        '12' : 'INVALID_TRANSACTION',
        '13' : 'INVALID_AMOUNT',
        '14' : 'INVALID_CARD_NUMBER',
        '15' : 'NO_SUCH_FINANCIAL_INSTITUTION',
        '16' : 'APPROVED_BY_FINANCIAL_INSTITUTION_UPDATE_TRACK_3',
        '17' : 'CUSTOMER_CANCELLATION',
        '18' : 'CUSTOMER_DISPUTE',
        '19' : 'RE_ENTER_TRANSACTION',
        '20' : 'INVALID_RESPONSE_FROM_FINANCIAL_INSTITUTION',
        '21' : 'NO_ACTION_TAKEN_BY_FINANCIAL_INSTITUTION',
        '22' : 'SUSPECTED_MALFUNCTION',
        '23' : 'UNACCEPTABLE_TRANSACTION_FEE',
        '24' : 'FILE_UPDATE_NOT_SUPPORTED',
        '25' : 'UNABLE_TO_LOCATE_RECORD',
        '26' : 'DUPLICATE_RECORD',
        '27' : 'FILE_UPDATE_FIELD_EDIT_ERROR',
        '28' : 'FILE_UPDATE_FILE_LOCKED',
        '29' : 'FILE_UPDATE_FAILED',
        '30' : 'FORMAT_ERROR',
        '31' : 'BANK_NOT_SUPPORTED',
        '32' : 'COMPLETED_PARTIALLY_BY_FINANCIAL_INSTITUTION',
        '33' : 'EXPIRED_CARD_PICK_UP',
        '34' : 'SUSPECTED_FRAUD_PICK_UP',
        '35' : 'CONTACT_ACQUIRER_PICK_UP',
        '36' : 'RESTRICTED_CARD_PICK_UP',
        '37' : 'CALL_ACQUIRER_SECURITY_PICK_UP',
        '38' : 'PIN_TRIES_EXCEEDED_PICK_UP',
        '39' : 'NO_CREDIT_ACCOUNT',
        '40' : 'FUNCTION_NOT_SUPPORTED',
        '41' : 'LOST_CARD_PICK_UP',
        '42' : 'NO_UNIVERSAL_ACCOUNT',
        '43' : 'STOLEN_CARD_PICK_UPSTOLEN_CARD_PICK_UP',
        '44' : 'NO_INVESTMENT_ACCOUNT',
        '51' : 'INSUFFICIENT_FUNDS',
        '52' : 'NO_CHECK_ACCOUNT',
        '53' : 'NO_SAVINGS_ACCOUNT',
        '54' : 'EXPIRED_CARD',
        '55' : 'INCORRECT_PIN',
        '56' : 'NO_CARD_RECORD',
        '57' : 'TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER',
        '58' : 'TRANSACTION_NOT_PERMITTED_ON_TERMINAL',
        '59' : 'SUSPECTED_FRAUD',
        '60' : 'CONTACT_ACQUIRER',
        '61' : 'EXCEEDS_WITHDRAWAL_LIMIT',
        '62' : 'RESTRICTED_CARD',
        '63' : 'SECURITY_VIOLATION',
        '64' : 'ORIGINAL_AMOUNT_INCORRECT',
        '65' : 'EXCEEDS_WITHDRAWAL_FREQUENCY',
        '66' : 'CALL_ACQUIRER_SECURITY',
        '67' : 'HARD_CAPTURE',
        '68' : 'RESPONSE_RECEIVED_TOO_LATE',
        '75' : 'PIN_TRIES_EXCEEDED',
        '76' : 'RESERVED_FOR_FUTURE_POSTILION_USE',
        '77' : 'INTERVENE_BANK_APPROVAL_REQUIRED',
        '78' : 'INTERVENE_BANK APPROVAL_REQUIRED_FOR_PARTIAL AMOUNT',
        '90' : 'CUT_OFF_IN_PROGRESS',
        '91' : 'ISSUER_OR_SWITCH_INOPERATIVE',
        '92' : 'ROUTING_ERROR',
        '93' : 'VIOLATION_OF_LAW',
        '94' : 'DUPLICATE_TRANSACTION',
        '95' : 'RECONCILE_ERROR',
        '96' : 'SYSTEM_MALFUNCTION',
        '98' : 'EXCEEDS_CASH_LIMIT',
        'Z0' : 'PENDING',
        'Z4' : 'INTEGRATION_ERROR',
        'Z1' : 'TRANSACTION_ERROR',
        'Z5' : 'DUPLICATE_TRANSACTION_REFERENCE',
        'Z6' : 'CUSTOMER_CANCELLATION',
        'Z25' : 'TRANSACTION_NOT_FOUND',
        'Z61' : 'PAYMENT_REQUIRES_TOKEN',
        'Z62' : 'TOKEN_GENERATED_SUCCESSFUL',
        'Z63' : 'TOKEN_NOT_GENERATED_CUSTOMER_NOT_REGISTERED_ON_TOKEN_PLATFORM',
        'Z64' : 'ERROR_OCCURRED_COULD_NOT_GENERATE_TOKEN',
        'Z65' : 'PAYMENT_REQUIRES_TOKEN_AUTHORIZATION',
        'Z66' : 'TOKEN_AUTHORIZATION_SUCCESSFUL',
        'Z67' : 'TOKEN_AUTHORIZATION_NOT_SUCCESSFUL_INCORRECT_TOKEN_SUPPLIED',
        'Z68' : 'ERROR_OCCURRED_COULD_NOT_AUTHENTICATE_TOKEN',
        'Z69' : 'CUSTOMER_CANCELLATION_SECURE3D',
        'Z70' : 'CARDINAL_AUTHENTICATION_REQUIRED',
        'Z71' : 'CARDINAL_LOOKUP_SUCCESSFUL',
        'Z72' : 'CARDINAL_LOOKUP_FAILED',
        'Z73' : 'CARDINAL_AUTHENTICATE_SUCCESSFUL',
        'Z74' : 'CARDINAL_AUTHENTICATE_FAILED',
        'Z8' : 'INVALID_CARD_DETAILS',
        'Z9' : 'CANNOT_CONNECT_TO_PASSPORT_SERVICE',
        'Z15' : 'CANNOT_CONNECT_TO_PAYPHONE_SERVICE',
        'Z16' : 'CANNOT_CONNECT_TO_LOYALTY_SERVICE',
        'Z161' : 'CANNOT_REDEEM_REWARD',
        'S3' :  'PAYMENT_FRAUD_DETECTED',
        'A3' : 'DATABASE_ERROR',
        'X04' : 'MINIMUM_AMOUNT_FOR_PAYMENT_ITEM_NOT_MET',
        'X03' : 'EXCEEDS_MAXIMUM_AMOUNT_ALLOWED',
        'XG0':  'COULD_NOT_RETRIEVE_COLLECTIONS_ACCOUNT',
        'XS1':  'TIME_ELAPSED_FOR_PAYMENT_COMPLETION',
        'T0' : 'TOKEN_REQUEST_SUCCESSFUL',
        'T1' : 'TOKEN_REQUEST_FAILED',
        'T2' : 'TOKEN_AUTHENTICATION_PENDING',
        'S0' : 'TIMEOUT_CALLING_POSTILION_SERVICE',
        'S1' : 'INVALID_RESPONSE_FROM_POSTILION_SERVICE',
        'A9' : 'INVALID_PHONE_NUMBER',
        '10500': 'GENERIC_ERROR',
        'LS0': 'CUSTOM_ILS_ERROR',
        'LS1': 'LENDING_SERVICE_OTP_GENERATE_ERROR',
        'LS2': 'LENDING_SERVICE_ERROR_GENERATING_OFFERS',
        'LS3': 'LENDING_SERVICE_GENERATE_CARD_OTP_ERROR',
        'LS4': 'LENDING_SERVICE_VALIDATE_CARD_OTP_ERROR',
        'LS5': 'LENDING_SERVICE_EXISTING_OPEN_LOAN_ERROR',
        'LS6': 'LENDING_SERVICE_ACCEPT_OFFER_ERROR',
        'LS7': 'LENDING_SERVICE_NO_CUSTOMER_INFO',
    };
})();



},{}],37:[function(require,module,exports){
module.exports = (function () {
    return {
        REQUEST_TIMEOUT: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Request timeout. Please try again.'
        },
        PAYMENT_OTP: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        PAYMENT_CARDINAL: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        PAYMENT_SUCCESS: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction successfully completed.'
        },
        PAYMENT_TOKEN_REG: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Your transaction requires that you are registered on our Safe Token platform.'
        },
        PAYMENT_TOKEN_CARDINAL_REG:{
            TYPE: 'INLINE',
            DESCRIPTION: 'Your card is not enrolled for Verified by VISA or SecureCode. Kindly contact your bank or use another card.'
        },
        PAYMENT_TOKEN_ERROR: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Token cannot be generated at the moment. Please try again.'
        },
        CARD_EXPIRY_INVALID: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Invalid card expiry.'
        },
        PAYMENT_ERROR: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Token cannot be generated at the moment. Please try again.'
        },
        CARD_DETAILS_INVALID: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        CARD_INVALID: {
            TYPE: 'INLINE',
            DESCRIPTION: 'We currently cannot process your transaction with this card.'
        },
        CANNOT_CONNECT_TO_PAYPHONE_SERVICE:{
            TYPE: 'INLINE',
            DESCRIPTION: 'We are unable to retrieve your cards. Please enter your card details.'
        },
        CARD_ERROR: {
            TYPE: 'INLINE',
            DESCRIPTION: 'An error occurred. Please try again.'
        },
        LOGIN_ERROR: {
            TYPE: 'INLINE',
            DESCRIPTION: 'An error while logging you in. Please try again.'
        },
        LOGIN_INVALID: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Invalid login credentials. Please try again.'
        },
        HTTP_DUPLICATE_TRANSACTION: {
            TYPE: 'FAILED',
            DESCRIPTION: 'Transaction already completed.'
        },
        HTTP_ERROR: {
            TYPE: 'INLINE',
            DESCRIPTION: 'An error occurred. Please try again.'
        },
        CARD_NOT_CONFIGURED: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Your card is not accepted by this merchant.'
        },
        CANNOT_CONNECT_TO_PASSPORT_SERVICE: {
            TYPE: 'INLINE',
            DESCRIPTION: 'An error occurred. Please try again.'
        },
        TIME_ELAPSED_FOR_PAYMENT_COMPLETION: {
            TYPE: 'FAILED',
            DESCRIPTION: 'Exceeded time period to completed transaction.'
        },
        CANNOT_GET_REWARD_BALANCE: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Unable to retrieve your reward balance.'
        },
        EXCEEDED_DAILY_TRANSACTION_LIMIT: {
            TYPE: 'FAILED',
            DESCRIPTION: 'Amount exceeds daily transaction limit.'
        },
        MINIMUM_AMOUNT_LIMIT_NOT_MET: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Amount is less than the minimum amount allowed.'
        },
        NO_PAYMENT_FOUND: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Payment does not exist.'
        },
        PAYMENT_ALREADY_PROCESSED: {
            TYPE: 'FAILED',
            DESCRIPTION: 'Transaction already completed.'
        },
        PAYMENT_CANNOT_BE_PROCESSED_CONFIGURATION_ERROR: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Payment cannot be processed at this time.'
        },
        CARDINAL_LOOKUP_ERROR: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Your card is not enrolled for Verified by VISA or SecureCode. Kindly contact your bank or use another card.'
        },
        CANNOT_GENERATE_OTP: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Your otp service is offline'
        },
        CARDINAL_AUTHENTICATION_ERROR: {
            TYPE: 'INLINE',
            DESCRIPTION: 'We are unable to authenticate your transaction. Please try again or select another card.'
        },
        COULD_NOT_RETRIEVE_COLLECTIONS_ACCOUNT:{
            TYPE:"INLINE",
            DESCRIPTION:"We are currently unable to process your transaction. Please try again or select another card."
        },
        CANNOT_AUTHENTICATE_OTP: {
            TYPE: 'INLINE',
            DESCRIPTION: 'We are unable to authenticate your token. Please try again or select another card.'
        },
        INVALID_TOKEN_SUPPLIED: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Invalid token supplied.'
        },
        SECURE_3D_REQUIRED_FOR_TRANSACTION: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Cannot process transaction at this time.'
        },
        MERCHANT_OR_PAYMENT_ITEM_DOES_NOT_EXIST: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Merchant or payment item does not exist.'
        },
        INCORRECT_HASH: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Invalid hash supplied.'
        },
        SITE_REDIRECT_URL_IS_REQUIRED: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Site redirect url required.'
        },
        PAYMENT_ITEM_ID_IS_REQUIRED: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Payment item id is required.'
        },
        CURRENCY_CODE_IS_NOT_VALID: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Currency code is not valid.'
        },
        CUSTOMER_ID_IS_REQUIRED: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Customer id is required.'
        },
        APPROVED_FINANCIAL_INSTUTION: {
            TYPE: 'COMPLETE',
            DESCRIPTION: 'Transaction successfully completed.'
        },
        REFER_FINANCIAL_INSTITUTION: {
            TYPE: 'FAILED',
            DESCRIPTION: ''
        },
        REFER_TO_FINANCIAL_INSTITUTION_SPECIAL_CONDITION: {
            TYPE: 'FAILED',
            DESCRIPTION: ''
        },
        INVALID_MERCHANT: {
            TYPE: 'FAILED',
            DESCRIPTION: ''
        },
        PICK_UP_CARD: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        DO_NOT_HONOR: {
            TYPE: 'FAILED',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        PICK_UP_CARD_SPECIAL_CONDITION: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        HONOR_WITH_IDENTIFICATION: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        REQUEST_IN_PROGRESS: {
            //TYPE: 'INLINE',
            //DESCRIPTION: 'Transaction failed. Please try again or select another card.'
            TYPE: 'COMPLETE',
            DESCRIPTION: 'Transaction successfully completed.'
        },
        INVALID_TRANSACTION: {
            TYPE: 'FAILED',
            DESCRIPTION: ''
        },
        INVALID_AMOUNT: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Amount supplied is invalid.'
        },
        INVALID_CARD_NUMBER: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Card number is invalid.'
        },
        NO_SUCH_FINANCIAL_INSTITUTION: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        APPROVED_BY_FINANCIAL_INSTITUTION_UPDATE_TRACK_3: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Approved by financial institution.'
        },
        CUSTOMER_DISPUTE: {
            TYPE: 'FAILED',
            DESCRIPTION: ''
        },
        RE_ENTER_TRANSACTION: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Please retry transaction.'
        },
        INVALID_RESPONSE_FROM_FINANCIAL_INSTITUTION: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Invalid response.'
        },
        NO_ACTION_TAKEN_BY_FINANCIAL_INSTITUTION: {
            TYPE: 'INLINE',
            DESCRIPTION: 'No card action taken.'
        },
        SUSPECTED_MALFUNCTION: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        UNACCEPTABLE_TRANSACTION_FEE: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        FILE_UPDATE_NOT_SUPPORTED: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        UNABLE_TO_LOCATE_RECORD: {
            TYPE: 'FAILED',
            DESCRIPTION: ''
        },
        DUPLICATE_RECORD: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        FILE_UPDATE_FIELD_EDIT_ERROR: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        FILE_UPDATE_FILE_LOCKED: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        FILE_UPDATE_FAILED: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        FORMAT_ERROR: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        BANK_NOT_SUPPORTED: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        COMPLETED_PARTIALLY_BY_FINANCIAL_INSTITUTION: {
            TYPE: 'FAILED',
            DESCRIPTION: ''
        },
        EXPIRED_CARD_PICK_UP: {
            TYPE: 'FAILED',
            DESCRIPTION: ''
        },
        SUSPECTED_FRAUD_PICK_UP: {
            TYPE: 'FAILED',
            DESCRIPTION: ''
        },
        CONTACT_ACQUIRER_PICK_UP: {
            TYPE: 'FAILED',
            DESCRIPTION: ''
        },
        RESTRICTED_CARD_PICK_UP: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        CALL_ACQUIRER_SECURITY_PICK_UP: {
            TYPE: 'FAILED',
            DESCRIPTION: ''
        },
        PIN_TRIES_EXCEEDED_PICK_UP: {
            TYPE: 'FAILED',
            DESCRIPTION: ''
        },
        NO_CREDIT_ACCOUNT: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        FUNCTION_NOT_SUPPORTED: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        LOST_CARD_PICK_UP: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        NO_UNIVERSAL_ACCOUNT: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        STOLEN_CARD_PICK_UPSTOLEN_CARD_PICK_UP: {
            TYPE: 'FAILED',
            DESCRIPTION: ''
        },
        NO_INVESTMENT_ACCOUNT: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        INSUFFICIENT_FUNDS: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. You do not have enough funds to process this transaction.'
        },
        NO_CHECK_ACCOUNT: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        NO_SAVINGS_ACCOUNT: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        EXPIRED_CARD: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        INCORRECT_PIN: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        NO_CARD_RECORD: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Your transaction has been declined by your bank. Please contact your bank or select another card.'
        },
        TRANSACTION_NOT_PERMITTED_ON_TERMINAL: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Your bank has declined this transaction on this channel. Please select another card.'
        },
        SUSPECTED_FRAUD: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        CONTACT_ACQUIRER: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        EXCEEDS_WITHDRAWAL_LIMIT: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. You have exceeded your withdrawal limit on this channel. Please select another card.'
        },
        RESTRICTED_CARD: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        SECURITY_VIOLATION: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        ORIGINAL_AMOUNT_INCORRECT: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        EXCEEDS_WITHDRAWAL_FREQUENCY: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        CALL_ACQUIRER_SECURITY: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        HARD_CAPTURE: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        RESPONSE_RECEIVED_TOO_LATE: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        PIN_TRIES_EXCEEDED: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. You have exceeded your pin tries. Please select another card.'
        },
        RESERVED_FOR_FUTURE_POSTILION_USE: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        INTERVENE_BANK_APPROVAL_REQUIRED: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Your bank approval is required. Please contact your bank or select another card.'
        },
        INTERVENE_BANK_APPROVAL_REQUIRED_FOR_PARTIAL_AMOUNT: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Your bank approval is required. Please contact your bank or select another card.'
        },
        CUT_OFF_IN_PROGRESS: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        ISSUER_OR_SWITCH_INOPERATIVE: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        ROUTING_ERROR: {
            TYPE: 'FAILED',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        VIOLATION_OF_LAW: {
            TYPE: 'FAILED',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        DUPLICATE_TRANSACTION: {
            TYPE: 'FAILED',
            DESCRIPTION: 'Duplicate transaction.'
        },
        RECONCILE_ERROR: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        SYSTEM_MALFUNCTION: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        EXCEEDS_CASH_LIMIT: {
            TYPE: 'FAILED',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        PENDING: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        INTEGRATION_ERROR: {
            TYPE: 'FAILED',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        ERROR:{
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        TRANSACTION_ERROR: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or select another card.'
        },
        DUPLICATE_TRANSACTION_REFERENCE: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        CUSTOMER_CANCELLATION: {
            TYPE: 'FAILED',
            DESCRIPTION: 'Sorry we cannot process your transaction. Please try again.'
        },
        TRANSACTION_NOT_FOUND: {
            TYPE: 'FAILED',
            DESCRIPTION: 'Transaction not found.'
        },
        PAYMENT_REQUIRES_TOKEN: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction requires a token.'
        },
        TOKEN_GENERATED_SUCCESSFUL: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        TOKEN_NOT_GENERATED_CUSTOMER_NOT_REGISTERED_ON_TOKEN_PLATFORM: {
            TYPE: 'INLINE',
            DESCRIPTION: 'You are currently not registered on our token platform.'
        },
        ERROR_OCCURRED_COULD_NOT_GENERATE_TOKEN: {
            TYPE: 'INLINE',
            DESCRIPTION: 'An error occurred. Could not generate token.'
        },
        PAYMENT_REQUIRES_TOKEN_AUTHORIZATION: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction requires token authorization.'
        },
        TOKEN_AUTHORIZATION_SUCCESSFUL: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Token authorization was successful'
        },
        TOKEN_AUTHORIZATION_NOT_SUCCESSFUL_INCORRECT_TOKEN_SUPPLIED: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Token authorization was not successful.'
        },
        ERROR_OCCURRED_COULD_NOT_AUTHENTICATE_TOKEN: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        CUSTOMER_CANCELLATION_SECURE3D: {
            TYPE: 'FAILED',
            DESCRIPTION: 'Cancelled transaction'
        },
        CARDINAL_AUTHENTICATION_REQUIRED: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        CARDINAL_LOOKUP_SUCCESSFUL: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        CARDINAL_LOOKUP_FAILED: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        CARDINAL_AUTHENTICATE_SUCCESSFUL: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        CARDINAL_AUTHENTICATE_FAILED: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        INVALID_CARD_DETAILS: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        CANNOT_CONNECT_TO_LOYALTY_SERVICE: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        DATABASE_ERROR: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        MINIMUM_AMOUNT_FOR_PAYMENT_ITEM_NOT_MET: {
            TYPE: 'FAILED',
            DESCRIPTION: ''
        },
        EXCEEDS_MAXIMUM_AMOUNT_ALLOWED: {
            TYPE: 'FAILED',
            DESCRIPTION: ''
        },
        TOKEN_REQUEST_SUCCESSFUL: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        TOKEN_REQUEST_FAILED: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction declined. Please try again or select another card.'
        },
        TOKEN_AUTHENTICATION_PENDING: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Cardinal authentication pending.'
        },
        TIMEOUT_CALLING_POSTILION_SERVICE: {
            TYPE: 'FAILED',
            DESCRIPTION: 'Transaction failed. Please try again.'
        },
        INVALID_RESPONSE_FROM_POSTILION_SERVICE: {
            TYPE: 'INLINE',
            DESCRIPTION: ''
        },
        CANNOT_REDEEM_REWARD: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Sorry you cannot use your reward money at this moment. Please try again or pay the full amount with your card.'
        },
        PAYMENT_FRAUD_DETECTED: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction declined.Please select another card.'
        },
        INVALID_PHONE_NUMBER: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Invalid phone number. The phone number is not valid for selected network provider.'
        },
        GENERIC_ERROR: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Could not process request at this time. Please try again later.'
        },
        LENDING_SERVICE_OTP_GENERATE_ERROR: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Could not generate token. Please try again later.'
        },
        LENDING_SERVICE_ERROR_GENERATING_OFFERS: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Could not generate offers. Please try again later.'
        },
        CUSTOM_ILS_ERROR: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Sorry, this card can not be used for this loan.'
        },
        LENDING_SERVICE_EXISTING_OPEN_LOAN_ERROR: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Sorry, you have an outstanding loan and cannot get any offers.'
        },
        LENDING_SERVICE_GENERATE_CARD_OTP_ERROR: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Error generating OTP, Please try again.'
        },
        LENDING_SERVICE_VALIDATE_CARD_OTP_ERROR: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Transaction failed. Please try again or use another card.'
        },
        LENDING_SERVICE_ACCEPT_OFFER_ERROR: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Error while accepting your offer, please try again with a card attached to your phone number.'
        },
        LENDING_SERVICE_NO_CUSTOMER_INFO: {
            TYPE: 'INLINE',
            DESCRIPTION: 'Sorry, we are unable to get offers for this customer. Kindly use a more active phone number.'
        },
    };
})();

},{}],38:[function(require,module,exports){
module.exports = (function(){
    var DEFAULT_TIMEOUT  = 300000;
    return  {
        REWARDS: 5000,
        PAY_WITH_CARD: DEFAULT_TIMEOUT,
        PAY_WITH_CARDINAL: DEFAULT_TIMEOUT,
        PAY_WITH_TOKEN: DEFAULT_TIMEOUT,
        WALLET: DEFAULT_TIMEOUT,
        BIN_CONFIGURATION:DEFAULT_TIMEOUT,
        REDIRECT_TIMEOUT: 5000,
        REDIRECT_TIMEOUT_INLINE: 10000,
        FINGERPRINT_REDIRECT_TIMEOUT: 90000,
        FINGERPRINT_DISABLE_TIMEOUT: 10000,

        PAY_WITH_NONCARD: 40000,

        PAY_WITH_CREDIT: {
            GENERATE_OTP: 60000,
            VALIDATE_OTP: 60000,
            GET_OFFERS: 60000,
            ACCEPT_CREDIT: 60000
        },

        PAY_WITH_USSD: {
            GET_ISSUERS: 60000,
            GENERATE_USSD: 60000,
            POLL_STATUS: 60000,
        },
    };
})();
},{}],39:[function(require,module,exports){
module.exports = (function(){
    var currentVersion = "v1";
    var api = IpgApp.baseUrl+'api/'+currentVersion;
    return  {
        api:                    api,
        merchantBins:           api + '/merchantbins',
        pay:                    api + '/pay',
        authenticateToken:      api + '/pay/authenticateToken',
        wallet:                 api + '/wallets',
        cardinal:               api + '/pay/authenticateCardinal',
        rewards:                api + '/rewards/getRewardBalancePercentages',
        cardinalResponse:       api + '/payments/cardinalCallBackStatus',
        customerCancellation:   api + '/pay/customerCancellation',
        channelAuthenticate:    api + '/wallets/authenticationToken',
        collectionAccount:      api + '/collectionaccounts',
        registerNumber:         api + '/card/autoenroll',
        bbmverifynum:           api + '/socialservice/verifyMobileNumber/',
        bbmverifycode:          api + '/socialservice/confirmMobileNumber',
        addPaymentInstrument:   api + '/wallets/addPaymentInstrument',
        fingerprintStatus:      api + '/fingerprint/status',
        fingerprintDisable:     api + '/fingerprint/disable',
        noncard:                api + '/noncard',
        noncardconfiguration:   api + '/noncardconfiguration',
        qrGenerator:            api + '/qr/generate',
        qrPaymentStatus:        api + '/qr/status',
        credit:                 api + '/credit',
        ussd:                   api + '/ussd',
    };
})();



},{}],40:[function(require,module,exports){
/**
 * @preserve FastClick: polyfill to remove click delays on browsers with touch UIs.
 *
 * @version 0.6.12 candidate
 * @codingstandard ftlabs-jsv2
 * @copyright The Financial Times Limited [All Rights Reserved]
 * @license MIT License (see LICENSE.txt)
 */

/*jslint browser:true, node:true*/
/*global define, Event, Node*/


/**
 * Instantiate fast-clicking listeners on the specificed layer.
 *
 * @constructor
 * @param {Element} layer The layer to listen on
 */

(function () {

  if ( typeof window.CustomEvent === "function" ) return false;

  function CustomEvent ( event, params ) {
    params = params || { bubbles: false, cancelable: false, detail: undefined };
    var evt = document.createEvent( 'CustomEvent' );
    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );
    return evt;
   }

  CustomEvent.prototype = window.Event.prototype;

  window.CustomEvent = CustomEvent;
})();

/**
 * Instantiate fast-clicking listeners on the specificed layer.
 *
 * @constructor
 * @param {Element} layer The layer to listen on
 */
function FastClick(layer) {
	'use strict';
	var oldOnClick, self = this;


	/**
	 * Whether a click is currently being tracked.
	 *
	 * @type boolean
	 */
	this.trackingClick = false;


	/**
	 * Timestamp for when when click tracking started.
	 *
	 * @type number
	 */
	this.trackingClickStart = 0;


	/**
	 * The element being tracked for a click.
	 *
	 * @type EventTarget
	 */
	this.targetElement = null;


	/**
	 * X-coordinate of touch start event.
	 *
	 * @type number
	 */
	this.touchStartX = 0;


	/**
	 * Y-coordinate of touch start event.
	 *
	 * @type number
	 */
	this.touchStartY = 0;


	/**
	 * ID of the last touch, retrieved from Touch.identifier.
	 *
	 * @type number
	 */
	this.lastTouchIdentifier = 0;


	/**
	 * Touchmove boundary, beyond which a click will be cancelled.
	 *
	 * @type number
	 */
	this.touchBoundary = 10;


	/**
	 * The FastClick layer.
	 *
	 * @type Element
	 */
	this.layer = layer;

	if (!layer || !layer.nodeType) {
		throw new TypeError('Layer must be a document node');
	}

	/** @type function() */
	this.onClick = function() { return FastClick.prototype.onClick.apply(self, arguments); };

	/** @type function() */
	this.onMouse = function() { return FastClick.prototype.onMouse.apply(self, arguments); };

	/** @type function() */
	this.onTouchStart = function() { return FastClick.prototype.onTouchStart.apply(self, arguments); };

	/** @type function() */
	this.onTouchMove = function() { return FastClick.prototype.onTouchMove.apply(self, arguments); };

	/** @type function() */
	this.onTouchEnd = function() { return FastClick.prototype.onTouchEnd.apply(self, arguments); };

	/** @type function() */
	this.onTouchCancel = function() { return FastClick.prototype.onTouchCancel.apply(self, arguments); };

	if (FastClick.notNeeded(layer)) {
		return;
	}

	// Set up event handlers as required
	if (this.deviceIsAndroid) {
		layer.addEventListener('mouseover', this.onMouse, true);
		layer.addEventListener('mousedown', this.onMouse, true);
		layer.addEventListener('mouseup', this.onMouse, true);
	}

	layer.addEventListener('click', this.onClick, true);
	layer.addEventListener('touchstart', this.onTouchStart, false);
	layer.addEventListener('touchmove', this.onTouchMove, false);
	layer.addEventListener('touchend', this.onTouchEnd, false);
	layer.addEventListener('touchcancel', this.onTouchCancel, false);

	// Hack is required for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)
	// which is how FastClick normally stops click events bubbling to callbacks registered on the FastClick
	// layer when they are cancelled.
	if (!Event.prototype.stopImmediatePropagation) {
		layer.removeEventListener = function(type, callback, capture) {
			var rmv = Node.prototype.removeEventListener;
			if (type === 'click') {
				rmv.call(layer, type, callback.hijacked || callback, capture);
			} else {
				rmv.call(layer, type, callback, capture);
			}
		};

		layer.addEventListener = function(type, callback, capture) {
			var adv = Node.prototype.addEventListener;
			if (type === 'click') {
				adv.call(layer, type, callback.hijacked || (callback.hijacked = function(event) {
					if (!event.propagationStopped) {
						callback(event);
					}
				}), capture);
			} else {
				adv.call(layer, type, callback, capture);
			}
		};
	}

	// If a handler is already declared in the element's onclick attribute, it will be fired before
	// FastClick's onClick handler. Fix this by pulling out the user-defined handler function and
	// adding it as listener.
	if (typeof layer.onclick === 'function') {

		// Android browser on at least 3.2 requires a new reference to the function in layer.onclick
		// - the old one won't work if passed to addEventListener directly.
		oldOnClick = layer.onclick;
		layer.addEventListener('click', function(event) {
			oldOnClick(event);
		}, false);
		layer.onclick = null;
	}
}


/**
 * Android requires exceptions.
 *
 * @type boolean
 */
FastClick.prototype.deviceIsAndroid = navigator.userAgent.indexOf('Android') > 0;


/**
 * iOS requires exceptions.
 *
 * @type boolean
 */
FastClick.prototype.deviceIsIOS = /iP(ad|hone|od)/.test(navigator.userAgent);


/**
 * iOS 4 requires an exception for select elements.
 *
 * @type boolean
 */
FastClick.prototype.deviceIsIOS4 = FastClick.prototype.deviceIsIOS && (/OS 4_\d(_\d)?/).test(navigator.userAgent);


/**
 * iOS 6.0(+?) requires the target element to be manually derived
 *
 * @type boolean
 */
FastClick.prototype.deviceIsIOSWithBadTarget = FastClick.prototype.deviceIsIOS && (/OS ([6-9]|\d{2})_\d/).test(navigator.userAgent);


/**
 * Determine whether a given element requires a native click.
 *
 * @param {EventTarget|Element} target Target DOM element
 * @returns {boolean} Returns true if the element needs a native click
 */
FastClick.prototype.needsClick = function(target) {
	'use strict';
	switch (target.nodeName.toLowerCase()) {

	// Don't send a synthetic click to disabled inputs (issue #62)
	case 'button':
	case 'select':
	case 'textarea':
		if (target.disabled) {
			return true;
		}

		break;
	case 'input':

		// File inputs need real clicks on iOS 6 due to a browser bug (issue #68)
		if ((this.deviceIsIOS && target.type === 'file') || target.disabled) {
			return true;
		}

		break;
	case 'label':
	case 'video':
		return true;
	}

	return (/\bneedsclick\b/).test(target.className);
};


/**
 * Determine whether a given element requires a call to focus to simulate click into element.
 *
 * @param {EventTarget|Element} target Target DOM element
 * @returns {boolean} Returns true if the element requires a call to focus to simulate native click.
 */
FastClick.prototype.needsFocus = function(target) {
	'use strict';
	switch (target.nodeName.toLowerCase()) {
	case 'textarea':
		return true;
	case 'select':
		return !this.deviceIsAndroid;
	case 'input':
		switch (target.type) {
		case 'button':
		case 'checkbox':
		case 'file':
		case 'image':
		case 'radio':
		case 'submit':
			return false;
		}

		// No point in attempting to focus disabled inputs
		return !target.disabled && !target.readOnly;
	default:
		return (/\bneedsfocus\b/).test(target.className);
	}
};

/** Start 'beforeunload' shim **/

/**
 * Return true if device supports "beforeunload" events, or false.
 * May need to be updated to represent fuller array of devices.
 * @return {Boolean}
 */
FastClick.prototype.supportsBeforeUnload = function () {
    "use strict";
    // if (this.deviceIsIOS) {
    //     return false;
    // } else {
    //     return true;
    // }
    return true;
};

/**
 * Check if element is asking to navigate away from this page
 * @param {element} element
 * @return {Boolean}
 */
FastClick.prototype.navigatesAway = function (element) {
    var href, isAnchor, isNavigational, targetsNewWindow;
    href = element.href,
        isAnchor = element.tagName.toLowerCase() === 'a',
        isNavigational = isAnchor && href;

    // Check if the element is an anchor with an href
    if (isNavigational) {
        // Check if there are reasons *not* to fire beforeunload
        if (this.isEqualExceptHash(href) || this.isJavascriptURL(href)
            || this.isMailToURL(href) || this.targetsNewWindow(element)) {
            return false;
        } else {
            return true;
        }
    } else {
        return false;
    }
};

/**
 * Check if an href is simply a hash of the current page
 * @param {String} href the full href
 * @param {String} hash just the hash
 */
FastClick.prototype.isEqualExceptHash = function(href) {
    "use strict";
    var arrLinkHref, linkBeforeHash, arrWindowHref, windowBeforeHash;
    // Split the href by hash
    arrLinkHref = href.split('#');
    // Split the current location by hash
    arrWindowHref = window.location.href.split('#');
    // Get the "before hash" locations, for comparison
    windowBeforeHash = arrWindowHref[0];
    linkBeforeHash = arrLinkHref[0];
    // Check beforeHashes to see if they're the same
    if (windowBeforeHash.toLowerCase() === linkBeforeHash.toLowerCase()) {
        return true;
    } else {
        return false;
    }
};

/**
 * Check if a URL is simply a javascript command
 * @param {String} href
 * @return {Boolean}
 */
FastClick.prototype.isJavascriptURL = function(href) {
    "use strict";

    // Check if the href begins with 'javascript:'
    if (href.toLowerCase().indexOf('javascript:') === 0) {
        return true;
    } else {
        return false;
    }
};

/**
 * Check if a URL is simply a mailto command
 * @param {String} href
 * @return {Boolean}
 */
FastClick.prototype.isMailToURL = function(href) {
    "use strict";

    // Check if the href begins with 'javascript:'
    if (href.toLowerCase().indexOf('mailto') === 0) {
        return true;
    } else {
        return false;
    }
};

/**
 * Check if a URL targets a new window
 * @param {Element} element
 */
FastClick.prototype.targetsNewWindow = function(element) {
    "use strict";
    var target;

    // Check if the target is not this window
    target = element.target.toLowerCase();
    return target !== '' && target !== '_self' && target !== '_parent' && target !== '_top'
}

/**
 * Check whether it's legitimate to fire a custom 'beforeunload' event
 * @type {Function}
 */
FastClick.prototype.needsBeforeUnload = function (targetElement, clickEvent) {
    return (!this.supportsBeforeUnload()) && (!clickEvent.defaultPrevented) && this.navigatesAway(targetElement);
}

/**
 * Dispatch a 'beforeunload' custom event
 */
FastClick.prototype.dispatchBeforeUnload = function() {
    var beforeUnloadEvent = new CustomEvent('beforeunload', {'bubbles' : true, 'cancelable' : true});
    window.dispatchEvent(beforeUnloadEvent);
}


/** End 'beforeunload' shim **/

/**
 * Send a click event to the specified element.
 *
 * @param {EventTarget|Element} targetElement
 * @param {Event} event
 */
FastClick.prototype.sendClick = function(targetElement, event) {
	'use strict';
	var clickEvent, touch;

	// On some Android devices activeElement needs to be blurred otherwise the synthetic click will have no effect (#24)
	if (document.activeElement && document.activeElement !== targetElement) {
		document.activeElement.blur();
	}

	touch = event.changedTouches[0];

	// Synthesize a click event, with an extra attribute so it can be tracked
	clickEvent = document.createEvent('MouseEvents');
	clickEvent.initMouseEvent(this.determineEventType(targetElement), true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null);
	clickEvent.forwardedTouchEvent = true;
	targetElement.dispatchEvent(clickEvent);

    // Check if we need to dispatch the beforeUnload event manually, based on the element and the click event
    if (this.needsBeforeUnload(targetElement, clickEvent)) {
        // If so, dispatch it.
        this.dispatchBeforeUnload();
    };
};

FastClick.prototype.determineEventType = function(targetElement) {
	'use strict';

	//Issue #159: Android Chrome Select Box does not open with a synthetic click event
	if (this.deviceIsAndroid && targetElement.tagName.toLowerCase() === 'select') {
		return 'mousedown';
	}

	return 'click';
};


/**
 * @param {EventTarget|Element} targetElement
 */
FastClick.prototype.focus = function(targetElement) {
	'use strict';
	var length;

	// Issue #160: on iOS 7, some input elements (e.g. date datetime) throw a vague TypeError on setSelectionRange. These elements don't have an integer value for the selectionStart and selectionEnd properties, but unfortunately that can't be used for detection because accessing the properties also throws a TypeError. Just check the type instead. Filed as Apple bug #15122724.
	if (this.deviceIsIOS && targetElement.setSelectionRange && targetElement.type.indexOf('date') !== 0 && targetElement.type !== 'time') {
		length = targetElement.value.length;
		targetElement.setSelectionRange(length, length);
	} else {
		targetElement.focus();
	}
};


/**
 * Check whether the given target element is a child of a scrollable layer and if so, set a flag on it.
 *
 * @param {EventTarget|Element} targetElement
 */
FastClick.prototype.updateScrollParent = function(targetElement) {
	'use strict';
	var scrollParent, parentElement;

	scrollParent = targetElement.fastClickScrollParent;

	// Attempt to discover whether the target element is contained within a scrollable layer. Re-check if the
	// target element was moved to another parent.
	if (!scrollParent || !scrollParent.contains(targetElement)) {
		parentElement = targetElement;
		do {
			if (parentElement.scrollHeight > parentElement.offsetHeight) {
				scrollParent = parentElement;
				targetElement.fastClickScrollParent = parentElement;
				break;
			}

			parentElement = parentElement.parentElement;
		} while (parentElement);
	}

	// Always update the scroll top tracker if possible.
	if (scrollParent) {
		scrollParent.fastClickLastScrollTop = scrollParent.scrollTop;
	}
};


/**
 * @param {EventTarget} targetElement
 * @returns {Element|EventTarget}
 */
FastClick.prototype.getTargetElementFromEventTarget = function(eventTarget) {
	'use strict';

	// On some older browsers (notably Safari on iOS 4.1 - see issue #56) the event target may be a text node.
	if (eventTarget.nodeType === Node.TEXT_NODE) {
		return eventTarget.parentNode;
	}

	return eventTarget;
};


/**
 * On touch start, record the position and scroll offset.
 *
 * @param {Event} event
 * @returns {boolean}
 */
FastClick.prototype.onTouchStart = function(event) {
	'use strict';
	var targetElement, touch, selection;

	// Ignore multiple touches, otherwise pinch-to-zoom is prevented if both fingers are on the FastClick element (issue #111).
	if (event.targetTouches.length > 1) {
		return true;
	}

	targetElement = this.getTargetElementFromEventTarget(event.target);
	touch = event.targetTouches[0];

	if (this.deviceIsIOS) {

		// Only trusted events will deselect text on iOS (issue #49)
		selection = window.getSelection();
		if (selection.rangeCount && !selection.isCollapsed) {
			return true;
		}

		if (!this.deviceIsIOS4) {

			// Weird things happen on iOS when an alert or confirm dialog is opened from a click event callback (issue #23):
			// when the user next taps anywhere else on the page, new touchstart and touchend events are dispatched
			// with the same identifier as the touch event that previously triggered the click that triggered the alert.
			// Sadly, there is an issue on iOS 4 that causes some normal touch events to have the same identifier as an
			// immediately preceeding touch event (issue #52), so this fix is unavailable on that platform.
			if (touch.identifier === this.lastTouchIdentifier) {
				event.preventDefault();
				return false;
			}

			this.lastTouchIdentifier = touch.identifier;

			// If the target element is a child of a scrollable layer (using -webkit-overflow-scrolling: touch) and:
			// 1) the user does a fling scroll on the scrollable layer
			// 2) the user stops the fling scroll with another tap
			// then the event.target of the last 'touchend' event will be the element that was under the user's finger
			// when the fling scroll was started, causing FastClick to send a click event to that layer - unless a check
			// is made to ensure that a parent layer was not scrolled before sending a synthetic click (issue #42).
			this.updateScrollParent(targetElement);
		}
	}

	this.trackingClick = true;
	this.trackingClickStart = event.timeStamp;
	this.targetElement = targetElement;

	this.touchStartX = touch.pageX;
	this.touchStartY = touch.pageY;

	// Prevent phantom clicks on fast double-tap (issue #36)
	if ((event.timeStamp - this.lastClickTime) < 200) {
		event.preventDefault();
	}

	return true;
};


/**
 * Based on a touchmove event object, check whether the touch has moved past a boundary since it started.
 *
 * @param {Event} event
 * @returns {boolean}
 */
FastClick.prototype.touchHasMoved = function(event) {
	'use strict';
	var touch = event.changedTouches[0], boundary = this.touchBoundary;

	if (Math.abs(touch.pageX - this.touchStartX) > boundary || Math.abs(touch.pageY - this.touchStartY) > boundary) {
		return true;
	}

	return false;
};


/**
 * Update the last position.
 *
 * @param {Event} event
 * @returns {boolean}
 */
FastClick.prototype.onTouchMove = function(event) {
	'use strict';
	if (!this.trackingClick) {
		return true;
	}

	// If the touch has moved, cancel the click tracking
	if (this.targetElement !== this.getTargetElementFromEventTarget(event.target) || this.touchHasMoved(event)) {
		this.trackingClick = false;
		this.targetElement = null;
	}

	return true;
};


/**
 * Attempt to find the labelled control for the given label element.
 *
 * @param {EventTarget|HTMLLabelElement} labelElement
 * @returns {Element|null}
 */
FastClick.prototype.findControl = function(labelElement) {
	'use strict';

	// Fast path for newer browsers supporting the HTML5 control attribute
	if (labelElement.control !== undefined) {
		return labelElement.control;
	}

	// All browsers under test that support touch events also support the HTML5 htmlFor attribute
	if (labelElement.htmlFor) {
		return document.getElementById(labelElement.htmlFor);
	}

	// If no for attribute exists, attempt to retrieve the first labellable descendant element
	// the list of which is defined here: http://www.w3.org/TR/html5/forms.html#category-label
	return labelElement.querySelector('button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea');
};


/**
 * On touch end, determine whether to send a click event at once.
 *
 * @param {Event} event
 * @returns {boolean}
 */
FastClick.prototype.onTouchEnd = function(event) {
	'use strict';
	var forElement, trackingClickStart, targetTagName, scrollParent, touch, targetElement = this.targetElement;

	if (!this.trackingClick) {
		return true;
	}

	// Prevent phantom clicks on fast double-tap (issue #36)
	if ((event.timeStamp - this.lastClickTime) < 200) {
		this.cancelNextClick = true;
		return true;
	}

	// Reset to prevent wrong click cancel on input (issue #156).
	this.cancelNextClick = false;

	this.lastClickTime = event.timeStamp;

	trackingClickStart = this.trackingClickStart;
	this.trackingClick = false;
	this.trackingClickStart = 0;

	// On some iOS devices, the targetElement supplied with the event is invalid if the layer
	// is performing a transition or scroll, and has to be re-detected manually. Note that
	// for this to function correctly, it must be called *after* the event target is checked!
	// See issue #57; also filed as rdar://13048589 .
	if (this.deviceIsIOSWithBadTarget) {
		touch = event.changedTouches[0];

		// In certain cases arguments of elementFromPoint can be negative, so prevent setting targetElement to null
		targetElement = document.elementFromPoint(touch.pageX - window.pageXOffset, touch.pageY - window.pageYOffset) || targetElement;
		targetElement.fastClickScrollParent = this.targetElement.fastClickScrollParent;
	}

	targetTagName = targetElement.tagName.toLowerCase();
	if (targetTagName === 'label') {
		forElement = this.findControl(targetElement);
		if (forElement) {
			this.focus(targetElement);
			if (this.deviceIsAndroid) {
				return false;
			}

			targetElement = forElement;
		}
	} else if (this.needsFocus(targetElement)) {

		// Case 1: If the touch started a while ago (best guess is 100ms based on tests for issue #36) then focus will be triggered anyway. Return early and unset the target element reference so that the subsequent click will be allowed through.
		// Case 2: Without this exception for input elements tapped when the document is contained in an iframe, then any inputted text won't be visible even though the value attribute is updated as the user types (issue #37).
		if ((event.timeStamp - trackingClickStart) > 100 || (this.deviceIsIOS && window.top !== window && targetTagName === 'input')) {
			this.targetElement = null;
			return false;
		}

		this.focus(targetElement);

		// Select elements need the event to go through on iOS 4, otherwise the selector menu won't open.
		if (!this.deviceIsIOS4 || targetTagName !== 'select') {
			this.targetElement = null;
			event.preventDefault();
		}

		return false;
	}

	if (this.deviceIsIOS && !this.deviceIsIOS4) {

		// Don't send a synthetic click event if the target element is contained within a parent layer that was scrolled
		// and this tap is being used to stop the scrolling (usually initiated by a fling - issue #42).
		scrollParent = targetElement.fastClickScrollParent;
		if (scrollParent && scrollParent.fastClickLastScrollTop !== scrollParent.scrollTop) {
			return true;
		}
	}

	// Prevent the actual click from going though - unless the target node is marked as requiring
	// real clicks or if it is in the whitelist in which case only non-programmatic clicks are permitted.
	if (!this.needsClick(targetElement)) {
		event.preventDefault();
		this.sendClick(targetElement, event);
	}

	return false;
};


/**
 * On touch cancel, stop tracking the click.
 *
 * @returns {void}
 */
FastClick.prototype.onTouchCancel = function() {
	'use strict';
	this.trackingClick = false;
	this.targetElement = null;
};


/**
 * Determine mouse events which should be permitted.
 *
 * @param {Event} event
 * @returns {boolean}
 */
FastClick.prototype.onMouse = function(event) {
	'use strict';

	// If a target element was never set (because a touch event was never fired) allow the event
	if (!this.targetElement) {
		return true;
	}

	if (event.forwardedTouchEvent) {
		return true;
	}

	// Programmatically generated events targeting a specific element should be permitted
	if (!event.cancelable) {
		return true;
	}

	// Derive and check the target element to see whether the mouse event needs to be permitted;
	// unless explicitly enabled, prevent non-touch click events from triggering actions,
	// to prevent ghost/doubleclicks.
	if (!this.needsClick(this.targetElement) || this.cancelNextClick) {

		// Prevent any user-added listeners declared on FastClick element from being fired.
		if (event.stopImmediatePropagation) {
			event.stopImmediatePropagation();
		} else {

			// Part of the hack for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)
			event.propagationStopped = true;
		}

		// Cancel the event
		event.stopPropagation();
		event.preventDefault();

		return false;
	}

	// If the mouse event is permitted, return true for the action to go through.
	return true;
};


/**
 * On actual clicks, determine whether this is a touch-generated click, a click action occurring
 * naturally after a delay after a touch (which needs to be cancelled to avoid duplication), or
 * an actual click which should be permitted.
 *
 * @param {Event} event
 * @returns {boolean}
 */
FastClick.prototype.onClick = function(event) {
	'use strict';
	var permitted;

	// It's possible for another FastClick-like library delivered with third-party code to fire a click event before FastClick does (issue #44). In that case, set the click-tracking flag back to false and return early. This will cause onTouchEnd to return early.
	if (this.trackingClick) {
		this.targetElement = null;
		this.trackingClick = false;
		return true;
	}

	// Very odd behaviour on iOS (issue #18): if a submit element is present inside a form and the user hits enter in the iOS simulator or clicks the Go button on the pop-up OS keyboard the a kind of 'fake' click event will be triggered with the submit-type input element as the target.
	if (event.target.type === 'submit' && event.detail === 0) {
		return true;
	}

	permitted = this.onMouse(event);

	// Only unset targetElement if the click is not permitted. This will ensure that the check for !targetElement in onMouse fails and the browser's click doesn't go through.
	if (!permitted) {
		this.targetElement = null;
	}

	// If clicks are permitted, return true for the action to go through.
	return permitted;
};


/**
 * Remove all FastClick's event listeners.
 *
 * @returns {void}
 */
FastClick.prototype.destroy = function() {
	'use strict';
	var layer = this.layer;

	if (this.deviceIsAndroid) {
		layer.removeEventListener('mouseover', this.onMouse, true);
		layer.removeEventListener('mousedown', this.onMouse, true);
		layer.removeEventListener('mouseup', this.onMouse, true);
	}

	layer.removeEventListener('click', this.onClick, true);
	layer.removeEventListener('touchstart', this.onTouchStart, false);
	layer.removeEventListener('touchmove', this.onTouchMove, false);
	layer.removeEventListener('touchend', this.onTouchEnd, false);
	layer.removeEventListener('touchcancel', this.onTouchCancel, false);
};


/**
 * Check whether FastClick is needed.
 *
 * @param {Element} layer The layer to listen on
 */
FastClick.notNeeded = function(layer) {
	'use strict';
	var metaViewport;
	var chromeVersion;

	// Devices that don't support touch don't need FastClick
	if (typeof window.ontouchstart === 'undefined') {
		return true;
	}

	// Chrome version - zero for other browsers
	chromeVersion = +(/Chrome\/([0-9]+)/.exec(navigator.userAgent) || [,0])[1];

	if (chromeVersion) {

		if (FastClick.prototype.deviceIsAndroid) {
			metaViewport = document.querySelector('meta[name=viewport]');
			
			if (metaViewport) {
				// Chrome on Android with user-scalable="no" doesn't need FastClick (issue #89)
				if (metaViewport.content.indexOf('user-scalable=no') !== -1) {
					return true;
				}
				// Chrome 32 and above with width=device-width or less don't need FastClick
				if (chromeVersion > 31 && window.innerWidth <= window.screen.width) {
					return true;
				}
			}

		// Chrome desktop doesn't need FastClick (issue #15)
		} else {
			return true;
		}
	}

	// IE10 with -ms-touch-action: none, which disables double-tap-to-zoom (issue #97)
	if (layer.style.msTouchAction === 'none') {
		return true;
	}

	return false;
};


/**
 * Factory method for creating a FastClick object
 *
 * @param {Element} layer The layer to listen on
 */
FastClick.attach = function(layer) {
	'use strict';
	return new FastClick(layer);
};


if (typeof define !== 'undefined' && define.amd) {

	// AMD. Register as an anonymous module.
	define(function() {
		'use strict';
		return FastClick;
	});
} else if (typeof module !== 'undefined' && module.exports) {
	module.exports = FastClick.attach;
	module.exports.FastClick = FastClick;
} else {
	window.FastClick = FastClick;
}
},{}],41:[function(require,module,exports){
/**
 * Created by Gilbert.Nwaiwu on 12/02/2016.
 */
var Backbone = require('backbone'),
    _ = require('underscore');

var urls = require('../config/urls.js');
var TIMEOUT = require('../config/app.timeout');

function payModel() {
    var model = {
        bbmTryAuth: bbmTryAuth,
        bbmSendNumber: bbmSendNumber,
        bbmSendCode: bbmSendCode,
        logInWithToken: logInWithToken
    };


    function bbmTryAuth(){
        var scope = this;

        this.url = decodeURI(this.get('data').authUrl);

        var options = {
            type: "GET",
            method: "GET",
            timeout: 10000,
            dataType: 'json',
            xhrFields: {
               withCredentials: true
            },
            crossDomain: true
        }
        return this.fetch(options);
    }

    function bbmSendNumber(){
        var scope = this;
        var bbmNumber = this.get('data').mobileNumber;
        this.url = urls.bbmverifynum + bbmNumber;

        var options = {
            type: "GET",
            method: "GET",
            timeout: TIMEOUT.PAY_WITH_CARD,
            dataType: "text"
        }
        return this.fetch(options);
    }

    function bbmSendCode(){
        var scope = this;
        this.url = urls.bbmverifycode;
        var data = this.get('data');

        var options = {
            type: "POST",
            method: "POST",
            data: JSON.stringify(data),
            timeout: TIMEOUT.PAY_WITH_CARD,
            dataType: "json",
            contentType: "application/json; charset=utf-8"
        }

        return this.fetch(options);
    }

    function logInWithToken(){
           var url = this.get('url');

           return  this.fetch({
               url: url,
               method: 'GET',
               type: 'GET',
               contentType:"application/json; charset=utf-8",
               dataType:"json"
            })
        }

    return Backbone.Model.extend(model);
}
module.exports = payModel();

},{"../config/app.timeout":38,"../config/urls.js":39,"backbone":1,"underscore":32}],42:[function(require,module,exports){

/**
 * Created by Gabriel.Izebhigie on 1/29/2016.
 */
var Backbone = require('backbone'),
    _ = require('underscore');

var APP_DATA = require('../config/app.data');
var urls = require('../config/urls.js');
Utils = require('../utils/utils');
var TIMEOUT = require('../config/app.timeout');

function cardModel(){

    var model= {
        url: urls.merchantBins,
        getBinConfiguration: getBinConfiguration,
        generateSecure: generateSecure,
        setConfigSettings:setConfigSettings,
        getConfigData: getConfigData
    };

    function getBinConfiguration(){
       var data  = this.getConfigData();
        return this.fetch({
            method: "GET",
            type: "GET",
            data: data,
            async: false,
            timeout: TIMEOUT.BIN_CONFIGURATION,
            contentType:"application/json; charset=utf-8",
            dataType:"json",

        }) ;
    }


    function generateSecure(options){
        return Utils.generateSecureData(options);
    }

    function setConfigSettings() {
        var configurations, supportAll, supportCvvPin, typeConfig, supportCvvExpiry, supportPinExpiry, supportPin, supportCvv, supportExpiry;
        var settings = {};
        configurations = this.get('cardConfigurations');
        typeConfig = this.get('cardConfigurations').cardTypeGatewayConfiguration;
        settings.supportAll = typeConfig.supportsCvv2 && typeConfig.supportsPin && typeConfig.supportsExpiryDate;
        settings.supportCvvPin = typeConfig.supportsCvv2 && typeConfig.supportsPin && !typeConfig.supportsExpiryDate;
        settings.supportCvvExpiry = typeConfig.supportsCvv2 && !typeConfig.supportsPin && typeConfig.supportsExpiryDate;
        settings.supportPinExpiry = !typeConfig.supportsCvv2 && typeConfig.supportsPin && typeConfig.supportsExpiryDate;
        settings.supportPin = !typeConfig.supportsCvv2 && typeConfig.supportsPin && !typeConfig.supportsExpiryDate;
        settings.supportCvv = typeConfig.supportsCvv2 && !typeConfig.supportsPin && !typeConfig.supportsExpiryDate;
        settings.supportExpiry = !typeConfig.supportsCvv2 && !typeConfig.supportsPin && typeConfig.supportsExpiryDate;
        configurations.settings = settings;
        this.set('cardConfigurations', configurations);
    }

    function getConfigData(){
        var secureData, data, generatedSecure;

        secureData= {
            publicKeyExponent: APP_DATA.PUBLIC_KEY_EXPONENTS,
            publicKeyModulus: APP_DATA.PUBLIC_KEY_MODULES,
            pan : this.get('cardNumber'),
            mobile : "",
            amount : this.get('amount'),
        };
        secureData.pin   = this.get('pin');
        secureData.cvv   = this.get('cvv');
        secureData.expiry   = this.get('expiry');

        generatedSecure = this.generateSecure(secureData);

        data = {
            paymentId: this.get('paymentId'),
            payableCode: this.get('payableCode'),
            merchantCode: this.get('merchantCode'),
            secureData: generatedSecure.secure,
            pinBlock: generatedSecure.pinBlock,
        };

        return data;
    }

    return Backbone.Model.extend(model);
}
module.exports = cardModel();
},{"../config/app.data":34,"../config/app.timeout":38,"../config/urls.js":39,"../utils/utils":71,"backbone":1,"underscore":32}],43:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 2/1/2016.
 */
var Backbone = require('backbone'),
    _ = require('underscore');
var POSTILION_RESPONSE = require('../config/app.postilion_response');
var RESPONSE_CONSTANT = require('../config/app.responseConstants');
var HTTP_RESPONSE = require('../config/app.httpConstant')['CARD'];

function cardResponseModel(){
    var model= {
        initialize: initialize,
        getResponse: handleResponse,
        getResponseTag:getResponseTag
    };

    function handleResponse(){
        var responseType, notificationType;
        var data = this.get('data');
        if( (data.responseTag ||  data.responseDescription ) && ( RESPONSE_CONSTANT[data.responseTag ||  data.responseDescription] ) ){
            this.set('lastReponse',  data.responseTag ||  data.responseDescription);
            this.set('responseTag',  data.responseTag ||  data.responseDescription);
            return data.responseTag ||  data.responseDescription;
        }
        if(data.responseCode){
            this.set('lastReponse',  POSTILION_RESPONSE[data.responseCode]);
            this.set('responseTag',  POSTILION_RESPONSE[data.responseCode]);
            return POSTILION_RESPONSE[data.responseCode];
        }

        if(data.status){
            this.set('lastReponse',  HTTP_RESPONSE[data.status]);
            this.set('responseTag',  HTTP_RESPONSE[data.status]);
            return HTTP_RESPONSE[data.status];
        }
    }

    function getResponseTag(){
        return  this.get('responseTag');
    }

    function initialize(data){
        this.set('data', data)
    }

    return Backbone.Model.extend(model);
}
module.exports = cardResponseModel();
},{"../config/app.httpConstant":35,"../config/app.postilion_response":36,"../config/app.responseConstants":37,"backbone":1,"underscore":32}],44:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 1/29/2016.
 */
var Backbone = require('backbone'),
    _ = require('underscore'),
    $ = require('jquery');

var APP_DATA = require('../config/app.data');
var urls = require('../config/urls.js');
Utils = require('../utils/utils');

function cardinalModel() {
    var pollInterval;
    var model = {
        getUrl: getUrl,
        pollForResponse: pollForResponse,
        checkStatus:checkStatus
    };

    function getUrl() {
        var url = urls.cardinalResponse + '?paymentId=';
        return url + this.get('paymentId');
    }

    function checkStatus(deferredObject) {
        var scope = this;
        var options = {};
        var httpFetch;
        var postData = this.get('postData');
        var url = this.getUrl();
        this.url = url;

        options.dataType = "json";
        options.contentType = "application/json; charset=utf-8";
        options.method = "GET";
        options.type = "GET";
        options.headers = {};
        httpFetch = scope.fetch(options)
            .success(function(response) {
                if (response.responseCode == 'T0') {
                    deferredObject.resolve(response);
                } else {

                    deferredObject.notify();
                }
            })
            .error(function(error) {
                deferredObject.reject(error);
            });

        return deferredObject.promise();
    }

    function pollForResponse(deferredObject) {
        var scope = this;
        var options = {};
        var httpFetch;
        var postData = this.get('postData');
        var url = this.getUrl();
        this.url = url;

        options.dataType = "json";
        options.contentType = "application/json; charset=utf-8";
        options.method = "GET";
        options.headers = {};
        if (pollInterval) {
            clearTimeout(pollInterval);
        }
        pollInterval = setTimeout(function() {
            httpFetch = scope.fetch(options)
                .success(function(response) {
                    if (response.responseCode == 'T0') {
                        if (pollInterval) {
                            clearTimeout(pollInterval);
                        }
                        deferredObject.resolve(response);
                    } else {
                        if (pollInterval) {
                            clearTimeout(pollInterval);
                        }
                        deferredObject.notify();
                        scope.pollForResponse(deferredObject);
                    }
                })
                .error(function(error) {
                    deferredObject.reject(error);
                });
        }, 1000);

        return deferredObject.promise();
    }
    return Backbone.Model.extend(model);
}
module.exports = cardinalModel();

},{"../config/app.data":34,"../config/urls.js":39,"../utils/utils":71,"backbone":1,"jquery":28,"underscore":32}],45:[function(require,module,exports){

/**
 * Created by Gabriel.Izebhigie on 1/29/2016.
 */
var Backbone = require('backbone'),
    _ = require('underscore');

var APP_DATA = require('../config/app.data');
var urls = require('../config/urls.js');
Utils = require('../utils/utils');
var TIMEOUT = require('../config/app.timeout');

function channelAuthenticateModel(){

    var model= {
        url: urls.channelAuthenticate,
        collectionAccountUrl: urls.collectionAccount,
        initialize: initialize,
        hasToken: hasToken,
        isChannelTransactions:isChannelTransactions,
        logInWithToken:logInWithToken,
        getCollectionsAccount:getCollectionsAccount
    };

    function hasToken(){
        return this.get('accessToken');
    }

    function isChannelTransactions() {
        return this.get('thirdPartyTransactionType');
    }


    function logInWithToken(){
           return  this.fetch({
               method: 'GET',
               type: 'GET',
               contentType:"application/json; charset=utf-8",
               dataType:"json"
            })
    }


    function getCollectionsAccount(){
        return this.fetch({
            url : this.collectionAccountUrl,
            type:'POST',
            method:'POST',
            data: JSON.stringify(this.get('postData')),
            contentType:"application/json; charset=utf-8",
            dataType:"json"
        })
    }

    function initialize(){
        if(this.hasToken()) {
            this.url = this.url + "?merchantCode=" + this.get('merchantCode') + '&payableCode=' + this.get('payableCode') +
                '&accessToken=' + this.get('accessToken') + '&accessTokenType=' + this.get('accessTokenType');
        }
    }
    return Backbone.Model.extend(model);
}
module.exports = channelAuthenticateModel();
},{"../config/app.data":34,"../config/app.timeout":38,"../config/urls.js":39,"../utils/utils":71,"backbone":1,"underscore":32}],46:[function(require,module,exports){
module.exports={
  "784": "AED",
  "971": "AFN",
  "8": "ALL",
  "51": "AMD",
  "532": "ANG",
  "973": "AOA",
  "32": "ARS",
  "36": "AUD",
  "533": "AWG",
  "944": "AZN",
  "977": "BAM",
  "52": "BBD",
  "50": "BDT",
  "975": "BGN",
  "48": "BHD",
  "108": "BIF",
  "60": "BMD",
  "96": "BND",
  "68": "BOB",
  "984": "BOV",
  "986": "BRL",
  "44": "BSD",
  "64": "BTN",
  "72": "BWP",
  "974": "BYR",
  "84": "BZD",
  "124": "CAD",
  "976": "CDF",
  "947": "CHE",
  "756": "CHF",
  "948": "CHW",
  "990": "CLF",
  "152": "CLP",
  "156": "CNY",
  "170": "COP",
  "970": "COU",
  "188": "CRC",
  "931": "CUC",
  "192": "CUP",
  "132": "CVE",
  "203": "CZK",
  "262": "DJF",
  "208": "DKK",
  "214": "DOP",
  "12": "DZD",
  "818": "EGP",
  "232": "ERN",
  "230": "ETB",
  "978": "EUR",
  "242": "FJD",
  "238": "FKP",
  "826": "GBP",
  "981": "GEL",
  "936": "GHS",
  "292": "GIP",
  "270": "GMD",
  "324": "GNF",
  "320": "GTQ",
  "328": "GYD",
  "344": "HKD",
  "340": "HNL",
  "191": "HRK",
  "332": "HTG",
  "348": "HUF",
  "360": "IDR",
  "376": "ILS",
  "356": "INR",
  "368": "IQD",
  "364": "IRR",
  "352": "ISK",
  "388": "JMD",
  "400": "JOD",
  "392": "JPY",
  "404": "KES",
  "417": "KGS",
  "116": "KHR",
  "174": "KMF",
  "408": "KPW",
  "410": "KRW",
  "414": "KWD",
  "136": "KYD",
  "398": "KZT",
  "418": "LAK",
  "422": "LBP",
  "144": "LKR",
  "430": "LRD",
  "426": "LSL",
  "440": "LTL",
  "428": "LVL",
  "434": "LYD",
  "504": "MAD",
  "498": "MDL",
  "969": "MGA",
  "807": "MKD",
  "104": "MMK",
  "496": "MNT",
  "446": "MOP",
  "478": "MRO",
  "480": "MUR",
  "462": "MVR",
  "454": "MWK",
  "484": "MXN",
  "979": "MXV",
  "458": "MYR",
  "943": "MZN",
  "516": "NAD",
  "566": "NGN",
  "558": "NIO",
  "578": "NOK",
  "524": "NPR",
  "554": "NZD",
  "512": "OMR",
  "590": "PAB",
  "604": "PEN",
  "598": "PGK",
  "608": "PHP",
  "586": "PKR",
  "985": "PLN",
  "600": "PYG",
  "634": "QAR",
  "946": "RON",
  "941": "RSD",
  "643": "RUB",
  "646": "RWF",
  "682": "SAR",
  "90": "SBD",
  "690": "SCR",
  "938": "SDG",
  "752": "SEK",
  "702": "SGD",
  "654": "SHP",
  "694": "SLL",
  "706": "SOS",
  "968": "SRD",
  "728": "SSP",
  "678": "STD",
  "760": "SYP",
  "748": "SZL",
  "764": "THB",
  "972": "TJS",
  "934": "TMT",
  "788": "TND",
  "776": "TOP",
  "949": "TRY",
  "780": "TTD",
  "901": "TWD",
  "834": "TZS",
  "980": "UAH",
  "800": "UGX",
  "840": "USD",
  "997": "USN",
  "998": "USS",
  "940": "UYI",
  "858": "UYU",
  "860": "UZS",
  "937": "VEF",
  "704": "VND",
  "548": "VUV",
  "882": "WST",
  "950": "XAF",
  "961": "XAG",
  "959": "XAU",
  "955": "XBA",
  "956": "XBB",
  "957": "XBC",
  "958": "XBD",
  "951": "XCD",
  "960": "XDR",
  "Nil": "XFU",
  "952": "XOF",
  "964": "XPD",
  "953": "XPF",
  "962": "XPT",
  "963": "XTS",
  "999": "XXX",
  "886": "YER",
  "710": "ZAR",
  "967": "ZMW"
}

},{}],47:[function(require,module,exports){
module.exports={ "ALL": "L"
, "AFN": "؋"
, "ARS": "$"
, "AWG": "ƒ"
, "AUD": "$"
, "AED":" د.إ"
, "AZN": "₼"
, "BSD": "$"
, "BBD": "$"
, "BYR": "p."
, "BZD": "BZ$"
, "BMD": "$"
, "BOB": "Bs."
, "BAM": "KM"
, "BWP": "P"
, "BGN": "лв"
, "BRL": "R$"
, "BND": "$"
, "KHR": "៛"
, "CAD": "$"
, "KYD": "$"
, "CLP": "$"
, "CNY": "¥"
, "COP": "$"
, "CRC": "₡"
, "HRK": "kn"
, "CUP": "₱"
, "CZK": "Kč"
, "DKK": "kr"
, "DOP": "RD$"
, "XCD": "$"
, "EGP": "£"
, "SVC": "$"
, "EEK": "kr"
, "EUR": "€"
, "FKP": "£"
, "FJD": "$"
, "GHC": "¢"
, "GHS": "₵"
, "GMD": "D"
, "GNF": "FG"
, "GIP": "£"
, "GTQ": "Q"
, "GGP": "£"
, "GYD": "$"
, "HNL": "L"
, "HKD": "$"
, "HUF": "Ft"
, "ISK": "kr"
, "INR": "₹"
, "IDR": "Rp"
, "IRR": "﷼"
, "IMP": "£"
, "ILS": "₪"
, "JMD": "J$"
, "JPY": "¥"
, "JEP": "£"
, "KES": "KSh"
, "KZT": "лв"
, "KPW": "₩"
, "KRW": "₩"
, "KGS": "лв"
, "LAK": "₭"
, "LVL": "Ls"
, "LBP": "£"
, "LRD": "$"
, "LTL": "Lt"
, "MKD": "ден"
, "MYR": "RM"
, "MUR": "₨"
, "MXN": "$"
, "MNT": "₮"
, "MZN": "MT"
, "NAD": "$"
, "NPR": "₨"
, "ANG": "ƒ"
, "NZD": "$"
, "NIO": "C$"
, "NGN": "₦"
, "NOK": "kr"
, "OMR": "﷼"
, "PKR": "₨"
, "PAB": "B/."
, "PYG": "Gs"
, "PEN": "S/."
, "PHP": "₱"
, "PLN": "zł"
, "QAR": "﷼"
, "RON": "lei"
, "RUB": "₽"
, "RWF": "RF"
, "SHP": "£"
, "SAR": "﷼"
, "RSD": "Дин."
, "SCR": "₨"
, "SGD": "$"
, "SBD": "$"
, "SOS": "S"
, "SLL": "Le"
, "ZAR": "R"
, "LKR": "₨"
, "SEK": "kr"
, "CHF": "CHF"
, "SRD": "$"
, "SYP": "£"
, "TZS": "TSh"
, "TWD": "NT$"
, "THB": "฿"
, "TTD": "TT$"
, "TRY": ""
, "TRL": "₤"
, "TVD": "$"
, "UGX": "USh"
, "UAH": "₴"
, "XOF": "BCEAO"
, "GBP": "£"
, "USD": "$"
, "UYU": "$U"
, "UZS": "лв"
, "VEF": "Bs"
, "VND": "₫"
, "YER": "﷼"
, "ZWD": "Z$"
, "ZMK": "ZMK"
}

},{}],48:[function(require,module,exports){
/**
 * Created by Gilbert.Nwaiwu on 10/24/2017.
 */
var Backbone = require('backbone'),
  _ = require('underscore');

var urls = require('../config/urls.js');
var TIMEOUT = require('../config/app.timeout');

function fingerprintModel() {
  var model = {
    getFingerprintStatus: getFingerprintStatus,
    disableFingerprint: disableFingerprint
  };



  function getFingerprintStatus() {
    var scope = this;
    this.url = urls.fingerprintStatus;

    var data = this.get('statusData');

    var options = {
      type: "POST",
      method: "POST",
      data: JSON.stringify(data),
      timeout: TIMEOUT.FINGERPRINT_DISABLE_TIMEOUT,
      dataType: "json",
      contentType: "application/json; charset=utf-8"
    }
    return this.fetch(options);

  }

  function disableFingerprint() {
    var scope = this;
    this.url = urls.fingerprintDisable;
    
    var data = {
      key: this.get('key')
    }
    
    var options = {
      type: "POST",
      method: "POST",
      data: JSON.stringify(data),
      timeout: TIMEOUT.FINGERPRINT_DISABLE_TIMEOUT,
      dataType: "json",
      contentType: "application/json; charset=utf-8"
    }
    return this.fetch(options);
  }


  return Backbone.Model.extend(model);
}
module.exports = fingerprintModel();

},{"../config/app.timeout":38,"../config/urls.js":39,"backbone":1,"underscore":32}],49:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 2/1/2016.
 */
var Backbone = require('backbone'),
    _ = require('underscore');

function httpResponseModel(){
    var model= {
        initialize: initialize,
        getResponse: handleResponse,
        getResponseTag: getResponseTag,
        getErrorType: getErrorType
    };

    function handleResponse(){
        var responseType, notificationType;
        var data = this.get('data');
        var responseTag = data.responseTag;
        switch(data.code) {
            case '10403':
                responseType = 'HTTP_ERROR';
                notificationType ='inline_error';
                break;
            case '10409':
                responseType = 'HTTP_DUPLICATE_TRANSACTION';
                notificationType ='failed';
                break;
            default :
                responseType = 'HTTP_ERROR';
                notificationType ='inline_error';
                break;
        }

        this.set('responseTag', responseTag);
        this.set('lastResponse', responseType);
        this.set('notification_type', notificationType);
        return responseType;
    }
    function getResponseTag(){
        return  this.get('responseTag');
    }

    function getErrorType(){
        return this.get('notification_type');
    }
    function initialize(data){
        this.set('data', data)
    }

    return Backbone.Model.extend(model);
}
module.exports = httpResponseModel();
},{"backbone":1,"underscore":32}],50:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 2/1/2016.
 */
var Backbone = require('backbone'),
    _ = require('underscore');
var HTTP_RESPONSE = require('../config/app.httpConstant')['LOGIN'];

function loginResponseModel() {
    var model = {
        initialize: initialize,
        getResponse: handleResponse,
        getResponseTag: getResponseTag,
        getErrorType: getErrorType
    };

    function handleResponse() {

        var responseType, notificationType;
        var data = this.get('data');
        var responseTag = data.responseTag || data.status;
        if (data.responseTag) {
            this.set('lastReponse', data.responseTag);
            this.set('responseTag', data.responseTag);
            return data.responseTag;
        }
        if (data.status) {
            this.set('lastReponse', HTTP_RESPONSE[data.status]);
            this.set('responseTag', HTTP_RESPONSE[data.status]);
            return HTTP_RESPONSE[data.status];
        }
        this.set('lastReponse', 'LOGIN_ERROR');
        this.set('responseTag', 'LOGIN_ERROR');
        return 'LOGIN_ERROR';
    }

    function getResponseTag() {
        return this.get('responseTag');
    }

    function getErrorType() {
        return this.get('notification_type');
    }

    function initialize(data) {
        this.set('data', data)
    }

    return Backbone.Model.extend(model);
}
module.exports = loginResponseModel();

},{"../config/app.httpConstant":35,"backbone":1,"underscore":32}],51:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 1/29/2016.
 */
var Backbone = require('backbone'),
    _ = require('underscore');


function mainModel(){
    var model= {
            defaults:{
                page_proceed: "",
                page_back: ""
            }
    };

    return Backbone.Model.extend(model);
}
module.exports = mainModel();
},{"backbone":1,"underscore":32}],52:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 1/29/2016.
 */
var Backbone = require('backbone'),
    _ = require('underscore');


var countryNumberCodes = require('./country'),
    countryCurrencyCodes = require('./currency'),
    Utils =  require('../utils/functions.js');

function merchantModel(){

    var model= {
        isValidTransaction:isValidTransaction,
        getCountrySymbol: getCountrySymbol,
        getClient:getClient,
        initialize: initialize
    };

    function isValidTransaction(){
        var responseCode  = this.get('responseCode');
        if(responseCode){
            if(responseCode == 'Z4' || responseCode == 'Z5'){
                return false
            }

        }
        return true;

    }

    function getCountrySymbol(){
        var countryNumber, code ;
        countryNumber  = this.get('currencyCode');
        code  =  countryNumberCodes[countryNumber];
        return  code ? (countryCurrencyCodes[ code ] ? countryCurrencyCodes[ code ]: "")  : "";
    }

    function getClient(){
       return  this.get('accessTokenType') || 'WEBPAY';
    }

    function initialize() {
        var amount  = this.get('amount') + this.get('surcharge');
        if(amount > 0 ){
            this.set( 'convertedAmount', amount/100);
            this.set( 'formattedAmount', Utils.getAmount( amount/100) );
            this.set( 'isAmount', true);

        }else{
            this.set( 'isAmount', false);
        }
        this.set('client', this.getClient());
        this.set('isPopup', this.get('displayModeType') === "POPUP");
        this.set('currencySymbol', this.getCountrySymbol() );
    }
    return Backbone.Model.extend(model);
}
module.exports = merchantModel();
},{"../utils/functions.js":65,"./country":46,"./currency":47,"backbone":1,"underscore":32}],53:[function(require,module,exports){
var Backbone = require('backbone'),
  _ = require('underscore');

var urls = require('../config/urls.js');
var TIMEOUT = require('../config/app.timeout');


function mobilePayModel() {

  var model = {
    pay: pay,
    status: status
  }

  function pay() {
    var scope = this;
    var postData = this.get('payData');
    this.url = urls.noncard + '/purchase';
    var $http;
    var options = {};


    postData = _.extend({}, postData);

    options.method = "POST";
    options.type = "POST";
    options.data = JSON.stringify(postData);
    options.timeout = TIMEOUT.PAY_WITH_CARD;
    options.dataType = "json";
    options.contentType = "application/json; charset=utf-8";


    $http = this.fetch(options);


    $http.success(function (response) {
      scope.set('previousResponse', response);
    });
    $http.error(function (response) {
      scope.set('previousResponse', response);
    })

    return $http;
  }



  function status() {
    
    var scope = this;

    var postData = this.get('payData');
    this.url = urls.noncard + '/status';
    var $http;
    var options = {};


    postData = _.extend({}, postData);

    options.method = "POST";
    options.type = "POST";
    options.data = JSON.stringify(postData);
    options.timeout = TIMEOUT.PAY_WITH_CARD;
    options.dataType = "json";
    options.contentType = "application/json; charset=utf-8";


    $http = this.fetch(options);


    $http.success(function (response) {
      scope.set('previousResponse', response);
    });
    $http.error(function (response) {
      scope.set('previousResponse', response);
    })

    return $http;
  }


  return Backbone.Model.extend(model);
}


module.exports = mobilePayModel();
},{"../config/app.timeout":38,"../config/urls.js":39,"backbone":1,"underscore":32}],54:[function(require,module,exports){
var Backbone = require('backbone'),
_ = require('underscore');

var urls = require('../config/urls.js');
var TIMEOUT = require('../config/app.timeout');


function noncardModel() {

  var model = {
    getProviders: getProviders,
    validateNoncardRequest: validateNoncardRequest,
    purchase: purchase,
    generateQr: generateQr,
    qrPaymentQueryStatus: qrPaymentQueryStatus 
  }

  function getProviders(category) {

    var url = urls.noncardconfiguration + '/find?code=' + category;    
    
    return  this.fetch({
      url: url,
      method: 'GET',
      type: 'GET',
      contentType:"application/json; charset=utf-8",
      dataType:"json"
    });
  }

  function validateNoncardRequest() {
    var url = urls.noncard + '/validate';
  
    var postData = this.get('postData');
    
    return this.fetch({
      url: url,
      method: 'POST',
      type: 'POST',
      data: JSON.stringify(postData),
      contentType:"application/json; charset=utf-8",
      dataType:"json",
      timeout: TIMEOUT.PAY_WITH_NONCARD
    });
  }


  function purchase() {
    var url = urls.noncard + '/purchase';
  
    var postData = this.get('postData');
    
    return this.fetch({
      url: url,
      method: 'POST',
      type: 'POST',
      data: JSON.stringify(postData),
      contentType:"application/json; charset=utf-8",
      dataType:"json",
      timeout: TIMEOUT.PAY_WITH_NONCARD,
      headers: {
        'terminalId': '1234'
      }
    });
  }

  function generateQr(paymentRequestData) {
    var url = urls.qrGenerator;

    var postData = paymentRequestData;

    return this.fetch({
      url: url,
      method: 'POST',
      type: 'POST',
      data: JSON.stringify(postData),
      contentType:"application/json; charset=utf-8",
      dataType:"json",
      timeout: TIMEOUT.PAY_WITH_NONCARD,
    });
  }


  function qrPaymentQueryStatus() {

    var merchantCode = this.get('merchantCode');
    var transactionReference = this.get('transactionReference');

    var url = urls.qrPaymentStatus + '?merchantCode=' + merchantCode + '&transactionReference=' + transactionReference;

    return this.fetch({
        url: url,
        method: "GET",
        type: "GET",
        timeout: TIMEOUT.BIN_CONFIGURATION,
        contentType: "application/json; charset=utf-8",
        dataType: "json",
    });


  }


  return Backbone.Model.extend(model);
}


module.exports = noncardModel();
},{"../config/app.timeout":38,"../config/urls.js":39,"backbone":1,"underscore":32}],55:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 1/29/2016.
 */
var Backbone = require('backbone'),
    _ = require('underscore');

var APP_DATA = require('../config/app.data');
var urls = require('../config/urls.js');
var Utils = require('../utils/utils');
var TIMEOUT = require('../config/app.timeout');

function payModel() {
    var model = {
        payWithWallet: payWithWallet,
        payWithCard: payWithCard,
        payWithCardCardinal: payWithCardCardinal,
        payWithNumber: payWithNumber,
        addCardToWallet: addCardToWallet,
        payWithMobileId: payWithMobileId
    };



    function payWithMobileId(){//poll server to confirm ussd auth
        var vm = this;
        var postData = this.get('postData');
        this.url = urls.authenticateToken + '?tokenAuthenticatorType=MOBILEID';
        var $http;
        var $ext = {};
        var options = {};


        $ext.tokenValidationParameters = this.get('tokenValidationParameters');

        postData = _.extend({}, postData, $ext);

        options.method = "POST";
        options.type = "POST";
        options.data = JSON.stringify(postData);
        options.timeout = TIMEOUT.PAY_WITH_CARD;
        options.dataType = "json";
        options.contentType = "application/json; charset=utf-8";


        $http = this.fetch(options);


        $http.success(function(response) {
            vm.set('previousResponse', response);
        });
        $http.error(function(response) {
            vm.set('previousResponse', response);
        })

        return $http;
    }





    function payWithNumber() {//used for auto enrollment
        var options = {};
        var postData = this.get('postData');
        var $ext = {};
        var vm = this;
        var $http;
    	this.url = urls.registerNumber;

        if (this.get('rewardMoney')) {
            $ext.rewardMoney = this.get('rewardMoney');
        }

    	$ext.deviceInfo = {
            "deviceId": this.get('deviceFingerPrint') || " "
        };

        $ext.mobilePhoneNumber = this.get('mobilePhoneNumber');

        postData = _.extend({}, postData, $ext);
        options.method = "POST";
        options.type = "POST";
        options.data = JSON.stringify(postData);

        options.timeout = TIMEOUT.PAY_WITH_CARD;

        options.dataType = "json";
        options.contentType = "application/json; charset=utf-8";
        $http = this.fetch(options);
        $http.success(function(response) {
            vm.set('previousResponse', response);
        });
        $http.error(function(response) {
            vm.set('previousResponse', response);
        })
        return $http;
    }


    function payWithWallet() {
        var options = {};
        var postData = this.get('postData');
        var $ext = {};
        var vm = this;
        var $http;

        this.url = urls.authenticateToken;
        if (this.get('rewardMoney')) {
            $ext.rewardMoney = this.get('rewardMoney');
        }
        $ext.twoFactorAuthenticationCode = this.get('token');
        $ext.deviceInfo = {
            "deviceId": this.get('deviceFingerPrint') || " "
        };

        if(this.get('walletInfo')){
            $ext.walletInfo = this.get('walletInfo');
        }

        if(this.get('rememberDevice')){
            $ext.rememberDevice = true;
        }

        if(this.get('tokenValidationParameters')) {
            $ext.tokenValidationParameters = {
                disableMobileIdValidation : true
            };
        }

        if(this.get('fingerPrintAllowed')){
            if(this.get('rememberCardOnDevice')){
                $ext.tokenValidationParameters = {enableFingerPrintAuthorization : 'enabled'};
            } else {
                $ext.tokenValidationParameters = {enableFingerPrintAuthorization : 'disabled'};
            }
        }

        postData = _.extend({}, postData, $ext);
        options.method = "POST";
        options.type = "POST";
        options.data = JSON.stringify(postData);
        options.timeout = TIMEOUT.PAY_WITH_TOKEN;
        options.dataType = "json";
        options.contentType = "application/json; charset=utf-8";
        $http = this.fetch(options);
        $http.success(function(response) {
            vm.set('previousResponse', response);
        });
        $http.error(function(response) {
            vm.set('previousResponse', response);
        })
        return $http;
    }

    function payWithCard() {
        var options = {}
        var postData = this.get('postData');
        var $ext = {};
        var $http;
        var vm = this;

        if (this.get('rewardMoney')) {
            $ext.rewardMoney = this.get('rewardMoney');
        }
        $ext.deviceInfo = {
            "deviceId": this.get('deviceFingerPrint') || " "
        };

        if(this.get('walletInfo')){
            $ext.walletInfo = this.get('walletInfo');
        }

        if(this.get('tokenValidationParameters')) {
            $ext.tokenValidationParameters = {
                disableMobileIdValidation : true
            };
        }

        postData = _.extend({}, postData, $ext);
        this.url = urls.pay;
        options.type = "POST";
        options.method = "POST";
        options.data = JSON.stringify(postData);
        options.timeout = TIMEOUT.PAY_WITH_CARD;
        options.dataType = "json";
        options.contentType = "application/json; charset=utf-8";
        $http = this.fetch(options);
        $http.success(function(response) {
            vm.set('previousResponse', response);
        });
        $http.error(function(response) {
            vm.set('previousResponse', response);
        })
        return $http;
    }



    function payWithCardCardinal() {
        var options = {}
        var postData = this.get('postData');
        var $ext = {};
        var $http;
        var vm = this;
        if (this.get('rewardMoney')) {
            $ext.rewardMoney = this.get('rewardMoney');
        }
        $ext.cardinalInfo = {
            eciFlag: this.get('eciFlag'),
            transactionId: this.get('transactionId'),

        };
        $ext.deviceInfo = {
            "deviceId": this.get('deviceFingerPrint') || " "
        };

        if(this.get('walletInfo')){
            $ext.walletInfo = this.get('walletInfo');
        }

        postData = _.extend({}, postData, $ext);
        this.url = urls.cardinal;

        options.method = "POST";
        options.type = "POST";
        options.data = JSON.stringify(postData);
        options.timeout = TIMEOUT.PAY_WITH_CARDINAL;
        options.dataType = "json";
        options.contentType = "application/json; charset=utf-8";
        $http = this.fetch(options);
        $http.success(function(response) {
            vm.set('previousResponse', response);
        });
        $http.error(function(response) {
            vm.set('previousResponse', response);
        })
        return $http;
    }

    function addCardToWallet() {
            var scope = this;
            var options = {}
            var postData = this.get('postData');
            postData = {
                secureData: postData.secureData,
                pinBlock: postData.pinBlock,
                paymentId: postData.paymentId,
                walletId: scope.get('walletId')
            }
            var $ext = {};
            var $http;
            var vm = this;
            if (this.get('rewardMoney')) {
                $ext.rewardMoney = this.get('rewardMoney');
            }

            postData = _.extend({}, postData, $ext);
            this.url = urls.addPaymentInstrument;

            options.method = "POST";
            options.type = "POST";
            options.data = JSON.stringify(postData);
            options.timeout = TIMEOUT.PAY_WITH_CARDINAL;
            options.dataType = "json";
            options.contentType = "application/json; charset=utf-8";
            $http = this.fetch(options);
            $http.success(function(response) {
                vm.set('previousResponse', response);
            });
            $http.error(function(response) {
                vm.set('previousResponse', response);
            })
            return $http;
        }

    return Backbone.Model.extend(model);
}
module.exports = payModel();

},{"../config/app.data":34,"../config/app.timeout":38,"../config/urls.js":39,"../utils/utils":71,"backbone":1,"underscore":32}],56:[function(require,module,exports){

var Backbone = require('backbone'),
    _ = require('underscore');

var urls = require('../../config/urls');
var TIMEOUT = require('../../config/app.timeout');


function creditModel() {

    var model = {
        generateOTP: generateOTP,
        generateCardOTP: generateCardOTP,
        validateOTP: validateOTP,
        validateCardOTP: validateCardOTP,
        getOffers: getOffers,
        acceptCredit: acceptCredit,
        setConfigSettings: setConfigSettings
    };




    function generateOTP() {
        var url = urls.credit + '/generate';

        var postData = {
            "customerId": this.get('customerId'),
            "paymentId": this.get('paymentId')
        }

        return this.fetch({
            url: url,
            method: 'POST',
            type: 'POST',
            data: JSON.stringify(postData),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            timeout: TIMEOUT.PAY_WITH_CREDIT.GENERATE_OTP
        });
    }


    function setConfigSettings() {
        var configurations, supportAll, supportCvvPin, typeConfig, supportCvvExpiry, supportPinExpiry, supportPin, supportCvv, supportExpiry;
        var settings = {};
        configurations = this.get('cardConfigurations');
        typeConfig = this.get('cardConfigurations').cardTypeGatewayConfiguration;
        settings.supportAll = typeConfig.supportsCvv2 && typeConfig.supportsPin && typeConfig.supportsExpiryDate;
        settings.supportCvvPin = typeConfig.supportsCvv2 && typeConfig.supportsPin && !typeConfig.supportsExpiryDate;
        settings.supportCvvExpiry = typeConfig.supportsCvv2 && !typeConfig.supportsPin && typeConfig.supportsExpiryDate;
        settings.supportPinExpiry = !typeConfig.supportsCvv2 && typeConfig.supportsPin && typeConfig.supportsExpiryDate;
        settings.supportPin = !typeConfig.supportsCvv2 && typeConfig.supportsPin && !typeConfig.supportsExpiryDate;
        settings.supportCvv = typeConfig.supportsCvv2 && !typeConfig.supportsPin && !typeConfig.supportsExpiryDate;
        settings.supportExpiry = !typeConfig.supportsCvv2 && !typeConfig.supportsPin && typeConfig.supportsExpiryDate;
        configurations.settings = settings;
        this.set('cardConfigurations', configurations);
    }   

    function generateCardOTP() {
        var url = urls.credit + '/token';

        var postData = this.get('generateCardOtpPostData');

        return this.fetch({
            url:url,
            method: 'POST',
            type: 'POST',
            data: JSON.stringify(postData),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            timeout: TIMEOUT.PAY_WITH_CREDIT.GENERATE_CARD_OTP
        });
 
    }

    function validateOTP() {
        var url = urls.credit + '/validate';

        var postData = {
            "otp": this.get('otp'),
            "customerId": this.get('customerId'),
            "paymentId": this.get('paymentId')
        }

        return this.fetch({
            url: url,
            method: 'POST',
            type: 'POST',
            data: JSON.stringify(postData),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            timeout: TIMEOUT.PAY_WITH_CREDIT.VALIDATE_OTP
        });
    }

    function validateCardOTP() {
        var url = urls.credit + '/token/validate';

        var postData = this.get('validateCardOtpPostData');

        return this.fetch({
            url: url,
            method: 'POST',
            type: 'POST',
            data: JSON.stringify(postData),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            timeout: TIMEOUT.PAY_WITH_CREDIT.VALIDATE_CARD_OTP
        });
    }

    function getOffers() {
        var url = urls.credit;

        var postData = {
            customerId: this.get('customerId'),
            paymentId: this.get('paymentId'),
            amount: this.get('amount'),
            merchantCode: this.get('merchantCode')
        }

        return this.fetch({
            url: url,
            method: 'POST',
            type: 'POST',
            data: JSON.stringify(postData),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            timeout: TIMEOUT.PAY_WITH_CREDIT.GET_OFFERS
        });
    }

    function acceptCredit() {
        var url = urls.credit + '/token/validate-pay';

        var postData = this.get('postData');

        return this.fetch({
            url: url,
            method: 'POST',
            type: 'POST',
            data: JSON.stringify(postData),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            timeout: TIMEOUT.PAY_WITH_CREDIT.ACCEPT_CREDIT
        });
    }


    return Backbone.Model.extend(model);
}

module.exports = creditModel();
},{"../../config/app.timeout":38,"../../config/urls":39,"backbone":1,"underscore":32}],57:[function(require,module,exports){
var Backbone = require('backbone'),
  _ = require('underscore');

var urls = require('../../config/urls.js');
var TIMEOUT = require('../../config/app.timeout');


function mobilePayModel() {

  var model = {
    pay: pay
  }

  function pay() {
    var scope = this;
    var postData = this.get('payData');
    this.url = urls.noncard + '/purchase';
    var $http;
    var options = {};


    postData = _.extend({}, postData);

    options.method = "POST";
    options.type = "POST";
    options.data = JSON.stringify(postData);
    options.timeout = TIMEOUT.PAY_WITH_CARD;
    options.dataType = "json";
    options.contentType = "application/json; charset=utf-8";


    $http = this.fetch(options);


    $http.success(function (response) {
      scope.set('previousResponse', response);
    });
    $http.error(function (response) {
      scope.set('previousResponse', response);
    })

    return $http;
  }


  return Backbone.Model.extend(model);
}


module.exports = mobilePayModel();
},{"../../config/app.timeout":38,"../../config/urls.js":39,"backbone":1,"underscore":32}],58:[function(require,module,exports){

var Backbone = require('backbone'),
    _ = require('underscore');

var urls = require('../../config/urls');
var TIMEOUT = require('../../config/app.timeout');


function creditModel() {

    var model = {
        getIssuers: getIssuers,
        generateUssd: generateUssd,
        pollStatus: pollStatus
    };



    function getIssuers() {
        var countryCode = this.get('countryCode');

        var url = urls.ussd + '/issuers/' + countryCode;

        return this.fetch({
            url: url,
            method: "GET",
            type: "GET",
            timeout: TIMEOUT.PAY_WITH_USSD.GET_ISSUERS,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
        });
    }

    function generateUssd() {
        var url = urls.ussd + '/generate';

        var postData = this.get('generatePostData');

        return this.fetch({
            url: url,
            method: 'POST',
            type: 'POST',
            data: JSON.stringify(postData),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            timeout: TIMEOUT.PAY_WITH_USSD.GENERATE_USSD,
        });
    }

    function pollStatus() {
         
        var merchantCode = this.get('merchantCode');
        var transactionReference = this.get('transactionReference');

        var url = urls.ussd + '/status?merchantCode=' + merchantCode + '&transactionReference=' + transactionReference;

        return this.fetch({
            url: url,
            method: "GET",
            type: "GET",
            timeout: TIMEOUT.PAY_WITH_USSD.POLL_STATUS,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
        });

    }


    return Backbone.Model.extend(model);
}
module.exports = creditModel();
},{"../../config/app.timeout":38,"../../config/urls":39,"backbone":1,"underscore":32}],59:[function(require,module,exports){

/**
 * Created by Gabriel.Izebhigie on 1/29/2016.
 */
var Backbone = require('backbone'),
  _ = require('underscore');
var POSTILION_RESPONSE = require('../config/app.postilion_response');
var RESPONSE_CONSTANT = require('../config/app.responseConstants');
var HTTP_RESPONSE = require('../config/app.httpConstant')['CARD'];

function paymentResponseModel() {
  var model = {
    initialize: initialize,
    pass: pass,
    getResponse: handleResponse,
    getResponseTag: getResponseTag,
    getErrorType: getErrorType,
    getResponseDescriptionCustom: getResponseDescriptionCustom
  };

  function initialize(data) {
    this.set('data', data)
  }

  function pass() {
    var criteria = ['PAYMENT_OTP', 'PAYMENT_CARDINAL'];
    return _.indexOf(criteria, this.get('lastResponse')) !== -1;
  }

  function handleResponse() {
    var responseType, notificationType;
    var data = this.get('data');

    //patch generic server errors
    if(data.code && data.code == '10500') {
      data.responseCode = '10500';
    }

    if ((data.responseTag || data.responseDescription) && (RESPONSE_CONSTANT[data.responseTag || data.responseDescription])) {
      this.set('lastReponse', data.responseTag || data.responseDescription);
      this.set('responseTag', data.responseTag || data.responseDescription);
      return data.responseTag || data.responseDescription;
    }

    if (data.error) {
      if (data.error.fieldName) {
        this.set('lastReponse', data.error.fieldName);
        this.set('responseTag', data.error.fieldName);
        return data.error.fieldName;
      }
    }

    if (data.responseCode) {
      this.set('lastReponse', POSTILION_RESPONSE[data.responseCode]);
      this.set('responseTag', POSTILION_RESPONSE[data.responseCode]);
      
      //handle custom response description
      if(data.responseCode == 'LS0') {
        this.set('responseDescriptionCustom', data.responseDescription);
      }
      
      return POSTILION_RESPONSE[data.responseCode];
    }

    if (data.status) {
      this.set('lastReponse', HTTP_RESPONSE[data.status]);
      this.set('responseTag', HTTP_RESPONSE[data.status]);
      return HTTP_RESPONSE[data.status];
    }
  }

  function handleSuccessResponse() {
    var responseType, notificationType;
    var data = this.get('data');
    var responseTag = data.responseTag;

    switch (data.responseCode) {
      case 'T0':
        if (!data.requiresCentinelAuthorization) {
          responseType = 'PAYMENT_OTP';
        } else {
          responseType = 'PAYMENT_CARDINAL';
        }
        notificationType = 'complete'
        break;
      case 'T1':
        if (data.requiresRegistration) {
          responseType = 'PAYMENT_TOKEN_REG';
          notificationType = 'inline_error';
          if (data.requiresCentinelAuthorization) {
            responseType = 'PAYMENT_TOKEN_CARDINAL_REG';
          }

        } else {
          responseType = 'PAYMENT_TOKEN_ERROR';
          notificationType = 'inline_error'
        }
        break;
      case '00':
        responseType = 'PAYMENT_SUCCESS';
        notificationType = 'complete'

        break;
      default:
        responseType = "PAYMENT_ERROR";
        notificationType = 'inline_error'
        //handle other postilion errors
        break;
    }

    this.set('lastResponse', responseType);
    this.set('responseTag', responseTag);
    this.set('notification_type', notificationType);
    return responseType;
  }


  function getResponseTag() {
    return this.get('responseTag');
  }

  function getResponseDescriptionCustom() {
    return this.get('responseDescriptionCustom');
  }

  function getErrorType() {
    return this.get('notification_type');
  }


  return Backbone.Model.extend(model);
}
module.exports = paymentResponseModel();
},{"../config/app.httpConstant":35,"../config/app.postilion_response":36,"../config/app.responseConstants":37,"backbone":1,"underscore":32}],60:[function(require,module,exports){

/**
 * Created by Gabriel.Izebhigie on 1/29/2016.
 */
var Backbone = require('backbone'),
    _ = require('underscore');

var APP_DATA = require('../config/app.data');
var responseConstants = require('../config/app.responseConstants');
var paymentResponseModel = require('./payment_response_model');
var httpResponseModel = require('./http_response_model');
var cardResponseModel = require('./card_response_model');
var loginResponseModel = require('./login_response_model');

function responseModel() {
    var response = {
        'http': httpResponseModel,
        'payment': paymentResponseModel,
        'card': cardResponseModel,
        'login': loginResponseModel
    };


    function getResponseDescription(responseConstant) {
        return responseConstants[responseConstant] ? responseConstants[responseConstant] : '';
    }
    function responseHandler(modelType, data) {
        if (!response[modelType]) {
            throw Error('Response type not implemented');
        }
        this.paymentResponse = data;
        this.responseType = modelType;
        this.responseModel = new response[modelType](data);
        this.pass = pass;
        this.getResponse = getResponse;
        this.alert = alert;
        this.getErrorType = getErrorType;
        this.model = model;
        this.toString = output;
    }
    function getResponse() {
        this.lastReponse = this.responseModel.getResponse();
        this.responseTag = this.responseModel.getResponseTag();
        if(this.responseModel.getResponseDescriptionCustom) {
            this.responseDescriptionCustom = this.responseModel.getResponseDescriptionCustom();
        }
        
        return this;
    }
    function output() {
        return this.lastReponse;
    }

    function getErrorType() {
        return this.responseModel.getErrorType();
    }

    function pass() {
        // for payment response only;
        if (this.responseType != 'payment') {
            throw Error('Method only implemented for payment response type');
        }
        return this.responseModel.pass();
    }

    function model() {
        var responseObject = responseConstants[this.responseTag];
        var baseUrl = window.IpgApp.baseUrl;
        var description = responseObject['DESCRIPTION'] || "";
        var data = {
            paymentResponse: this.paymentResponse,
            type: responseObject['TYPE'],
            response: description,
            notification_type: responseObject['TYPE'],
            message: description
        };

        if (this.responseDescriptionCustom != null && this.responseDescriptionCustom.length > 0) {
            data.message = this.responseDescriptionCustom;
        }

        if (this.responseTag == 'PAYMENT_TOKEN_REG') {
            var link = '<a class="color-white" href="' + baseUrl + 'otpregistrationsteps" target="_blank"> Steps to register for Safe Token.</a>';
            data['message'] = responseObject['DESCRIPTION'] + link;
            data['response'] = responseObject['DESCRIPTION'] + link;
        }
        var responseModel = Backbone.Model.extend({})
        return new responseModel(data);
    }

    function alert() {
        return this.lastReponse;
    }

    return responseHandler;
}

module.exports = responseModel();
},{"../config/app.data":34,"../config/app.responseConstants":37,"./card_response_model":43,"./http_response_model":49,"./login_response_model":50,"./payment_response_model":59,"backbone":1,"underscore":32}],61:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 1/29/2016.
 */
var Backbone = require('backbone'),
    _ = require('underscore');

var APP_DATA = require('../config/app.data');
var urls = require('../config/urls');
var Utils = require('../utils/utils');
var TIMEOUT = require('../config/app.timeout');

function cardModel(){

    var model= {
        url: urls.rewards,
        getRewards: getRewards
    };

    function getRewards(){
        var options = {};
        var postData = this.get('postData');
        options.data = postData;
        options.method = "GET";
        options.type = "GET";
        options.dataType = "json";
        options.contentType = "application/json; charset=utf-8";

        options.timeout = TIMEOUT.REWARDS;
        return this.fetch(options);
    }

    return Backbone.Model.extend(model);
}
module.exports = cardModel();
},{"../config/app.data":34,"../config/app.timeout":38,"../config/urls":39,"../utils/utils":71,"backbone":1,"underscore":32}],62:[function(require,module,exports){
var Backbone = require('backbone'),
  _ = require('underscore');
var urls = require('../config/urls.js');

function userModel() {

  var model = {
    url: urls.customerCancellation,
    customerCancelTransaction: customerCancelTransaction
  };

  function customerCancelTransaction() {
    if (!window.webpayAllowCancellation) { return };

    window.webpayAllowCancellation = false;
    
    var options = {};
    var postData = {};
    postData.paymentId = this.get('paymentId');
    postData.customerCancellationReason = this.get('customerCancellationReason');

    if (this.get('thirdPartyTransactionType')) {
      postData.thirdPartyTransactionType = this.get('thirdPartyTransactionType');
    }
    postData = _.extend({}, postData);

    options.method = "POST";
    options.type = "POST";


    options.data = JSON.stringify(postData);
    options.dataType = "json";
    options.contentType = "application/json; charset=utf-8";

    return this.fetch(options);
  }
  return Backbone.Model.extend(model);
}
module.exports = userModel();
},{"../config/urls.js":39,"backbone":1,"underscore":32}],63:[function(require,module,exports){
var    _ = require('underscore');
module.exports = (function (){
    return {
        handleError: function(error){
           if(!error.responseText){
               error.responseText = JSON.stringify({
                   responseTag: 'REQUEST_TIMEOUT'
               });
           }
           return error;
       }
    }
})();
},{"underscore":32}],64:[function(require,module,exports){
var Backbone = require('backbone'),
    _ = require('underscore');

var urls = require('../config/urls.js');
var Utils = require('../utils/utils');
var TIMEOUT = require('../config/app.timeout');

function walletModel() {
    var defaults = {
        merchantCode: "",
        wallet_data: null,
        wallet: [],
        username: "",
        password: "",
        paymentId: "",
        use_wallet: false,
        mobileNo: ""
    };

    var model = {
        defaults: defaults,
        url: urls.wallet,
        retrieveWallet: retrieveWallet,
        initialize: initialize,
        filter: filterPaymentMethods,
    };

    function retrieveWallet() {
        var scope = this;
        var url = this.url + '?payableCode=' + scope.get('payableCode') + '&merchantCode=' + scope.get('merchantCode') + '&paymentId=' + scope.get('paymentId');

        if(this.get('channelProvider') == 'BBM' && this.get('bbmAuthCode')){
            url += "&channelProvider=" + this.get('channelProvider') + "&channelAuthCode=" + this.get('bbmAuthCode');
        }
        return this.fetch({
            url: url,
            method: "POST",
            type: 'POST',
            data: JSON.stringify({
                username: scope.get('username'),
                password: scope.get('password')
            }),
            timeout: TIMEOUT.WALLET,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
        });
    }


    function initialize() {

    }
    function filterPaymentMethods() {
        this.set('wallet', filter(this.get('wallet_data').paymentMethods));
    }

    function filter(wallet) {
        var _wallet = [],
            verveWallet = [],
            otherCards = [],
            ecashCards = [],
            _maskedPan,
            maskedLastindexOf,
            ecashIndex,
            ecashCard;

        for (var i = 0, len = wallet.length; i < len; i++) {
            _card = wallet[i];
            _maskedPan = _card.maskedPan;

            if (_card.cardTypeCode == 'VMP') {
                    _maskedPan = _card.accountNumber || _maskedPan;
             }
            maskedLastindexOf = _maskedPan.lastIndexOf("*") + 1;
            _card.lastCardNumber = _maskedPan.substr(maskedLastindexOf, _maskedPan.length);
            _card.cardTypeName = _card.cardTypeName.toLowerCase();
            _card.walletLabel = _card.issuer.name + " (**" + _card.lastCardNumber + ")";
            _card.maskedPanLabel = "(**" + _card.lastCardNumber + ")";


            if (_card.cardTypeName.match(/^(verve)/ig)) {
                
                if (_card.name == 'Verve eCash') {
                    _card.walletLabel = "Verve eCash";
                    _card.maskedPanLabel = "";
                    ecashCards.push(_card)
                } else {
                    verveWallet.push(_card)
                }
            } else {
                otherCards.push(_card);
                
            }

        }
        
       _wallet = ecashCards.concat(verveWallet, otherCards);;
        return _wallet;
    }

    return Backbone.Model.extend(model);
}

module.exports = walletModel();
},{"../config/app.timeout":38,"../config/urls.js":39,"../utils/utils":71,"backbone":1,"underscore":32}],65:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 1/29/2016.
 */
function getAmount( amt ){
    
    amt = amt+ "";
    return amt.replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,");
}

module.exports =  {
    getAmount: getAmount
}
},{}],66:[function(require,module,exports){
/*! jQuery UI - v1.11.4 - 2016-02-17
* http://jqueryui.com
* Includes: core.js, widget.js, mouse.js, slider.js
* Copyright jQuery Foundation and other contributors; Licensed MIT */

(function(e){"function"==typeof define&&define.amd?define(["jquery"],e):e(jQuery)})(function(e){function t(t,s){var n,a,o,r=t.nodeName.toLowerCase();return"area"===r?(n=t.parentNode,a=n.name,t.href&&a&&"map"===n.nodeName.toLowerCase()?(o=e("img[usemap='#"+a+"']")[0],!!o&&i(o)):!1):(/^(input|select|textarea|button|object)$/.test(r)?!t.disabled:"a"===r?t.href||s:s)&&i(t)}function i(t){return e.expr.filters.visible(t)&&!e(t).parents().addBack().filter(function(){return"hidden"===e.css(this,"visibility")}).length}e.ui=e.ui||{},e.extend(e.ui,{version:"1.11.4",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),e.fn.extend({scrollParent:function(t){var i=this.css("position"),s="absolute"===i,n=t?/(auto|scroll|hidden)/:/(auto|scroll)/,a=this.parents().filter(function(){var t=e(this);return s&&"static"===t.css("position")?!1:n.test(t.css("overflow")+t.css("overflow-y")+t.css("overflow-x"))}).eq(0);return"fixed"!==i&&a.length?a:e(this[0].ownerDocument||document)},uniqueId:function(){var e=0;return function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++e)})}}(),removeUniqueId:function(){return this.each(function(){/^ui-id-\d+$/.test(this.id)&&e(this).removeAttr("id")})}}),e.extend(e.expr[":"],{data:e.expr.createPseudo?e.expr.createPseudo(function(t){return function(i){return!!e.data(i,t)}}):function(t,i,s){return!!e.data(t,s[3])},focusable:function(i){return t(i,!isNaN(e.attr(i,"tabindex")))},tabbable:function(i){var s=e.attr(i,"tabindex"),n=isNaN(s);return(n||s>=0)&&t(i,!n)}}),e("<a>").outerWidth(1).jquery||e.each(["Width","Height"],function(t,i){function s(t,i,s,a){return e.each(n,function(){i-=parseFloat(e.css(t,"padding"+this))||0,s&&(i-=parseFloat(e.css(t,"border"+this+"Width"))||0),a&&(i-=parseFloat(e.css(t,"margin"+this))||0)}),i}var n="Width"===i?["Left","Right"]:["Top","Bottom"],a=i.toLowerCase(),o={innerWidth:e.fn.innerWidth,innerHeight:e.fn.innerHeight,outerWidth:e.fn.outerWidth,outerHeight:e.fn.outerHeight};e.fn["inner"+i]=function(t){return void 0===t?o["inner"+i].call(this):this.each(function(){e(this).css(a,s(this,t)+"px")})},e.fn["outer"+i]=function(t,n){return"number"!=typeof t?o["outer"+i].call(this,t):this.each(function(){e(this).css(a,s(this,t,!0,n)+"px")})}}),e.fn.addBack||(e.fn.addBack=function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}),e("<a>").data("a-b","a").removeData("a-b").data("a-b")&&(e.fn.removeData=function(t){return function(i){return arguments.length?t.call(this,e.camelCase(i)):t.call(this)}}(e.fn.removeData)),e.ui.ie=!!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()),e.fn.extend({focus:function(t){return function(i,s){return"number"==typeof i?this.each(function(){var t=this;setTimeout(function(){e(t).focus(),s&&s.call(t)},i)}):t.apply(this,arguments)}}(e.fn.focus),disableSelection:function(){var e="onselectstart"in document.createElement("div")?"selectstart":"mousedown";return function(){return this.bind(e+".ui-disableSelection",function(e){e.preventDefault()})}}(),enableSelection:function(){return this.unbind(".ui-disableSelection")},zIndex:function(t){if(void 0!==t)return this.css("zIndex",t);if(this.length)for(var i,s,n=e(this[0]);n.length&&n[0]!==document;){if(i=n.css("position"),("absolute"===i||"relative"===i||"fixed"===i)&&(s=parseInt(n.css("zIndex"),10),!isNaN(s)&&0!==s))return s;n=n.parent()}return 0}}),e.ui.plugin={add:function(t,i,s){var n,a=e.ui[t].prototype;for(n in s)a.plugins[n]=a.plugins[n]||[],a.plugins[n].push([i,s[n]])},call:function(e,t,i,s){var n,a=e.plugins[t];if(a&&(s||e.element[0].parentNode&&11!==e.element[0].parentNode.nodeType))for(n=0;a.length>n;n++)e.options[a[n][0]]&&a[n][1].apply(e.element,i)}};var s=0,n=Array.prototype.slice;e.cleanData=function(t){return function(i){var s,n,a;for(a=0;null!=(n=i[a]);a++)try{s=e._data(n,"events"),s&&s.remove&&e(n).triggerHandler("remove")}catch(o){}t(i)}}(e.cleanData),e.widget=function(t,i,s){var n,a,o,r,h={},l=t.split(".")[0];return t=t.split(".")[1],n=l+"-"+t,s||(s=i,i=e.Widget),e.expr[":"][n.toLowerCase()]=function(t){return!!e.data(t,n)},e[l]=e[l]||{},a=e[l][t],o=e[l][t]=function(e,t){return this._createWidget?(arguments.length&&this._createWidget(e,t),void 0):new o(e,t)},e.extend(o,a,{version:s.version,_proto:e.extend({},s),_childConstructors:[]}),r=new i,r.options=e.widget.extend({},r.options),e.each(s,function(t,s){return e.isFunction(s)?(h[t]=function(){var e=function(){return i.prototype[t].apply(this,arguments)},n=function(e){return i.prototype[t].apply(this,e)};return function(){var t,i=this._super,a=this._superApply;return this._super=e,this._superApply=n,t=s.apply(this,arguments),this._super=i,this._superApply=a,t}}(),void 0):(h[t]=s,void 0)}),o.prototype=e.widget.extend(r,{widgetEventPrefix:a?r.widgetEventPrefix||t:t},h,{constructor:o,namespace:l,widgetName:t,widgetFullName:n}),a?(e.each(a._childConstructors,function(t,i){var s=i.prototype;e.widget(s.namespace+"."+s.widgetName,o,i._proto)}),delete a._childConstructors):i._childConstructors.push(o),e.widget.bridge(t,o),o},e.widget.extend=function(t){for(var i,s,a=n.call(arguments,1),o=0,r=a.length;r>o;o++)for(i in a[o])s=a[o][i],a[o].hasOwnProperty(i)&&void 0!==s&&(t[i]=e.isPlainObject(s)?e.isPlainObject(t[i])?e.widget.extend({},t[i],s):e.widget.extend({},s):s);return t},e.widget.bridge=function(t,i){var s=i.prototype.widgetFullName||t;e.fn[t]=function(a){var o="string"==typeof a,r=n.call(arguments,1),h=this;return o?this.each(function(){var i,n=e.data(this,s);return"instance"===a?(h=n,!1):n?e.isFunction(n[a])&&"_"!==a.charAt(0)?(i=n[a].apply(n,r),i!==n&&void 0!==i?(h=i&&i.jquery?h.pushStack(i.get()):i,!1):void 0):e.error("no such method '"+a+"' for "+t+" widget instance"):e.error("cannot call methods on "+t+" prior to initialization; "+"attempted to call method '"+a+"'")}):(r.length&&(a=e.widget.extend.apply(null,[a].concat(r))),this.each(function(){var t=e.data(this,s);t?(t.option(a||{}),t._init&&t._init()):e.data(this,s,new i(a,this))})),h}},e.Widget=function(){},e.Widget._childConstructors=[],e.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{disabled:!1,create:null},_createWidget:function(t,i){i=e(i||this.defaultElement||this)[0],this.element=e(i),this.uuid=s++,this.eventNamespace="."+this.widgetName+this.uuid,this.bindings=e(),this.hoverable=e(),this.focusable=e(),i!==this&&(e.data(i,this.widgetFullName,this),this._on(!0,this.element,{remove:function(e){e.target===i&&this.destroy()}}),this.document=e(i.style?i.ownerDocument:i.document||i),this.window=e(this.document[0].defaultView||this.document[0].parentWindow)),this.options=e.widget.extend({},this.options,this._getCreateOptions(),t),this._create(),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:e.noop,_getCreateEventData:e.noop,_create:e.noop,_init:e.noop,destroy:function(){this._destroy(),this.element.unbind(this.eventNamespace).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName)),this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName+"-disabled "+"ui-state-disabled"),this.bindings.unbind(this.eventNamespace),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")},_destroy:e.noop,widget:function(){return this.element},option:function(t,i){var s,n,a,o=t;if(0===arguments.length)return e.widget.extend({},this.options);if("string"==typeof t)if(o={},s=t.split("."),t=s.shift(),s.length){for(n=o[t]=e.widget.extend({},this.options[t]),a=0;s.length-1>a;a++)n[s[a]]=n[s[a]]||{},n=n[s[a]];if(t=s.pop(),1===arguments.length)return void 0===n[t]?null:n[t];n[t]=i}else{if(1===arguments.length)return void 0===this.options[t]?null:this.options[t];o[t]=i}return this._setOptions(o),this},_setOptions:function(e){var t;for(t in e)this._setOption(t,e[t]);return this},_setOption:function(e,t){return this.options[e]=t,"disabled"===e&&(this.widget().toggleClass(this.widgetFullName+"-disabled",!!t),t&&(this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus"))),this},enable:function(){return this._setOptions({disabled:!1})},disable:function(){return this._setOptions({disabled:!0})},_on:function(t,i,s){var n,a=this;"boolean"!=typeof t&&(s=i,i=t,t=!1),s?(i=n=e(i),this.bindings=this.bindings.add(i)):(s=i,i=this.element,n=this.widget()),e.each(s,function(s,o){function r(){return t||a.options.disabled!==!0&&!e(this).hasClass("ui-state-disabled")?("string"==typeof o?a[o]:o).apply(a,arguments):void 0}"string"!=typeof o&&(r.guid=o.guid=o.guid||r.guid||e.guid++);var h=s.match(/^([\w:-]*)\s*(.*)$/),l=h[1]+a.eventNamespace,u=h[2];u?n.delegate(u,l,r):i.bind(l,r)})},_off:function(t,i){i=(i||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,t.unbind(i).undelegate(i),this.bindings=e(this.bindings.not(t).get()),this.focusable=e(this.focusable.not(t).get()),this.hoverable=e(this.hoverable.not(t).get())},_delay:function(e,t){function i(){return("string"==typeof e?s[e]:e).apply(s,arguments)}var s=this;return setTimeout(i,t||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){e(t.currentTarget).addClass("ui-state-hover")},mouseleave:function(t){e(t.currentTarget).removeClass("ui-state-hover")}})},_focusable:function(t){this.focusable=this.focusable.add(t),this._on(t,{focusin:function(t){e(t.currentTarget).addClass("ui-state-focus")},focusout:function(t){e(t.currentTarget).removeClass("ui-state-focus")}})},_trigger:function(t,i,s){var n,a,o=this.options[t];if(s=s||{},i=e.Event(i),i.type=(t===this.widgetEventPrefix?t:this.widgetEventPrefix+t).toLowerCase(),i.target=this.element[0],a=i.originalEvent)for(n in a)n in i||(i[n]=a[n]);return this.element.trigger(i,s),!(e.isFunction(o)&&o.apply(this.element[0],[i].concat(s))===!1||i.isDefaultPrevented())}},e.each({show:"fadeIn",hide:"fadeOut"},function(t,i){e.Widget.prototype["_"+t]=function(s,n,a){"string"==typeof n&&(n={effect:n});var o,r=n?n===!0||"number"==typeof n?i:n.effect||i:t;n=n||{},"number"==typeof n&&(n={duration:n}),o=!e.isEmptyObject(n),n.complete=a,n.delay&&s.delay(n.delay),o&&e.effects&&e.effects.effect[r]?s[t](n):r!==t&&s[r]?s[r](n.duration,n.easing,a):s.queue(function(i){e(this)[t](),a&&a.call(s[0]),i()})}}),e.widget;var a=!1;e(document).mouseup(function(){a=!1}),e.widget("ui.mouse",{version:"1.11.4",options:{cancel:"input,textarea,button,select,option",distance:1,delay:0},_mouseInit:function(){var t=this;this.element.bind("mousedown."+this.widgetName,function(e){return t._mouseDown(e)}).bind("click."+this.widgetName,function(i){return!0===e.data(i.target,t.widgetName+".preventClickEvent")?(e.removeData(i.target,t.widgetName+".preventClickEvent"),i.stopImmediatePropagation(),!1):void 0}),this.started=!1},_mouseDestroy:function(){this.element.unbind("."+this.widgetName),this._mouseMoveDelegate&&this.document.unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(t){if(!a){this._mouseMoved=!1,this._mouseStarted&&this._mouseUp(t),this._mouseDownEvent=t;var i=this,s=1===t.which,n="string"==typeof this.options.cancel&&t.target.nodeName?e(t.target).closest(this.options.cancel).length:!1;return s&&!n&&this._mouseCapture(t)?(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){i.mouseDelayMet=!0},this.options.delay)),this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=this._mouseStart(t)!==!1,!this._mouseStarted)?(t.preventDefault(),!0):(!0===e.data(t.target,this.widgetName+".preventClickEvent")&&e.removeData(t.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(e){return i._mouseMove(e)},this._mouseUpDelegate=function(e){return i._mouseUp(e)},this.document.bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate),t.preventDefault(),a=!0,!0)):!0}},_mouseMove:function(t){if(this._mouseMoved){if(e.ui.ie&&(!document.documentMode||9>document.documentMode)&&!t.button)return this._mouseUp(t);if(!t.which)return this._mouseUp(t)}return(t.which||t.button)&&(this._mouseMoved=!0),this._mouseStarted?(this._mouseDrag(t),t.preventDefault()):(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,t)!==!1,this._mouseStarted?this._mouseDrag(t):this._mouseUp(t)),!this._mouseStarted)},_mouseUp:function(t){return this.document.unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,t.target===this._mouseDownEvent.target&&e.data(t.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(t)),a=!1,!1},_mouseDistanceMet:function(e){return Math.max(Math.abs(this._mouseDownEvent.pageX-e.pageX),Math.abs(this._mouseDownEvent.pageY-e.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}}),e.widget("ui.slider",e.ui.mouse,{version:"1.11.4",widgetEventPrefix:"slide",options:{animate:!1,distance:0,max:100,min:0,orientation:"horizontal",range:!1,step:1,value:0,values:null,change:null,slide:null,start:null,stop:null},numPages:5,_create:function(){this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this._calculateNewMax(),this.element.addClass("ui-slider ui-slider-"+this.orientation+" ui-widget"+" ui-widget-content"+" ui-corner-all"),this._refresh(),this._setOption("disabled",this.options.disabled),this._animateOff=!1},_refresh:function(){this._createRange(),this._createHandles(),this._setupEvents(),this._refreshValue()},_createHandles:function(){var t,i,s=this.options,n=this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),a="<span class='ui-slider-handle ui-state-default ui-corner-all' tabindex='0'></span>",o=[];for(i=s.values&&s.values.length||1,n.length>i&&(n.slice(i).remove(),n=n.slice(0,i)),t=n.length;i>t;t++)o.push(a);this.handles=n.add(e(o.join("")).appendTo(this.element)),this.handle=this.handles.eq(0),this.handles.each(function(t){e(this).data("ui-slider-handle-index",t)})},_createRange:function(){var t=this.options,i="";t.range?(t.range===!0&&(t.values?t.values.length&&2!==t.values.length?t.values=[t.values[0],t.values[0]]:e.isArray(t.values)&&(t.values=t.values.slice(0)):t.values=[this._valueMin(),this._valueMin()]),this.range&&this.range.length?this.range.removeClass("ui-slider-range-min ui-slider-range-max").css({left:"",bottom:""}):(this.range=e("<div></div>").appendTo(this.element),i="ui-slider-range ui-widget-header ui-corner-all"),this.range.addClass(i+("min"===t.range||"max"===t.range?" ui-slider-range-"+t.range:""))):(this.range&&this.range.remove(),this.range=null)},_setupEvents:function(){this._off(this.handles),this._on(this.handles,this._handleEvents),this._hoverable(this.handles),this._focusable(this.handles)},_destroy:function(){this.handles.remove(),this.range&&this.range.remove(),this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-widget ui-widget-content ui-corner-all"),this._mouseDestroy()},_mouseCapture:function(t){var i,s,n,a,o,r,h,l,u=this,c=this.options;return c.disabled?!1:(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),i={x:t.pageX,y:t.pageY},s=this._normValueFromMouse(i),n=this._valueMax()-this._valueMin()+1,this.handles.each(function(t){var i=Math.abs(s-u.values(t));(n>i||n===i&&(t===u._lastChangedValue||u.values(t)===c.min))&&(n=i,a=e(this),o=t)}),r=this._start(t,o),r===!1?!1:(this._mouseSliding=!0,this._handleIndex=o,a.addClass("ui-state-active").focus(),h=a.offset(),l=!e(t.target).parents().addBack().is(".ui-slider-handle"),this._clickOffset=l?{left:0,top:0}:{left:t.pageX-h.left-a.width()/2,top:t.pageY-h.top-a.height()/2-(parseInt(a.css("borderTopWidth"),10)||0)-(parseInt(a.css("borderBottomWidth"),10)||0)+(parseInt(a.css("marginTop"),10)||0)},this.handles.hasClass("ui-state-hover")||this._slide(t,o,s),this._animateOff=!0,!0))},_mouseStart:function(){return!0},_mouseDrag:function(e){var t={x:e.pageX,y:e.pageY},i=this._normValueFromMouse(t);return this._slide(e,this._handleIndex,i),!1},_mouseStop:function(e){return this.handles.removeClass("ui-state-active"),this._mouseSliding=!1,this._stop(e,this._handleIndex),this._change(e,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1,!1},_detectOrientation:function(){this.orientation="vertical"===this.options.orientation?"vertical":"horizontal"},_normValueFromMouse:function(e){var t,i,s,n,a;return"horizontal"===this.orientation?(t=this.elementSize.width,i=e.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(t=this.elementSize.height,i=e.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)),s=i/t,s>1&&(s=1),0>s&&(s=0),"vertical"===this.orientation&&(s=1-s),n=this._valueMax()-this._valueMin(),a=this._valueMin()+s*n,this._trimAlignValue(a)},_start:function(e,t){var i={handle:this.handles[t],value:this.value()};return this.options.values&&this.options.values.length&&(i.value=this.values(t),i.values=this.values()),this._trigger("start",e,i)},_slide:function(e,t,i){var s,n,a;this.options.values&&this.options.values.length?(s=this.values(t?0:1),2===this.options.values.length&&this.options.range===!0&&(0===t&&i>s||1===t&&s>i)&&(i=s),i!==this.values(t)&&(n=this.values(),n[t]=i,a=this._trigger("slide",e,{handle:this.handles[t],value:i,values:n}),s=this.values(t?0:1),a!==!1&&this.values(t,i))):i!==this.value()&&(a=this._trigger("slide",e,{handle:this.handles[t],value:i}),a!==!1&&this.value(i))},_stop:function(e,t){var i={handle:this.handles[t],value:this.value()};this.options.values&&this.options.values.length&&(i.value=this.values(t),i.values=this.values()),this._trigger("stop",e,i)},_change:function(e,t){if(!this._keySliding&&!this._mouseSliding){var i={handle:this.handles[t],value:this.value()};this.options.values&&this.options.values.length&&(i.value=this.values(t),i.values=this.values()),this._lastChangedValue=t,this._trigger("change",e,i)}},value:function(e){return arguments.length?(this.options.value=this._trimAlignValue(e),this._refreshValue(),this._change(null,0),void 0):this._value()},values:function(t,i){var s,n,a;if(arguments.length>1)return this.options.values[t]=this._trimAlignValue(i),this._refreshValue(),this._change(null,t),void 0;if(!arguments.length)return this._values();if(!e.isArray(arguments[0]))return this.options.values&&this.options.values.length?this._values(t):this.value();for(s=this.options.values,n=arguments[0],a=0;s.length>a;a+=1)s[a]=this._trimAlignValue(n[a]),this._change(null,a);this._refreshValue()},_setOption:function(t,i){var s,n=0;switch("range"===t&&this.options.range===!0&&("min"===i?(this.options.value=this._values(0),this.options.values=null):"max"===i&&(this.options.value=this._values(this.options.values.length-1),this.options.values=null)),e.isArray(this.options.values)&&(n=this.options.values.length),"disabled"===t&&this.element.toggleClass("ui-state-disabled",!!i),this._super(t,i),t){case"orientation":this._detectOrientation(),this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-"+this.orientation),this._refreshValue(),this.handles.css("horizontal"===i?"bottom":"left","");break;case"value":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case"values":for(this._animateOff=!0,this._refreshValue(),s=0;n>s;s+=1)this._change(null,s);this._animateOff=!1;break;case"step":case"min":case"max":this._animateOff=!0,this._calculateNewMax(),this._refreshValue(),this._animateOff=!1;break;case"range":this._animateOff=!0,this._refresh(),this._animateOff=!1}},_value:function(){var e=this.options.value;return e=this._trimAlignValue(e)},_values:function(e){var t,i,s;if(arguments.length)return t=this.options.values[e],t=this._trimAlignValue(t);if(this.options.values&&this.options.values.length){for(i=this.options.values.slice(),s=0;i.length>s;s+=1)i[s]=this._trimAlignValue(i[s]);return i}return[]},_trimAlignValue:function(e){if(this._valueMin()>=e)return this._valueMin();if(e>=this._valueMax())return this._valueMax();var t=this.options.step>0?this.options.step:1,i=(e-this._valueMin())%t,s=e-i;return 2*Math.abs(i)>=t&&(s+=i>0?t:-t),parseFloat(s.toFixed(5))},_calculateNewMax:function(){var e=this.options.max,t=this._valueMin(),i=this.options.step,s=Math.floor(+(e-t).toFixed(this._precision())/i)*i;e=s+t,this.max=parseFloat(e.toFixed(this._precision()))},_precision:function(){var e=this._precisionOf(this.options.step);return null!==this.options.min&&(e=Math.max(e,this._precisionOf(this.options.min))),e},_precisionOf:function(e){var t=""+e,i=t.indexOf(".");return-1===i?0:t.length-i-1},_valueMin:function(){return this.options.min},_valueMax:function(){return this.max},_refreshValue:function(){var t,i,s,n,a,o=this.options.range,r=this.options,h=this,l=this._animateOff?!1:r.animate,u={};this.options.values&&this.options.values.length?this.handles.each(function(s){i=100*((h.values(s)-h._valueMin())/(h._valueMax()-h._valueMin())),u["horizontal"===h.orientation?"left":"bottom"]=i+"%",e(this).stop(1,1)[l?"animate":"css"](u,r.animate),h.options.range===!0&&("horizontal"===h.orientation?(0===s&&h.range.stop(1,1)[l?"animate":"css"]({left:i+"%"},r.animate),1===s&&h.range[l?"animate":"css"]({width:i-t+"%"},{queue:!1,duration:r.animate})):(0===s&&h.range.stop(1,1)[l?"animate":"css"]({bottom:i+"%"},r.animate),1===s&&h.range[l?"animate":"css"]({height:i-t+"%"},{queue:!1,duration:r.animate}))),t=i}):(s=this.value(),n=this._valueMin(),a=this._valueMax(),i=a!==n?100*((s-n)/(a-n)):0,u["horizontal"===this.orientation?"left":"bottom"]=i+"%",this.handle.stop(1,1)[l?"animate":"css"](u,r.animate),"min"===o&&"horizontal"===this.orientation&&this.range.stop(1,1)[l?"animate":"css"]({width:i+"%"},r.animate),"max"===o&&"horizontal"===this.orientation&&this.range[l?"animate":"css"]({width:100-i+"%"},{queue:!1,duration:r.animate}),"min"===o&&"vertical"===this.orientation&&this.range.stop(1,1)[l?"animate":"css"]({height:i+"%"},r.animate),"max"===o&&"vertical"===this.orientation&&this.range[l?"animate":"css"]({height:100-i+"%"},{queue:!1,duration:r.animate}))},_handleEvents:{keydown:function(t){var i,s,n,a,o=e(t.target).data("ui-slider-handle-index");switch(t.keyCode){case e.ui.keyCode.HOME:case e.ui.keyCode.END:case e.ui.keyCode.PAGE_UP:case e.ui.keyCode.PAGE_DOWN:case e.ui.keyCode.UP:case e.ui.keyCode.RIGHT:case e.ui.keyCode.DOWN:case e.ui.keyCode.LEFT:if(t.preventDefault(),!this._keySliding&&(this._keySliding=!0,e(t.target).addClass("ui-state-active"),i=this._start(t,o),i===!1))return}switch(a=this.options.step,s=n=this.options.values&&this.options.values.length?this.values(o):this.value(),t.keyCode){case e.ui.keyCode.HOME:n=this._valueMin();break;case e.ui.keyCode.END:n=this._valueMax();break;case e.ui.keyCode.PAGE_UP:n=this._trimAlignValue(s+(this._valueMax()-this._valueMin())/this.numPages);break;case e.ui.keyCode.PAGE_DOWN:n=this._trimAlignValue(s-(this._valueMax()-this._valueMin())/this.numPages);break;case e.ui.keyCode.UP:case e.ui.keyCode.RIGHT:if(s===this._valueMax())return;n=this._trimAlignValue(s+a);break;case e.ui.keyCode.DOWN:case e.ui.keyCode.LEFT:if(s===this._valueMin())return;n=this._trimAlignValue(s-a)}this._slide(t,o,n)},keyup:function(t){var i=e(t.target).data("ui-slider-handle-index");this._keySliding&&(this._keySliding=!1,this._stop(t,i),this._change(t,i),e(t.target).removeClass("ui-state-active"))}}})});
},{}],67:[function(require,module,exports){
/*!
 * jQuery postMessage - v0.5 - 9/11/2009
 * http://benalman.com/projects/jquery-postmessage-plugin/
 * 
 * Copyright (c) 2009 "Cowboy" Ben Alman
 * Dual licensed under the MIT and GPL licenses.
 * http://benalman.com/about/license/
 */

// Script: jQuery postMessage: Cross-domain scripting goodness
//
// *Version: 0.5, Last updated: 9/11/2009*
// 
// Project Home - http://benalman.com/projects/jquery-postmessage-plugin/
// GitHub       - http://github.com/cowboy/jquery-postmessage/
// Source       - http://github.com/cowboy/jquery-postmessage/raw/master/jquery.ba-postmessage.js
// (Minified)   - http://github.com/cowboy/jquery-postmessage/raw/master/jquery.ba-postmessage.min.js (0.9kb)
// 
// About: License
// 
// Copyright (c) 2009 "Cowboy" Ben Alman,
// Dual licensed under the MIT and GPL licenses.
// http://benalman.com/about/license/
// 
// About: Examples
// 
// This working example, complete with fully commented code, illustrates one
// way in which this plugin can be used.
// 
// Iframe resizing - http://benalman.com/code/projects/jquery-postmessage/examples/iframe/
// 
// About: Support and Testing
// 
// Information about what version or versions of jQuery this plugin has been
// tested with and what browsers it has been tested in.
// 
// jQuery Versions - 1.3.2
// Browsers Tested - Internet Explorer 6-8, Firefox 3, Safari 3-4, Chrome, Opera 9.
// 
// About: Release History
// 
// 0.5 - (9/11/2009) Improved cache-busting
// 0.4 - (8/25/2009) Initial release

module.exports = (function($){
  '$:nomunge'; // Used by YUI compressor.
  
  // A few vars used in non-awesome browsers.
  var interval_id,
    last_hash,
    cache_bust = 1,
    
    // A var used in awesome browsers.
    rm_callback,
    
    // A few convenient shortcuts.
    window = this,
    FALSE = !1,
    
    // Reused internal strings.
    postMessage = 'postMessage',
    addEventListener = 'addEventListener',
    
    p_receiveMessage,
    
    // I couldn't get window.postMessage to actually work in Opera 9.64!
    // has_postMessage = window[postMessage] && !$.browser.opera;
    has_postMessage = window[postMessage];
  
  // Method: jQuery.postMessage
  // 
  // This method will call window.postMessage if available, setting the
  // targetOrigin parameter to the base of the target_url parameter for maximum
  // security in browsers that support it. If window.postMessage is not available,
  // the target window's location.hash will be used to pass the message. If an
  // object is passed as the message param, it will be serialized into a string
  // using the jQuery.param method.
  // 
  // Usage:
  // 
  // > jQuery.postMessage( message, target_url [, target ] );
  // 
  // Arguments:
  // 
  //  message - (String) A message to be passed to the other frame.
  //  message - (Object) An object to be serialized into a params string, using
  //    the jQuery.param method.
  //  target_url - (String) The URL of the other frame this window is
  //    attempting to communicate with. This must be the exact URL (including
  //    any query string) of the other window for this script to work in
  //    browsers that don't support window.postMessage.
  //  target - (Object) A reference to the other frame this window is
  //    attempting to communicate with. If omitted, defaults to `parent`.
  // 
  // Returns:
  // 
  //  Nothing.
  
  $[postMessage] = function( message, target_url, target ) {
    if ( !target_url ) { return; }
    
    // Serialize the message if not a string. Note that this is the only real
    // jQuery dependency for this script. If removed, this script could be
    // written as very basic JavaScript.
    message = typeof message === 'string' ? message : $.param( message );
    
    // Default to parent if unspecified.
    target = target || parent;

    if ( has_postMessage ) {
      // The browser supports window.postMessage, so call it with a targetOrigin
      // set appropriately, based on the target_url parameter.
      // 
      target[postMessage]( message, target_url.replace( /([^:]+:\/\/[^\/]+).*/, '$1' ) );
      
    } else if ( target_url ) {
      // The browser does not support window.postMessage, so set the location
      // of the target to target_url#message. A bit ugly, but it works! A cache
      // bust parameter is added to ensure that repeat messages trigger the
      // callback.
      target.location = target_url.replace( /#.*$/, '' ) + '#' + (+new Date) + (cache_bust++) + '&' + message;
    }
  };
  
  // Method: jQuery.receiveMessage
  // 
  // Register a single callback for either a window.postMessage call, if
  // supported, or if unsupported, for any change in the current window
  // location.hash. If window.postMessage is supported and source_origin is
  // specified, the source window will be checked against this for maximum
  // security. If window.postMessage is unsupported, a polling loop will be
  // started to watch for changes to the location.hash.
  // 
  // Note that for simplicity's sake, only a single callback can be registered
  // at one time. Passing no params will unbind this event (or stop the polling
  // loop), and calling this method a second time with another callback will
  // unbind the event (or stop the polling loop) first, before binding the new
  // callback.
  // 
  // Also note that if window.postMessage is available, the optional
  // source_origin param will be used to test the event.origin property. From
  // the MDC window.postMessage docs: This string is the concatenation of the
  // protocol and "://", the host name if one exists, and ":" followed by a port
  // number if a port is present and differs from the default port for the given
  // protocol. Examples of typical origins are https://example.org (implying
  // port 443), http://example.net (implying port 80), and http://example.com:8080.
  // 
  // Usage:
  // 
  // > jQuery.receiveMessage( callback [, source_origin ] [, delay ] );
  // 
  // Arguments:
  // 
  //  callback - (Function) This callback will execute whenever a <jQuery.postMessage>
  //    message is received, provided the source_origin matches. If callback is
  //    omitted, any existing receiveMessage event bind or polling loop will be
  //    canceled.
  //  source_origin - (String) If window.postMessage is available and this value
  //    is not equal to the event.origin property, the callback will not be
  //    called.
  //  source_origin - (Function) If window.postMessage is available and this
  //    function returns false when passed the event.origin property, the
  //    callback will not be called.
  //  delay - (Number) An optional zero-or-greater delay in milliseconds at
  //    which the polling loop will execute (for browser that don't support
  //    window.postMessage). If omitted, defaults to 100.
  // 
  // Returns:
  // 
  //  Nothing!
  
  $.receiveMessage = p_receiveMessage = function( callback, source_origin, delay ) {
    if ( has_postMessage ) {
      // Since the browser supports window.postMessage, the callback will be
      // bound to the actual event associated with window.postMessage.
      
      if ( callback ) {
        // Unbind an existing callback if it exists.
        rm_callback && p_receiveMessage();
        
        // Bind the callback. A reference to the callback is stored for ease of
        // unbinding.
        rm_callback = function(e) {
          if ( ( typeof source_origin === 'string' && e.origin !== source_origin )
            || ( $.isFunction( source_origin ) && source_origin( e.origin ) === FALSE ) ) {
            return FALSE;
          }
          callback( e );
        };
      }
      
      if ( window[addEventListener] ) {
        window[ callback ? addEventListener : 'removeEventListener' ]( 'message', rm_callback, FALSE );
      } else {
        window[ callback ? 'attachEvent' : 'detachEvent' ]( 'onmessage', rm_callback );
      }
      
    } else {
      // Since the browser sucks, a polling loop will be started, and the
      // callback will be called whenever the location.hash changes.
      
      interval_id && clearInterval( interval_id );
      interval_id = null;
      
      if ( callback ) {
        delay = typeof source_origin === 'number'
          ? source_origin
          : typeof delay === 'number'
            ? delay
            : 100;
        
        interval_id = setInterval(function(){
          var hash = document.location.hash,
            re = /^#?\d+&/;
          if ( hash !== last_hash && re.test( hash ) ) {
            last_hash = hash;
            callback({ data: hash.replace( re, '' ) });
          }
        }, delay );
      }
    }
  };
  
})(jQuery);
},{}],68:[function(require,module,exports){
/*!
 * jQuery UI Touch Punch 0.2.3
 *
 * Copyright 2011–2014, Dave Furfero
 * Dual licensed under the MIT or GPL Version 2 licenses.
 *
 * Depends:
 *  jquery.ui.widget.js
 *  jquery.ui.mouse.js
 */
(function ($) {

  // Detect touch support
  $.support.touch = 'ontouchend' in document;

  // Ignore browsers without touch support
  if (!$.support.touch) {
    return;
  }

  var mouseProto = $.ui.mouse.prototype,
      _mouseInit = mouseProto._mouseInit,
      _mouseDestroy = mouseProto._mouseDestroy,
      touchHandled;

  /**
   * Simulate a mouse event based on a corresponding touch event
   * @param {Object} event A touch event
   * @param {String} simulatedType The corresponding mouse event
   */
  function simulateMouseEvent (event, simulatedType) {

    // Ignore multi-touch events
    if (event.originalEvent.touches.length > 1) {
      return;
    }

    event.preventDefault();

    var touch = event.originalEvent.changedTouches[0],
        simulatedEvent = document.createEvent('MouseEvents');
    
    // Initialize the simulated mouse event using the touch event's coordinates
    simulatedEvent.initMouseEvent(
      simulatedType,    // type
      true,             // bubbles                    
      true,             // cancelable                 
      window,           // view                       
      1,                // detail                     
      touch.screenX,    // screenX                    
      touch.screenY,    // screenY                    
      touch.clientX,    // clientX                    
      touch.clientY,    // clientY                    
      false,            // ctrlKey                    
      false,            // altKey                     
      false,            // shiftKey                   
      false,            // metaKey                    
      0,                // button                     
      null              // relatedTarget              
    );

    // Dispatch the simulated event to the target element
    event.target.dispatchEvent(simulatedEvent);
  }

  /**
   * Handle the jQuery UI widget's touchstart events
   * @param {Object} event The widget element's touchstart event
   */
  mouseProto._touchStart = function (event) {

    var self = this;

    // Ignore the event if another widget is already being handled
    if (touchHandled || !self._mouseCapture(event.originalEvent.changedTouches[0])) {
      return;
    }

    // Set the flag to prevent other widgets from inheriting the touch event
    touchHandled = true;

    // Track movement to determine if interaction was a click
    self._touchMoved = false;

    // Simulate the mouseover event
    simulateMouseEvent(event, 'mouseover');

    // Simulate the mousemove event
    simulateMouseEvent(event, 'mousemove');

    // Simulate the mousedown event
    simulateMouseEvent(event, 'mousedown');
  };

  /**
   * Handle the jQuery UI widget's touchmove events
   * @param {Object} event The document's touchmove event
   */
  mouseProto._touchMove = function (event) {

    // Ignore event if not handled
    if (!touchHandled) {
      return;
    }

    // Interaction was not a click
    this._touchMoved = true;

    // Simulate the mousemove event
    simulateMouseEvent(event, 'mousemove');
  };

  /**
   * Handle the jQuery UI widget's touchend events
   * @param {Object} event The document's touchend event
   */
  mouseProto._touchEnd = function (event) {

    // Ignore event if not handled
    if (!touchHandled) {
      return;
    }

    // Simulate the mouseup event
    simulateMouseEvent(event, 'mouseup');

    // Simulate the mouseout event
    simulateMouseEvent(event, 'mouseout');

    // If the touch interaction did not move, it should trigger a click
    if (!this._touchMoved) {

      // Simulate the click event
      simulateMouseEvent(event, 'click');
    }

    // Unset the flag to allow other widgets to inherit the touch event
    touchHandled = false;
  };

  /**
   * A duck punch of the $.ui.mouse _mouseInit method to support touch events.
   * This method extends the widget with bound touch event handlers that
   * translate touch events to mouse events and pass them to the widget's
   * original mouse event handling methods.
   */
  mouseProto._mouseInit = function () {
    
    var self = this;

    // Delegate the touch handlers to the widget's element
    self.element.bind({
      touchstart: $.proxy(self, '_touchStart'),
      touchmove: $.proxy(self, '_touchMove'),
      touchend: $.proxy(self, '_touchEnd')
    });

    // Call the original $.ui.mouse init method
    _mouseInit.call(self);
  };

  /**
   * Remove the touch event handlers
   */
  mouseProto._mouseDestroy = function () {
    
    var self = this;

    // Delegate the touch handlers to the widget's element
    self.element.unbind({
      touchstart: $.proxy(self, '_touchStart'),
      touchmove: $.proxy(self, '_touchMove'),
      touchend: $.proxy(self, '_touchEnd')
    });

    // Call the original $.ui.mouse destroy method
    _mouseDestroy.call(self);
  };

})(jQuery);
},{}],69:[function(require,module,exports){
module.exports = (function(){
       return  function () {
            function Mash() {
                var n = 0xefc8249d;

                var mash = function(data) {
                    data = data.toString();
                    for (var i = 0; i < data.length; i++) {
                        n += data.charCodeAt(i);
                        var h = 0.02519603282416938 * n;
                        n = h >>> 0;
                        h -= n;
                        h *= n;
                        n = h >>> 0;
                        h -= n;
                        n += h * 0x100000000; // 2^32
                    }
                    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32
                };

                mash.version = 'Mash 0.9';
                return mash;
            }

            return (function(args) {
                // Johannes Baagøe <baagoe@baagoe.com>, 2010
                var s0 = 0;
                var s1 = 0;
                var s2 = 0;
                var c = 1;

                if (args.length == 0) {
                    args = [+new Date];
                }
                var mash = Mash();
                s0 = mash(' ');
                s1 = mash(' ');
                s2 = mash(' ');

                for (var i = 0; i < args.length; i++) {
                    s0 -= mash(args[i]);
                    if (s0 < 0) {
                        s0 += 1;
                    }
                    s1 -= mash(args[i]);
                    if (s1 < 0) {
                        s1 += 1;
                    }
                    s2 -= mash(args[i]);
                    if (s2 < 0) {
                        s2 += 1;
                    }
                }
                mash = null;

                var random = function() {
                    var t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32
                    s0 = s1;
                    s1 = s2;
                    return s2 = t - (c = t | 0);
                };
                random.uint32 = function() {
                    return random() * 0x100000000; // 2^32
                };
                random.fract53 = function() {
                    return random() +
                        (random() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53
                };
                random.version = 'Alea 0.9';
                random.args = args;
                return random();

            } (Array.prototype.slice.call(arguments)));
       }
})();


},{}],70:[function(require,module,exports){
/**
 * Created by Felix.Ike on 3/10/2015.
 */
var SecureManager = {};
SecureManager.getNewPinData = function(pin, pinKey) {
    var clearPINBlock = "1" + String(pin).length + String(pin);
    var randomNumber = Math.floor(Randomize()  * 10);
    var pinPadLen = 14 - String(pin).length;
    for (var i = 0; i < pinPadLen; i++) {
        clearPINBlock = clearPINBlock + String(randomNumber);
    }
    var iv = 0x00;
    iv = forge.util.hexToBytes(iv);
    var pinKeyBuffer = forge.util.createBuffer(pinKey);
    pinKeyBuffer.putBytes(pinKey);
    pinKey = pinKeyBuffer.getBytes(24);

    var cipher = forge.cipher.createCipher('3DES-CBC', pinKey);
    var clearPINBlockBytes = forge.util.hexToBytes(clearPINBlock);

    cipher.start({
        iv : iv
    });
    cipher.update(forge.util.createBuffer(clearPINBlockBytes));
    cipher.finish();
    var encrypted = cipher.output;
    var encryptedPinBlock = String(encrypted.toHex());
    return encryptedPinBlock.substring(0, 16);

};

SecureManager.getPinBlock = function(pin, cvv2, expiryDate, pinKey, randNum) {
    if (!pin) {
        pin = "0000";
    }
    if (!cvv2) {
        cvv2 = "000";
    }
    if (!expiryDate) {
        expiryDate = "0000";
    }
    
    var pinBlockString = pin + cvv2 + expiryDate;
    var pinBlockStringLen = pinBlockString.length;
    var pinBlockStringLenLen = String(pinBlockStringLen).length;
    var clearPinBlock = String(pinBlockStringLenLen) + String(pinBlockStringLen) + pinBlockString;
    // console.log("ClearPinBloack: "+clearPinBlock);

    var randomNumber = randNum;

    var pinpadlen = 16 - clearPinBlock.length;
    for (var i = 0; i < pinpadlen; i++) {
        clearPinBlock = clearPinBlock + randomNumber;
    }

    var iv = 0x00;
    iv = forge.util.hexToBytes(iv);
    var pinKeyBuffer = forge.util.createBuffer(pinKey);
    pinKeyBuffer.putBytes(pinKey);
    pinKey = pinKeyBuffer.getBytes(24);

    var cipher = forge.cipher.createCipher('3DES-CBC', pinKey);
    var clearPINBlockBytes = forge.util.hexToBytes(clearPinBlock);

    cipher.start({
        iv : iv
    });
    cipher.update(forge.util.createBuffer(clearPINBlockBytes));
    cipher.finish();
    var encrypted = cipher.output;
    var encryptedPinBlock = String(encrypted.toHex());
    return encryptedPinBlock.substring(0, 16);

};
SecureManager.generateKey = function() {
    var bytes = forge.random.getBytesSync(16);
    // console.log("pinKeyHex: "+forge.util.bytesToHex(bytes));
    return bytes;
};

SecureManager.isValueSet = function(value) {

    if (value !== null && value !== "" && value !== "undefined") {
        return true;
    } else {
        return false;
    }
};

SecureManager.padRight = function(value, maxLen) {
    var maxLength = parseInt(maxLen);
    var stringValue = String(value);
    if (!SecureManager.isValueSet(stringValue) || stringValue.length >= maxLength) {
        return stringValue;
    }
    var length = stringValue.length;
    var deficitLength = maxLength - length;
    for (var i = 0; i < deficitLength; i++) {
        stringValue += "0";
    }
    return stringValue;
};

SecureManager.padLeft = function(value, maxLen) {
    var maxLength = parseInt(maxLen);
    var stringValue = String(value);
    if (!SecureManager.isValueSet(stringValue) || stringValue.length >= maxLength) {
        return stringValue;
    }
    var length = stringValue.length;
    var deficitLength = maxLength - length;
    for (var i = 0; i < deficitLength; i++) {
        stringValue = "0" + stringValue;
    }
    return stringValue;
};

SecureManager.getMacData = function(app, options) {
    var macData = "";
    if (!SecureManager.isValueSet(app)) {
        return macData;
    }
    if (SecureManager.isValueSet(options.tid)) {
        macData += String(options.tid);
    }

    if (SecureManager.isValueSet(options.cardName)) {
        macData += options.cardName;
    }
    if (SecureManager.isValueSet(options.ttid)) {
        macData += String(options.ttid);
    }

    if (SecureManager.isValueSet(options.amount)) {
        macData += String(options.amount);
    }

    if (!SecureManager.isValueSet(options.additionalInfo)) {
        return macData;
    }

    if (SecureManager.isValueSet(options.additionalInfo.transferInfo)) {
        if (SecureManager.isValueSet(options.additionalInfo.transferInfo.toAccountNumber)) {
            macData += options.additionalInfo.transferInfo.toAccountNumber;
        }

        if (SecureManager.isValueSet(options.additionalInfo.transferInfo.toBankCode)) {
            macData += options.additionalInfo.transferInfo.toBankCode;
        }

    }

    if (SecureManager.isValueSet(options.additionalInfo.billInfo)) {
        if (SecureManager.isValueSet(options.additionalInfo.billInfo.phoneNumber)) {
            macData += options.additionalInfo.billInfo.phoneNumber;
        }
        if (SecureManager.isValueSet(options.additionalInfo.billInfo.customerNumber)) {
            macData += options.additionalInfo.billInfo.customerNumber;
        }

        if (SecureManager.isValueSet(options.additionalInfo.billInfo.billCode)) {
            macData += options.additionalInfo.billInfo.billCode;
        }

    }

    if (SecureManager.isValueSet(options.additionalInfo.rechargeInfo)) {
        if (SecureManager.isValueSet(options.additionalInfo.rechargeInfo.tPhoneNumber)) {
            macData += options.additionalInfo.rechargeInfo.tPhoneNumber;
        }
        if (SecureManager.isValueSet(options.additionalInfo.rechargeInfo.productionCode)) {
            macData += options.additionalInfo.rechargeInfo.productionCode;
        }

    }

    if (SecureManager.isValueSet(options.additionalInfo.atmTransferInfo)) {
        if (SecureManager.isValueSet(options.additionalInfo.atmTransferInfo.customerId)) {
            var custId = String(options.additionalInfo.atmTransferInfo.customerId);
            macData += custId;
        }
        if (SecureManager.isValueSet(options.additionalInfo.atmTransferInfo.institutionCode)) {
            macData += options.additionalInfo.atmTransferInfo.institutionCode;
        }

    }
    return macData;
};

SecureManager.strToBytes = function(str) {
    var bytes = [];
    var charCode;

    for (var i = 0; i < str.length; ++i) {
        charCode = str.charCodeAt(i);
        bytes.push((charCode & 0xFF00) >> 8);
        bytes.push(charCode & 0xFF);
    }
    return bytes;

};
SecureManager.getMac = function(macData, macKey) {
    //do hmac here
    var hmac = forge.hmac.create();
    hmac.start('sha256', macKey);
    hmac.update(macData);
    return hmac.digest().toHex();
};
SecureManager.getSecure = function(options, app, isActivate) {
    //TODO Temporary Activate eCash
    var version = "12";
    version = (isActivate) ? "10" : version;
    // console.log(version);

    var headerBytes = forge.util.hexToBytes("4D");
    var formatVersionBytes = forge.util.hexToBytes(version);
    var macVersionBytes = forge.util.hexToBytes(version);
    var pinDesKey = options.pinKey;
    var macDesKey = options.macKey;
    var customerIdBytes;
    var otherBytes;
    // console.log(options.pinKey);

    if (SecureManager.isValueSet(options.pan)) {
        var customerId = String(options.pan);
        var customerIdLen = String(customerId.length);
        var customerIdLenLen = customerIdLen.length;
        var customerIdBlock = String(customerIdLenLen) + customerIdLen + customerId;
        var customerIdBlockLen = customerIdBlock.length;
        var pandiff = 40 - parseInt(customerIdBlockLen);
        for (var i = 0; i < pandiff; i++) {
            customerIdBlock += "F";
        }
        customerIdBytes = forge.util.hexToBytes(SecureManager.padRight(customerIdBlock, 40));
        // console.log(forge.util.bytesToHex(customerIdBytes));

    }
    // console.log(pinDesKey);
    // console.log(forge.util.bytesToHex(headerBytes));
    // console.log(forge.util.bytesToHex(pinDesKey));
    // console.log(forge.util.bytesToHex(formatVersionBytes));
    // console.log(forge.util.bytesToHex(macVersionBytes));
    var otherString = "00000000";
    otherBytes = forge.util.hexToBytes(otherString);

    var macData = SecureManager.getMacData(app, options);
    // console.log("MacData : " + macData);
    var mac = SecureManager.getMac(macData, macDesKey);
    var macBytes = forge.util.hexToBytes(mac);
    // console.log("machex : "+mac);
    var footerBytes = forge.util.hexToBytes("5A");

    var clearSecureBytes = forge.util.createBuffer();

    clearSecureBytes.putBytes(headerBytes);
    // console.log("Headerbytes-lenght : "+headerBytes.length);
    clearSecureBytes.putBytes(formatVersionBytes);
    // console.log("formatVersionBytes-lenght : "+formatVersionBytes.length);
    clearSecureBytes.putBytes(macVersionBytes);
    // console.log("macVersionBytes-lenght : "+macVersionBytes.length);
    clearSecureBytes.putBytes(pinDesKey);
    // console.log("pinDesKey-lenght : "+pinDesKey.length);
    clearSecureBytes.putBytes(macDesKey);
    // console.log("macDesKey-lenght : "+macDesKey.length);
    clearSecureBytes.putBytes(customerIdBytes);
    macBytes = forge.util.hexToBytes("00000000");
    // console.log("customerIdBytes-lenght : "+customerIdBytes.length);
    clearSecureBytes.putBytes(macBytes);
    // console.log("macBytes-lenght : "+macBytes.length);

    clearSecureBytes.putBytes(otherBytes);
    // console.log("otherBytes-lenght : "+otherBytes.length);
    clearSecureBytes.putBytes(footerBytes);
    // console.log("footerBytes-lenght : "+footerBytes.length);
    var rsa = forge.pki.rsa;
    var modulos = new forge.jsbn.BigInteger(options.publicKeyModulus, 16);
    var exp = new forge.jsbn.BigInteger(options.publicKeyExponent, 16);
    var publicKey = rsa.setPublicKey(modulos, exp);

    var vvvv = clearSecureBytes.getBytes();

    // console.log("Clear secure: "+forge.util.bytesToHex(vvvv));

    var secureBytes = publicKey.encrypt(vvvv, null);
    var secureHex = forge.util.bytesToHex(secureBytes);
    // console.log("Secure-hex: "+secureHex);

    return secureHex;
};
module.exports =  SecureManager;
},{}],71:[function(require,module,exports){
var SecureManager = require('../utils/secure'),
    Randomize = require('../utils/randomize'),
    _ = require('underscore');
// var Fingerprint2 = require("fingerprintjs2");
//require("./fingerprint.js");
module.exports = (function() {
    return {
        inputVal: function(elem) {
            return _.escape(elem.val());
        },
        /*
        deviceFingerPrint: function() {

            var deviceFP;
            // if (!Fingerprint2) {
            //     return;
            // }
            if (!ISWDeviceFingerprint) {
                return;
            }

            return function(path, callback) {
                if (deviceFP) {
                    return callback(deviceFP);
                }
                var iswDF = new ISWDeviceFingerprint(path);
                iswDF.setReturnCallback(deviceCallback);
                iswDF.generateDeviceFingerPrint();

                function deviceCallback(response) {
                    var fingerprintId = response.fingerprint;
                    callback(fingerprintId);
                    return deviceFP = fingerprintId;

                }
            }

            // return function() {
            //     if (deviceFP) {
            //         return callback(deviceFP);
            //     }
            //     new Fingerprint2().get(function(result, components) {\
            //         deviceFP = result;
            //         callback(result);
            //     });

            // };

        },
        */
        shuffleArray: function(array) {
            for (var i = array.length - 1; i > 0; i--) {
                var j = Math.floor(Math.random() * (i + 1));
                var temp = array[i];
                array[i] = array[j];
                array[j] = temp;
            }
            return array;
        },
        is_float: function(mixed_var) {
            return +mixed_var === mixed_var && (!isFinite(mixed_var) || !!(mixed_var % 1));
        },
        getPinBlock: function(pin, cvv, expiry) {
            var ttId = Math.floor(Randomize() * 900) + 100;
            pinKey = SecureManager.generateKey();
            return pinBlock = SecureManager.getPinBlock(pin, cvv, expiry, pinKey, ttId);
        },
        randomKeys: function() {
            var keyPadSite, numbers

            keyPadSite = [];
            numbers = Utils.shuffleArray([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);
            keyPadSite[0] = [numbers[0], numbers[1], numbers[2], numbers[3], numbers[4], numbers[5]];
            keyPadSite[1] = [numbers[6], numbers[7], numbers[8], numbers[9], 'Del', 'Clr'];
            return keyPadSite;
        },
        generateSecureData: function(options) {
            var pin, cvv, pinBlock, expiry;
            pin = options.pin || 'FFFF';
            cvv = options.cvv || 'FFF';
            expiry = options.expiry || '0000';
            options.pan = !options.pan || options.pan.replace(/ /g, '');

            var ttId = Math.floor(Randomize() * 900) + 100,
                pinKey = SecureManager.generateKey(),
                secureOptions = {
                    publicKeyModulus: options.publicKeyModulus,
                    publicKeyExponent: options.publicKeyExponent,
                    pinKey: pinKey,
                    macKey: pinKey,
                    tid: options.mobile,
                    ttid: ttId.toString(),
                    amount: options.amount,
                    pan: options.pan,
                    accountNumber: "",
                    expiryDate: expiry,
                    cardName: "default",
                    additionalInfo: {
                        transferInfo: {
                            toAccountNumber: "",
                            toBankCode: ""
                        },
                        rechargeInfo: {
                            tPhoneNumber: "",
                            productionCode: ""
                        },
                        billInfo: {
                            phoneNumber: "",
                            customerNumber: "",
                            billCode: ""
                        },
                        atmTransferInfo: {
                            customerId: "",
                            transferCode: "",
                            institutionCode: ""
                        }
                    }
                };

            pinBlock = SecureManager.getPinBlock(pin, cvv, expiry, pinKey, ttId);
            return {
                secure: SecureManager.getSecure(secureOptions, 'createcard'),
                pinBlock: pinBlock
            };
        },
        redirectBack: function(url) {
            var _form = $('<form>', {
                method: "POST",
                action: url
            });
            $('body').append(_form);
            _form.submit();
        },
        rotate: function(loaderPath) {
            var stop = false;
            var tween = function() {
                TweenLite.to(loaderPath, 0.5, {
                    transformOrigin: '50% 110%',
                    rotation: '360',
                    clearProps: 'transform',
                    onComplete: function() {
                        if (!stop) tween();
                    }
                });
            };

            tween();
            return {
                kill: function() {
                    stop = true;
                    TweenLite.killTweensOf(loaderPath)
                }
            }
        },
        detectMobileDevice: function() {
            var isMobile = {
                Android: function() {
                    return navigator.userAgent.match(/Android/i);
                },
                BlackBerry: function() {
                    return navigator.userAgent.match(/BlackBerry/i);
                },
                iOS: function() {
                    return navigator.userAgent.match(/iPhone|iPad|iPod/i);
                },
                Opera: function() {
                    return navigator.userAgent.match(/Opera Mini/i);
                },
                Windows: function() {
                    return navigator.userAgent.match(/IEMobile/i);
                },
                BlackBerry: function() {
                    navigator.userAgent.match(/BlackBerry/i) || navigator.userAgent.match(/BB10/i);
                },
                any: function() {
                    return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows() || isMobile.BlackBerry());
                },
                isIE: function() {

                    var ua = window.navigator.userAgent;
                    var msie = ua.indexOf("MSIE ");

                    if (msie > 0) // If Internet Explorer, return version number
                    {
                        return true;
                    } else // If another browser, return 0
                    {
                        return false;
                    }

                    return false;
                }
            }
            return isMobile;

        }

    }

})();

},{"../utils/randomize":69,"../utils/secure":70,"underscore":32}],72:[function(require,module,exports){
var jQuery = require('jquery'),
    Backbone = require('backbone'),
    _ = require('underscore');
var ButtonLoader = require('../utils/button_loader');


var urls = require('../../config/urls.js');
var Wallet = require('../card/wallet');

Backbone.$ = jQuery;

var template = require('./templates/bbm_code.hbs');


function bbm(){
    var events, view;
    // Backbone events for main view
    events =  {
        "click #backBtn": "goBack",
        "submit #BbmCode":"sendCode",
        'copy #codeField' : 'blockInput',
        'paste #codeField' : 'blockInput',
        'keyup #codeField' : 'controlInput',
        'click #codeAgain' : 'resendActivationCode',
        'focus #codeField' : 'removePlaceholder',
        'blur #codeField' : 'addPlaceholder'
    };
    // Main View Object
    view  = {
        el: '#PageBbmCode',
        name: "BbmCode",
        template: template,
        events: events,
        render:render,
        initialize: initialize,
        blockInput: blockInput,
        controlInput: controlInput,
        sendCode: sendCode,
        resendActivationCode: resendActivationCode,
        removePlaceholder: removePlaceholder,
        addPlaceholder: addPlaceholder,
        resendInProgress: false
    };


    function addPlaceholder(evt){
        this.$el.find('#codeField').attr('placeholder', 'Enter activation code');
    }

    function removePlaceholder(evt){
        this.$el.find('#codeField').attr('placeholder', '');
    }

    function goBack(){
        this.model.set('page_back', true);
        return;
    }

    function resendActivationCode(evt){
        var scope = this;
        if(scope.resendInProgress == true){
            return;
        }
        scope.resendInProgress = true;
        scope.$el.find('#codeAgain').html('Sending...');

        var resendCodePromise = scope.model.get('bbmModel').bbmSendNumber();
        resendCodePromise.success(function() {
            scope.$el.find('#codeAgain').html('Code sent');
            setTimeout(function() {
                scope.$el.find('#codeAgain').html('Resend activation code');
                scope.resendInProgress = false;
            }, 3000);
        });
        resendCodePromise.error(function() {
            scope.$el.find('#codeAgain').html('Failed to send code');
            setTimeout(function() {
                scope.$el.find('#codeAgain').html('Resend activation code');
                scope.resendInProgress = false;
            }, 3000);

        });
    }

    function sendCode(evt){
        var scope = this;
        evt.preventDefault();
        evt.stopImmediatePropagation();

        scope.$el.find('.bbmc--validation').removeClass('error');
        scope.$el.find('#codeField').removeClass('error');
        scope.$el.find('.bbm--operation-info').removeClass('on');
        scope.model.set('resize', true);

        if(scope.$el.find('#codeField').val().length == 0){
            scope.$el.find('.bbmc--validation').addClass('error');
            scope.$el.find('#codeField').addClass('error');
            scope.model.set('resize', true);
            setTimeout(function(){
                scope.$el.find('.bbmc--validation').removeClass('error');
                scope.$el.find('#codeField').removeClass('error');
                scope.model.set('resize', true);
            },5000);
            return;
        }else{
            //Handle Buttons
            var buttonLoader = new ButtonLoader({el: scope.$el.find('button[type=submit]')});
            scope.$el.find('#continueBtn').attr('disabled', true);

            //get verification code from field
            var verifyCode = scope.$el.find('#codeField').val();

            //set code on bbm model
            scope.model.get('bbmModel').get('data').code = verifyCode;


            //STEP 1: Get code from BBM
            var bbmAuthPromise = scope.model.get('bbmModel').bbmTryAuth();

            bbmAuthPromise.success(function(operationResponse){//STEP 1[SUCCESS]
                var respString = operationResponse.location;
                respString = respString.split('=');
                for(var i = 0; i < respString.length; i++){
                    if(respString[i].indexOf('code') >= 0){
                        var bbmAuthCode = respString[i+1];
                        break;
                    }
                }
                scope.model.get('walletModel').set('bbmAuthCode', bbmAuthCode);
                scope.model.get('bbmModel').get('data').bbmAuthCode = bbmAuthCode;

                //STEP 2: Send [bbmAuthCode, mobileNumber, code] to server for verification
                var codeSendPromise = scope.model.get('bbmModel').bbmSendCode();

                codeSendPromise.success(function(operationResponse){//STEP 2[SUCCESS]


                    var expiryDate = new Date()
                    expiryDate.setTime( expiryDate.getTime() + 300 * 86400000 );
                    expiryDate = expiryDate.toUTCString()

                    document.cookie = "qtbbmd_b8dd8da8e4a7=" + operationResponse.socialServiceAccessToken + ";path=/;expires=" + expiryDate;


                    //operationResponse.socialService...
                    var chAuthMod = scope.model.get('channelAuthenticateModel');
                    var tempUrl = urls.channelAuthenticate
                                  + "?merchantCode=" + chAuthMod.get('merchantCode')
                                  + '&payableCode=' + chAuthMod.get('payableCode')
                                  + '&accessTokenType=' + 'BBM'
                                  + '&accessToken=' + operationResponse.socialServiceAccessToken;

                    scope.model.get('bbmModel').set('url', tempUrl);

                    //STEP 3: Send token to server to get wallets
                    var loginWithTokenPromise = scope.model.get('bbmModel').logInWithToken();

                    loginWithTokenPromise.success(function(response) {//STEP 3[SUCCESS]

                        var pages = scope.getPageList();
                        pages = [pages[0]];
                        //Handle Buttons
                        buttonLoader.resetButton('Continue');
                        scope.$el.find('#continueBtn').attr('disabled', false);

                        //Save wallet data on wallet Model
                        scope.model.get('walletModel').set('wallet_data', response);
                        setTimeout(function() {
                            scope.model.set('page_proceed', Wallet);
                        }, 100);

                        if (response.user) {
                            scope.model.set('isLoggedIn', true);
                        }
                        return;
                    });

                    loginWithTokenPromise.error(function(error){//STEP 3[FAIL]
                        buttonLoader.resetButton('Continue');
                        scope.$el.find('#continueBtn').attr('disabled', false);
                        var errorMessage = 'Could not verify you at this time. Please, try again.';

                        scope.$el.find('.bbm--operation-info').html(errorMessage);
                        scope.$el.find('.bbm--operation-info').addClass('on');
                        scope.model.set('resize', true);
                    });
                });

                codeSendPromise.error(function(error){//STEP 2[FAIL]
                    buttonLoader.resetButton('Continue');
                    scope.$el.find('#continueBtn').attr('disabled', false);

                    var errorMessage = "Could not complete operation. Please try again."
                    if(error.status == 401){
                        errorMessage = 'Incorrect activation code. Please enter the correct code.';
                    }
                    if(error.status == 403){
			            var data = JSON.parse(error.responseText);
                        errorMessage = data.description;
                    }

                    scope.$el.find('.bbm--operation-info').html(errorMessage);
                    scope.$el.find('.bbm--operation-info').addClass('on');
                    scope.model.set('resize', true);
                });//STEP 2[FAIL] - END
            });

            bbmAuthPromise.error(function(error){ //STEP 1[FAIL]
                buttonLoader.resetButton('Continue');
                scope.$el.find('#continueBtn').attr('disabled', false);
                var errorMessage = 'A network error occurred. Please try again.';

                scope.$el.find('.bbm--operation-info').html(errorMessage);
                scope.$el.find('.bbm--operation-info').addClass('on');
                scope.model.set('resize', true);

                setTimeout(function(){
                    scope.$el.find('.bbm--operation-info').removeClass('on');
                    scope.model.set('resize', true);
                }, 5000);
            });//STEP 1[FAIL] - END
        }//else ends
    }

    function render (){
        var scope = this;

        var n = scope.model.get('bbmModel').get('data').mobileNumber;
        var maskednum = n.slice(0,n.length-6) + "***" + n.slice(n.length-3);
        var pageData = {
            baseUrl: scope.model.get('merchantModel').toJSON().baseUrl,
            mobileNumber: maskednum
        };
        scope.$el.html(scope.template({
            pageData: pageData
        }));
    }

    function initialize(){
        this.render();
    }

    function blockInput(evt){
        evt.stopImmediatePropagation();
        evt.preventDefault();
    }

    function controlInput(evt){
        var scope = this;

        var a = evt.keyCode;
        if(scope.$el.find('#codeField').val().length >= 20){
            if(!(a == 8 || a == 37 || a == 39 || a == 46)){
                evt.preventDefault();
            }
        }else{
            if(!(a == 8 || a == 37 || a == 39 || a == 46 || (a >= 48 && a <= 57))){
                evt.preventDefault();
            }
        }
    }
    return Backbone.View.extend(view)
}
module.exports =  bbm();


},{"../../config/urls.js":39,"../card/wallet":117,"../utils/button_loader":132,"./templates/bbm_code.hbs":74,"backbone":1,"jquery":28,"underscore":32}],73:[function(require,module,exports){
var jQuery = require('jquery'),
  Backbone = require('backbone'),
  _ = require('underscore');
var ButtonLoader = require('../utils/button_loader');

var Login = require('../profile/login');

Backbone.$ = jQuery;

require('intl-tel-input');

var BbmCode = require('./bbm_code');

var template = require('./templates/bbm_number.hbs');


function bbm() {
  var events, view;
  // Backbone events for main view
  events = {
    "click #bbmPayBtn": "goToCard",
    "click #sendNumBtn": "sendNumber",
    'copy #bbmNumField': 'blockInput',
    'paste #bbmNumField': 'blockInput',
    'keyup #bbmNumField': 'controlInput',
    'click .country': 'setCode',
    'keydown .bbm--control': 'handleEnter'
  };
  // Main View Object
  view = {
    el: '#PageBbmNumber',
    name: "BbmNumber",
    template: template,
    goToCard: goToCard,
    sendNumber: sendNumber,
    events: events,
    render: render,
    initialize: initialize,
    setCode: setCode,
    blockInput: blockInput,
    controlInput: controlInput,
    handleEnter: handleEnter
  };

  function goToCard(evt) {
    evt.stopImmediatePropagation();
    evt.preventDefault();
    var scope = this;

    /*
    this.goToTemplate('PageCard', true);

    setTimeout(function(){
        scope.model.set('state-change', true);
        return;
    },300)
    */

    
    scope.model.set('page_proceed', Login);
  }

  function sendNumber(evt) {
    var scope = this;
    evt.preventDefault();
    evt.stopImmediatePropagation();

    scope.$el.find('.bbm--validation').removeClass('error');
    scope.$el.find('#bbmNumField').removeClass('error');
    scope.$el.find('.bbm--operation-info').removeClass('on');
    scope.model.set('resize', true);

    if (scope.$el.find('#bbmNumField').val().length == 0) {
      scope.$el.find('.bbm--validation').addClass('error');
      scope.$el.find('#bbmNumField').addClass('error');
      setTimeout(function () {
        scope.$el.find('.bbm--validation').removeClass('error');
        scope.$el.find('#bbmNumField').removeClass('error');
      }, 5000);
      return;
    } else {

      var mobile_part = this.$el.find('#bbmNumField').val();
      if (mobile_part[0] == 0) {
        mobile_part = mobile_part.slice(1);
      }

      var bbmNum = this.$el.find('.bbm--control-code').html() + mobile_part;
      var buttonLoader = new ButtonLoader({ el: this.$el.find('button[type=submit]') });
      scope.$el.find('#bbmPayBtn').attr('disabled', true);

      scope.model.get('bbmModel').get('data').mobileNumber = bbmNum;

      var numSendPromise = scope.model.get('bbmModel').bbmSendNumber();

      numSendPromise.success(function (operationResponse) {
        buttonLoader.resetButton('Continue');
        scope.$el.find('#bbmPayBtn').attr('disabled', false);

        scope.model.set('page_proceed', BbmCode);
        return;
      });

      numSendPromise.error(function (error) {

        var errorMessage = 'Could not send number. Try again.';
        buttonLoader.resetButton('Continue');
        scope.$el.find('#bbmPayBtn').attr('disabled', false);

        scope.$el.find('.bbm--operation-info').html(errorMessage);
        scope.$el.find('.bbm--operation-info').addClass('on');
        scope.model.set('resize', true);

        setTimeout(function () {
          scope.$el.find('.bbm--operation-info').removeClass('on');
          scope.model.set('resize', true);
        }, 3000000);
      });
    }
  }


  function render() {
    var scope = this;
    var merchantData = this.model.get('merchantModel').toJSON();
    this.$el.html(this.template({
      merchant: merchantData
    }));

    this.$el.find('#bbmNumField').intlTelInput({initialCountry: "ng", allowDropdown:false});
    this.setCode();
    // $.get('https://ipinfo.io', function () { }, 'jsonp')
    //   .done(function (resp) {
    //     scope.$el.find("#bbmNumField").intlTelInput("setCountry", resp.country.toLowerCase());
    //     scope.setCode();
    //   })
    //   .fail(function (error) {
    //     //
    //   });

    var pages = this.getPageList();
    pages.splice(1, 1);

  }

  function initialize() {
    this.render();
  }

  function setCode(evt) {
    var newCode = this.$el.find('#bbmNumField').intlTelInput('getSelectedCountryData').dialCode;
    this.$el.find('.bbm--control-code').html("+" + newCode);
  }

  function blockInput(evt) {
    evt.stopImmediatePropagation();
    evt.preventDefault();
  }

  function controlInput(evt) {

    var scope = this;
    var a = evt.keyCode;
    if (scope.$el.find('#bbmNumField').val().length >= 20) {
      if (!(a == 8 || a == 37 || a == 39 || a == 46)) {
        evt.preventDefault();
      }
    } else {
      if (!(a == 8 || a == 37 || a == 39 || a == 46 || (a >= 48 && a <= 57))) {
        evt.preventDefault();
      }
    }
  }

  function handleEnter(evt) {

    var btn = evt.keyCode;
    if (btn == 13) {
      evt.stopImmediatePropagation();
    }
  }


  return Backbone.View.extend(view)
}

module.exports = bbm();


},{"../profile/login":121,"../utils/button_loader":132,"./bbm_code":72,"./templates/bbm_number.hbs":75,"backbone":1,"intl-tel-input":26,"jquery":28,"underscore":32}],74:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression;

  return "<form id=\"BbmCode\" class=\"ipg-form-container\" autocomplete=\"off\">\r\n\r\n    <input type=\"text\" style=\"display:none\">\r\n    <input type=\"password\" style=\"display:none\">\r\n\r\n    <div class=\"bbm--operation-info-wrapper\">\r\n        <div class=\"bbm--operation-info\">\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"bbm--logo-area\">\r\n\r\n        <img class=\"bbm--logo-image\" src=\""
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.pageData : depth0)) != null ? stack1.baseUrl : stack1), depth0))
    + "public/images/bbm_logo.png\"  />\r\n\r\n\r\n        <div class=\"bbm--logo-text\">\r\n            <div class=\"bbm--logo-text-top\">BBM</div>\r\n            <div class=\"bbm--logo-text-bottom\">Check-Out</div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"bbmc--message-header\">\r\n        <b>STEP 2:</b> Please enter the activation code sent to "
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.pageData : depth0)) != null ? stack1.mobileNumber : stack1), depth0))
    + "\r\n    </div>\r\n\r\n\r\n    <div class=\"bbmc--control\">\r\n        <input placeholder=\"Enter activation code\" id=\"codeField\" type=\"password\">\r\n    </div>\r\n\r\n    <div class=\"bbmc--validation\">\r\n        Enter the activation code\r\n    </div>\r\n\r\n    <div class=\"bbmc--resend-code\">\r\n        Didn't get the code? <span id=\"codeAgain\">Resend activation code</span>\r\n    </div>\r\n\r\n\r\n    <div class=\"bbmc--button-area\">\r\n        <div class=\"bbmc--button-back\">\r\n            <button type=\"button\" id=\"backBtn\">\r\n                <span class=\"btn-text\">Back</span>\r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"bbmc--button-continue\">\r\n            <button type=\"submit\" id=\"continueBtn\">\r\n                <span class=\"btn-text\">Continue</span>\r\n            </button>\r\n        </div>\r\n    </div>\r\n</form>";
},"useData":true});

},{"hbsfy/runtime":24}],75:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "<form id=\"BbmNumber\" class=\"ipg-form-container\" autocomplete=\"off\">\r\n\r\n    <div class=\"bbm--logo-area\">\r\n\r\n        <img class=\"bbm--logo-image\" src=\""
    + container.escapeExpression(container.lambda(((stack1 = (depth0 != null ? depth0.merchant : depth0)) != null ? stack1.baseUrl : stack1), depth0))
    + "public/images/bbm_logo.png\"  />\r\n\r\n\r\n        <div class=\"bbm--logo-text\">\r\n            <div class=\"bbm--logo-text-top\">BBM</div>\r\n            <div class=\"bbm--logo-text-bottom\">Check-Out</div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"bbm--operation-info-wrapper\">\r\n        <div class=\"bbm--operation-info\">\r\n        </div>\r\n    </div>\r\n\r\n<!--\r\n    <div class=\"bbm--step\">STEP 1/2</div>\r\n-->\r\n    <div class=\"bbmn--message-header\">\r\n        <b>STEP 1:</b> Enter your mobile phone number below for verification.\r\n    </div>\r\n\r\n\r\n\r\n    <div class=\"bbm--control\">\r\n        <span class=\"bbm--control-code\"></span>\r\n        <input placeholder=\"Enter your number\" id=\"bbmNumField\" type=\"text\">\r\n    </div>\r\n\r\n    <div class=\"bbm--validation\">\r\n        Please enter your mobile number\r\n    </div>\r\n\r\n    <div class=\"bbm--button-area\">\r\n        <div class=\"bbmn--button-verify\">\r\n            <button type=\"submit\" id=\"sendNumBtn\">\r\n                <span class=\"btn-text\">Verify Number</span>\r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"ipg--or--divider\">\r\n            <span class=\"ipg--or--text\">or</span>\r\n        </div>\r\n\r\n        <div class=\"bbmn--button-pay\">\r\n            <button type=\"button\" id=\"bbmPayBtn\">\r\n                <span class=\"btn-text\">Login to Verve eWallet</span>\r\n            </button>\r\n        </div>\r\n    </div>\r\n</form>";
},"useData":true});

},{"hbsfy/runtime":24}],76:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 1/29/2016.
 */
var jQuery = require('jquery'),
    Backbone = require('backbone'),
    _ = require('underscore'),
    Tippy = require('tippy.js');
require('../../../../../node_modules/parsleyjs/dist/parsley');
require('jquery.payment');

var template = require('./templates/card.hbs');
require('./card_mixin');
var CardDetails = require('./card_details');
var CardType = require('./card_type');
var Login = require('../profile/login');
var Utils = require('../../utils/utils');

require('../utils/float');

Backbone.$ = jQuery;

function card() {
    var events, view;

    // Backbone events for Card view
    events = {
        "keypress #Pin": "allowOnlyNumbers",
        "keydown #Pin": "allowOnlyNumbers",
        "keyup #Pin": "allowOnlyNumbers",
        "click button.ipg-pinpad": "updateInput",
        "click #BackfromPayment": "goBack",
        "submit #CardDetailsForm": "payWithChannelUsingCard",
        "blur input#Cc": "handleCardFieldBlur",
        'click button#PayWithWallet': "gotoLoginView",
        'click button#PayWithWallet_Bank': "gotoLoginView",
        'focus #Pin': "showPin",
        'click #CardPinLabel': "showPin",
        'cardChange #Cvv': "cardChange",
        "keyup #Cc": "newCardInput",
        "click button.ipg-pinpad": "updateInput",
  
        //////// Credit Login card page handlers/////////
        "click #CreditDetailsForm #OpenWallet_Credit": "showCreditWallet",
        "focus #CreditDetailsForm #Cc-credit": "showCreditWallet",
        "click #CreditDetailsForm #wallet-card-credit": "selectCard_credit", 
        "click #SelectedInputWrapper-credit": "showCreditWallet",
        "click #NewCard_credit": "selectNewCard_credit",
        "keyup #CreditDetailsForm #Cc-credit": "newCardInput_credit",
        'cardChange_credit #Cvv_credit': "cardChange_credit",
  


        'click .fingerprint-enabled-wrapper-inner': 'openFingerprintModal',
        'click .fingerprint-modal-wrapper .fp-button.cancel': 'closeFingerprintModal',
        'click .fingerprint-modal-wrapper .fp-button.confirm': 'disableFingerprint',


        'click .payment-type-control .item-wrapper': 'selectPaymentTypeHandler',

        // 'submit .payment-type-section.bank': 'payWithBank',
        'submit .payment-type-section.mobile': 'payWithMobile',
        'submit .payment-type-section.paycode': 'payWithPaycode',


        //credit payment handlers[START]
        'submit #CreditDetailsForm .number_screen form': 'creditPayment_numberScreenSubmitHandler',
        
        'submit #CreditDetailsForm .otp_screen form': 'creditPayment_otpScreenSubmitHandler',
        'submit #CreditDetailsForm .otp_card_screen form': 'creditPayment_otpCardScreenSubmitHandler',

        'click #CreditDetailsForm .otp_screen form .otp-controls-button': 'creditPayment_otpScreenResendOtpHandler',
        'click #CreditDetailsForm .otp_card_screen form .otp-controls-button': 'creditPayment_otpCardScreenResendOtpHandler',

        'click #CreditDetailsForm .otp_screen form #creditPayment_otpBackButton': 'creditPayment_otpScreenBackHandler',
        'click #CreditDetailsForm .otp_card_screen form #creditPayment_otpCardBackButton': 'creditPayment_otpCardScreenBackHandler',
        
        'click #CreditDetailsForm .offers_screen #creditPayment_offersBackButton': 'creditPayment_offersScreenBackHandler',
        'click #CreditDetailsForm .offers_screen .loan_select_button': 'creditPayment_selectOffer',
        'click #CreditDetailsForm .card_screen #creditPayment_cardBackButton': 'creditPayment_cardScreenBackHandler',
        'click #CreditDetailsForm .card_screen #CardDropDownInput_credit': 'showCreditWallet',
        'click #CreditDetailsForm .card_screen #OpenWallet_Credit': 'showCreditWallet',
        "focus #CreditDetailsForm .card_screen #Cc-credit": "showCreditWallet",
        "click #CreditDetailsForm .card_screen #NewCard_credit": "selectNewCard_credit",
 
        ///Credit - Login - Handler/////
        'click #CreditDetailsForm .number_screen form .e_wallet_login .login': 'creditLoginHandler',

        'focus #Pin_credit': "creditPayment_showPin",
        'click #CardPinLabel_credit': "creditPayment_showPin",
        'click button.ipg-pinpad_credit': 'creditPayment_updateInput',
        'submit #CreditDetailsForm .card_screen form': 'creditPayment_cardScreenSubmitHandler',
        //credit payment handlers[END]
        
    };
    
    // Card View Object
    view = {
        el: '#PageCard',
        name: "Card",
        template: template,
        events: events,
        goBack: goBack,
        gotoLoginView: gotoLoginView,
        getCardDetailsView: getCardDetailsView,
        render: render,
        initialize: initialize,
        handleCardFieldBlur: handleCardFieldBlur,
        newCardInput: newCardInput,
        openFingerprintModal: openFingerprintModal,
        closeFingerprintModal: closeFingerprintModal,
        disableFingerprint: disableFingerprint,
        hideWallet_Credit: hideWallet_Credit,
        close_Credit: close_Credit
    };

    function goBack() {
        this.model.set('page_back', true);
    }

    function getCardDetailsView() {
        return CardDetails;
    }

    function render() {
        var scope = this;
        var buttonName = this.model.get('merchantModel').get('buttonName') || 'Pay';
        var merchantData = this.model.get('merchantModel').toJSON();
        this.$el.html(template({ 
          buttonName: buttonName, 
          isOpera: Utils.detectMobileDevice().Opera(),
          merchant: merchantData
        }));

        this.setupPaymentTypes();

        if (!Utils.detectMobileDevice().Opera()) {
            this.parsleyValidator();
            
            var parsleyFormCard = this.$el.find('#CardDetailsForm').parsley();
            
            parsleyFormCard.on('form:error', function() {
                scope.model.set('resize', true);
                scope.model.set('parsley-error', true);
            });


            this.$el.find('input#Cc').payment('formatCardNumber');
            this.$el.find('input#CCexpiry').payment('formatCardExpiry');
            this.$el.find('input#Cvv').payment('formatCardCVC');
            this.$el.find('input#Pin').payment('restrictNumeric');

            new CardType();

            Tippy('#cvvTooltip', {
              html: document.querySelector('#cvvTooltipTemplate'),
              position: 'top',
              arrow: true,
              theme: 'webpay'
            });

        }

        setTimeout(function() {
          scope.$el.find('#CardDetailsForm input').removeAttr('readonly');
        }, 2000);
    }


    function handleCardFieldBlur(evt) {

      evt.preventDefault();
      evt.stopImmediatePropagation();

      var scope = this;
      scope.$el.find('.fingerprint-enabled-wrapper').removeClass('show');
  
      this.getCardConfiguration(evt);
  
      
      var val = this.$el.find(evt.target).val();
  
      if (val.length >= 12) {
  
        var statusData = scope.model.get('cardModel').getConfigData();
        scope.model.get('fingerprintModel').set('statusData', statusData);
  
        var fingerprintStatusPromise = scope.model.get('fingerprintModel').getFingerprintStatus();
  
        fingerprintStatusPromise.success(function (response) {
          if(response.status == true) {
            scope.$el.find('.fingerprint-enabled-wrapper').addClass('show');
            scope.model.get('fingerprintModel').set('key', response.key);
            this.model.set('resize', true);
          }
        });
  
        fingerprintStatusPromise.error(function (error) {
          
        });
  
      }  
    }


    function newCardInput(evt) {
      evt.preventDefault();
      evt.stopImmediatePropagation();

      this.$el.find('.fingerprint-enabled-wrapper').removeClass('show');    
      this.model.set('resize', true);
    }



    function openFingerprintModal(evt) {
      evt.preventDefault();
      evt.stopImmediatePropagation();
  
      var scope = this;
      scope.$el.find('.fingerprint-modal-wrapper').addClass('show');
    }
  
    function closeFingerprintModal(evt) {
      evt.preventDefault();
      evt.stopImmediatePropagation();
  
      var scope = this;
  
      scope.$el.find('.fingerprint-modal-wrapper').removeClass('show');
      scope.$el.find('.fingerprint-modal-wrapper .container.prompt').addClass('show');
      scope.$el.find('.fingerprint-modal-wrapper .container.success').removeClass('show');
      scope.$el.find('.fingerprint-modal-wrapper .container.failure').removeClass('show');
      scope.$el.find('.fingerprint-modal-wrapper .fp-button.confirm span').html("Disable");
    }
  
    function disableFingerprint(evt) {
      evt.preventDefault();
      evt.stopImmediatePropagation();
  
      var scope = this;
  
      scope.$el.find('.fingerprint-modal-wrapper .fp-button.confirm span').html("Processing...");
      var disableFingerprintRequest = this.model.get('fingerprintModel').disableFingerprint();
  
      disableFingerprintRequest.success(function (response) {
        scope.$el.find('.fingerprint-modal-wrapper .container.prompt').removeClass('show');
        scope.$el.find('.fingerprint-modal-wrapper .container.success').addClass('show');
        scope.$el.find('.fingerprint-enabled-wrapper').removeClass('show');
      });
  
      disableFingerprintRequest.error(function (error) {
        scope.$el.find('.fingerprint-modal-wrapper .container.prompt').removeClass('show');
        scope.$el.find('.fingerprint-modal-wrapper .container.failure').addClass('show');
      });
  
    }

    function hideWallet_Credit(evt) {
      var scope = this;
    
      var container = scope.$el.find('#WalletDropDown_credit')
    
      if (!container.is(evt.target) && container.has(evt.target).length === 0) {
        this.close_Credit();
      }
      scope.model.set('resize', true);
    }
    
    function close_Credit() {
      var scope = this;
     
      scope.$el.find('#CardInWallet ul').removeClass('isvisible');
      $('.ipg--content--container').css({ overflow: "hidden" });
     
    
    }
    


    function initialize() {
      var scope = this;
        this.render();
        this.floatLabel();

        // To Hide cards dropdown in credit tab  
        // $(document).on('click', function (e) {
        //   scope.hideWallet_Credit(e);
        // });
    }

    function gotoLoginView(evt) {
        evt.stopImmediatePropagation();

        this.$el.find('.fingerprint-enabled-wrapper').removeClass('show');
        this.model.set('resize', true);

        this.model.set('page_proceed', Login);
    }


    return Backbone.View.extend(view);
}

module.exports = card();

},{"../../../../../node_modules/parsleyjs/dist/parsley":29,"../../utils/utils":71,"../profile/login":121,"../utils/float":133,"./card_details":77,"./card_mixin":78,"./card_type":79,"./templates/card.hbs":90,"backbone":1,"jquery":28,"jquery.payment":27,"tippy.js":31,"underscore":32}],77:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 1/29/2016.
 */

var jQuery = require('jquery'),
    Backbone = require('backbone'),
    _ = require('underscore');
require('../../../../../node_modules/parsleyjs/dist/parsley');
var template = require('./templates/card_details.hbs');
require('./card_mixin');
var CvvExpiryPin = require('./cvv_expiry_pin');
var Utils  = require('../../utils/utils');

Backbone.$ = jQuery;

function cardDetails(){
    var events, view;

    // Backbone events for main view
    events =  {
        "click #Back": "goBack",
        "submit #CardExtraDetailsForm":"pay",
    };
    // Main View Object
    view  = {
        el: '#PageCardDetails',
        name: "CardDetails",
        template: template,
        events: events,
        goBack: goBack,
        pay: pay,
        render:render,
        initialize: initialize
    };



    function goBack(){
        this.model.set('page_back', true);
    }

    function pay(evt){
        evt.preventDefault();
        evt.stopImmediatePropagation();
        var payWithCardPromise;
        this.payWithCard();
    }

    function render (){
        var cardConfig;
        var scope = this;
        cardConfig = this.model.get('cardModel').get('cardConfigurations');
        this.model.get('cardModel').setConfigSettings();
        this.$el.html( template({}));
        new CvvExpiryPin({model: this.model});
        if (!Utils.detectMobileDevice().Opera()) {
            var parsleyForm = this.$el.find('#CardExtraDetailsForm').parsley();
            parsleyForm.on('form:error', function(){
            scope.model.set('resize', true);
            scope.model.set('parsley-error', true);
            });
        }
    }

    function initialize(){
        this.render();
    }

    return Backbone.View.extend(view)
}
module.exports =  cardDetails();


},{"../../../../../node_modules/parsleyjs/dist/parsley":29,"../../utils/utils":71,"./card_mixin":78,"./cvv_expiry_pin":82,"./templates/card_details.hbs":91,"backbone":1,"jquery":28,"underscore":32}],78:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 1/29/2016.
 */

//NOTE: Any changes made in the auto enrollment process have to be made in
//both the payWithCard() function as well as the payWallet(postData) function.

var jQuery = require('jquery'),
  Backbone = require('backbone'),
  _ = require('underscore'),
  Tippy = require('tippy.js');
window.ttt = Tippy;

require('../../../../../node_modules/parsleyjs/dist/parsley');
var ButtonLoader = require('../utils/button_loader');
Backbone.$ = jQuery;
var TokenOTP = require('./token_otp');

var TokenOTPBank = require('./token_otp_bank');


var TokenOTPreg = require('./token_otp_reg');

var MobileId = require('./mobile_id');

var PayWithMobileComplete = require('./pay_with_mobile_complete');




var TokenCardinal = require('./token_cardinal');
var Rewards = require('../rewards/reward');
var Response = require('../../models/response_model');
var pinPadTemplate = require('./templates/pin_pad.hbs');
var pinTemplate = require('./templates/pin.hbs');
var ErrorHandler = require('../../models/util_error_handler');
var Utils = require('../../utils/utils');
//Payment options templates
var MobileFormTemplate = require('./templates/payment_options/mobile.hbs');
var PaycodeFormTemplate = require('./templates/payment_options/paycode.hbs');
var CreditFormTemplate = require('./templates/payment_options/credit.hbs');
var UssdFormTemplate = require('./templates/payment_options/ussd.hbs');



require('../utils/float');
require('jquery.payment');



//Import methods for handling mobile payment
var mobilePayMethods = require('./payment_options_mixins/pay_with_mobile_mixin');
var setupMobilePayment = mobilePayMethods.setupMobilePayment;
var payWithMobile = mobilePayMethods.payWithMobile;

//Import methods for handling mobile payment
var paycodePayMethods = require('./payment_options_mixins/pay_with_paycode_mixin');
var setupPaycodePayment = paycodePayMethods.setupPaycodePayment;
var payWithPaycode = paycodePayMethods.payWithPaycode;



//Import methods for handling credit payment
var creditPayMethods = require('./payment_options_mixins/pay_with_credit_mixin');
var setupCreditPayment = creditPayMethods.setupCreditPayment;
var creditPayment_navigateToScreen = creditPayMethods.creditPayment_navigateToScreen;

var creditPayment_numberScreenSubmitHandler = creditPayMethods.creditPayment_numberScreenSubmitHandler;

var creditPayment_otpScreenSubmitHandler = creditPayMethods.creditPayment_otpScreenSubmitHandler;
var creditPayment_otpScreenResendOtpHandler = creditPayMethods.creditPayment_otpScreenResendOtpHandler;
var creditPayment_otpScreenBackHandler = creditPayMethods.creditPayment_otpScreenBackHandler;

var creditPayment_constructOffers = creditPayMethods.creditPayment_constructOffers;
var creditPayment_selectOffer = creditPayMethods.creditPayment_selectOffer;
var creditPayment_offersScreenBackHandler = creditPayMethods.creditPayment_offersScreenBackHandler;

var creditPayment_cardScreenBackHandler = creditPayMethods.creditPayment_cardScreenBackHandler;
var creditPayment_showPin = creditPayMethods.creditPayment_showPin;
var creditPayment_updateInput = creditPayMethods.creditPayment_updateInput;
var creditPayment_deletePinField = creditPayMethods.creditPayment_deletePinField;
var creditPayment_clearPinField = creditPayMethods.creditPayment_clearPinField;
var creditPayment_cardScreenSubmitHandler = creditPayMethods.creditPayment_cardScreenSubmitHandler;
var creditLoginHandler = creditPayMethods.creditLoginHandler;
var creditPayment_pageLoader = creditPayMethods.creditPayment_pageLoader;
var creditPayment_setupOffersScreen = creditPayMethods.creditPayment_setupOffersScreen;
var showCreditWallet = creditPayMethods.showCreditWallet;
var selectNewCard_credit = creditPayMethods.selectNewCard_credit;
var showSelectedCard_credit = creditPayMethods.showSelectedCard_credit;
var selectNewCard_credit = creditPayMethods.selectNewCard_credit;
var selectCard_credit = creditPayMethods.selectCard_credit;
var triggerChangeonCvc_credit = creditPayMethods.triggerChangeonCvc_credit;
var newCardInput_credit = creditPayMethods.newCardInput_credit;
var handleCardFieldBlur_credit = creditPayMethods.handleCardFieldBlur_credit;
var creditPayment_renderCardScreenContent = creditPayMethods.creditPayment_renderCardScreenContent;
var creditPayment_otpCardScreenSubmitHandler = creditPayMethods.creditPayment_otpCardScreenSubmitHandler;
var creditPayment_otpCardScreenHandler = creditPayMethods.creditPayment_otpCardScreenHandler;
var creditPayment_acceptOffer = creditPayMethods.creditPayment_acceptOffer;
var creditPayment_otpCardScreenResendOtpHandler = creditPayMethods.creditPayment_otpCardScreenResendOtpHandler;
var creditPayment_otpCardScreenBackHandler = creditPayMethods.creditPayment_otpCardScreenBackHandler;
var close_Credit = creditPayMethods.close_Credit;
var creditFilter = creditPayMethods.creditFilter;
//Import methods for handling credit payment[END]




//Import methods for handling ussd payment
var ussdPayMethods = require('./payment_options_mixins/pay_with_ussd_mixin.js');
var setupUssdPayment = ussdPayMethods.setupUssdPayment;

//Import methods for handling ussd payment[END]


function cardMixin() {
  // Main View Object
  var IS_RETRIEVED_BIN_CONFIG = null;
  var mixin = {
    getConfig: getConfig,
    getExpiry: getExpiry,
    payWithCard: payWithCard,
    showPin: showPin,
    parsleyValidator: parsleyValidator,
    pay: pay,
    addExtraData: addExtraData,
    isValidYear: isValidYear,
    isValidMonth: isValidMonth,
    payWithChannelUsingCard: payWithChannelUsingCard,
    getCollectionsAccount: getCollectionsAccount,
    payWallet: payWallet,
    isOTP: isOTP,
    getBillPaymentResponse: getBillPaymentResponse,
    isCardinal: isCardinal,
    isCardinalRegistration: isCardinalRegistration,
    hidePin: hidePin,
    clearPinField: clearPinField,
    updateInput: updateInput,
    deletePinField: deletePinField,
    selectRewards: selectRewards,
    getPostData: getPostData,
    cardChange: cardChange,
    cardChange_credit: cardChange_credit,
    getCardConfiguration: getCardConfiguration,

    setupPaymentTypes: setupPaymentTypes,
    selectPaymentType: selectPaymentType,
    selectPaymentTypeHandler: selectPaymentTypeHandler,

    setupCardPayment: setupCardPayment,

    setupBankPayment: setupBankPayment,
    populateBanksDropdown: populateBanksDropdown,
    payWithBank: payWithBank,

    setupQrPayment: setupQrPayment,
    setQRImage: setQRImage,
    queryQrPaymentStatus: queryQrPaymentStatus,


    setupMobilePayment: setupMobilePayment,
    payWithMobile: payWithMobile,

    setupPaycodePayment: setupPaycodePayment,
    payWithPaycode: payWithPaycode,

    setupCreditPayment: setupCreditPayment,
    creditPayment_navigateToScreen: creditPayment_navigateToScreen,
    creditPayment_numberScreenSubmitHandler: creditPayment_numberScreenSubmitHandler,
    creditPayment_otpScreenSubmitHandler: creditPayment_otpScreenSubmitHandler,
    creditPayment_otpScreenBackHandler: creditPayment_otpScreenBackHandler,
    creditPayment_constructOffers: creditPayment_constructOffers,
    creditPayment_selectOffer: creditPayment_selectOffer,
    creditPayment_offersScreenBackHandler: creditPayment_offersScreenBackHandler,
    creditPayment_cardScreenBackHandler: creditPayment_cardScreenBackHandler,
    creditPayment_showPin: creditPayment_showPin,
    creditPayment_updateInput: creditPayment_updateInput,
    creditPayment_deletePinField: creditPayment_deletePinField,
    creditPayment_clearPinField: creditPayment_clearPinField,
    creditPayment_cardScreenSubmitHandler: creditPayment_cardScreenSubmitHandler,
    creditPayment_otpScreenResendOtpHandler: creditPayment_otpScreenResendOtpHandler,
    creditLoginHandler: creditLoginHandler,
    creditPayment_setupOffersScreen: creditPayment_setupOffersScreen,
    creditPayment_pageLoader : creditPayment_pageLoader,
    showCreditWallet : showCreditWallet,
    selectNewCard_credit: selectNewCard_credit,
    showSelectedCard_credit: showSelectedCard_credit,
    selectNewCard_credit: selectNewCard_credit,
    selectCard_credit: selectCard_credit,
    triggerChangeonCvc_credit: triggerChangeonCvc_credit,
    newCardInput_credit: newCardInput_credit,
    close_Credit: close_Credit,
    handleCardFieldBlur_credit: handleCardFieldBlur_credit,
    creditFilter: creditFilter,
    creditPayment_renderCardScreenContent: creditPayment_renderCardScreenContent,
    creditPayment_otpCardScreenSubmitHandler: creditPayment_otpCardScreenSubmitHandler,
    creditPayment_otpCardScreenHandler: creditPayment_otpCardScreenHandler,
    creditPayment_acceptOffer: creditPayment_acceptOffer,
    creditPayment_otpCardScreenResendOtpHandler: creditPayment_otpCardScreenResendOtpHandler,
    creditPayment_otpCardScreenBackHandler: creditPayment_otpCardScreenBackHandler,
    setupUssdPayment: setupUssdPayment,
  };

  function addExtraData(postData) {
    var extraData = {}
    var scope = this;
    if (scope.model.get('merchantModel').get('thirdPartyTransactionType')) {
      extraData.thirdPartyTransactionType = scope.model.get('merchantModel').get('thirdPartyTransactionType');
    }
    if (scope.model.get('merchantModel').get('transactionType')) {
      extraData.transactionType = scope.model.get('merchantModel').get('transactionType');
    }
    if (scope.model.get('merchantModel').get('virtualProductNetworkId')) {
      extraData.virtualProductNetworkId = scope.model.get('merchantModel').get('virtualProductNetworkId');
    }
    if (scope.model.get('merchantModel').get('virtualProductProductCode')) {
      extraData.virtualProductProductCode = scope.model.get('merchantModel').get('virtualProductProductCode');
    }

    return _.extend({}, postData, extraData);
  }

  function cardChange(evt, data) {
    switch (data) {
      case 'mastercard':
        $(evt.target).parents('.ipg--cvv').find('label').html('CVC');
        break;
      case 'verve':
        $(evt.target).parents('.ipg--cvv').find('label').html('CVV2');
        break;
      case 'visa':
        $(evt.target).parents('.ipg--cvv').find('label').html('CVV');
      default:
        $(evt.target).parents('.ipg--cvv').find('label').html('CVV');
    }

    Tippy('#cvvTooltip', {
      html: document.querySelector('#cvvTooltipTemplate'),
      position: 'top',
      arrow: true,
      theme: 'webpay'
    });

  }

  function cardChange_credit(evt, data) {
    switch (data) {
      case 'mastercard':
        $(evt.target).parents('.ipg--cvv.credit').find('label').html('CVC');
        break;
      case 'verve':
        $(evt.target).parents('.ipg--cvv.credit').find('label').html('CVV2');
        break;
      case 'visa':
        $(evt.target).parents('.ipg--cv.credit').find('label').html('CVV');
      default:
        $(evt.target).parents('.ipg--cvv.credit').find('label').html('CVV');
    }

    Tippy('#cvvTooltip_credit', {
      html: document.querySelector('#cvvTooltipTemplate_credit'),
      position: 'top',
      arrow: true,
      theme: 'webpay'
    });

  }




  function getBillPaymentResponse(paymentResponse) {
    if (this.model.get('channelAuthenticateModel').get('thirdPartyTransactionType') && paymentResponse.responseCode == '00') {
      paymentResponse.bpResp = 90000;
      paymentResponse.bpTrxnRef = paymentResponse.transactionReference;
      paymentResponse.rechPin = paymentResponse.virtualProductPin;
    }

    return paymentResponse;

  }

  function getCollectionsAccount(success, failed) {
    var channelAuthenticateModel = this.model.get('channelAuthenticateModel');
    var collectionsAccount = channelAuthenticateModel.getCollectionsAccount();
    collectionsAccount.success(success);
    collectionsAccount.error(failed);
  }

  function getCardConfiguration(evt) {
    evt.preventDefault();
    evt.stopImmediatePropagation();
    var ccInput = this.$el.find(evt.target);
    var ccVal = ccInput.val();
    if (ccVal.length >= 12) {
      this.getConfig();
    }
    this.model.set('resize', true);
  }


  function showPin() {
    if (!Utils.detectMobileDevice().any()) {
      this.$el.find('#RandomPinpad .ipg-pinpads-wrapper').addClass('show');
      this.model.set('resize', true);
      this.$el.find('#Pin').trigger('blur');

    }
    this.floatLabel();

  }

  function hidePin() {
    this.$el.find('#RandomPinpad .ipg-pinpads-wrapper').removeClass('show');
    this.model.set('resize', true);
  }

  function deletePinField() {
    var pinElemInput = this.$el.find('#Pin');
    var pinElemVal = pinElemInput.val();

    pinElemInput.val(pinElemVal.substring(0, pinElemVal.length - 1));
  }

  function clearPinField() {
    this.$el.find('#Pin').val('');
  }


  function updateInput(evt) {
    evt.stopImmediatePropagation();
    var pinElem = $(evt.target),
      pinElemInput = this.$el.find('#Pin'),
      pinval = pinElemInput.val().toString(),
      pinPadValue = pinElem.attr('data-key-value');

    pinElemInput.trigger('focus');
    if (!(pinPadValue == 'Del' || pinPadValue == 'Clr')) {
      if (pinval.length < 4) {
        pinElemInput.val(pinval + pinPadValue);
      }
    }
    if (pinPadValue == 'Del') {
      this.deletePinField();
    }

    if (pinPadValue == 'Clr') {
      this.clearPinField();
    }
  }

  function payWallet(postData) {

    var scope = this,
      payPromise;
    var buttonLoader = new ButtonLoader({ el: scope.$el.find('button[type=submit]') });
    this.model.get('payModel').set('postData', postData);
    payPromise = this.model.get('payModel').payWithCard();
    payPromise.success(function (paymentResponse, status) {
      buttonLoader.resetButton('Pay');
      paymentResponse = scope.getBillPaymentResponse(paymentResponse);
      scope.model.get('cardModel').set('payment', paymentResponse);

      //is OTP CALL
      if (scope.isOTP(paymentResponse)) {

        //check if fingerprint signup is allowed. If yes, set stuff on payModel. Disable for Opera
        if (scope.model.get('payModel').has('fingerPrintAllowed')) {//remove for previous transaction
          scope.model.get('payModel').unset('fingerPrintAllowed');
        }

        if (paymentResponse.fingerPrintData) {
          if (paymentResponse.fingerPrintData.allowFingerPrintAuthorization) {
            if (!Utils.detectMobileDevice().Opera()) {
              scope.model.get('payModel').set('fingerPrintAllowed', true);
              scope.model.get('payModel').set('rememberCardOnDevice', false);
            }

          }
        }

        //testing mobile id

        if (paymentResponse.mobileIdRequired) {//paymentResponse.tokenType == 'MOBILEID'){
          scope.model.get('payModel').set(
            'tokenValidationParameters',
            {
              mobileIdRequestorCode: paymentResponse.mobileIdRequestCode
            }
          );

          scope.model.set('page_proceed', MobileId);
          return;
        }


        scope.model.set('page_proceed', TokenOTP);
        return;
      }

      if (scope.isCardinal(paymentResponse)) {
        scope.model.get('cardModel').set('cardinal', paymentResponse.cardinalInfo);
        scope.model.set('page_proceed', TokenCardinal);
        return;
      }


      if (paymentResponse.responseCode == 'T1') {
        if (paymentResponse.allowTokenAutoEnrollment) {
          scope.model.set('page_proceed', TokenOTPreg);
          return;

        } else {
          if (paymentResponse.requiresRegistration) {
            paymentResponse.responseTag = 'PAYMENT_TOKEN_REG';
          } else {
            paymentResponse.responseTag = 'PAYMENT_TOKEN_ERROR';
          }

        }

        if (scope.isCardinalRegistration(paymentResponse)) {
          paymentResponse.responseTag = 'PAYMENT_TOKEN_CARDINAL_REG'
        }
      }

      if (paymentResponse.responseCode == '00') {//remember that transaction was fingerprinted
        if (paymentResponse.authorizationMode) {
          if (paymentResponse.authorizationMode == 'AUTHORIZEDBYFINGERPRINT') {
            scope.model.get('payModel').set('transactionWasFP', true);
          }
        }


        if (scope.model.get('walletModel').get('channelProvider') == 'BBM') {
          if (paymentResponse.paymentInstrumentData) {
            var expiryDate = new Date()
            expiryDate.setTime(expiryDate.getTime() + 300 * 86400000);
            expiryDate = expiryDate.toUTCString()
            document.cookie = "qtbbmd_e75f8c8652rt=" + paymentResponse.paymentInstrumentData + ";path=/;expires=" + expiryDate;
          }
        }
      }



      var responseHandler = new Response('payment', paymentResponse);
      var response = responseHandler.getResponse();
      scope.model.set('responseData', response.model());
    });

    payPromise.error(function (error) {
      buttonLoader.resetButton('Pay');

      var error = ErrorHandler.handleError(error);
      var data = JSON.parse(error.responseText);
      data.status = error.status;

      var responseHandler = new Response('payment', data);
      var response = responseHandler.getResponse();
      scope.model.set('responseData', response.model());
    });
  }


  function payWithChannelUsingCard(evt) {
    evt.preventDefault();
    evt.stopImmediatePropagation();
    var scope = this;
    var buttonLoader = new ButtonLoader({ el: scope.$el.find('button[type=submit]') });
    var channelAuthenticateModel = this.model.get('channelAuthenticateModel');
    if (channelAuthenticateModel.isChannelTransactions()) {
      this.model.get('channelAuthenticateModel').set('postData', this.getPostData());
      this.getCollectionsAccount(function (paymentResponse) {
        buttonLoader.resetButton('Pay');
        if (paymentResponse.responseCode == '00') {
          scope.pay(evt);
        } else {
          var responseHandler = new Response('payment', paymentResponse);
          var response = responseHandler.getResponse();
          scope.model.set('responseData', response.model());
        }

      }, function (error) {
        buttonLoader.resetButton('Pay');
        var error = ErrorHandler.handleError(error);
        var data = JSON.parse(error.responseText);
        data.status = error.status;
        var responseHandler = new Response('payment', data);
        var response = responseHandler.getResponse();
        scope.model.set('responseData', response.model());

      })
    } else {
      this.pay(evt);
    }
  }

  function pay(evt) {
    evt.preventDefault();
    evt.stopImmediatePropagation();
    var payWithCardPromise;
    if (this.model.get('cardModel').get('loyaltyRedemptionAllowed')) {

      this.selectRewards(this.getPostData(), this.payWithCard);
      return;
    }
    this.payWithCard();
  }

  function isNumber(evt) {
    evt = (evt) ? evt : window.event;
    var charCode = (evt.which) ? evt.which : evt.keyCode;
    if (charCode > 31 && (charCode < 48 || charCode > 57)) {
      return false;
    }
    return true;
  }



  function getConfig() {
    IS_RETRIEVED_BIN_CONFIG = null;
    var binConfigPromise;
    var randomKeys;
    var scope = this;
    var amount = scope.model.get('merchantModel').get('amount');
    var merchantCode = scope.model.get('merchantModel').get('merchantCode');
    var cardNumber = scope.$el.find('#Cc').val();

    scope.model.get('cardModel').set('cardNumber', cardNumber);
    scope.model.get('cardModel').set('paymentId', scope.model.get('merchantModel').get('paymentId'));
    scope.model.get('cardModel').set('amount', amount);
    scope.model.get('cardModel').set('merchantCode', merchantCode);
    scope.model.get('cardModel').set('expiry', '');
    scope.model.get('cardModel').set('cvv', '');
    scope.model.get('cardModel').set('pin', '');
    scope.model.get('cardModel').set('payableCode', scope.model.get('merchantModel').get('payableCode'));
    binConfigPromise = scope.model.get('cardModel').getBinConfiguration();

    binConfigPromise.success(function (response) {
      IS_RETRIEVED_BIN_CONFIG = true;
      scope.model.get('cardModel').set('cardConfigurations', response);
      randomKeys = Utils.randomKeys();
      if (response.cardTypeGatewayConfiguration.supportsPin) {
        scope.$el.find('#CardPin').html(pinTemplate);
        scope.$el.find('#RandomPinpad').html(pinPadTemplate({ randomNumbers: randomKeys }));
        scope.$el.find('.ipg--cardpin').addClass('show');
        if (Utils.detectMobileDevice().any()) {
          scope.$el.find('#CardPin #Pin').removeAttr('readonly');
        }

      } else {
        scope.$el.find('#CardPin').html('');
      }
      if (scope.$el.find('input#Pin').length) {
        scope.$el.find('input#Pin').payment('restrictNumeric');
      }
      scope.model.set('resize', true);

    });

    binConfigPromise.error(function (error) {
      //handle error here
      IS_RETRIEVED_BIN_CONFIG = false;
      var error = ErrorHandler.handleError(error);
      var data = JSON.parse(error.responseText);
      data.status = error.status;
      var responseHandler = new Response('card', data);
      var response = responseHandler.getResponse();
      scope.model.set('responseData', response.model());

    })
  }




  function getPostData() {
    var configData;
    var scope = this;

    var postData = {
      "merchantCode": scope.model.get('merchantModel').get('merchantCode'),
      "payableCode": scope.model.get('merchantModel').get('payableCode'),
      "paymentId": scope.model.get('merchantModel').get('paymentId')
    };


    if (Utils.detectMobileDevice().Opera()) {
      var cardExpiryMonth = this.$el.find('input#CCexpiryMonth').val();
      var cardExpiryYear = this.$el.find('input#CCexpiryYear').val();
      if (cardExpiryMonth.trim() && cardExpiryYear.trim()) {
        cardExpiryMonth = cardExpiryMonth < 10 ? "0" + parseInt(cardExpiryMonth) : "" + cardExpiryMonth;
        var expiryObj = $.payment.cardExpiryVal(cardExpiryMonth + '/' + cardExpiryYear);
        var expiry = getExpiry(expiryObj);
      }


    } else {
      if (this.$el.find('input#CCexpiry').val()) {
        var expiryObj = this.$el.find('input#CCexpiry').payment('cardExpiryVal');
        var expiry = getExpiry(expiryObj);
      } else {
        expiry = "";
      }
    }



    var cvv = scope.$el.find('input#Cvv').val();
    var pin = scope.$el.find('input#Pin').val();

    scope.model.get('cardModel').set('cvv', cvv || "");
    scope.model.get('cardModel').set('expiry', expiry || "");
    scope.model.get('cardModel').set('pin', pin || "");
    configData = scope.model.get('cardModel').getConfigData();


    //test
    var k = scope.model.get('cardModel');


    postData.issuerId = scope.model.get('cardModel').get('cardConfigurations').issuer.id;
    postData.cardTypeCode = scope.model.get('cardModel').get('cardConfigurations').cardTypeGatewayConfiguration.cardTypeCode;
    postData.secureData = configData.secureData;
    postData.pinBlock = configData.pinBlock;

    postData = this.addExtraData(postData);

    return postData;
  }



  function isOTP(paymentResponse) {
    return paymentResponse.responseCode == 'T0' && !paymentResponse.requiresCentinelAuthorization;
  }

  function isCardinal(paymentResponse) {
    return paymentResponse.responseCode == 'T0' && paymentResponse.requiresCentinelAuthorization;
  }

  function isCardinalRegistration(paymentResponse) {
    return paymentResponse.responseCode == 'T1' && paymentResponse.requiresCentinelAuthorization && paymentResponse.requiresRegistration;
  }


  function payWithCard() {
    var configData, payPromise;
    var scope = this;
    var postData = this.getPostData();


    this.model.get('payModel').set('postData', postData);
    this.model.get('rewardModel').set('postData', postData);

    var buttonLoader = new ButtonLoader({ el: scope.$el.find('button[type=submit]') });

    payPromise = this.model.get('payModel').payWithCard();
    payPromise.success(function (paymentResponse) {
      buttonLoader.resetButton('Pay');
      paymentResponse = scope.getBillPaymentResponse(paymentResponse);
      scope.model.get('cardModel').set('payment', paymentResponse);


      if (scope.isOTP(paymentResponse)) {

        //check if fingerprint signup is allowed. If yes, set stuff on payModel. Disable for Opera
        if (scope.model.get('payModel').has('fingerPrintAllowed')) {//remove for previous transaction
          scope.model.get('payModel').unset('fingerPrintAllowed');
        }

        if (paymentResponse.fingerPrintData) {
          if (paymentResponse.fingerPrintData.allowFingerPrintAuthorization) {
            if (!Utils.detectMobileDevice().Opera()) {
              scope.model.get('payModel').set('fingerPrintAllowed', true);
              scope.model.get('payModel').set('rememberCardOnDevice', false);
            }

          }
        }
        //testing mobile id

        if (paymentResponse.mobileIdRequired) {//paymentResponse.tokenType == 'MOBILEID'){
          scope.model.get('payModel').set(
            'tokenValidationParameters',
            {
              mobileIdRequestorCode: paymentResponse.mobileIdRequestCode
            }
          );

          scope.model.set('page_proceed', MobileId);
          return;
        }

        scope.model.set('page_proceed', TokenOTP);
        return;
      }

      if (scope.isCardinal(paymentResponse)) {
        scope.model.get('cardModel').set('cardinal', paymentResponse.cardinalInfo);
        scope.model.set('page_proceed', TokenCardinal);
        return;
      }

      if (paymentResponse.responseCode == 'T1') {

        if (paymentResponse.allowTokenAutoEnrollment) {
          scope.model.set('page_proceed', TokenOTPreg);
          return;
        } else {
          if (paymentResponse.requiresRegistration) {
            paymentResponse.responseTag = 'PAYMENT_TOKEN_REG';
          } else {
            paymentResponse.responseTag = 'PAYMENT_TOKEN_ERROR';
          }
        }
        if (scope.isCardinalRegistration(paymentResponse)) {
          paymentResponse.responseTag = 'PAYMENT_TOKEN_CARDINAL_REG'
        }
      }

      if (paymentResponse.responseCode == '00') {//add card to wallet
        if (scope.model.get('payModel').get('rememberCard')) {
          var walletId = '0000';
          if (scope.model.get('walletModel').get('wallet_data').user) {
            walletId = scope.model.get('walletModel').get('wallet_data').user.mobileNo;
          }

          scope.model.get('payModel').set('walletId', walletId);
          var addCardPromise = scope.model.get('payModel').addCardToWallet();
          addCardPromise.success(function (response) {

          });
          addCardPromise.error(function (error) {

          });
        }
      }

      if (paymentResponse.responseCode == '00') {//remember that transaction was fingerprinted
        if (paymentResponse.authorizationMode) {
          if (paymentResponse.authorizationMode == 'AUTHORIZEDBYFINGERPRINT') {
            scope.model.get('payModel').set('transactionWasFP', true);
          }
        }
      }

      var responseHandler = new Response('payment', paymentResponse);
      var response = responseHandler.getResponse();
      scope.model.set('responseData', response.model());

    });

    payPromise.error(function (error) {
      buttonLoader.resetButton('Pay');
      var error = ErrorHandler.handleError(error);
      var data = JSON.parse(error.responseText);
      data.status = error.status;
      var responseHandler = new Response('payment', data);
      var response = responseHandler.getResponse();
      scope.model.set('responseData', response.model());
    });
  }

  function selectRewards(postData, callback) {
    var getRewardPromise = null;
    var scope = this;
    var buttonLoader = new ButtonLoader({ el: scope.$el.find('button[type=submit]') });

    this.model.get('payModel').set('postData', postData);
    this.model.get('rewardModel').set('postData', postData);
    getRewardPromise = this.model.get('rewardModel').getRewards();
    getRewardPromise.success(function (response) {
      scope.model.get('rewardModel').set(response);
      if (response.rewardMoney > 0) {
        buttonLoader.resetButton('Pay');
        scope.model.set('page_proceed', Rewards);
      } else {
        _.bind(callback, scope)(postData);
      }
    });

    getRewardPromise.error(function () {
      buttonLoader.resetButton('Pay');
      _.bind(callback, scope)(postData);
    });
  }

  function isValidYear(yrs) {
    var transactionTimeStamp = window.IpgApp.transactionDate;
    var year = new Date(transactionTimeStamp).getYear() - 100;
    return yrs >= year;
  }

  function isValidMonth(mth) {
    var transactionTimeStamp = window.IpgApp.transactionDate;
    var month = new Date(transactionTimeStamp).getMonth() + 1;
    return mth >= month;
  }

  function parsleyValidator() {
    var scope = this;

    if (Utils.detectMobileDevice().Opera()) {
      return false;
    }

    window.Parsley.removeValidator('cardconfig');
    window.Parsley.removeValidator('cardconfig_credit');
    window.Parsley.removeValidator('expirydate');

    window.Parsley.addValidator('cardconfig', function () {
      var valid = false;
      if (IS_RETRIEVED_BIN_CONFIG === null) {
        var cardConfig = scope.model.get('cardModel').getBinConfiguration();
        cardConfig.success(function () {
          valid = true;
        });
        cardConfig.error(function () {
          valid = false;
        });
      } else {
        valid = IS_RETRIEVED_BIN_CONFIG;
      }

      return valid;
    }, 32);

    window.Parsley.addValidator('cardconfig_credit', function () {
      var valid = true;


      return valid;
    }, 32);

    window.Parsley.addValidator('expirydate', function (val) {
      if (!val) return false;
      // if (!val.match(/^\d{2} \/ \d{2}/)) return false
      var valid = false;
      var expiryDate = jQuery.payment.cardExpiryVal(val);

      if (expiryDate) {
        var expiry = getExpiryObj(expiryDate);
        var cardTimeStamp = new Date(expiry.year, expiry.month, '00').getTime();
        var transactionTimeStamp = new Date(window.IpgApp.transactionDate).getTime();
        valid = cardTimeStamp >= transactionTimeStamp;
      } else {
        return false;
      }
      return valid;
    }, 32);

    window.Parsley.addValidator('expirymonth', function (val) {
      if (!val) return false;
      // if (!val.match(/^\d{2} \/ \d{2}/)) return false;
      var valid = false;
      var expiryDate = jQuery.payment.cardExpiryVal(val);
      if (expiryDate) {
        var expiry = getExpiryObj(expiryDate);
        var cardTimeStamp = new Date(expiry.year, expiry.month, '00').getTime();
        var transactionTimeStamp = new Date(window.IpgApp.transactionDate).getTime();
        if (expiry.month) {
          if (parseInt(expiry.month) > 12) {
            valid = false;
          } else {
            valid = true;

          }
        }
      } else {
        return false;
      }
      return valid;
    }, 32);

    window.Parsley.addValidator('cardluhn', function (val) {
      if (!val) return false;
      val = val.split(' ').join('');
      var valid = false;
      var luhn = (function (arr) {
        return function (ccNum) {
          var
            len = ccNum.length,
            bit = 1,
            sum = 0,
            val;

          while (len) {
            val = parseInt(ccNum.charAt(--len), 10);
            sum += (bit ^= 1) ? arr[val] : val;
          }
          return sum && sum % 10 === 0;
        };
      }([0, 2, 4, 6, 8, 1, 3, 5, 7, 9]));
      valid = luhn(val);
      return valid;
    }, 32);

    window.Parsley.addValidator('mobile_number_ng', function (val) {
      var shortFormat = /^0[0-9]{10}$/;
      var longFormat = /^234[0-9]{10}$/;

      if (!shortFormat.test(val) && !longFormat.test(val)) {
        return false;
      }

      return true;
    }, 32);

  }

  function getExpiry(expiryObj) {
    var expiryMonth, expiryYear, expiry;
    if (!isNaN(expiryObj.month) || !isNaN(expiryObj.year)) {
      expiryMonth = expiryObj.month < 10 ? 0 + "" + expiryObj.month : expiryObj.month;
      expiryYear = expiryObj.year.toString();
      expiryYear = expiryYear.slice(-2);
      expiry = expiryYear + "" + expiryMonth;
    }
    return expiry;
  }

  function getExpiryObj(expiryObj) {
    var expiryMonth, expiryYear, expiry;
    if (!isNaN(expiryObj.month) || !isNaN(expiryObj.year)) {
      expiryMonth = expiryObj.month < 10 ? 0 + "" + expiryObj.month : expiryObj.month;
      expiryYear = expiryObj.year.toString();
      expiry = {
        month: expiryMonth,
        year: expiryYear
      }
    }
    return expiry;
  }


  function setupPaymentTypes() {
    var scope = this;


    //First setup the tabbed options
    var supportedPaymentMethods = scope.model.get('noncardModel').get('supportedPaymentMethods');

    //if non-card is blank show card by default
    if (supportedPaymentMethods.length == 0) {
      scope.selectPaymentType('card');
      return;
    }

    //show options bar only if there is more than one payment option
    if (supportedPaymentMethods.length > 1) {
      var width = 100 / (supportedPaymentMethods.length);
      scope.$el.find('.payment-type-control .item-wrapper').css('width', width + '%');

      for (var i = 0; i < supportedPaymentMethods.length; i++) {
        scope.$el.find('.payment-type-control .item-wrapper.' + supportedPaymentMethods[i].providerCode).css('display', 'inline-block');
      }
    }





    //Inject templates for various payment options

    //Mobile
    scope.$el.find('#MobileDetailsForm').html(MobileFormTemplate);
    //Paycode
    scope.$el.find('#PaycodeDetailsForm').html(PaycodeFormTemplate);
    //Credit
    scope.$el.find('#CreditDetailsForm').html(CreditFormTemplate);

    //USSD
    scope.$el.find('#UssdDetailsForm').html(UssdFormTemplate);


    //set the first payment option as active. prioritize card and qr.
    var cardOptionEnabled = false;
    var qrOptionEnabled = false;

    for (var i = 0; i < supportedPaymentMethods.length; i++) {
      var supportedPaymentMethod = supportedPaymentMethods[i];

      if (supportedPaymentMethod.providerCode == 'card') { cardOptionEnabled = true; }
      if (supportedPaymentMethod.providerCode == 'qr') { qrOptionEnabled = true; }
    }

    if (cardOptionEnabled) {
      scope.selectPaymentType('card');
    } else if (qrOptionEnabled) {
      scope.selectPaymentType('qr');
    } else {
      var activePaymentOptionName = supportedPaymentMethods[0].providerCode;
      scope.selectPaymentType(activePaymentOptionName);
    }

  }


  function selectPaymentType(paymentType) {

    //clear up hanging calls
    var qrPaymentTimeoutRef = this.model.get('noncardModel').get('qrPaymentTimeoutRef');
    clearTimeout(qrPaymentTimeoutRef);

    //

    this.$el.find('.payment-type-control .item-wrapper').removeClass('active');
    this.$el.find('.payment-type-section').removeClass('active');




    if (paymentType == 'card') {
      this.$el.find('.payment-type-control .item-wrapper.card').addClass('active');
      this.$el.find('.payment-type-section.card').addClass('active');
      this.model.get('noncardModel').set('activePaymentMethod', 'card');
      this.setupCardPayment();
    }

    if (paymentType == 'qr') {
      this.$el.find('.payment-type-control .item-wrapper.qr').addClass('active');
      this.$el.find('.payment-type-section.qr').addClass('active');
      this.model.get('noncardModel').set('activePaymentMethod', 'qr');
      this.setupQrPayment();
    }

    if (paymentType == 'mobile') {
      this.$el.find('.payment-type-control .item-wrapper.mobile').addClass('active');
      this.$el.find('.payment-type-section.mobile').addClass('active');
      this.model.get('noncardModel').set('activePaymentMethod', 'mobile');
      this.setupMobilePayment();
    }

    if (paymentType == 'paycode') {
      this.$el.find('.payment-type-control .item-wrapper.paycode').addClass('active');
      this.$el.find('.payment-type-section.paycode').addClass('active');
      this.model.get('noncardModel').set('activePaymentMethod', 'paycode');
      this.setupPaycodePayment();
    }

    if (paymentType == 'credit') {
      this.$el.find('.payment-type-control .item-wrapper.credit').addClass('active');
      this.$el.find('.payment-type-section.credit').addClass('active');
      this.model.get('noncardModel').set('activePaymentMethod', 'credit');
      this.setupCreditPayment();
    }

    if (paymentType == 'ussd') {
      this.$el.find('.payment-type-control .item-wrapper.ussd').addClass('active');
      this.$el.find('.payment-type-section.ussd').addClass('active');
      this.model.get('noncardModel').set('activePaymentMethod', 'ussd');
      this.setupUssdPayment();
    }


    // if (target.hasClass('bank')) {
    //   this.$el.find('.payment-type-control .item-wrapper.bank').addClass('active');
    //   this.$el.find('.payment-type-section.bank').addClass('active');
    //   this.model.get('noncardModel').set('activePaymentMethod', 'bank');
    //   this.setupBankPayment();
    // }

    // this.model.set('resize', true);
  }


  function selectPaymentTypeHandler(evt) {
    var scope = this;

    var target = $(evt.currentTarget);

    //check if selection is valid and return if not

    if (target.hasClass('active')) {
      return;
    }

    var paymentType = null;

    if (target.hasClass('card')) {
      paymentType = 'card';
    }

    if (target.hasClass('qr')) {
      paymentType = 'qr';
    }

    if (target.hasClass('mobile')) {
      paymentType = 'mobile';
    }

    if (target.hasClass('paycode')) {
      paymentType = 'paycode';
    }

    if (target.hasClass('credit')) {
      paymentType = 'credit';
    }

    if (target.hasClass('ussd')) {
      paymentType = 'ussd';
    }

    scope.selectPaymentType(paymentType);
  }

  function setupCardPayment() {
    if (this.model.get('resize') == undefined) {
      return;
    }

    this.model.set('resize', true);
  }

  //Pay with Bank Form Controls

  function setupBankPayment() {
    var scope = this;

    var providersPromise = scope.model.get('noncardModel').getProviders('PWA');

    providersPromise.success(function (response) {

      scope.populateBanksDropdown(response);

      scope.$el.find('.payment-type-section.bank .dropdown-component-wrapper .main-wrapper').click(function (evt) {
        evt.stopPropagation();
        scope.$el.find('.payment-type-section.bank .dropdown-component-wrapper .dropdown-wrapper').addClass('show');
      });


      scope.$el.find('.payment-type-section.bank .dropdown-component-wrapper .dropdown-wrapper .item').click(function (evt) {
        evt.stopImmediatePropagation();

        scope.$el.find('.payment-type-section.bank .bankName .error').removeClass('show');
        var value = $(evt.target).attr('value');
        var label = $(evt.target).html();

        scope.$el.find('.payment-type-section.bank .dropdown-component-wrapper .main-text').attr('value', value);
        scope.$el.find('.payment-type-section.bank .dropdown-component-wrapper .main-text').html(label);

        scope.$el.find('.payment-type-section.bank .dropdown-component-wrapper .dropdown-wrapper').removeClass('show');
        scope.model.set('resize', true);
      });


      $(document).click(function (evt) {
        scope.$el.find('.payment-type-section.bank .dropdown-component-wrapper .dropdown-wrapper').removeClass('show');
      });

      scope.$el.find('.payment-type-section.bank .account-number').on('input', function (evt) {
        if (scope.$el.find('.payment-type-section.bank .account-number').val().length > 0) {
          scope.$el.find('.payment-type-section.bank .accountNumber .error').removeClass('show');
          scope.model.set('resize', true);
        } else {
          scope.$el.find('.payment-type-section.bank .accountNumber .error').removeClass('show');
          scope.model.set('resize', true);
        }
      });
    });

    providersPromise.error(function (error) {
      console.log(error);
    });
  }


  function populateBanksDropdown(banksArray) {
    var scope = this;

    var optionsContent = '';

    for (var i = 0; i < banksArray.length; i++) {
      optionsContent += "<div class='item' value='" + banksArray[i].providerId + "'>" + banksArray[i].paymentLabel + "</div>";
    }

    scope.$el.find('.payment-type-section.bank .dropdown-component-wrapper .main-text').html('Select a bank');
    scope.$el.find('.payment-type-section.bank .dropdown-component-wrapper .main-text').attr('value', '');

    scope.$el.find('.payment-type-section.bank .dropdown-component-wrapper .dropdown-wrapper').html(optionsContent);
  }

  function payWithBank(evt) {
    evt.preventDefault();
    evt.stopImmediatePropagation();

    var scope = this;
    var merchantModel = scope.model.get('merchantModel');

    var accountNumber = scope.$el.find('.payment-type-section.bank .account-number').val();

    var providerCode = scope.$el.find('.payment-type-section.bank .dropdown-component-wrapper .main-text').attr('value');

    if (!accountNumber || !providerCode) {

      if (!accountNumber) {
        scope.$el.find('.payment-type-section.bank .accountNumber .error').addClass('show');
      }
      if (!providerCode) {
        scope.$el.find('.payment-type-section.bank .bankName .error').addClass('show');
      }
      scope.model.set('resize', true);
      scope.model.set('parsley-error', true);
      return;
    }

    var buttonLoader = new ButtonLoader({ el: scope.$el.find('button[type=submit]') });

    var postData = {
      merchantCode: merchantModel.get('merchantCode'),
      providerCode: providerCode,
      primaryIdentifier: accountNumber,
      additionalInformation: {},
      payment: {
        transactionReference: merchantModel.get('merchantTransactionReference'),
        merchantCode: merchantModel.get('merchantCode'),
        dateOfPayment: merchantModel.get('transactionDate'),
        currencyCode: merchantModel.get('currencyCode'),
        payableId: merchantModel.get('payableId'),
        amount: merchantModel.get('amount'),
        merchantCustomerId: merchantModel.get('customerId'),
        channel: ''
      }
    }


    scope.model.get('noncardModel').set('postData', postData);

    var paymentPromise = scope.model.get('noncardModel').validateNoncardRequest();

    paymentPromise.success(function (response) {
      if (response.code == '00') {

        if (response.additionalInformation) {
          var newPostData = scope.model.get('noncardModel').get('postData');
          newPostData.payment.id = response.additionalInformation.request.payment.id;
          scope.model.get('noncardModel').set('postData', newPostData);
        }

        buttonLoader.resetButton('Pay');
        scope.model.set('page_proceed', TokenOTPBank);
      }
    });

    paymentPromise.error(function (error) {
      buttonLoader.resetButton('Pay');
      console.log(error);
    });
  }


  function setupQrPayment() {
    var scope = this;

    if (scope.model.get('noncardModel').get('qrCodeValue')) {
      scope.setQRImage(scope.model.get('noncardModel').get('qrCodeValue'));
      scope.queryQrPaymentStatus();
      return;
    }

    var merchantModelAttributes = _.clone(scope.model.get('merchantModel').attributes);

    var paymentRequest = {};

    var merchantModelAttributesKeys = Object.keys(merchantModelAttributes);

    for (var i = 0; i < merchantModelAttributesKeys.length; i++) {
      var item = merchantModelAttributesKeys[i];

      if (typeof merchantModelAttributes[item] == 'number' || typeof merchantModelAttributes[item] == 'string') {
        paymentRequest[item] = merchantModelAttributes[item];
      }
    }


    paymentRequest.transactionReference = paymentRequest.merchantTransactionReference;
    paymentRequest.dateOfPayment = paymentRequest.transactionDate;

    var generateQrPromise = scope.model.get('noncardModel').generateQr(paymentRequest);

    generateQrPromise.success(function (response) {
      scope.model.get('noncardModel').set('qrCodeValue', response.rawQRData);
      scope.setQRImage(response.rawQRData);
      scope.queryQrPaymentStatus();
    });

    generateQrPromise.error(function (response) {
      if (scope.model.get('noncardModel').get('activePaymentMethod') == 'qr') {
        setTimeout(function () { scope.setupQrPayment(); }, 5000);
      }
    });

    setTimeout(function () {
      scope.model.set('resize', true);
    }, 0);

  }


  function setQRImage(code) {
    var scope = this;

    scope.$el.find('.payment-type-section.qr .bracket').removeClass('hidden');
    scope.$el.find('.payment-type-section.qr .qr-container').removeClass('hidden');
    scope.$el.find('.payment-type-section.qr .qr-loading').addClass('hidden');

    var qr = new QRious({
      element: scope.$el.find('#qr-container')[0],
      value: code,
      size: 190,
      foreground: '#00425f',
      background: '#F8F8F9'
    });

    setTimeout(function () {
      scope.model.set('resize', true);
    }, 0)
  }


  function queryQrPaymentStatus() {

    var scope = this;

    var noncardModel = scope.model.get('noncardModel');
    noncardModel.set('merchantModel', scope.model.get('merchantModel').get('merchantCode'));
    

    noncardModel.set('merchantCode', scope.model.get('merchantModel').get('merchantCode'));
    noncardModel.set('transactionReference', scope.model.get('merchantModel').get('merchantTransactionReference'));


    var paymentRequest = _.clone(scope.model.get('merchantModel').attributes);

    var queryStatusPromise = scope.model.get('noncardModel').qrPaymentQueryStatus(paymentRequest);

    queryStatusPromise.success(function (paymentResponse) {
      if (paymentResponse.responseCode == "00" || paymentResponse.responseCode == "XS1") {
        var responseHandler = new Response('payment', paymentResponse);
        var response = responseHandler.getResponse();
        scope.model.set('responseData', response.model());
        return;
      }

      if (paymentResponse.responseCode != "00") {
        if (scope.model.get('noncardModel').get('activePaymentMethod') == 'qr') {
          var callRef = setTimeout(function () { scope.queryQrPaymentStatus() }, 10000);
          scope.model.get('noncardModel').set('qrPaymentTimeoutRef', callRef);
        }
      }
    });

    queryStatusPromise.error(function (response) {
      if (scope.model.get('noncardModel').get('activePaymentMethod') == 'qr') {
        var callRef = setTimeout(function () { scope.queryQrPaymentStatus() }, 10000);
        scope.model.get('noncardModel').set('qrPaymentTimeoutRef', callRef);
      }
    });
  }




  _.extend(Backbone.View.prototype, mixin);

  return Backbone.View;
}

module.exports = cardMixin();

},{"../../../../../node_modules/parsleyjs/dist/parsley":29,"../../models/response_model":60,"../../models/util_error_handler":63,"../../utils/utils":71,"../rewards/reward":130,"../utils/button_loader":132,"../utils/float":133,"./mobile_id":84,"./pay_with_mobile_complete":85,"./payment_options_mixins/pay_with_credit_mixin":86,"./payment_options_mixins/pay_with_mobile_mixin":87,"./payment_options_mixins/pay_with_paycode_mixin":88,"./payment_options_mixins/pay_with_ussd_mixin.js":89,"./templates/payment_options/credit.hbs":97,"./templates/payment_options/mobile.hbs":99,"./templates/payment_options/paycode.hbs":100,"./templates/payment_options/ussd.hbs":103,"./templates/pin.hbs":104,"./templates/pin_pad.hbs":105,"./token_cardinal":113,"./token_otp":114,"./token_otp_bank":115,"./token_otp_reg":116,"backbone":1,"jquery":28,"jquery.payment":27,"tippy.js":31,"underscore":32}],79:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 1/29/2016.
 */

var jQuery = require('jquery'),
    Backbone = require('backbone'),
    _ = require('underscore');
var template = require('./templates/card_type.hbs');
var Utils  = require('../../utils/utils');
var CSSPlugin = require('../../../../../node_modules/gsap/src/uncompressed/plugins/CSSPlugin.js'),
    TweenLite = require('../../../../../node_modules/gsap/src/uncompressed/TweenLite');
Backbone.$ = jQuery;

function cardType(){
    var events, view, cardTypeDetected;
    // Backbone events for main view
    events =  {
        'keydown #Cc': "getCardType",
        'keyup #Cc': "getCardType"
    };
    // Main View Object
    view  = {
        el: '#CCWrapper',
        name: "CardType",
        template: template,
        events: events,
        getCardType:getCardType
    };

    function getCardType(ev) {
        var cardVal  = this.$el.find(ev.target).val();
        var cardType = $.payment.cardType(cardVal);
        var cardTypeContainer =  this.$el.find('.card-type-container');
        if(cardVal.trim() && cardType ) {
            var cardTypeTemplate = template({card_type: cardType, baseUrl: window.IpgApp.baseUrl});
            cardTypeContainer.html(cardTypeTemplate);
            if(!cardTypeDetected) {
                var currentAnimation = TweenLite.from(cardTypeContainer, 0.19, {
                    x: "-10px",
                    opacity: "0",
                    clearProps: "opacity,x"
                });
                cardTypeDetected = true;
                this.$el.parents('.ipg--page').find('#Cvv').trigger('cardChange', cardType)
            }
        }else{
            cardTypeDetected = false
            this.$el.find('.card-type-container').html('');
            this.$el.parents('.ipg--page').find('#Cvv').trigger('cardChange', null)

        }
    }



    return Backbone.View.extend(view)
}
module.exports =  cardType();
},{"../../../../../node_modules/gsap/src/uncompressed/TweenLite":3,"../../../../../node_modules/gsap/src/uncompressed/plugins/CSSPlugin.js":4,"../../utils/utils":71,"./templates/card_type.hbs":92,"backbone":1,"jquery":28,"underscore":32}],80:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 1/29/2016.
 */

var jQuery = require('jquery'),
    Backbone = require('backbone'),
    _ = require('underscore');
var template = require('./templates/card_type.hbs');
var Utils  = require('../../utils/utils');
var CSSPlugin = require('../../../../../node_modules/gsap/src/uncompressed/plugins/CSSPlugin.js'),
    TweenLite = require('../../../../../node_modules/gsap/src/uncompressed/TweenLite');
Backbone.$ = jQuery;

function cardTypeCredit(){
    var events, view, cardTypeDetected;
    // Backbone events for main view
    events =  {
        'keydown #Cc_credit': "getCardType",
        'keyup #Cc_credit': "getCardType"
        
    };
    // Main View Object
    view  = {
        el: '#CCWrapper_credit',
        name: "CardType_credit",
        template: template,
        events: events,
        getCardType:getCardType
    };

    function getCardType(ev) {
        var cardVal  = this.$el.find(ev.target).val();
        var cardType = $.payment.cardType(cardVal);
        var cardTypeContainer =  this.$el.find('.card-type-container.credit');
        if(cardVal.trim() && cardType ) {
            var cardTypeTemplate = template({card_type: cardType, baseUrl: window.IpgApp.baseUrl});
            cardTypeContainer.html(cardTypeTemplate);
            if(!cardTypeDetected) {
                var currentAnimation = TweenLite.from(cardTypeContainer, 0.19, {
                    x: "-10px",
                    opacity: "0",
                    clearProps: "opacity,x"
                });
                cardTypeDetected = true;
                this.$el.parents('.ipg--page').find('#Cvv_credit').trigger('cardChange_credit', cardType)
            }
        }else{
            cardTypeDetected = false
            this.$el.find('.card-type-container.credit').html('');
            this.$el.parents('.ipg--page').find('#Cvv_credit').trigger('cardChange_credit', null)

        }
    }



    return Backbone.View.extend(view)
}
module.exports =  cardTypeCredit();
},{"../../../../../node_modules/gsap/src/uncompressed/TweenLite":3,"../../../../../node_modules/gsap/src/uncompressed/plugins/CSSPlugin.js":4,"../../utils/utils":71,"./templates/card_type.hbs":92,"backbone":1,"jquery":28,"underscore":32}],81:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 1/29/2016.
 */

var jQuery = require('jquery'),
    Backbone = require('backbone'),
    _ = require('underscore');
var template = require('./templates/card_type.hbs');
var Utils  = require('../../utils/utils');
var CSSPlugin = require('../../../../../node_modules/gsap/src/uncompressed/plugins/CSSPlugin.js'),
    TweenLite = require('../../../../../node_modules/gsap/src/uncompressed/TweenLite');
Backbone.$ = jQuery;

function cardTypeCredit(){
    var events, view, cardTypeDetected;
    // Backbone events for main view
    events =  {
        'keydown #Cc-credit': "getCardType",
        'keyup #Cc-credit': "getCardType"
        
    };
    // Main View Object
    view  = {
        el: '#CardDropDownInput_credit',
        name: "CardType_credit",
        template: template,
        events: events,
        getCardType:getCardType
    };

    function getCardType(ev) {
        var cardVal  = this.$el.find(ev.target).val();
        var cardType = $.payment.cardType(cardVal);
        var cardTypeContainer =  this.$el.find('.card-type-container');
        if(cardVal.trim() && cardType ) {
            var cardTypeTemplate = template({card_type: cardType, baseUrl: window.IpgApp.baseUrl});
            cardTypeContainer.html(cardTypeTemplate);
            if(!cardTypeDetected) {
                var currentAnimation = TweenLite.from(cardTypeContainer, 0.19, {
                    x: "-10px",
                    opacity: "0",
                    clearProps: "opacity,x"
                });
                cardTypeDetected = true;
                this.$el.parents('.ipg--page').find('#Cvv_credit').trigger('cardChange_credit', cardType)
            }
        }else{
            cardTypeDetected = false
            this.$el.find('.card-type-container').html('');
            this.$el.parents('.ipg--page').find('#Cvv_credit').trigger('cardChange_credit', null)

        }
    }



    return Backbone.View.extend(view)
}
module.exports =  cardTypeCredit();
},{"../../../../../node_modules/gsap/src/uncompressed/TweenLite":3,"../../../../../node_modules/gsap/src/uncompressed/plugins/CSSPlugin.js":4,"../../utils/utils":71,"./templates/card_type.hbs":92,"backbone":1,"jquery":28,"underscore":32}],82:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 1/30/2016.
 */

var jQuery = require('jquery'),
    Backbone = require('backbone'),
    _ = require('underscore');
require('jquery.payment');

var template = require('./templates/cvv_pin_expiry.hbs');
var pinPadTemplate = require('./templates/pin_pad.hbs');
var Utils  = require('../../utils/utils');


require('../utils/float');

Backbone.$ = jQuery;

function cvvExpiryPin(){
    var events, view;

    // Backbone events for main view
    events =  {
        "click button.ipg-pinpad": "updateInput",
        'focus #Pin': "showPin",
        'click #CardPinLabel':"showPin"
        
    };
    // Main View Object
    view  = {
        el: '#Expiry-Cvv-Pin',
        name: "CvvExpiryPin",
        template: template,
        events: events,
        showPin: showPin,
        hidePin: hidePin,
        clearPinField: clearPinField,
        updateInput: updateInput,
        deletePinField:deletePinField,
        render:render,
        initialize: initialize
    };

    function showPin(){
        if(!Utils.detectMobileDevice().any()){
            this.$el.find('#RandomPinpad .ipg-pinpads-wrapper').addClass('show');
            this.model.set('resize', true);
        }else{
            this.$el.find('#Pin').removeAttr('readonly');
            this.$el.find('#Pin').focus();
        }
    }

    function hidePin(){
        this.$el.find('#RandomPinpad .ipg-pinpads-wrapper').removeClass('show');
        this.model.set('resize', true);
    }

    function deletePinField(){
        var pinElemInput = this.$el.find('#Pin');
        var pinElemVal = pinElemInput.val();

        pinElemInput.val(pinElemVal.substring(0, pinElemVal.length - 1 ));
    }
    function clearPinField(){
        this.$el.find('#Pin').val('');
    }

    function updateInput(evt){
        evt.stopImmediatePropagation();
        var pinElem = $(evt.target),
            pinElemInput = this.$el.find('#Pin'),
            pinval = pinElemInput.val().toString(),
            pinPadValue = pinElem.attr('data-key-value');

        pinElemInput.trigger('focus');
        if(pinval.length > 0 ){
            pinElemInput.addClass('disabled-input')
        }else{
            pinElemInput.removeClass('disabled-input')
        }
        if( !( pinPadValue == 'Del' || pinPadValue == 'Clr') ){
            if(pinval.length < 4 ){
                pinElemInput.val( pinval + pinPadValue);
            }
        }
        if(pinPadValue == 'Del'){
            this.deletePinField();
        }

        if(pinPadValue == 'Clr'){
            this.clearPinField();
        }
    }

    function render (){
        var cardConfig, expiryCvvPin, randomKeys;
        cardConfig = this.model.get('cardModel').get('cardConfigurations');
        this.$el.html( template({cardSettings:cardConfig.settings, expiryYear: cardConfig.expiryYear, expiryMonth: cardConfig.expiryMonth, isMobile: Utils.detectMobileDevice().any()}));
        randomKeys = Utils.randomKeys();
        this.$el.find('#RandomPinpad').html(pinPadTemplate({randomNumbers: randomKeys}));

        this.$el.find('input#CCexpiry').payment('formatCardExpiry');
        this.$el.find('input#Cvv').payment('formatCardCVC');
        this.$el.find('input#Pin').payment('restrictNumeric');
        this.floatLabel();
    }

    function initialize(){
        this.render();
        this.model.set('resize', true);
    }

    return Backbone.View.extend(view)
}
module.exports =  cvvExpiryPin();



},{"../../utils/utils":71,"../utils/float":133,"./templates/cvv_pin_expiry.hbs":93,"./templates/pin_pad.hbs":105,"backbone":1,"jquery":28,"jquery.payment":27,"underscore":32}],83:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 1/30/2016.
 */

var jQuery = require('jquery'),
    Backbone = require('backbone'),
    _ = require('underscore');
require('jquery.payment');

var template = require('./templates/cvv_pin_expiry_credit.hbs');
var pinPadTemplate = require('./templates/payment_options/pin_pad_credit.hbs');
var Utils  = require('../../utils/utils');


require('../utils/float');

Backbone.$ = jQuery;

function cvvExpiryPin(){
    var events, view;

    // Backbone events for main view
    events =  {
        "click button.ipg-pinpad": "updateInput",
        'focus #Pin_credit': "showPin",
        'click #CardPinLabel_credit':"showPin"
        
    };
    // Main View Object
    view  = {
        el: '#Expiry-Cvv-Pin-credit',
        name: "CvvExpiryPin",
        template: template,
        events: events,
        showPin: showPin,
        hidePin: hidePin,
        clearPinField: clearPinField,
        updateInput: updateInput,
        deletePinField:deletePinField,
        render:render,
        initialize: initialize
    };

    function showPin(){
        if(!Utils.detectMobileDevice().any()){
            this.$el.find('#RandomPinpad .ipg-pinpads-wrapper').addClass('show');
            this.model.set('resize', true);
        }else{
            this.$el.find('#Pin_credit').removeAttr('readonly');
            this.$el.find('#Pin_credit').focus();
        }
    }

    function hidePin(){
        this.$el.find('#RandomPinpad .ipg-pinpads-wrapper').removeClass('show');
        this.model.set('resize', true);
    }

    function deletePinField(){
        var pinElemInput = this.$el.find('#Pin_credit');
        var pinElemVal = pinElemInput.val();

        pinElemInput.val(pinElemVal.substring(0, pinElemVal.length - 1 ));
    }
    function clearPinField(){
        this.$el.find('#Pin_credit').val('');
    }

    function updateInput(evt){
        evt.stopImmediatePropagation();
        var pinElem = $(evt.target),
            pinElemInput = this.$el.find('#Pin_credit'),
            pinval = pinElemInput.val().toString(),
            pinPadValue = pinElem.attr('data-key-value');

        pinElemInput.trigger('focus');
        if(pinval.length > 0 ){
            pinElemInput.addClass('disabled-input')
        }else{
            pinElemInput.removeClass('disabled-input')
        }
        if( !( pinPadValue == 'Del' || pinPadValue == 'Clr') ){
            if(pinval.length < 4 ){
                pinElemInput.val( pinval + pinPadValue);
            }
        }
        if(pinPadValue == 'Del'){
            this.deletePinField();
        }

        if(pinPadValue == 'Clr'){
            this.clearPinField();
        }
    }

    function render (){
        var cardConfig, expiryCvvPin, randomKeys;
        cardConfig = this.model.get('creditPayModel').get('cardConfigurations');
        this.$el.html( template({cardSettings:cardConfig.settings, expiryYear: cardConfig.expiryYear, expiryMonth: cardConfig.expiryMonth, isMobile: Utils.detectMobileDevice().any()}));
        randomKeys = Utils.randomKeys();
        this.$el.find('#RandomPinpad_credit').html(pinPadTemplate({randomNumbers: randomKeys}));

        this.$el.find('input#CCexpiry_credit').payment('formatCardExpiry');
        this.$el.find('input#Cvv_credit').payment('formatCardCVC');
        this.$el.find('input#Pin_credit').payment('restrictNumeric');
        this.floatLabel();
    }

    function initialize(){
        this.render();
        this.model.set('resize', true);
    }

    return Backbone.View.extend(view)
}
module.exports =  cvvExpiryPin();



},{"../../utils/utils":71,"../utils/float":133,"./templates/cvv_pin_expiry_credit.hbs":94,"./templates/payment_options/pin_pad_credit.hbs":102,"backbone":1,"jquery":28,"jquery.payment":27,"underscore":32}],84:[function(require,module,exports){
var jQuery = require('jquery'),
    Backbone = require('backbone'),
    _ = require('underscore');

var template = require('./templates/mobile_id.hbs');

Backbone.$ = jQuery;


//testing
var ErrorHandler = require('../../models/util_error_handler');
var Response = require('../../models/response_model');
var TokenOTP = require('./token_otp');

function mobileId(){
    var events, view;

	events = {
	    'click .otpLink' : 'getOtp',
		'click #Back' : 'goBack'
	};

	view = {
		el: '#PageMtnProcess',
		name: 'PageMtnProcess',
		template: template,
		events: events,
		initialize: initialize,
		render: render,
		getOtp: getOtp,
		goBack: goBack,
		callLimit : 0
	};


	function initialize(){
		this.render();
	}

	function render(){
	    var scope = this;
	    var paymentData = scope.model.get('cardModel').get('payment');
	    this.$el.html(this.template({
	        paymentData: paymentData
	    }));

	    scope.callLimit = 10;
	    scope.cancelPoll = false;
        var paymentPromise;

	    (function poll() {
	        scope.callLimit--;
	        if(scope.callLimit > 0){
	            var paymentPromise = scope.model.get('payModel').payWithMobileId();

	            paymentPromise.success(function(paymentResponse) {
	                if(scope.cancelPoll) { return };
	                if(paymentResponse.responseCode == 'T1') {
                        scope.pollTimeout = setTimeout(function(){
                            poll();
                        }, 7000);
                        return;
	                }
                    var responseHandler = new Response('payment', paymentResponse);
                    var response = responseHandler.getResponse();
                      scope.goBack();
                      setTimeout(function() {
                          scope.model.set('responseData', response.model());
                      }, 250);
                });

                paymentPromise.error(function(error) {
                    if(scope.cancelPoll) { return };
                    scope.pollTimeout = setTimeout(function(){
                        poll();
                    }, 7000);
                });

	        }else{
	            if(scope.cancelPoll) { return };
                scope.$el.find('.otpLink').html('Sending OTP');
                scope.$el.find('#Back').attr('disabled', true);

                scope.model.get('payModel').set('tokenValidationParameters', true);
                var payPromise = scope.model.get('payModel').payWithCard();

                payPromise.success(function(paymentResponse) {

                   scope.model.get('cardModel').set('payment', paymentResponse);
                   if(paymentResponse.responseCode == 'T0') {
                     scope.model.set('mobileid', true);
                     scope.undelegateEvents();
                     scope.model.set('page_proceed', TokenOTP);
                     return;
                   }
                   var responseHandler = new Response('payment', paymentResponse);
                   var response = responseHandler.getResponse();
                  scope.goBack();
                  setTimeout(function() {
                      scope.model.set('responseData', response.model());
                  }, 250);
                });

                payPromise.error(function(error) {
                    scope.undelegateEvents();
                    var error = ErrorHandler.handleError(error);
                    var data = JSON.parse(error.responseText);

                    var responseHandler = new Response('payment', data);
                    var response = responseHandler.getResponse();
                    scope.goBack();
                    setTimeout(function() {
                        scope.model.set('responseData', response.model());
                    }, 250);
                });
	        }
	    })();
	}

    function getOtp(){

        var scope = this;

        scope.callLimit = 0;
        scope.cancelPoll = true;

        scope.$el.find('.otpLink').html('Sending OTP');
        scope.$el.find('#Back').attr('disabled', true);

        clearTimeout(scope.pollTimeout);


        scope.model.get('payModel').set('tokenValidationParameters', true);
        var payPromise = scope.model.get('payModel').payWithCard();

        payPromise.success(function(paymentResponse) {

           scope.model.get('cardModel').set('payment', paymentResponse);

           if(paymentResponse.responseCode == 'T0') {
             scope.model.set('mobileid', true);
             scope.undelegateEvents();
             scope.model.set('page_proceed', TokenOTP);
             return;
           }
           var responseHandler = new Response('payment', paymentResponse);
           var response = responseHandler.getResponse();
           scope.goBack();
           setTimeout(function() {
               scope.model.set('responseData', response.model());
           }, 250);
        });

        payPromise.error(function(error) {
            scope.undelegateEvents();
            var error = ErrorHandler.handleError(error);
            var data = JSON.parse(error.responseText);

            var responseHandler = new Response('payment', data);
            var response = responseHandler.getResponse();
            scope.goBack();
            setTimeout(function() {
                scope.model.set('responseData', response.model());
            }, 250);
        });
    }

	function goBack(){

	    var scope = this;
	    this.callLimit = 0;
	    scope.cancelPoll = true;
	    clearTimeout(scope.pollTimeout);
		scope.model.set('page_back', true);

        if(scope.model.get('payModel').has('tokenValidationParameters')) {
            scope.model.get('payModel').unset('tokenValidationParameters');
        }

		this.undelegateEvents();
	}

	return Backbone.View.extend(view);
}

module.exports = mobileId();
},{"../../models/response_model":60,"../../models/util_error_handler":63,"./templates/mobile_id.hbs":95,"./token_otp":114,"backbone":1,"jquery":28,"underscore":32}],85:[function(require,module,exports){

var jQuery = require('jquery'),
  Backbone = require('backbone'),
  _ = require('underscore');

var template = require('./templates/pay_with_mobile_complete.hbs');
var Response = require('../../models/response_model');
var ErrorHandler = require('../../models/util_error_handler');

Backbone.$ = jQuery;


function pay_with_mobile_complete() {
  var events, view;

  // Backbone events for main view
  events = {
    'click #Back': "goBack",
  };
  // Main View Object
  view = {
    el: '#PagePayWithMobileComplete',
    name: "PagePayWithMobileComplete",
    template: template,
    events: events,
    initialize: initialize,
    render: render,
    goBack: goBack,
    requery: requery,
    timeoutRef: null
  };

  function goBack() {
    var scope = this;

    if(scope.timeoutRef) {
      clearTimeout(scope.timeoutRef);
    }
    scope.model.set('page_back', true);
  }

  function requery() {
    var scope = this;

    var mobilePayModel = scope.model.get('mobilePayModel');

    var statusPromise = mobilePayModel.status();
    statusPromise.success(function (paymentResponse, status) {
      if (paymentResponse.responseCode == "09") {
        scope.timeoutRef = setTimeout(function () {
          scope.requery();
        }, 3000);
        return;
      }
      var responseHandler = new Response('payment', paymentResponse);
      var response = responseHandler.getResponse();
      scope.goBack();
      setTimeout(function() {
        scope.model.set('responseData', response.model());
    }, 250);
    });
    statusPromise.error(function (error) {
      scope.timeoutRef = setTimeout(function () {
        scope.requery();
      }, 3000);
    });
  }

  function render() {
    var scope = this;

    scope.$el.html(this.template({}));
    scope.requery();
  }

  function initialize() {
    var scope = this;
    scope.render();
  }

  window.kkk = Backbone.View.extend(view);;

  return Backbone.View.extend(view);
}
module.exports = pay_with_mobile_complete();
},{"../../models/response_model":60,"../../models/util_error_handler":63,"./templates/pay_with_mobile_complete.hbs":96,"backbone":1,"jquery":28,"underscore":32}],86:[function(require,module,exports){
var CardType = require('../card_type_credit');
var CardType_Dropdown = require('../card_type_credit_dropdown');
Tippy = require('tippy.js');
var ButtonLoader = require('../../utils/button_loader');
var PageLoader = require('../../utils/page_loader')
var pinTemplate = require('../templates/payment_options/pin_credit.hbs');
var pinPadTemplate = require('../templates/payment_options/pin_pad_credit.hbs');
var Utils = require('../../../utils/utils');
var APP_DATA = require('../../../config/app.data');
var Response = require('../../../models/response_model');
var ErrorHandler = require('../../../models/util_error_handler');
var countryNumberCodes = require('../../../models/country');
var countryCurrencyCodes = require('../../../models/currency');
var Login = require('../../profile/login');
var Credit_CardFormTemplate = require('../templates/payment_options/credit_card.hbs');
var CvvExpiryPin = require('../cvv_expiry_pin_credit');
var selectedCardTmpl = require('../templates/selected_card.hbs');


//////////////////////////////////////////////////////////////
//Setup/Hooks Functionality[START]////////////////////////////
//////////////////////////////////////////////////////////////

var sendingOtp = false;

function setupCreditPayment() {

  var scope = this;
  var isLoggedIn = scope.model.get('isLoggedIn');

  var parsleyNumberCard = scope.$el.find('#CreditDetailsForm .number_screen form').parsley();

  parsleyNumberCard.on('form:error', function () {
    scope.model.set('resize', true);
    scope.model.set('parsley-error', true);
  });

  this.$el.find('input#creditPayment_phoneNumber').payment('restrictNumeric');

  var parsleyOtpCard = this.$el.find('#CreditDetailsForm .otp_screen form').parsley();

  parsleyOtpCard.on('form:error', function () {
    scope.model.set('resize', true);
    scope.model.set('parsley-error', true);
  });

  this.$el.find('input#creditPayment_otp').payment('restrictNumeric');


//  parsely form card done in setupcardpayment function

  // var parsleyFormCard = this.$el.find('#CreditDetailsForm .card_screen form').parsley();

  // parsleyFormCard.on('form:error', function () {
  //   scope.model.set('resize', true);
  //   scope.model.set('parsley-error', true);
  // });

  // this.$el.find('input#Cc_credit').payment('formatCardNumber');
  // this.$el.find('input#CCexpiry_credit').payment('formatCardExpiry');
  // this.$el.find('input#Cvv_credit').payment('formatCardCVC');
  // this.$el.find('input#Pin_credit').payment('restrictNumeric');



  // new CardType();

  // Tippy('#cvvTooltip_credit', {
  //   html: document.querySelector('#cvvTooltipTemplate_credit'),
  //   position: 'top',
  //   arrow: true,
  //   theme: 'webpay'
  // });

  setTimeout(function () {
    scope.$el.find('#CreditDetailsForm input').removeAttr('readonly');
  }, 0);

  // Show offers page for logged in users and numbers page for !loggedin
  if(isLoggedIn) {
    scope.creditPayment_navigateToScreen('offers');
  
  } else{

    scope.creditPayment_navigateToScreen('number');
  
  }

  scope.model.set('resize', true);
}


function creditPayment_navigateToScreen(screenName) {
  var scope = this;

  if (screenName == 'otp') {
    creditPayment_setupOtpScreen(scope);
  }

  if (screenName == 'card') {
    creditPayment_setupCardScreen(scope);
  }
  
  if(screenName == 'offers') {
    scope.creditPayment_setupOffersScreen();
  }

  if (screenName == 'otp_card') {
    creditpayment_setupOtpCardScreen(scope);
  }

  scope.$el.find('#CreditDetailsForm .screen').css('display', 'none');
  scope.$el.find('#CreditDetailsForm .' + screenName + '_screen').css('display', 'block');

  scope.model.set('resize', true);
}

function creditpayment_setupOtpCardScreen(scope) {

  scope.$el.find('input#creditPayment_otp_card').val('');
  scope.$el.find('#CreditDetailsForm .otp_card_screen form').parsley().reset();

}

function creditPayment_setupOtpScreen(scope) {

  var otp = scope.$el.find('input#creditPayment_otp').val('');
  scope.$el.find('#CreditDetailsForm .otp_screen form').parsley().reset();
  scope.$el.find('#CreditDetailsForm .otp_screen form .display--message').html(
    'Kindly enter the OTP sent to ' + scope.model.get('creditPayModel').get('customerId')
  )
}

function creditPayment_setupOffersScreen() {

  var scope = this;
  var isLoggedIn = scope.model.get('isLoggedIn');

  //Display only the page loader//
  scope.$el.find('.no_offers_container').css('display', 'none');
  scope.$el.find('.available_offers').css('display', 'none');
  scope.$el.find('#container').css('display', 'none');
  scope.$el.find('.offers_container').css('display', 'none');
  scope.$el.find('.page_loader').css('display', 'block');
  scope.$el.find('.getting_offers').css({
    display: "block",
    paddingTop: "100px",
    paddingBottom: "120px",
  });

  // var pageLoader = new PageLoader({ el: scope.$el.find('#CreditDetailsForm .page_loader') });
  // scope.model.set('resize', true);

  ///get the parameters for the API call///
  scope.model.get('creditPayModel').set('amount', scope.model.get('merchantModel').get('amount'));
  scope.model.get('creditPayModel').set('merchantCode', scope.model.get('merchantModel').get('merchantCode'));
  scope.model.get('creditPayModel').set('paymentId', scope.model.get('merchantModel').get('paymentId'));

  //For Logged in users//

  if(isLoggedIn) {
    var walletModel = scope.model.get('walletModel');
    var mobileNo = walletModel.get('mobileNo');
  
    //get number for logged in users//
    scope.model.get('creditPayModel').set('customerId', mobileNo);
  }

  var getOffersPromise = scope.model.get('creditPayModel').getOffers();

  getOffersPromise.success(function (paymentResponse) {

    scope.$el.find('.getting_offers').css('display', 'none');
    scope.$el.find('.available_offers').css('display', 'block');

    // pageLoader.resetPage();

    scope.$el.find('.page_loader').css('display', 'none');

    if(!isLoggedIn) {

      scope.$el.find('#container').css('display', 'block');
      
    }

    if (paymentResponse.responseCode != '00') {
      var responseHandler = new Response('payment', paymentResponse);
      var response = responseHandler.getResponse();
      scope.model.set('responseData', response.model());

      scope.$el.find('.no_offers_container').css('display', 'block');
      scope.$el.find('.page_loader').css('display', 'none');
      
      scope.model.set('resize', true);
      return;
    }

    scope.model.get('creditPayModel').set('availableOffers', paymentResponse.offers);
    scope.creditPayment_constructOffers(paymentResponse.offers);

    scope.model.set('resize', true);

  });

  getOffersPromise.error(function (error) {

    // pageLoader.resetPage();

    var error = ErrorHandler.handleError(error);
    var data = JSON.parse(error.responseText);

    var responseHandler = new Response('payment', data);
    var response = responseHandler.getResponse();

    scope.model.set('responseData', response.model());
    scope.$el.find('.no_offers_container').css('display', 'block');

    if(!isLoggedIn) {
      scope.$el.find('#container').css('display', 'block');
    }

    scope.$el.find('.page_loader').css('display', 'none');
    scope.$el.find('.getting_offers').css('display', 'none');
    scope.model.set('resize', true);
  });


}

function creditPayment_setupCardScreen(scope) {

  var creditPayModel = scope.model.get('creditPayModel');
  var walletModel = scope.model.get('walletModel');
  var wallet = walletModel.get('wallet');

  creditPayModel.set('wallet', wallet)
  creditPayModel.set('credit_use_wallet', false);
  
  var wallet_data = walletModel.get('wallet_data');

  if(wallet_data != null) {
    scope.creditFilter(wallet); 
  }

  creditPayModel.set('wallet_data', wallet_data);
  
  scope.creditPayment_renderCardScreenContent(scope)

}

function creditPayment_renderCardScreenContent(scope) {

  var creditPayModel = scope.model.get('creditPayModel');
  var walletModel = scope.model.get('walletModel');
  var isOpera = Utils.detectMobileDevice().Opera();
  var wallet = creditPayModel.get('wallet');

  scope.$el.find('#CreditDetailsForm .card_screen').html(Credit_CardFormTemplate({ baseUrl: window.IpgApp.baseUrl, wallet: wallet, inputCard: !creditPayModel.get('credit_use_wallet'), isOpera: isOpera }));

  if (creditPayModel.get('selectedPaymentMethod')) {
    scope.showSelectedCard_credit(scope.model.get('creditPayModel').get('selectedPaymentMethod'));
    
    scope.model.get('creditPayModel').set('cardConfigurations', scope.model.get('creditPayModel').get('selectedPaymentMethod'));
    scope.model.get('creditPayModel').setConfigSettings();
    new CvvExpiryPin({ model: scope.model });

    if (scope.model.get('creditPayModel').get('selectedPaymentMethod').enableFingerPrint == true) {
      scope.$el.find('.fingerprint-enabled-wrapper').addClass('show');
      scope.model.get('fingerprintModel').set('key', scope.model.get('creditPayModel').get('selectedPaymentMethod').cookieKey);
    }

    scope.model.set('resize', true);

  }



  var parsleyFormCard = scope.$el.find('#CreditDetailsForm .card_screen form').parsley();

  parsleyFormCard.on('form:error', function () {
    scope.model.set('resize', true);
    scope.model.set('parsley-error', true);
  });

  scope.floatLabel();
  scope.$el.find('#CreditDetailsForm input#Cc-credit').payment('formatCardNumber');
  scope.$el.find('#CreditDetailsForm input#CCexpiry_credit').payment('formatCardExpiry');
  scope.$el.find('#CreditDetailsForm input#Cvv_credit').payment('formatCardCVC');
  scope.$el.find('#CreditDetailsForm input#Pin_credit').payment('restrictNumeric');
 
  new CardType_Dropdown();

  Tippy('#cvvTooltip_credit', {
    html: document.querySelector('#cvvTooltipTemplate_credit'),
    position: 'top',
    arrow: true,
    theme: 'webpay'
  });

  setTimeout(function () {
    scope.$el.find('#CreditDetailsForm input').removeAttr('readonly');
  }, 0);


  scope.model.set('resize', true);
  scope.parsleyValidator();

  scope.$el.find('#CreditDetailsForm .card_screen form').parsley().reset();

  var selectedOffer = scope.model.get('creditPayModel').get('selectedOffer');

  var loanProviderName = selectedOffer.provider.name;

  var loanAmount = selectedOffer.amountOffered;

  var headerTextContainer = scope.$el.find('#CreditDetailsForm .card_screen .header span');
  headerTextContainer.html(loanProviderName + ' - ' + getCountrySymbol(selectedOffer.currency) + formatAmount(loanAmount / 100));

  var randomKeys = Utils.randomKeys();
  scope.$el.find('#CreditDetailsForm #CardPin_credit').html(pinTemplate); 


  scope.$el.find('#CreditDetailsForm #RandomPinpad_credit').html(pinPadTemplate({ randomNumbers: randomKeys }));
  scope.$el.find('#CreditDetailsForm .ipg--cardpin').addClass('show');
  if (Utils.detectMobileDevice().any()) {
    scope.$el.find('#CreditDetailsForm #CardPin_credit #Pin_credit').removeAttr('readonly');
  }
  

  //clean up form

}


//////////////////////////////////////////////////////////////
//Setup/Hooks Functionality[END]//////////////////////////////
//////////////////////////////////////////////////////////////







//////////////////////////////////////////////////////////////
//Number Screen Functionality[START]//////////////////////////
//////////////////////////////////////////////////////////////

function creditPayment_numberScreenSubmitHandler(evt) {

  evt.preventDefault();
  evt.stopImmediatePropagation();

  var scope = this;

  var buttonLoader = new ButtonLoader({ el: scope.$el.find('#CreditDetailsForm .number_screen form button[type=submit]') });

  var customerId = scope.$el.find('input#creditPayment_phoneNumber').val();

  //convert to proper format
  if (customerId[0] == '0') {
    customerId = '234' + customerId.substring(1);
  }

  scope.model.get('creditPayModel').set('customerId', customerId);
  scope.model.get('creditPayModel').set('paymentId', scope.model.get('merchantModel').get('paymentId'));

  var promise = scope.model.get('creditPayModel').generateOTP();

  promise.success(function (paymentResponse) {
    buttonLoader.resetButton();

    if (paymentResponse.responseCode == '00') {
      scope.creditPayment_navigateToScreen('otp');
      return;
    }

    var responseHandler = new Response('payment', paymentResponse);
    var response = responseHandler.getResponse();
    scope.model.set('responseData', response.model());

  });

  promise.error(function (error) {
    buttonLoader.resetButton();

    var error = ErrorHandler.handleError(error);
    var data = JSON.parse(error.responseText);

    var responseHandler = new Response('payment', data);
    var response = responseHandler.getResponse();

    scope.model.set('responseData', response.model());
  });
}


//////////////////////////////////////////////////////////////
//Number Screen Functionality[END]////////////////////////////
//////////////////////////////////////////////////////////////








//////////////////////////////////////////////////////////////
//OTP Screen Functionality[START]/////////////////////////////
//////////////////////////////////////////////////////////////

function creditPayment_otpScreenSubmitHandler(evt) {

  evt.preventDefault();
  evt.stopImmediatePropagation();

  var scope = this;

  var buttonLoader = new ButtonLoader({ el: scope.$el.find('#CreditDetailsForm .otp_screen form button[type=submit]') });

  var otp = scope.$el.find('input#creditPayment_otp').val();

  scope.model.get('creditPayModel').set('otp', otp);

  var validateOtpPromise = scope.model.get('creditPayModel').validateOTP();
  

  validateOtpPromise.success(function (paymentResponse) {

    if (paymentResponse.responseCode != '00') {

      buttonLoader.resetButton();
      var responseHandler = new Response('payment', paymentResponse);
      var response = responseHandler.getResponse();
      scope.model.set('responseData', response.model());
      scope.creditPayment_navigateToScreen('number');
      return;
    }

    scope.model.get('creditPayModel').set('amount', scope.model.get('merchantModel').get('amount'));
    scope.model.get('creditPayModel').set('merchantCode', scope.model.get('merchantModel').get('merchantCode'));
    buttonLoader.resetButton();
    scope.creditPayment_navigateToScreen('offers');
    
  });

  validateOtpPromise.error(function (error) {

    buttonLoader.resetButton();

    var error = ErrorHandler.handleError(error);
    var data = JSON.parse(error.responseText);

    var responseHandler = new Response('payment', data);
    var response = responseHandler.getResponse();

    scope.model.set('responseData', response.model());

  });
}

function creditPayment_otpScreenBackHandler(evt) {
  evt.preventDefault();
  evt.stopImmediatePropagation();

  var scope = this;

  scope.creditPayment_navigateToScreen('number');

}

function creditPayment_otpScreenResendOtpHandler(evt) {
  var scope = this;

  if (sendingOtp) {
    return;
  }

  sendingOtp = true;
  scope.$el.find('.otp-controls-button.credit div').html('Sending...');

  var promise = scope.model.get('creditPayModel').generateOTP();

  promise.success(function (response) {

    scope.$el.find('.otp-controls-button.credit div').html('OTP Sent');
    scope.$el.find('.otp-controls-button.credit div').addClass('success');

    setTimeout(function () {
      sendingOtp = false;
      scope.$el.find('.otp-controls-button.credit div').html('Resend OTP');
      scope.$el.find('.otp-controls-button.credit div').removeClass('success');
    }, 2000);
  });

  promise.error(function (error) {

    scope.$el.find('.otp-controls-button.credit div').html('Error. Try again');
    scope.$el.find('.otp-controls-button.credit div').addClass('error');

    setTimeout(function () {
      sendingOtp = false;
      scope.$el.find('.otp-controls-button.credit div').html('Resend OTP');
      scope.$el.find('.otp-controls-button.credit div').removeClass('error');
    }, 2000);
  });
}


//////////////////////////////////////////////////////////////
//OTP Screen Functionality[END]///////////////////////////////
//////////////////////////////////////////////////////////////






/////////////////////////////////////////////////////////////
//Card OTP Screen functionlity [START]//////////////////////
///////////////////////////////////////////////////////////

function creditPayment_otpCardScreenHandler() {

  var scope = this;
  var useWallet = scope.model.get('creditPayModel').get('credit_use_wallet');

  var configData = creditPayment_generateSecureData(scope);

  var buttonLoader = new ButtonLoader({ el: scope.$el.find('#CreditDetailsForm .card_screen form button[type=submit]') });

  var generateCardOtpPostData = {
    customerId: scope.model.get('creditPayModel').get('customerId'),
    secureData: configData.secureData,
    offerId: scope.model.get('creditPayModel').get('selectedOffer').offerId,
    providerCode: scope.model.get('creditPayModel').get('selectedOffer').provider.code,
    transactionRef: scope.model.get('merchantModel').get('merchantTransactionReference'),
    pinBlock: configData.pinBlock,
    
  };

  if(useWallet) {
    generateCardOtpPostData = {
      customerId: scope.model.get('creditPayModel').get('customerId'),
      secureData: configData.secureData,
      offerId: scope.model.get('creditPayModel').get('selectedOffer').offerId,
      providerCode: scope.model.get('creditPayModel').get('selectedOffer').provider.code,
      transactionRef: scope.model.get('merchantModel').get('merchantTransactionReference'),
      pinBlock: configData.pinBlock,
      cardHash: scope.model.get('creditPayModel').get('selectedPaymentMethod').cardHash,
      instrumentIdentifier: scope.model.get('creditPayModel').get('selectedPaymentMethod').cardIdentifier,
      walletIdentifier: scope.model.get('creditPayModel').get('selectedPaymentMethod').walletInstrumentIdentifier,
    }
  }



  scope.model.get('creditPayModel').set('generateCardOtpPostData', generateCardOtpPostData);

  var generateCardOTP = scope.model.get('creditPayModel').generateCardOTP();

  generateCardOTP.success(function(paymentResponse){
    buttonLoader.resetButton();

    if (paymentResponse.responseCode == "T0") {
        // display message for OTP screen
    var message = paymentResponse.message;

    scope.creditPayment_navigateToScreen('otp_card');
    scope.$el.find('#CreditDetailsForm .otp_card_screen form .display--message').html(message);
    scope.model.set('resize', true);
    return;
    }

    var responseHandler = new Response('payment', paymentResponse);
    var response = responseHandler.getResponse();
    scope.model.set('responseData', response.model());

  });

  generateCardOTP.error(function(error) {
    buttonLoader.resetButton();

    var error = ErrorHandler.handleError(error);
    var data = JSON.parse(error.responseText);

    var responseHandler = new Response('payment', data);
    var response = responseHandler.getResponse();

    scope.model.set('responseData', response.model());

  });
}


function creditPayment_otpCardScreenResendOtpHandler(evt) {
 
  var scope = this;

  if (sendingOtp) {
    return;
  }

  sendingOtp = true;
  scope.$el.find('.otp-controls-button.credit div').html('Sending...');

  var promise = scope.model.get('creditPayModel').generateCardOTP();

  promise.success(function (response) {

    scope.$el.find('.otp-controls-button.credit div').html('OTP Sent');
    scope.$el.find('.otp-controls-button.credit div').addClass('success');

    setTimeout(function () {
      sendingOtp = false;
      scope.$el.find('.otp-controls-button.credit div').html('Resend OTP');
      scope.$el.find('.otp-controls-button.credit div').removeClass('success');
    }, 2000);
  });

  promise.error(function (error) {

    scope.$el.find('.otp-controls-button.credit div').html('Error. Try again');
    scope.$el.find('.otp-controls-button.credit div').addClass('error');

    setTimeout(function () {
      sendingOtp = false;
      scope.$el.find('.otp-controls-button.credit div').html('Resend OTP');
      scope.$el.find('.otp-controls-button.credit div').removeClass('error');
    }, 2000);
  });
}

function creditPayment_otpCardScreenBackHandler(evt) {
  
  evt.preventDefault();
  evt.stopImmediatePropagation();

  var scope = this;

  scope.creditPayment_navigateToScreen('card');

}

function creditPayment_otpCardScreenSubmitHandler(evt) {
  var scope = this;
  evt.preventDefault();
  evt.stopImmediatePropagation();

   scope.creditPayment_acceptOffer();

  // var scope = this;

  // var buttonLoader = new ButtonLoader({ el: scope.$el.find('#CreditDetailsForm .otp_card_screen form button[type=submit]') });

  // var otp = scope.$el.find('input#creditPayment_otp_card').val();

  // scope.model.get('creditPayModel').set('otp', otp);

  // var configData = creditPayment_generateSecureData(scope);
  
  // var validateCardOtpPostData = {
  //   otp: scope.model.get('creditPayModel').get('otp'),
  //   // customerId: scope.model.get('creditPayModel').get('customerId'),
  //   secureData: configData.secureData,
  //   providerCode: scope.model.get('creditPayModel').get('selectedOffer').provider.code,
  //   transactionRef: scope.model.get('merchantModel').get('merchantTransactionReference'),
  //   pinBlock: configData.pinBlock

  // };

  // scope.model.get('creditPayModel').set('validateCardOtpPostData', validateCardOtpPostData);

  // var validateOtpCardPromise = scope.model.get('creditPayModel').validateCardOTP();

  // validateOtpCardPromise.success(function (paymentResponse) {

  //   buttonLoader.resetButton();

  //   if (paymentResponse.responseCode == '00') {
     
  //     scope.creditPayment_acceptOffer();
  //     return;
  //   }

  //   var responseHandler = new Response('payment', paymentResponse);
  //   var response = responseHandler.getResponse();
  //   scope.model.set('responseData', response.model());


  // });

  // validateOtpCardPromise.error(function (error) {

  //   buttonLoader.resetButton();

  //   var error = ErrorHandler.handleError(error);
  //   var data = JSON.parse(error.responseText);

  //   var responseHandler = new Response('payment', data);
  //   var response = responseHandler.getResponse();

  //   scope.model.set('responseData', response.model());

  // });
}


/////////////////////////////////////////////////////////////
//Card OTP Screen functionlity [END]//////////////////////
///////////////////////////////////////////////////////////







//////////////////////////////////////////////////////////////
//Offers Screen Functionality[START]//////////////////////////
//////////////////////////////////////////////////////////////


function creditPayment_constructOffers(data) {

  var scope = this;

  var offers_container_EL = scope.$el.find('.offers_container');
  var no_offers_container_EL = scope.$el.find('.no_offers_container');

  var offersElements = [];

  if (!data || data.length < 1) {


    offers_container_EL.css('display', 'none');
    no_offers_container_EL.css('display', 'block');
    return;
  }

  for (var i = 0; i < data.length; i++) {
    var offerDataEntry = data[i];

    var offer_item_EL = $('<div class="offer_item"></div>');

    var title_section_EL = $('<div class="title_section"></div>');
    title_section_EL.append('<div>' + offerDataEntry.provider.name + '</div>');
    title_section_EL.append('<span class="loan_select_button" data-loan-id="' + offerDataEntry.offerId + '">Select</span>');

    offer_item_EL.append(title_section_EL);


    var loan_details_EL = $('<div class="loan_details"></div>');

    var entry_amount_offered = $('<div class="entry"></div>');
    entry_amount_offered.append('<div class="val_label">Amount Offered:</div>');
    entry_amount_offered.append('<div class="val">' + getCountrySymbol(offerDataEntry.currency) + formatAmount(offerDataEntry.amountOffered / 100) + '</div>');

    var entry_amount_payback = $('<div class="entry"></div>');
    entry_amount_payback.append('<div class="val_label">Payback Amount:</div>');
    entry_amount_payback.append('<div class="val">' + getCountrySymbol(offerDataEntry.currency) + formatAmount(offerDataEntry.amountPayable / 100) + '</div>');

    var entry_payback_time = $('<div class="entry"></div>');
    entry_payback_time.append('<div class="val_label">Payback Time:</div>');
    entry_payback_time.append('<div class="val">' + offerDataEntry.tenure + ' days</div>');

    loan_details_EL.append(entry_amount_offered);
    loan_details_EL.append(entry_amount_payback);
    loan_details_EL.append(entry_payback_time);

    offer_item_EL.append(loan_details_EL);

    offersElements.push(offer_item_EL);
  }


  offers_container_EL.css('display', 'block');
  no_offers_container_EL.css('display', 'none');
  offers_container_EL.html('');

  for (var i = 0; i < offersElements.length; i++) {
    offers_container_EL.append(offersElements[i]);
  }
}

function creditPayment_pageLoader() {
  var scope = this;

  var pageLoader_EL = scope.$el.find('.page_loader');
  var no_offers_container_EL = scope.$el.find('.no_offers_container');

  no_offers_container_EL.css('display', 'none');
  pageLoader_EL.css('display', 'block'); 
  scope.model.set('resize', true);

  return;
}

function creditPayment_selectOffer(evt) {
  var scope = this;
  
  var loanId = $(evt.target).data('loan-id');


  var availableOffers = scope.model.get('creditPayModel').get('availableOffers');


  for (var i = 0; i < availableOffers.length; i++) {
    var entry = availableOffers[i];

    if (entry.offerId == loanId) {
      scope.model.get('creditPayModel').set('selectedOffer', entry);
      scope.creditPayment_navigateToScreen('card');
      break;
    }

  }


}

function creditPayment_offersScreenBackHandler(evt) {
  evt.preventDefault();
  evt.stopImmediatePropagation();

  var scope = this;

  scope.creditPayment_navigateToScreen('number');

}

//////////////////////////////////////////////////////////////
//Offers Screen Functionality[END]////////////////////////////
//////////////////////////////////////////////////////////////





//////////////////////////////////////////////////////////////
//Card Screen Functionality[START]////////////////////////////
//////////////////////////////////////////////////////////////

function creditPayment_cardScreenBackHandler(evt) {
  evt.preventDefault();
  evt.stopImmediatePropagation();

  var scope = this;
  scope.model.get('creditPayModel').set('credit_use_wallet', false);

  scope.creditPayment_navigateToScreen('offers');
}


function creditPayment_showPin() {
  if (!Utils.detectMobileDevice().any()) {
    this.$el.find('#RandomPinpad_credit .ipg-pinpads-wrapper').addClass('show');
    this.model.set('resize', true);
    this.$el.find('#Pin_credit').trigger('blur');

  }
  this.floatLabel();
}

function creditPayment_updateInput(evt) {
  evt.stopImmediatePropagation();
  var pinElem = $(evt.target),
    pinElemInput = this.$el.find('#Pin_credit'),
    pinval = pinElemInput.val().toString(),
    pinPadValue = pinElem.attr('data-key-value');

  pinElemInput.trigger('focus');
  if (!(pinPadValue == 'Del' || pinPadValue == 'Clr')) {
    if (pinval.length < 4) {
      pinElemInput.val(pinval + pinPadValue);
    }
  }
  if (pinPadValue == 'Del') {
    this.creditPayment_deletePinField();
  }

  if (pinPadValue == 'Clr') {
    this.creditPayment_clearPinField();
  }
}

function creditPayment_deletePinField() {
  var pinElemInput = this.$el.find('#Pin_credit');
  var pinElemVal = pinElemInput.val();

  pinElemInput.val(pinElemVal.substring(0, pinElemVal.length - 1));
}

function creditPayment_clearPinField() {
  this.$el.find('#Pin_credit').val('');
}











function creditPayment_cardScreenSubmitHandler(evt) {
  evt.preventDefault();
  evt.stopImmediatePropagation();

  var scope = this;

  scope.creditPayment_otpCardScreenHandler();
  return;

}

function creditPayment_acceptOffer() {

  var scope = this;

  var buttonLoader = new ButtonLoader({ el: scope.$el.find('#CreditDetailsForm .otp_card_screen form button[type=submit]') });

  var otp = scope.$el.find('input#creditPayment_otp_card').val();

  scope.model.get('creditPayModel').set('otp', otp);

  var configData = creditPayment_generateSecureData(scope);

  var postData = {
    otp: scope.model.get('creditPayModel').get('otp'),
    transactionRef: scope.model.get('merchantModel').get('merchantTransactionReference'),
    merchantCode: scope.model.get('merchantModel').get('merchantCode'),
    payableCode: scope.model.get('merchantModel').get('payableCode'),
    paymentId: scope.model.get('merchantModel').get('paymentId'),
    transactionType: scope.model.get('merchantModel').get('transactionType'),
    deviceInfo: {
      deviceId: " "
    },
    offerId: scope.model.get('creditPayModel').get('selectedOffer').offerId,
    secureData: configData.secureData,
    pinBlock: configData.pinBlock,
    providerCode: scope.model.get('creditPayModel').get('selectedOffer').provider.code,
    customerId: scope.model.get('creditPayModel').get('customerId')
  
  };

  if (scope.model.get('creditPayModel').get('selectedPaymentMethod')) {
   postData = {
    otp: scope.model.get('creditPayModel').get('otp'),
    transactionRef: scope.model.get('merchantModel').get('merchantTransactionReference'),
    merchantCode: scope.model.get('merchantModel').get('merchantCode'),
    payableCode: scope.model.get('merchantModel').get('payableCode'),
    paymentId: scope.model.get('merchantModel').get('paymentId'),
    transactionType: scope.model.get('merchantModel').get('transactionType'),
    deviceInfo: {
      deviceId: " "
    },
    offerId: scope.model.get('creditPayModel').get('selectedOffer').offerId,
    cardHash: scope.model.get('creditPayModel').get('selectedPaymentMethod').cardHash,
    secureData: configData.secureData,
    pinBlock: configData.pinBlock,
    providerCode: scope.model.get('creditPayModel').get('selectedOffer').provider.code,
    customerId: scope.model.get('creditPayModel').get('customerId'),
    cardTypeCode: scope.model.get('creditPayModel').get('selectedPaymentMethod').cardTypeCode,
    instrumentIdentifier: scope.model.get('creditPayModel').get('selectedPaymentMethod').cardIdentifier,
    issuerId: scope.model.get('creditPayModel').get('selectedPaymentMethod').issuer.id,
    walletIdentifier: scope.model.get('creditPayModel').get('selectedPaymentMethod').walletInstrumentIdentifier,
    walletInfo: {
      walletCardName: scope.model.get('creditPayModel').get('selectedPaymentMethod').name,
      walletId: scope.model.get('creditPayModel').get('customerId'),
      walletIdentifier: scope.model.get('creditPayModel').get('selectedPaymentMethod').walletInstrumentIdentifier
      }
   }
  } 


  scope.model.get('creditPayModel').set('postData', postData);

  var acceptCreditpromise = scope.model.get('creditPayModel').acceptCredit();

  acceptCreditpromise.success(function (paymentResponse) {
    buttonLoader.resetButton();

    var responseHandler = new Response('payment', paymentResponse);
    var response = responseHandler.getResponse();

    scope.model.set('responseData', response.model());
  });

  acceptCreditpromise.error(function (error) {
    buttonLoader.resetButton();

    var error = ErrorHandler.handleError(error);
    var data = JSON.parse(error.responseText);

    var responseHandler = new Response('payment', data);
    var response = responseHandler.getResponse();

    scope.model.set('responseData', response.model());
  });
  

}

function creditPayment_generateSecureData(scope) {
  var useWallet = scope.model.get('creditPayModel').get('credit_use_wallet');
  var selectedPaymentMethod = scope.model.get('creditPayModel').get('selectedPaymentMethod');

  var pan = ''; 

  if (useWallet) {
    pan = selectedPaymentMethod.cardHash;
  } else {
    pan = scope.$el.find('#Cc-credit').val();
  }

  var amount = scope.model.get('merchantModel').get('amount');
  var pin = scope.$el.find('input#Pin_credit').val();
  var cvv = scope.$el.find('input#Cvv_credit').val();;
  var expiry = null;

  //Get expiry date
  if (Utils.detectMobileDevice().Opera()) {
    // var cardExpiryMonth = this.$el.find('input#CCexpiryMonth').val();
    // var cardExpiryYear = this.$el.find('input#CCexpiryYear').val();
    // if (cardExpiryMonth.trim() && cardExpiryYear.trim()) {
    //   cardExpiryMonth = cardExpiryMonth < 10 ? "0" + parseInt(cardExpiryMonth) : "" + cardExpiryMonth;
    //   var expiryObj = $.payment.cardExpiryVal(cardExpiryMonth + '/' + cardExpiryYear);
    //   expiry = getExpiry(expiryObj);
    // }

  } else {
    if (scope.$el.find('input#CCexpiry_credit').val()) {
      var expiryObj = scope.$el.find('input#CCexpiry_credit').payment('cardExpiryVal');
      expiry = getExpiry(expiryObj);
    } else {
      expiry = "";
    }
  }
  //Get expiry date[END]



  var secureData = {
    publicKeyExponent: APP_DATA.PUBLIC_KEY_EXPONENTS,
    publicKeyModulus: APP_DATA.PUBLIC_KEY_MODULES,
    pan: pan,
    mobile: "",
    amount: amount,
    pin: pin,
    cvv: cvv,
    expiry: expiry
  };


  var generatedSecure = Utils.generateSecureData(secureData);

  return {
    secureData: generatedSecure.secure,
    pinBlock: generatedSecure.pinBlock
  };

}

function getExpiry(expiryObj) {
  var expiryMonth, expiryYear, expiry;
  if (!isNaN(expiryObj.month) || !isNaN(expiryObj.year)) {
    expiryMonth = expiryObj.month < 10 ? 0 + "" + expiryObj.month : expiryObj.month;
    expiryYear = expiryObj.year.toString();
    expiryYear = expiryYear.slice(-2);
    expiry = expiryYear + "" + expiryMonth;
  }
  return expiry;
}

function getExpiryObj(expiryObj) {
  var expiryMonth, expiryYear, expiry;
  if (!isNaN(expiryObj.month) || !isNaN(expiryObj.year)) {
    expiryMonth = expiryObj.month < 10 ? 0 + "" + expiryObj.month : expiryObj.month;
    expiryYear = expiryObj.year.toString();
    expiry = {
      month: expiryMonth,
      year: expiryYear
    }
  }
  return expiry;
}
//////////////////////////////////////////////////////////////
//Card Screen Functionality[END]//////////////////////////////
//////////////////////////////////////////////////////////////




//////////////////////////////////////////////////////////////
//Util functions[START]///////////////////////////////////////
//////////////////////////////////////////////////////////////

function formatAmount(val) {
  var amount = val + "";
  return amount.replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,");
}

function getCountrySymbol(val) {
  var code;
  code = countryNumberCodes[val];
  return code ? (countryCurrencyCodes[code] ? countryCurrencyCodes[code] : "") : "";
}


//////////////////////////////////////////////////////////////
//Util functions[END]/////////////////////////////////////////
//////////////////////////////////////////////////////////////



/////////////////////////////////////////////////////////////
//////Credit Login//////////////////////////////////////////
////////////////////////////////////////////////////////////
function creditLoginHandler(evt) {
  var scope = this;
  evt.stopImmediatePropagation();

  scope.model.set('resize'. true);
  scope.model.set('page_proceed', Login)
}





//////////////////////////////////////////////////////////
//////Credit Login card-page handlers[START]///////////////////
/////////////////////////////////////////////////////////

function showCreditWallet() {
  var scope = this;
  var walletModel = scope.model.get('walletModel');
  
  $('.ipg--content--container').css({ overflow: "visible" });

  if (walletModel.get('wallet') && walletModel.get('wallet').length) {
    var dropdown = this.$el.find('#CreditDetailsForm #CardInWallet ul:not(:visible)');
    dropdown.addClass('isvisible');
    var animate = TweenLite.from(dropdown, 0.15, {
      y: "-15",
      opacity: "0.7",
      clearProps: "y,opacity",
      onComplete: function () { }
    });
  } 
  // scope.model.set('resize'. true);
  
}

function selectNewCard_credit() {
  var scope = this;

  var creditPayModel = scope.model.get('creditPayModel');
  creditPayModel.set('credit_use_wallet', false);
  scope.model.get('creditPayModel').set('selectedPaymentMethod', null);

  creditPayment_setupCardScreen(scope);
  scope.$el.find('#Cc-credit').focus();
  scope.triggerChangeonCvc_credit(selectCard_credit.cardTypeName);

  setTimeout(function () {
    scope.$el.find('.CardPinLabel').html('Card PIN');
  }, 0);

  scope.$el.find('.fingerprint-enabled-wrapper').removeClass('show');
  this.model.set('resize', true);
}

function selectCard_credit(evt) {
  var scope = this;
  var creditPayModel = scope.model.get('creditPayModel')
  var wallet = creditPayModel.get('wallet');
  var _elem, index, selectedCard, walletList, selectedTmpl;
  _elem = $(evt.currentTarget);

  index = _elem.data('index');
  walletList = wallet;
  selectedCard = walletList[index];
  creditPayModel.set('selectedPaymentMethod', selectedCard);
  creditPayModel.set('credit_use_wallet', true);
  creditPayment_renderCardScreenContent(scope);

  if (scope.model.get('creditPayModel').get('selectedPaymentMethod')) {
    scope.showSelectedCard_credit(scope.model.get('creditPayModel').get('selectedPaymentMethod'));
    creditPayModel.set('cardConfigurations', scope.model.get('creditPayModel').get('selectedPaymentMethod'));
    creditPayModel.setConfigSettings();
    new CvvExpiryPin({ model: scope.model });

    if (scope.model.get('creditPayModel').get('selectedPaymentMethod').enableFingerPrint == true) {
      scope.$el.find('.fingerprint-enabled-wrapper').addClass('show');
      scope.model.get('fingerprintModel').set('key', this.model.get('creditPayModel').get('selectedPaymentMethod').cookieKey);
    }

    scope.model.set('resize', true);

  }

  if (selectedCard.cardTypeCode == 'VMP') {
    setTimeout(function () {
      scope.$el.find('.CardPinLabel').html('eWallet PIN');
    }, 0);
  }

  // if (selectCard.enableFingerPrint == true) {//
  //   scope.$el.find('.fingerprint-enabled-wrapper').addClass('show');
  //   this.model.get('fingerprintModel').set('key', selectCard.cookieKey);
  // }

  this.triggerChangeonCvc_credit(selectedCard.cardTypeName);

  this.model.set('resize', true);
}

function triggerChangeonCvc_credit(cardType) {
  var type, that = this;

  if (cardType) {
    if (cardType.match(/verve/)) {
      type = 'verve';
    } else if (cardType.match(/visa/)) {
      type = 'visa';

    } else if (cardType.match(/master/)) {
      type = 'master';
    } else {
      type = 'verve';
    }
  }


  setTimeout(function () {
    that.$el.find('#Cvv_credit').trigger('cardChange', type);
  }, 0);
}

function newCardInput_credit() {
  var scope = this;
  var creditPayModel = scope.model.get('creditPayModel');
  creditPayModel.set('credit_use_wallet', false);
  if (scope.$el.find('#Cc-credit').val().trim()) {
    scope.close_Credit();
  } else {
    scope.showCreditWallet();
  }

  scope.$el.find('.fingerprint-enabled-wrapper').removeClass('show');

  scope.model.set('resize', true);
}

function close_Credit() {
  var scope = this;
 
  scope.$el.find('#CardInWallet ul').removeClass('isvisible');
  $('.ipg--content--container').css({ overflow: "hidden" });
 

}

function handleCardFieldBlur_credit(evt) {
  evt.preventDefault();
  evt.stopImmediatePropagation();

  var scope = this;

  this.getCardConfiguration(evt);

  var val = this.$el.find(evt.target).val();

  if (val.length >= 12) {

    var statusData = scope.model.get('creditPayModel').getConfigData();
    scope.model.get('fingerprintModel').set('statusData', statusData);

    var fingerprintStatusPromise = scope.model.get('fingerprintModel').getFingerprintStatus();

    fingerprintStatusPromise.success(function (response) {
      if (response.status == true) {//response.status == true
        scope.$el.find('.fingerprint-enabled-wrapper').addClass('show');
        scope.model.get('fingerprintModel').set('key', response.key);
      }
    });

    fingerprintStatusPromise.error(function (error) {

    });

  }
  this.model.set('resize', true);

}

function showSelectedCard_credit(selectCard) {
  var scope = this;
  selectCard.baseUrl = window.IpgApp.baseUrl;
  var selectedTmpl = selectedCardTmpl(selectCard);
  scope.$el.find('#CreditDetailsForm #SelectedCard_credit').html(selectedTmpl);
  scope.$el.find('#CreditDetailsForm #SelectedInputWrapper-credit').css({
    visibility: 'visible'
  });
}

//////////////////////////////////////////////////////////
//////Credit Login card-page handlers[END]//////////////////////
/////////////////////////////////////////////////////////


function creditFilter(wallet) {
  var scope = this;
  
  var _wallet = [],
      acceptedCards = [],
      _maskedPan,
      maskedLastindexOf,
      ecashIndex,
      ecashCard;

  for (var i = 0, len = wallet.length; i < len; i++) {
      _card = wallet[i];
      _maskedPan = _card.maskedPan;

      if (_card.cardTypeCode == 'VMP') {
              _maskedPan = _card.accountNumber || _maskedPan;
       }
      maskedLastindexOf = _maskedPan.lastIndexOf("*") + 1;
      _card.lastCardNumber = _maskedPan.substr(maskedLastindexOf, _maskedPan.length);
      _card.cardTypeName = _card.cardTypeName.toLowerCase();
      _card.walletLabel = _card.issuer.name + " (**" + _card.lastCardNumber + ")";
      _card.maskedPanLabel = "(**" + _card.lastCardNumber + ")";


      if (_card.cardTypeCode == 'VVC' || _card.cardTypeCode == 'MCC') {
          acceptedCards.push(_card)
      }

  }
  
  _wallet =  acceptedCards;
  scope.model.get('creditPayModel').set('wallet',_wallet);
}

 
module.exports = {
  setupCreditPayment: setupCreditPayment,
  creditPayment_navigateToScreen: creditPayment_navigateToScreen,

  creditPayment_numberScreenSubmitHandler: creditPayment_numberScreenSubmitHandler,

  creditPayment_otpScreenSubmitHandler: creditPayment_otpScreenSubmitHandler,
  creditPayment_otpScreenBackHandler: creditPayment_otpScreenBackHandler,
  creditPayment_otpScreenResendOtpHandler: creditPayment_otpScreenResendOtpHandler,

  creditPayment_constructOffers: creditPayment_constructOffers,
  creditPayment_selectOffer: creditPayment_selectOffer,
  creditPayment_offersScreenBackHandler: creditPayment_offersScreenBackHandler,

  creditPayment_cardScreenBackHandler: creditPayment_cardScreenBackHandler,
  creditPayment_showPin: creditPayment_showPin,
  creditPayment_updateInput: creditPayment_updateInput,
  creditPayment_deletePinField: creditPayment_deletePinField,
  creditPayment_clearPinField: creditPayment_clearPinField,
  creditPayment_cardScreenSubmitHandler: creditPayment_cardScreenSubmitHandler,
  creditLoginHandler: creditLoginHandler,
  creditPayment_pageLoader: creditPayment_pageLoader,
  creditPayment_setupOffersScreen: creditPayment_setupOffersScreen,
  showCreditWallet : showCreditWallet,
  selectNewCard_credit: selectNewCard_credit,
  showSelectedCard_credit: showSelectedCard_credit,
  selectCard_credit: selectCard_credit,
  triggerChangeonCvc_credit: triggerChangeonCvc_credit,
  newCardInput_credit: newCardInput_credit,
  handleCardFieldBlur_credit: handleCardFieldBlur_credit,
  creditPayment_renderCardScreenContent: creditPayment_renderCardScreenContent,
  creditPayment_otpCardScreenHandler: creditPayment_otpCardScreenHandler,
  creditPayment_otpCardScreenSubmitHandler: creditPayment_otpCardScreenSubmitHandler,
  creditPayment_acceptOffer: creditPayment_acceptOffer,
  creditPayment_otpCardScreenResendOtpHandler: creditPayment_otpCardScreenResendOtpHandler,
  creditPayment_otpCardScreenBackHandler: creditPayment_otpCardScreenBackHandler,
  close_Credit: close_Credit,
  creditFilter: creditFilter,

}
},{"../../../config/app.data":34,"../../../models/country":46,"../../../models/currency":47,"../../../models/response_model":60,"../../../models/util_error_handler":63,"../../../utils/utils":71,"../../profile/login":121,"../../utils/button_loader":132,"../../utils/page_loader":134,"../card_type_credit":80,"../card_type_credit_dropdown":81,"../cvv_expiry_pin_credit":83,"../templates/payment_options/credit_card.hbs":98,"../templates/payment_options/pin_credit.hbs":101,"../templates/payment_options/pin_pad_credit.hbs":102,"../templates/selected_card.hbs":106,"tippy.js":31}],87:[function(require,module,exports){
var Response = require('../../../models/response_model');
var PayWithMobileComplete = require('../pay_with_mobile_complete');
var ButtonLoader = require('../../utils/button_loader');
var ErrorHandler = require('../../../models/util_error_handler');

function setupMobilePayment() {
  var scope = this;

  var providersArray = [];

  var paymentMethods = scope.model.get('merchantModel').get('nonCardOptions');

  for (var i = 0; i < paymentMethods.length; i++) {
    if (paymentMethods[i].providerCode == 'mobile') {
      var mobileProvider = paymentMethods[i];
      if (mobileProvider.additionalInformation && mobileProvider.additionalInformation.providers) {
        var temp = mobileProvider.additionalInformation.providers;
        for (var j = 0; j < temp.length; j++) {
          providersArray.push({
            providerId: temp[j].providerId,
            paymentLabel: temp[j].paymentLabel,
            country: temp[j].country
          })
        }
      }
    }
  }


  var optionsContent = '';

  for (var i = 0; i < providersArray.length; i++) {
    optionsContent += "<div class='item' value='" + providersArray[i].providerId + ":" + providersArray[i].country + "'>" + providersArray[i].paymentLabel + "</div>";
  }

  scope.$el.find('.payment-type-section.mobile .dropdown-component-wrapper .main-text').html('Select a provider');
  scope.$el.find('.payment-type-section.mobile .dropdown-component-wrapper .main-text').attr('value', '');

  scope.$el.find('.payment-type-section.mobile .dropdown-component-wrapper .dropdown-wrapper').html(optionsContent);


  //Attach listeners
  scope.$el.find('.payment-type-section.mobile .dropdown-component-wrapper .main-wrapper').click(function (evt) {
    evt.stopPropagation();
    scope.$el.find('.payment-type-section.mobile .dropdown-component-wrapper .dropdown-wrapper').addClass('show');
  });


  scope.$el.find('.payment-type-section.mobile .dropdown-component-wrapper .dropdown-wrapper .item').click(function (evt) {
    evt.stopImmediatePropagation();

    scope.$el.find('.payment-type-section.mobile .provider .error').removeClass("show");
    var value = $(evt.target).attr('value');
    var label = $(evt.target).html();

    scope.$el.find('.payment-type-section.mobile .dropdown-component-wrapper .main-text').attr('value', value);
    scope.$el.find('.payment-type-section.mobile .dropdown-component-wrapper .main-text').html(label);

    scope.$el.find('.payment-type-section.mobile .dropdown-component-wrapper .dropdown-wrapper').removeClass('show');

    //set value on model
    var temp = value.split(":");
    var providerId = temp[0];
    var country = temp[1];

    scope.model.get('mobilePayModel').set('providerCode', providerId);
    scope.model.get('mobilePayModel').set('country', country);

    scope.model.set('resize', true);
  });


  $(document).click(function (evt) {
    scope.$el.find('.payment-type-section.mobile .dropdown-component-wrapper .dropdown-wrapper').removeClass('show');
  });

  scope.$el.find('.payment-type-section.mobile .mobile-number input').on('keypress', function (e) {handleEvent_keypress_mobile_number(e, scope)});
  scope.$el.find('.payment-type-section.mobile .mobile-number input').on('input', function (e) {handleEvent_input_mobile_number(e, scope)});
}

function payWithMobile(evt) {
  evt.preventDefault();
  evt.stopImmediatePropagation();

  var scope = this;


  var providerValid = validateProvider(scope);
  var mobileNumberValid = validateMobileNumber(scope);

  if (!providerValid || !mobileNumberValid) {
    return;
  }

  var buttonLoader = new ButtonLoader({ el: scope.$el.find('button[type=submit]') });

  var merchantModel = scope.model.get('merchantModel');

  var merchantCode = merchantModel.get('merchantCode');
  var paymentId = merchantModel.get('paymentId');



  var mobilePayModel = scope.model.get('mobilePayModel');

  var providerCode = mobilePayModel.get('providerCode');
  var primaryIdentifier = scope.$el.find('.payment-type-section.mobile .mobile-number input').val();
  var country = mobilePayModel.get('country');



  var paymentParams = {
    merchantCode: merchantCode,
    providerCode: providerCode,
    primaryIdentifier: primaryIdentifier,
    additionalInformation: {
      country: country
    },
    paymentId: paymentId
  }

  mobilePayModel.set('payData', paymentParams);


  var payPromise = mobilePayModel.pay();

  payPromise.success(function (paymentResponse, status) {
    buttonLoader.resetButton('Pay');

    if (paymentResponse.responseCode == "00") {
      scope.model.set('page_proceed', PayWithMobileComplete);
      return;
    }

    var responseHandler = new Response('payment', paymentResponse);
    var response = responseHandler.getResponse();
    scope.model.set('responseData', response.model());
  });

  payPromise.error(function (err) {
    buttonLoader.resetButton('Pay');

    var error = ErrorHandler.handleError(err);
    var data = JSON.parse(error.responseText);
    data.status = error.status;

    var responseHandler = new Response('payment', data);
    var response = responseHandler.getResponse();
    scope.model.set('responseData', response.model());

  
  });
}


function validateProvider(scope) {
  var valid = true;

  var val = scope.$el.find('.payment-type-section.mobile .dropdown-component-wrapper .main-text').attr('value');

  if (!val || val == "") {
    valid = false;
    scope.$el.find('.payment-type-section.mobile .provider .error').addClass("show");
    scope.model.set('resize', true);
  }

  return valid;
}

function validateMobileNumber(scope) {
  var valid = true;
  var val = scope.$el.find('.payment-type-section.mobile .mobile-number input').val();

  if (!val || val == "") {
    valid = false;
    scope.$el.find('.payment-type-section.mobile .mobile-number .error').addClass("show");
    scope.model.set('resize', true);
  }

  return valid;
}




function handleEvent_keypress_mobile_number(evt, scope) {
  var currentVal = scope.$el.find('.payment-type-section.mobile .mobile-number input').val();

  if (currentVal.length > 12) {
    evt.preventDefault();
  }

  if (evt.charCode < 48 && evt.charCode > 57) {
    evt.preventDefault();
  }
}

function handleEvent_input_mobile_number(evt, scope) {
  evt.stopImmediatePropagation();

  var mobileNumberField = scope.$el.find('.payment-type-section.mobile .mobile-number input');

  var val = mobileNumberField.val();
  val = val.replace(/[^0-9]+/g, "");
  
  if(val.length > 12) {
    val = val.slice(0, 12);
  }

  mobileNumberField.val(val);

  if (val.length > 0) {
    scope.$el.find('.payment-type-section.mobile .mobile-number .error').removeClass('show');
    scope.model.set('resize', true);
  } else {
    scope.$el.find('.payment-type-section.mobile .mobile-number .error').addClass('show');
    scope.model.set('resize', true);
  }
}





module.exports = {
  setupMobilePayment: setupMobilePayment,
  payWithMobile: payWithMobile
}
},{"../../../models/response_model":60,"../../../models/util_error_handler":63,"../../utils/button_loader":132,"../pay_with_mobile_complete":85}],88:[function(require,module,exports){
var Response = require('../../../models/response_model');
var ButtonLoader = require('../../utils/button_loader');
var ErrorHandler = require('../../../models/util_error_handler');


function setupPaycodePayment() {
  var scope = this;

  scope.$el.find('#PaycodeDetailsForm input').removeAttr('readonly');

  var paycodeField = scope.$el.find('.payment-type-section.paycode .paycode-number input');
  paycodeField.on('keypress', function (e) { handleEvent_keypress_paycode(e, scope) });
  paycodeField.on('input', function (e) { handleEvent_input_paycode(e, scope) });

  var pinField = scope.$el.find('.payment-type-section.paycode .pin input');
  pinField.on('keypress', function (e) { handleEvent_keypress_pin(e, scope) });
  pinField.on('input', function (e) { handleEvent_input_pin(e, scope) });

  scope.model.set('resize', true);
}



function payWithPaycode(evt) {
  evt.preventDefault();
  evt.stopImmediatePropagation();

  var scope = this;

  var paycodeValid = validatePaycode(scope);
  var pinValid = validatePin(scope);

  if (!paycodeValid || !pinValid) {
    return;
  }

  var providerCode = null;
  var country = null;

  var paymentMethods = scope.model.get('merchantModel').get('nonCardOptions');

  for (var i = 0; i < paymentMethods.length; i++) {
    if (paymentMethods[i].providerCode == 'paycode') {
      var params = paymentMethods[i];
      if (
        params.additionalInformation
        && params.additionalInformation.providers
        && params.additionalInformation.providers.length > 0) {

        providerCode = params.additionalInformation.providers[0].providerId;
        country = params.additionalInformation.providers[0].country;
      }

    }
  }


  var buttonLoader = new ButtonLoader({ el: scope.$el.find('button[type=submit]') });

  var merchantModel = scope.model.get('merchantModel');

  var merchantCode = merchantModel.get('merchantCode');
  var paymentId = merchantModel.get('paymentId');


  var primaryIdentifier = scope.$el.find('.payment-type-section.paycode .paycode-number input').val();
  var pin = scope.$el.find('.payment-type-section.paycode .pin input').val();

  var paymentParams = {
    merchantCode: merchantCode,
    providerCode: providerCode,
    primaryIdentifier: primaryIdentifier,
    additionalInformation: {
      country: country,
      pin: pin
    },
    paymentId: paymentId
  }

  var paycodePayModel = scope.model.get('paycodePayModel');
  paycodePayModel.set('payData', paymentParams);


  var payPromise = paycodePayModel.pay();

  payPromise.success(function (paymentResponse, status) {
    buttonLoader.resetButton('Pay');

    if (paymentResponse.responseCode == "00") {

      var responseHandler = new Response('payment', paymentResponse);
      var response = responseHandler.getResponse();

      setTimeout(function () {
        scope.model.set('responseData', response.model());
      }, 250);

      return;
    }

    var responseHandler = new Response('payment', paymentResponse);
    var response = responseHandler.getResponse();
    scope.model.set('responseData', response.model());
  });

  payPromise.error(function (err) {
    buttonLoader.resetButton('Pay');

    var error = ErrorHandler.handleError(err);
    var data = JSON.parse(error.responseText);
    data.status = error.status;

    var responseHandler = new Response('payment', data);
    var response = responseHandler.getResponse();
    scope.model.set('responseData', response.model());

  });
}



function validatePaycode(scope) {
  var valid = true;
  var val = scope.$el.find('.payment-type-section.paycode .paycode-number input').val();

  if (!val || val == "") {
    valid = false;
    scope.$el.find('.payment-type-section.paycode .paycode-number .error').addClass("show");
    scope.model.set('resize', true);
  }

  return valid;
}



function validatePin(scope) {
  var valid = true;
  var val = scope.$el.find('.payment-type-section.paycode .pin input').val();

  if (!val || val == "") {
    valid = false;
    scope.$el.find('.payment-type-section.paycode .pin .error').addClass("show");
    scope.model.set('resize', true);
  }

  return valid;
}




function handleEvent_keypress_paycode(evt, scope) {
  if (evt.charCode < 48 && evt.charCode > 57) {
    evt.preventDefault();
  }
}

function handleEvent_input_paycode(evt, scope) {
  evt.stopImmediatePropagation();

  var paycodeField = scope.$el.find('.payment-type-section.paycode .paycode-number input');
  
  var val = paycodeField.val();

  val = val.replace(/[^0-9]+/g, "");
  
  paycodeField.val(val);

  if (scope.$el.find('.payment-type-section.paycode .paycode-number input').val().length > 0) {
    scope.$el.find('.payment-type-section.paycode .paycode-number .error').removeClass('show');
    scope.model.set('resize', true);
  } else {
    scope.$el.find('.payment-type-section.paycode .paycode-number .error').addClass('show');
    scope.model.set('resize', true);
  }
}



function handleEvent_keypress_pin(evt, scope) {
  var currentVal = scope.$el.find('.payment-type-section.paycode .pin input').val();

  if (currentVal.length > 3) {
    evt.preventDefault();
  }

  if (evt.charCode < 48 && evt.charCode > 57) {
    evt.preventDefault();
  }
}

function handleEvent_input_pin(evt, scope) {
  evt.stopImmediatePropagation();

  var pinField = scope.$el.find('.payment-type-section.paycode .pin input');

  var val = pinField.val();

  val = val.replace(/[^0-9]+/g, "");
  
  if(val.length > 4) {
    val = val.slice(0, 4);
  }

  pinField.val(val);

  if (val.length > 0) {
    scope.$el.find('.payment-type-section.paycode .pin .error').removeClass('show');
    scope.model.set('resize', true);
  } else {
    scope.$el.find('.payment-type-section.paycode .pin .error').addClass('show');
    scope.model.set('resize', true);
  }
}






module.exports = {
  setupPaycodePayment: setupPaycodePayment,
  payWithPaycode: payWithPaycode
}
},{"../../../models/response_model":60,"../../../models/util_error_handler":63,"../../utils/button_loader":132}],89:[function(require,module,exports){
var Response = require('../../../models/response_model');
var ErrorHandler = require('../../../models/util_error_handler');

var scope = null;


function setupUssdPayment() {
    scope = this;

    //reset form parameters
    var issuers_container_EL = scope.$el.find('.payment-type-section.ussd select');
    issuers_container_EL.html('<option value="" selected>Fetching Banks...</option>');

    var retryButton = scope.$el.find('.payment-type-section.ussd .retry-container div');
    retryButton.css('display', 'none');

    var shortCodeContainer = scope.$el.find('.payment-type-section.ussd .short-code-container');
    shortCodeContainer.html('<a>Select a bank</a>');

    var retryButtonIssuers = scope.$el.find('.payment-type-section.ussd .label-control .label-btn');
    retryButtonIssuers.css('display', 'none');
    //reset end


    setupIssuers();

    pollStatus();

    scope.$el.find('.payment-type-section.ussd .label-control .label-btn').on('click', function (evt) {
        evt.preventDefault();
        evt.stopImmediatePropagation();

        setupIssuers();
    });

    scope.$el.find('.payment-type-section.ussd select').on('change', function (evt) {
        evt.preventDefault();
        evt.stopImmediatePropagation();

        var bankCode = evt.target.value;
        scope.model.get('ussdPayModel').set('bankCode', bankCode);
        generateUssd();
    });

    scope.$el.find('.payment-type-section.ussd .retry-container div').on('click', function (evt) {
        evt.preventDefault();
        evt.stopImmediatePropagation();
        generateUssd();
    });

    scope.model.set('resize', true);
}

function setupIssuers() {

    scope.model.get('ussdPayModel').set('countryCode', 'NG');

    var issuers_container_EL = scope.$el.find('.payment-type-section.ussd select');
    issuers_container_EL.html('<option value="" selected>Fetching Banks...</option>');

    var retryButtonIssuers = scope.$el.find('.payment-type-section.ussd .label-control .label-btn');
    retryButtonIssuers.css('display', 'none');

    var cachedIssuers = scope.model.get('ussdPayModel').get('cachedIssuers');

    if (cachedIssuers) {
        generateIssuers(cachedIssuers);
        return;
    };

    var promise = scope.model.get('ussdPayModel').getIssuers();

    promise.success(function (response) {

        //check if resp is valid
        //to do
        scope.model.get('ussdPayModel').set('cachedIssuers', response);
        generateIssuers(response);
    });

    promise.error(function (error) {
        retryButtonIssuers.css('display', 'inline-block');
        issuers_container_EL.html('<option value="" selected>Failed to fetch banks</option>');

    });
}

function generateIssuers(entries) {
    var options = '<option value="" selected disabled>Select a bank</option>';
    for (var i = 0; i < entries.length; i++) {
        var item = entries[i];
        options += '<option value="' + item.code + '">' + item.name + '</option>>';
    }


    var issuers_container_EL = scope.$el.find('.payment-type-section.ussd select');
    issuers_container_EL.html(options);
}


function generateUssd() {

    var merchantModel = scope.model.get('merchantModel');
    var ussdPayModel = scope.model.get('ussdPayModel');;

    var postData = {
        bankCode: ussdPayModel.get('bankCode'),
        currencyCode: merchantModel.get('currencyCode'),
        merchantCode: merchantModel.get('merchantCode'),
        payableCode: merchantModel.get('payableCode'),
        amount: merchantModel.get('amount'),
        surcharge: merchantModel.get('surcharge'),
        merchantTransactionReference: merchantModel.get('merchantTransactionReference')


    }

    ussdPayModel.set('generatePostData', postData);

    var shortCodeContainer = scope.$el.find('.payment-type-section.ussd .short-code-container');
    shortCodeContainer.html('<a>Generating...</a>');

    var retryButton = scope.$el.find('.payment-type-section.ussd .retry-container div');
    retryButton.css('display', 'none');


    var promise = ussdPayModel.generateUssd();

    promise.success(function (response) {

        if (!response || (!response.bankShortCode && !response.defaultShortCode)) {
            shortCodeContainer.html('<a>Couldn\'t generate a code</a>');
            retryButton.css('display', 'inline-block');
        }

        var shortCode = response.bankShortCode || response.defaultShortCode;
        //to do
        //validate stuff and default
        var shortCodeContainer = scope.$el.find('.payment-type-section.ussd .short-code-container');
        shortCodeContainer.html('<a href="tel:' + encodeURIComponent(shortCode) + '">' + shortCode + '</a>');

    });

    promise.error(function (err) {
        shortCodeContainer.html('Couldn\'t generate a code');
        retryButton.css('display', 'inline-block');
    });
}



function pollStatus() {
    var ussdPayModel = scope.model.get('ussdPayModel');

    ussdPayModel.set('merchantCode', scope.model.get('merchantModel').get('merchantCode'));
    ussdPayModel.set('transactionReference', scope.model.get('merchantModel').get('merchantTransactionReference'));

    var promise = ussdPayModel.pollStatus();

    promise.success(function (paymentResponse) {
        if (paymentResponse.responseCode == "00" || paymentResponse.responseCode == "XS1") {
            var responseHandler = new Response('payment', paymentResponse);
            var response = responseHandler.getResponse();
            scope.model.set('responseData', response.model());
            return;
        }

        if (paymentResponse.responseCode != "00") {
            if (scope.model.get('noncardModel').get('activePaymentMethod') == 'ussd') {
                setTimeout(pollStatus, 5000);
            }
        }
    });

    promise.error(function (response) {
        if (scope.model.get('noncardModel').get('activePaymentMethod') == 'ussd') {
            setTimeout(pollStatus, 5000);
        }
    });
}




module.exports = {
    setupUssdPayment: setupUssdPayment
}
},{"../../../models/response_model":60,"../../../models/util_error_handler":63}],90:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(container,depth0,helpers,partials,data) {
    return "      <div class=\"input-group float-label icon-label  ipg--date half\">\r\n        <label>Expiry Month(MM)</label>\r\n        <div class=\"ipg--icon--svg\">\r\n        </div>\r\n        <input type=\"text\" name=\"cc-expiry\" value=\"\" class=\"input\" style=\"display:none\" />\r\n\r\n        <input readonly type=\"text\" id=\"CCexpiryMonth\" name=\"cc-expiry\" value=\"\" class=\"input\" maxlength=\"2\"\r\n          autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" data-parsley-minlength=\"1\" data-parsley-maxlength=\"2\"\r\n          data-parsley-expirydate data-parsley-expirydate-message=\"Card expired\" data-parsley-maxlength-message=\"Invalid Expiry Date\"\r\n          data-parsley-required-message=\"Card Expiry is required\" data-parsley-minlength-message=\"Invalid Expiry Date\"\r\n          autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" required />\r\n\r\n      </div>\r\n      <div class=\"input-group float-label icon-label  ipg--date half-last\">\r\n        <label> Expiry Year(YY)</label>\r\n        <div class=\"ipg--icon--svg\">\r\n\r\n        </div>\r\n        <input type=\"text\" name=\"cc-expiry\" value=\"\" class=\"input\" style=\"display:none\" />\r\n\r\n        <input readonly type=\"text\" id=\"CCexpiryYear\" name=\"cc-expiry\" value=\"\" class=\"input\" maxlength=\"2\"\r\n          autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" data-parsley-minlength=\"1\" data-parsley-maxlength=\"2\"\r\n          data-parsley-expirydate data-parsley-expirydate-message=\"Card expired\" data-parsley-maxlength-message=\"Invalid Expiry Date\"\r\n          data-parsley-required-message=\"Card Expiry is required\" data-parsley-minlength-message=\"Invalid Expiry Date\"\r\n          autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" required />\r\n\r\n      </div>\r\n\r\n";
},"3":function(container,depth0,helpers,partials,data) {
    return "      <div class=\"input-group float-label icon-label  ipg--date half\">\r\n        <label>MM / YY</label>\r\n        <div class=\"ipg--icon--svg\">\r\n          <svg width=\"25px\" height=\"21px\" viewBox=\"0.000000 -55.714352 27.857176 30.000036\" xmlns=\"\">\r\n            <path d=\"M2.142860 -27.857176L2.142860 -32.678610L6.964294 -32.678610L6.964294 -27.857176ZM8.035724 -27.857176L8.035724 -32.678610L13.392873 -32.678610L13.392873 -27.857176ZM2.142860 -33.750040L2.142860 -39.107189L6.964294 -39.107189L6.964294 -33.750040ZM8.035724 -33.750040L8.035724 -39.107189L13.392873 -39.107189L13.392873 -33.750040ZM2.142860 -40.178619L2.142860 -45.000054L6.964294 -45.000054L6.964294 -40.178619ZM14.464303 -27.857176L14.464303 -32.678610L19.821452 -32.678610L19.821452 -27.857176ZM8.035724 -40.178619L8.035724 -45.000054L13.392873 -45.000054L13.392873 -40.178619ZM20.892882 -27.857176L20.892882 -32.678610L25.714316 -32.678610L25.714316 -27.857176ZM14.464303 -33.750040L14.464303 -39.107189L19.821452 -39.107189L19.821452 -33.750040ZM8.571439 -48.214343C8.571439 -47.929745 8.320322 -47.678628 8.035724 -47.678628L6.964294 -47.678628C6.679695 -47.678628 6.428579 -47.929745 6.428579 -48.214343L6.428579 -53.035778C6.428579 -53.320376 6.679695 -53.571492 6.964294 -53.571492L8.035724 -53.571492C8.320322 -53.571492 8.571439 -53.320376 8.571439 -53.035778ZM20.892882 -33.750040L20.892882 -39.107189L25.714316 -39.107189L25.714316 -33.750040ZM14.464303 -40.178619L14.464303 -45.000054L19.821452 -45.000054L19.821452 -40.178619ZM20.892882 -40.178619L20.892882 -45.000054L25.714316 -45.000054L25.714316 -40.178619ZM21.428597 -48.214343C21.428597 -47.929745 21.177481 -47.678628 20.892882 -47.678628L19.821452 -47.678628C19.536854 -47.678628 19.285737 -47.929745 19.285737 -48.214343L19.285737 -53.035778C19.285737 -53.320376 19.536854 -53.571492 19.821452 -53.571492L20.892882 -53.571492C21.177481 -53.571492 21.428597 -53.320376 21.428597 -53.035778ZM27.857176 -49.285773C27.857176 -50.457649 26.886193 -51.428633 25.714316 -51.428633L23.571457 -51.428633L23.571457 -53.035778C23.571457 -54.508994 22.366098 -55.714352 20.892882 -55.714352L19.821452 -55.714352C18.348236 -55.714352 17.142878 -54.508994 17.142878 -53.035778L17.142878 -51.428633L10.714298 -51.428633L10.714298 -53.035778C10.714298 -54.508994 9.508940 -55.714352 8.035724 -55.714352L6.964294 -55.714352C5.491078 -55.714352 4.285719 -54.508994 4.285719 -53.035778L4.285719 -51.428633L2.142860 -51.428633C0.970983 -51.428633 0.000000 -50.457649 0.000000 -49.285773L0.000000 -27.857176C0.000000 -26.685300 0.970983 -25.714316 2.142860 -25.714316L25.714316 -25.714316C26.886193 -25.714316 27.857176 -26.685300 27.857176 -27.857176ZM27.857176 -49.285773\"\r\n              fill=\"#CCCCCC\"></path>\r\n          </svg>\r\n        </div>\r\n        <input type=\"text\" name=\"cc-expiry\" value=\"\" class=\"input\" style=\"display:none\" />\r\n\r\n        <input readonly type=\"text\" id=\"CCexpiry\" name=\"cc-expiry\" value=\"\" class=\"input\" maxlength=\"7\" autocomplete=\"off\"\r\n          spellcheck=\"false\" autocapitalize=\"off\" data-parsley-minlength=\"7\" data-parsley-maxlength=\"7\"\r\n          data-parsley-expirydate data-parsley-expirymonth data-parsley-expirymonth-message=\"Invalid expiry month\"\r\n          data-parsley-expirydate-message=\"Card expired\" data-parsley-maxlength-message=\"Invalid Expiry Date\"\r\n          data-parsley-required-message=\"Card Expiry is required\" data-parsley-minlength-message=\"Invalid Expiry Date\"\r\n          autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" required />\r\n\r\n      </div>\r\n";
},"5":function(container,depth0,helpers,partials,data) {
    return " ";
},"7":function(container,depth0,helpers,partials,data) {
    return "\r\n    <div class=\"ipg--or--divider\">\r\n      <span class=\"ipg--or--text\">or</span>\r\n    </div>\r\n    <div>\r\n\r\n      <button class=\"btn btn-qt\" type=\"button\" id=\"PayWithWallet\">Login to Verve eWallet</button>\r\n    </div>\r\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, helper, alias1=depth0 != null ? depth0 : {};

  return "<div class=\"ipg-payment-info-form\">\r\n\r\n\r\n\r\n  <div class=\"payment-type-control\">\r\n\r\n    <div class=\"item-wrapper card active\">\r\n\r\n      <div class=\"image-wrapper\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\"\r\n          y=\"0px\" width=\"512px\" height=\"512px\" viewBox=\"0 0 512 512\" style=\"enable-background:new 0 0 512 512;\"\r\n          xml:space=\"preserve\">\r\n          <g>\r\n            <path d=\"M464,64H48C21.6,64,0,85.6,0,112v288c0,26.4,21.6,48,48,48h416c26.4,0,48-21.6,48-48V112C512,85.6,490.4,64,464,64z M48,96   h416c8.674,0,16,7.327,16,16v48H32v-48C32,103.327,39.327,96,48,96z M464,416H48c-8.673,0-16-7.327-16-16V256h448v144   C480,408.673,472.674,416,464,416z M64,320h32v64H64V320z M128,320h32v64h-32V320z M192,320h32v64h-32V320z\" />\r\n          </g>\r\n        </svg>\r\n      </div>\r\n\r\n      <div class=\"text\">Card</div>\r\n\r\n    </div>\r\n\r\n\r\n    <div class=\"item-wrapper qr\">\r\n\r\n      <div class=\"image-wrapper\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\"\r\n          y=\"0px\" width=\"401.994px\" height=\"401.994px\" viewBox=\"0 0 451.994 451.994\" style=\"enable-background:new 0 0 401.994 401.994;\"\r\n          xml:space=\"preserve\">\r\n          <g>\r\n            <path d=\"M0,401.991h182.724V219.265H0V401.991z M36.542,255.813h109.636v109.352H36.542V255.813z\" />\r\n            <rect x=\"73.089\" y=\"292.355\" width=\"36.544\" height=\"36.549\" />\r\n            <rect x=\"292.352\" y=\"365.449\" width=\"36.553\" height=\"36.545\" />\r\n            <rect x=\"365.442\" y=\"365.449\" width=\"36.552\" height=\"36.545\" />\r\n            <polygon points=\"365.446,255.813 328.904,255.813 328.904,219.265 219.265,219.265 219.265,401.991 255.813,401.991     255.813,292.355 292.352,292.355 292.352,328.904 401.991,328.904 401.991,219.265 401.991,219.265 365.446,219.265   \" />\r\n            <path d=\"M0,182.728h182.724V0H0V182.728z M36.542,36.542h109.636v109.636H36.542V36.542z\" />\r\n            <rect x=\"73.089\" y=\"73.089\" width=\"36.544\" height=\"36.547\" />\r\n            <path d=\"M219.265,0v182.728h182.729V0H219.265z M365.446,146.178H255.813V36.542h109.633V146.178z\" />\r\n            <rect x=\"292.352\" y=\"73.089\" width=\"36.553\" height=\"36.547\" />\r\n          </g>\r\n        </svg>\r\n      </div>\r\n\r\n      <div class=\"text\">QR</div>\r\n\r\n    </div>\r\n\r\n\r\n    <div class=\"item-wrapper mobile\">\r\n\r\n      <div class=\"image-wrapper\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\"\r\n          y=\"0px\" viewBox=\"0 0 487.6 487.6\" style=\"enable-background:new 0 0 487.6 487.6;\" xml:space=\"preserve\">\r\n          <g>\r\n            <path d=\"M460.3,216.55h-11.6v-69.7c0-28.5-23.2-51.6-51.6-51.6h-10.7l0.1-25.9c0-19.2-15.6-34.8-34.8-34.8H42.3   c-23.1,0-42,18.6-42.3,41.7c0,0.2,0,0.4,0,0.6v341.4c0,19.2,15.6,34.8,34.8,34.8h362.4c28.5,0,51.6-23.2,51.6-51.6v-69.8h11.6   c15,0,27.2-12.2,27.2-27.2v-60.7C487.5,228.75,475.3,216.55,460.3,216.55z M42.3,58.55h309.4c5.9,0,10.8,4.8,10.8,10.7l-0.1,26   H42.3c-10.1,0-18.3-8.2-18.3-18.3S32.2,58.55,42.3,58.55z M424.7,401.35c0,15.2-12.4,27.6-27.6,27.6H34.7   c-5.9,0-10.8-4.8-10.8-10.8v-303.1c5.6,2.7,11.8,4.2,18.4,4.2h354.8c15.2,0,27.6,12.4,27.6,27.6v69.7h-81.9   c-15,0-27.2,12.2-27.2,27.2v60.7c0,15,12.2,27.2,27.2,27.2h81.9V401.35z M463.5,304.45c0,1.8-1.4,3.2-3.2,3.2H342.9   c-1.8,0-3.2-1.4-3.2-3.2v-60.7c0-1.7,1.4-3.2,3.2-3.2h117.4c1.7,0,3.2,1.4,3.2,3.2L463.5,304.45L463.5,304.45z\" />\r\n          </g>\r\n        </svg>\r\n      </div>\r\n\r\n      <div class=\"text\">Mobile</div>\r\n\r\n    </div>\r\n\r\n\r\n    <div class=\"item-wrapper paycode\">\r\n\r\n      <div class=\"image-wrapper\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\"\r\n          y=\"0px\" viewBox=\"0 0 468.7 468.7\" style=\"enable-background:new 0 0 468.7 468.7;\" xml:space=\"preserve\">\r\n          <g>\r\n            <g>\r\n              <path d=\"M449.35,0h-430c-6.6,0-12,5.4-12,12s5.4,12,12,12h25.9v432.4c0,4.4,2.4,8.5,6.3,10.6s8.6,1.9,12.3-0.6l52.1-34.7    l52.3,34.8c4,2.7,9.3,2.7,13.3,0l52.1-34.7l52.3,34.8c4,2.7,9.3,2.7,13.3,0l52.1-34.7l52.3,34.8c2,1.3,4.3,2,6.6,2    c1.9,0,3.9-0.5,5.7-1.4c3.9-2.1,6.3-6.2,6.3-10.6l-0.2-432.4h27.3c6.6,0,12-5.4,12-12S455.95,0,449.35,0z M398.35,434l-40.3-26.8    c-4-2.7-9.3-2.7-13.3,0l-52.1,34.8l-52.3-34.8c-4-2.7-9.3-2.7-13.3,0l-52.1,34.7l-52.3-34.7c-4-2.7-9.3-2.7-13.3,0l-40.1,26.7    v-410h329L398.35,434z\" />\r\n              <path d=\"M124.45,191.6h125.7c6.6,0,12-5.4,12-12s-5.4-12-12-12h-125.7c-6.6,0-12,5.4-12,12S117.75,191.6,124.45,191.6z\" />\r\n              <path d=\"M124.45,233.3h94.2c6.6,0,12-5.4,12-12s-5.4-12-12-12h-94.2c-6.6,0-12,5.4-12,12S117.75,233.3,124.45,233.3z\" />\r\n              <path d=\"M312.95,191.6h31.4c6.6,0,12-5.4,12-12s-5.4-12-12-12h-31.4c-6.6,0-12,5.4-12,12S306.25,191.6,312.95,191.6z\" />\r\n              <path d=\"M312.95,233.3h31.4c6.6,0,12-5.4,12-12s-5.4-12-12-12h-31.4c-6.6,0-12,5.4-12,12S306.25,233.3,312.95,233.3z\" />\r\n              <path d=\"M124.45,95.3h125.7c6.6,0,12-5.4,12-12c0-6.6-5.4-12-12-12h-125.7c-6.6,0-12,5.4-12,12    C112.45,89.9,117.75,95.3,124.45,95.3z\" />\r\n              <path d=\"M124.45,136.9h94.2c6.6,0,12-5.4,12-12s-5.4-12-12-12h-94.2c-6.6,0-12,5.4-12,12S117.75,136.9,124.45,136.9z\" />\r\n              <path d=\"M312.95,95.3h31.4c6.6,0,12-5.4,12-12c0-6.6-5.4-12-12-12h-31.4c-6.6,0-12,5.4-12,12C300.95,89.9,306.25,95.3,312.95,95.3    z\" />\r\n              <path d=\"M312.95,136.9h31.4c6.6,0,12-5.4,12-12s-5.4-12-12-12h-31.4c-6.6,0-12,5.4-12,12S306.25,136.9,312.95,136.9z\" />\r\n              <path d=\"M124.45,289.1h125.7c6.6,0,12-5.4,12-12s-5.4-12-12-12h-125.7c-6.6,0-12,5.4-12,12S117.75,289.1,124.45,289.1z\" />\r\n              <path d=\"M124.45,330.7h94.2c6.6,0,12-5.4,12-12s-5.4-12-12-12h-94.2c-6.6,0-12,5.4-12,12S117.75,330.7,124.45,330.7z\" />\r\n              <path d=\"M312.95,289.1h31.4c6.6,0,12-5.4,12-12s-5.4-12-12-12h-31.4c-6.6,0-12,5.4-12,12S306.25,289.1,312.95,289.1z\" />\r\n              <path d=\"M312.95,330.7h31.4c6.6,0,12-5.4,12-12s-5.4-12-12-12h-31.4c-6.6,0-12,5.4-12,12S306.25,330.7,312.95,330.7z\" />\r\n            </g>\r\n          </g>\r\n        </svg>\r\n      </div>\r\n\r\n      <div class=\"text\">Paycode</div>\r\n\r\n    </div>\r\n\r\n\r\n    <div class=\"item-wrapper credit\">\r\n      <div class=\"image-wrapper\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\"\r\n          viewBox=\"0 0 64 80\" enable-background=\"new 0 0 64 64\" xml:space=\"preserve\">\r\n          <g>\r\n            <path d=\"M46.557,19.145c0.161-2.975-2.826-5.717-6.388-5.716c-3.66,0.001-6.655,2.731-6.432,5.798 c0.209,2.863,3.028,5.115,6.325,5.164C43.417,24.441,46.399,22.053,46.557,19.145z\"></path>\r\n            <path d=\"M59.724,32.23c-0.543-2.244-2.558-3.757-5.011-3.758c-0.233,0-0.466,0-0.698,0l1.194-12.414 c0.077-0.804,0.157-1.617,0.237-2.438c0.081-0.832,0.163-1.672,0.245-2.52c0.175-1.82,0.306-3.254,0.426-4.634 c0.269-3.107-1.396-4.985-4.578-5.061c-3.19-0.077-6.432-0.071-9.566-0.066c-0.703,0.001-1.405,0.003-2.108,0.003H38.47 c-3.254,0-6.62,0-9.93,0.071c-2.588,0.056-4.134,1.527-4.349,4.084c-0.038,0.461-0.031,0.949,0.02,1.494 c0.658,6.886,1.091,11.391,1.584,16.517c-1.859,0.35-3.207,1.478-4.364,2.948c-2.784,3.536-9.182,2.011-13.189,2.015 c-2.404,0.001-4.114,1.706-4.114,4.106c-0.002,7.216-0.002,14.432-0.001,21.647c0.001,1.978,1.16,3.482,2.914,3.948 c0.375,0.102,0.776,0.156,1.2,0.156c4.063,0.002,8.246-0.361,12.249,0.424c4.279,0.837,8.158,3.051,12.488,3.646 c4.614,0.633,9.312-0.083,13.941-0.091c0.496-0.001,0.972-0.071,1.419-0.2c1.053-0.305,1.945-0.938,2.573-1.773 c0.813-1.081,1.18-2.499,0.87-3.974c-0.143-0.683-0.47-1.328-0.712-1.986c1.186-0.086,2.2-0.51,2.989-1.15 c1.38-1.12,2.069-2.898,1.774-4.676c-0.141-0.845-0.503-1.69-1.117-2.464c0.905-0.389,1.651-0.99,2.19-1.722 c1.27-1.718,1.404-4.155-0.203-6.259c0.092-0.05,0.18-0.102,0.273-0.148C59.21,36.839,60.294,34.583,59.724,32.23z M32.745,10.827 c1.517-1.106,2.412-2.685,2.719-4.848c3.375,0.014,6.447,0.014,9.36,0c0.528,3.511,2.585,5.568,6.116,6.221l0.091,0.016 l-0.004,0.063c-0.459,6.792-0.742,10.987-1.094,16.194c-0.49,0-0.98,0-1.471,0l-5.313-0.091l-7.445-0.127 c-1.308-0.077-2.454-0.33-3.45-0.687c-0.199-0.055-0.398-0.11-0.597-0.161c-0.106-0.027-0.22-0.11-0.32-0.213 c-0.398-0.183-0.766-0.381-1.108-0.587c-0.038-0.56-0.076-1.123-0.115-1.691l-0.866-12.711 C30.594,12.002,31.769,11.54,32.745,10.827z\"></path>\r\n          </g>\r\n        </svg>\r\n      </div>\r\n\r\n      <div class=\"text\">Credit</div>\r\n    </div>\r\n\r\n\r\n\r\n    <div class=\"item-wrapper ussd\">\r\n      <div class=\"image-wrapper\">\r\n        <svg viewBox=\"0 0 64 74\">\r\n          <path d=\"M60.66,17.47a14.125,14.125,0,1,1-28.25,0A13.975,13.975,0,0,1,33.84,11.28,14.12258,14.12258,0,0,1,60.66,17.47Z\"\r\n            style=\"fill: none; stroke-width: 4px;\"></path>\r\n          <g>\r\n            <path d=\"M39.23,29.56V67.43a3.8311,3.8311,0,0,1-3.63,4H6.63a3.8311,3.8311,0,0,1-3.63-4V6.57a3.8311,3.8311,0,0,1,3.63-4H35.6A3.71022,3.71022,0,0,1,39.09,5.46a14.18973,14.18973,0,0,0-5.25,5.82,14.12191,14.12191,0,0,0,5.39,18.28Z\"\r\n              style=\"fill: none; stroke-width: 4px; stroke-miterlimit: 10;\"></path>\r\n            <line x1=\"33.84\" y1=\"11.28\" x2=\"3\" y2=\"11.28\" style=\"fill: none; stroke-width: 4px; stroke-miterlimit: 10;\"></line>\r\n            <line x1=\"18.42386\" y1=\"7.18495\" x2=\"23.80762\" y2=\"7.18495\" style=\"fill: none; stroke-width: 4px; stroke-miterlimit: 10;\"></line>\r\n            <line x1=\"3\" y1=\"60.53391\" x2=\"39.23148\" y2=\"60.53391\" style=\"fill: none; stroke-width: 4px; stroke-miterlimit: 10;\"></line>\r\n          </g>\r\n          <g id=\"Page-1\">\r\n            <g id=\"USSD-icon-Copy\">\r\n              <g id=\"noun_327278\" data-name=\"noun 327278\">\r\n                <g id=\"Group\">\r\n                  <path id=\"Shape\" d=\"M41.43925,22.0107H39.75753V19.29215H41.983l.73338-3.64159H39.75753v-2.7312H43.2727l.97363-4.81753h2.76914l-.97363,4.81753H48.773l.94834-4.81753h2.8703l-.98627,4.81753h1.707v2.7312H51.04905l-.746,3.64159h2.99674V22.0107h-3.5531L48.773,26.82823h-2.7565l.94834-4.81753H44.23368l-.97363,4.81753H40.46562l.97363-4.81753Zm4.05888-6.36015-.73338,3.64159H47.5086l.72074-3.64159Z\"\r\n                    ></path>\r\n                </g>\r\n              </g>\r\n            </g>\r\n          </g>\r\n        </svg>\r\n      </div>\r\n\r\n      <div class=\"text\">USSD</div>\r\n    </div>\r\n\r\n\r\n    <div class=\"border-special\"></div>\r\n\r\n\r\n\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n  <form name=\"card-details\" class=\"ipg-form-container fadeTransition moded payment-type-section card\" id=\"CardDetailsForm\"\r\n    data-parsley-validate>\r\n    <div class=\"input-group float-label icon-label relative cardfield\">\r\n      <label for=\"Cc\">Card Number</label>\r\n      <div class=\"ipg--card--container\">\r\n        <div class=\"input-control\" id=\"CCWrapper\">\r\n          <div class=\"ipg--icon--svg\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\"\r\n              viewBox=\"0 0 100 125\" width=\"30px\" height=\"30px\" enable-background=\"new 0 0 100 100\" xml:space=\"preserve\">\r\n              <path d=\"M89.3,18.7H10.9c-3.1,0-5.7,2.5-5.7,5.7V31v8.8V72c0,3.1,2.5,5.7,5.7,5.7h78.4c3.1,0,5.7-2.5,5.7-5.7V39.8V31v-6.6  C95,21.3,92.5,18.7,89.3,18.7z M91,72c0,0.9-0.8,1.7-1.7,1.7H10.9c-0.9,0-1.7-0.8-1.7-1.7V39.8H91V72z M9.3,31v-6.6  c0-0.9,0.8-1.7,1.7-1.7h78.4c0.9,0,1.7,0.8,1.7,1.7V31H9.3z\"\r\n                fill=\"#CCCCCC\" />\r\n            </svg>\r\n\r\n          </div>\r\n          <input type=\"text\" name=\"card-number\" class=\"input\" style=\"display:none\" />\r\n          <input readonly type=\"text\" name=\"card-number\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\"\r\n            value=\"\" class=\"input\" id=\"Cc\" data-parsley-minlength=\"10\" data-parsley-cardconfig\r\n            data-parsley-cardconfig-message=\"\" required data-parsley-cardluhn data-parsley-cardluhn-message=\"Card number is incorrect\"\r\n            data-parsley-required-message=\"Fill in your card number\" data-parsley-minlength-message=\"Invalid Card Number\" />\r\n          <div class=\"card-type-container\"></div>\r\n        </div>\r\n        <span id=\"CardNumber\" class=\"ipg--cardtype \"></span>\r\n      </div>\r\n      <div class=\"ipg--error--container\">\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"fingerprint-enabled-wrapper\">\r\n      <div class=\"fingerprint-enabled-wrapper-inner\">\r\n        <div class=\"fingerprint-enabled-check-wrapper\">\r\n          <div class=\"fingerprint-enabled-check enabled\"></div>\r\n        </div>\r\n\r\n        <div class=\"fingerprint-enabled-text\">\r\n          Fingerprint enabled\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"clearfix\">\r\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.isOpera : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.program(3, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n\r\n      <div class=\"input-group float-label   icon-label  ipg--cvv half-last\">\r\n        <span id=\"cvvTooltip\">What's this?</span>\r\n\r\n        <div style=\"display:none\">\r\n          <div id=\"cvvTooltipTemplate\" style=\"width:175px;\">This is the 3 digit number at the back of your card</div>\r\n        </div>\r\n\r\n        <label>CVV</label>\r\n        <div class=\"ipg--icon--svg\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\"\r\n            width=\"30px\" height=\"28px\" viewBox=\"0 0 100 125\" enable-background=\"new 0 0 100 100\" xml:space=\"preserve\">\r\n            <path d=\"M78.1,79.4V52c0-3.8-3.1-7-7-7h-0.7v-11c0-11.3-9.2-20.5-20.5-20.5c-11.3,0-20.5,9.2-20.5,20.5v11h-0.7c-3.8,0-7,3.1-7,7  v27.4c0,3.8,3.1,7,7,7h42.2C75,86.4,78.1,83.2,78.1,79.4z M33.8,34.1c0-8.9,7.3-16.2,16.2-16.2s16.2,7.3,16.2,16.2v11H33.8V34.1z   M26.1,79.4V52c0-1.5,1.2-2.7,2.7-2.7h42.2c1.5,0,2.7,1.2,2.7,2.7v27.4c0,1.5-1.2,2.7-2.7,2.7H28.9C27.4,82.1,26.1,80.9,26.1,79.4z   M54.1,63.1c0,1.4-0.5,2.5-1.7,3.3c-0.3,0.2-0.4,0.5-0.4,0.9c0,1.8,0,3.5,0,5.3v0c0,0.7-0.3,1.4-1,1.8C49.5,75.1,48,74,48,72.6  c0,0,0,0,0,0c0-1.8,0-3.5,0-5.3c0-0.4-0.1-0.6-0.4-0.8c-1.6-1.2-2.1-3.2-1.3-4.9c0.8-1.7,2.7-2.7,4.5-2.4  C52.7,59.5,54.1,61.1,54.1,63.1z\"\r\n              fill=\"#CCCCCC\" />\r\n          </svg>\r\n        </div>\r\n        <input type=\"password\" style=\"display: none;\" />\r\n        <input readonly type=\"password\" id=\"Cvv\" name=\"cc-cvv\" value=\"\" autocomplete=\"bazinga\" spellcheck=\"false\"\r\n          autocapitalize=\"off\" class=\"input\" data-parsley-required-message=\"Invalid CVV\" data-parsley-maxlength-message=\"Invalid CVV\"\r\n          data-parsley-minlength-message=\"Invalid CVV\" maxlength=\"3\" data-parsley-minlength=\"3\" data-parsley-maxlength=\"3\"\r\n          required />\r\n      </div>\r\n    </div>\r\n    <div class=\"clearfix  \" id=\"CardPin\">\r\n\r\n    </div>\r\n\r\n    <div class=\"container \">\r\n      <div class=\"\">\r\n        <button class=\"btn btn-primary\" type=\"submit\" id=\"CardDetailsBtn\">\r\n          <span class=\"btn-text\">"
    + container.escapeExpression(((helper = (helper = helpers.buttonName || (depth0 != null ? depth0.buttonName : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(alias1,{"name":"buttonName","hash":{},"data":data}) : helper)))
    + "</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    "
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.isOpera : depth0),{"name":"if","hash":{},"fn":container.program(5, data, 0),"inverse":container.program(7, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n\r\n    <div class=\"fingerprint-modal-wrapper\">\r\n\r\n      <div class=\"container prompt show\">\r\n\r\n        <div class=\"text-area\">\r\n          You will not be required to provide an OTP when using this card. Do you want to disable this feature?\r\n        </div>\r\n\r\n        <div class=\"button-area\">\r\n\r\n          <div class=\"fp-button cancel\">\r\n            <span>Cancel</span>\r\n          </div>\r\n\r\n          <div class=\"fp-button confirm\">\r\n            <span>Remove</span>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n      <div class=\"container success\">\r\n\r\n        <div class=\"text-area\">\r\n          Operation successful. Fingerprint for this card has been disabled.\r\n        </div>\r\n\r\n        <div class=\"button-area\">\r\n\r\n          <div class=\"fp-button cancel\">\r\n            <span>Close</span>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n      <div class=\"container failure\">\r\n\r\n        <div class=\"text-area\">\r\n          Operation failed. Please try again.\r\n        </div>\r\n\r\n        <div class=\"button-area\">\r\n\r\n          <div class=\"fp-button cancel\">\r\n            <span>Close</span>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n    </div>\r\n\r\n  </form>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  <form name=\"qr-details\" class=\"ipg-form-container moded payment-type-section qr\" id=\"QrDetailsForm\">\r\n\r\n    <div class=\"qr-content-area\">\r\n      <div class=\"qr-header\">\r\n        <div class==\"message\">\r\n          Please scan QR code to Pay using your mobile banking app\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"qr-body\">\r\n        <div class=\"bracket tl hidden\"></div>\r\n        <div class=\"bracket tr hidden\"></div>\r\n        <div class=\"bracket bl hidden\"></div>\r\n        <div class=\"bracket br hidden\"></div>\r\n\r\n        <img class=\"qr-container hidden\" id=\"qr-container\">\r\n        </img>\r\n\r\n        <div class=\"qr-loading\">Generating QR...</div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </form>\r\n\r\n\r\n\r\n\r\n\r\n  <form name=\"mobile-details\" class=\"ipg-form-container moded payment-type-section mobile\" id=\"MobileDetailsForm\">\r\n  </form>\r\n\r\n\r\n  <form name=\"paycode-details\" class=\"ipg-form-container moded payment-type-section paycode\" id=\"PaycodeDetailsForm\">\r\n  </form>\r\n\r\n  <div name=\"credit-details\" class=\"ipg-form-container moded payment-type-section credit\" id=\"CreditDetailsForm\">\r\n  </div>\r\n\r\n  <div name=\"ussd-details\" class=\"ipg-form-container moded payment-type-section ussd\" id=\"UssdDetailsForm\">\r\n  </div>\r\n\r\n</div>";
},"useData":true});

},{"hbsfy/runtime":24}],91:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<form class=\"ipg-form-container\" name=\"extra-card-details\" id=\"CardExtraDetailsForm\" autocomplete=\"off\"  data-parsley-validate>\r\n    <div id=\"Expiry-Cvv-Pin\" ></div>\r\n    <div class=\"container btn-group\">\r\n        <div class=\"ipg--back--container\">\r\n            <button class=\"btn-default btn\" type=\"button\" id=\"Back\">Back</button>\r\n        </div>\r\n        <div class=\"ipg--login--container\">\r\n            <button class=\"btn btn-primary\" type=\"submit\" id=\"CardExtraDetailsBtn\">Pay</button>\r\n        </div>\r\n\r\n    </div>\r\n</form>";
},"useData":true});

},{"hbsfy/runtime":24}],92:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "<div>\r\n    <img src=\""
    + alias4(((helper = (helper = helpers.baseUrl || (depth0 != null ? depth0.baseUrl : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"baseUrl","hash":{},"data":data}) : helper)))
    + "public/images/card-brands/"
    + alias4(((helper = (helper = helpers.card_type || (depth0 != null ? depth0.card_type : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"card_type","hash":{},"data":data}) : helper)))
    + ".png\"/>\r\n</div>";
},"useData":true});

},{"hbsfy/runtime":24}],93:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(container,depth0,helpers,partials,data) {
    return "    <div class=\"input-group float-label ipg--cvv full\">\r\n      <span id=\"cvvTooltip\">What's this?</span>\r\n\r\n      <div style=\"display:none\">\r\n        <div id=\"cvvTooltipTemplate\" style=\"width:175px;\">This is the 3 digit number at the back of your card</div>\r\n      </div>\r\n      <label>CVV</label>\r\n      <input type=\"password\" name=\"cc-cvv\" value=\"\" style=\"display: none;\" />\r\n      <input type=\"password\" id=\"Cvv\" name=\"cc-cvv\" value=\"\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" class=\"input text-align-center\"\r\n        maxlength=\"3\" data-parsley-minlength=\"3\" data-parsley-maxlength=\"3\" data-parsley-required-message=\"Invalid CVV\" data-parsley-maxlength-message=\"Invalid CVV\"\r\n        data-parsley-minlength-message=\"Invalid CVV\" required />\r\n    </div>\r\n";
},"3":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "    <div class=\"ipg--cardpin input-group float-label  full\">\r\n      <label class=\"CardPinLabel\">Card PIN</label>\r\n      <input type=\"password\" name=\"cc-pin\" class=\"input text-align-center\" value=\"\" style=\"display: none;\" /> "
    + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.isMobile : depth0),{"name":"if","hash":{},"fn":container.program(4, data, 0),"inverse":container.program(6, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n      <div class=\"clearfix\">\r\n        <div id=\"RandomPinpad\"></div>\r\n      </div>\r\n    </div>\r\n";
},"4":function(container,depth0,helpers,partials,data) {
    return "\r\n      <input type=\"password\" id=\"Pin\" name=\"cc-pin\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" value=\"\" class=\"input text-align-center\"\r\n        maxlength=\"4\" data-parsley-minlength=\"4\" data-parsley-maxlength=\"4\" data-parsley-required-message=\"Invalid Pin\" data-parsley-maxlength-message=\"Invalid Pin\"\r\n        data-parsley-minlength-message=\"Invalid Pin\" maxlength=\"4\" required /> ";
},"6":function(container,depth0,helpers,partials,data) {
    return "\r\n      <input type=\"password\" id=\"Pin\" name=\"cc-pin\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" value=\"\" class=\"input text-align-center\"\r\n        maxlength=\"4\" data-parsley-minlength=\"4\" data-parsley-maxlength=\"4\" data-parsley-required-message=\"Invalid Pin\" data-parsley-maxlength-message=\"Invalid Pin\"\r\n        data-parsley-minlength-message=\"Invalid Pin\" maxlength=\"4\" required readonly/> ";
},"8":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "    <div class=\"input-group ipg--date float-label full\">\r\n      <label>MM/YY</label>\r\n      <input type=\"text\" name=\"cc-expiry\" value=\"\" style=\"display: none;\" /> "
    + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.expiryYear : depth0),{"name":"if","hash":{},"fn":container.program(9, data, 0),"inverse":container.program(11, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n    </div>\r\n";
},"9":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "\r\n      <input type=\"text\" id=\"CCexpiry\" name=\"cc-expiry\" value=\""
    + alias4(((helper = (helper = helpers.expiryMonth || (depth0 != null ? depth0.expiryMonth : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"expiryMonth","hash":{},"data":data}) : helper)))
    + " / "
    + alias4(((helper = (helper = helpers.expiryYear || (depth0 != null ? depth0.expiryYear : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"expiryYear","hash":{},"data":data}) : helper)))
    + "\" class=\"input\" disabled=\"true\"\r\n        required maxlength=\"7\" data-parsley-minlength=\"7\" data-parsley-maxlength=\"7\" data-parsley-expirymonth data-parsley-expirymonth-message=\"Invalid expiry month\"\r\n        data-parsley-expirydate data-parsley-expirydate-message=\"Card expired\" data-parsley-maxlength-message=\"Invalid Expiry Date\"\r\n        data-parsley-minlength-message=\"Invalid Expiry Date\" /> ";
},"11":function(container,depth0,helpers,partials,data) {
    return "\r\n      <input type=\"text\" id=\"CCexpiry\" name=\"cc-expiry\" value=\"\" class=\"input\" maxlength=\"7\" data-parsley-minlength=\"7\" data-parsley-maxlength=\"7\"\r\n        data-parsley-expirymonth data-parsley-expirymonth-message=\"Invalid expiry month\" data-parsley-expirydate data-parsley-expirydate-message=\"Card expired\"\r\n        data-parsley-maxlength-message=\"Invalid Expiry Date\" data-parsley-minlength-message=\"Invalid Expiry Date\" required/> ";
},"13":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : {};

  return "    <div class=\"clearfix\">\r\n      <div class=\"input-group float-label ipg--date half\">\r\n        <label>MM/YY</label>\r\n        <input type=\"text\" name=\"cc-expiry\" value=\"\" style=\"display: none;\" /> "
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.expiryYear : depth0),{"name":"if","hash":{},"fn":container.program(14, data, 0),"inverse":container.program(16, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n      </div>\r\n\r\n      <div class=\"input-group float-label  ipg--cvv half-last\">\r\n        <span id=\"cvvTooltip\">What's this?</span>\r\n\r\n        <div style=\"display:none\">\r\n          <div id=\"cvvTooltipTemplate\" style=\"width:175px;\">This is the 3 digit number at the back of your card</div>\r\n        </div>\r\n        <label>CVV</label>\r\n        <input type=\"password\" name=\"cc-cvv\" value=\"\" class=\"input\" style=\"display:none\" />\r\n        <input type=\"password\" id=\"Cvv\" name=\"cc-cvv\" value=\"\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" class=\"input text-align-center\"\r\n          maxlength=\"3\" data-parsley-required-message=\"Invalid CVV\" data-parsley-maxlength-message=\"Invalid CVV\" data-parsley-minlength-message=\"Invalid CVV\"\r\n          data-parsley-minlength=\"3\" data-parsley-maxlength=\"3\" required/>\r\n      </div>\r\n    </div>\r\n    <div class=\"clearfix\">\r\n      <div class=\"ipg--cardpin input-group float-label full\">\r\n        <label class=\"CardPinLabel\">Card PIN</label>\r\n        <input type=\"password\" name=\"cc-pin\" class=\"input text-align-center\" style=\"display:none\" /> "
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.isMobile : depth0),{"name":"if","hash":{},"fn":container.program(18, data, 0),"inverse":container.program(20, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n        <div class=\"clearfix\">\r\n          <div id=\"RandomPinpad\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n";
},"14":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "\r\n        <input type=\"text\" id=\"CCexpiry\" name=\"cc-expiry\" value=\""
    + alias4(((helper = (helper = helpers.expiryMonth || (depth0 != null ? depth0.expiryMonth : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"expiryMonth","hash":{},"data":data}) : helper)))
    + " / "
    + alias4(((helper = (helper = helpers.expiryYear || (depth0 != null ? depth0.expiryYear : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"expiryYear","hash":{},"data":data}) : helper)))
    + "\" class=\"input\" disabled=\"true\"\r\n          maxlength=\"7\" data-parsley-expirymonth data-parsley-expirymonth-message=\"Invalid expiry month\" data-parsley-minlength=\"7\"\r\n          data-parsley-maxlength=\"7\" data-parsley-expirydate data-parsley-expirydate-message=\"Card expired\" data-parsley-maxlength-message=\"Invalid Expiry Date\"\r\n          data-parsley-minlength-message=\"Invalid Expiry Date\" /> ";
},"16":function(container,depth0,helpers,partials,data) {
    return "\r\n        <input type=\"text\" id=\"CCexpiry\" name=\"cc-expiry\" value=\"\" class=\"input\" required maxlength=\"7\" data-parsley-minlength=\"7\"\r\n          data-parsley-maxlength=\"7\" data-parsley-expirymonth data-parsley-expirymonth-message=\"Invalid expiry month\" data-parsley-expirydate\r\n          data-parsley-expirydate-message=\"Card expired\" data-parsley-maxlength-message=\"Invalid Expiry Date\" data-parsley-minlength-message=\"Invalid Expiry Date\"\r\n        /> ";
},"18":function(container,depth0,helpers,partials,data) {
    return "\r\n        <input type=\"password\" id=\"Pin\" name=\"cc-pin\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" value=\"\" class=\"input text-align-center\"\r\n          maxlength=\"4\" data-parsley-minlength=\"4\" data-parsley-maxlength=\"4\" data-parsley-required-message=\"Invalid Pin\" data-parsley-maxlength-message=\"Invalid Pin\"\r\n          data-parsley-minlength-message=\"Invalid Pin\" maxlength=\"4\" required /> ";
},"20":function(container,depth0,helpers,partials,data) {
    return "\r\n        <input type=\"password\" id=\"Pin\" name=\"cc-pin\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" value=\"\" class=\"input text-align-center\"\r\n          maxlength=\"4\" data-parsley-minlength=\"4\" data-parsley-maxlength=\"4\" data-parsley-required-message=\"Invalid Pin\" data-parsley-maxlength-message=\"Invalid Pin\"\r\n          data-parsley-minlength-message=\"Invalid Pin\" maxlength=\"4\" required readonly/> ";
},"22":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "    <div class=\"input-group float-label ipg--date half\">\r\n      <label>MM/YY</label>\r\n      <input type=\"text\" name=\"cc-expiry\" style=\"display:none\" /> "
    + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.expiryYear : depth0),{"name":"if","hash":{},"fn":container.program(23, data, 0),"inverse":container.program(25, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n    </div>\r\n    <div class=\"input-group float-label  ipg--cvv half-last\">\r\n      <span id=\"cvvTooltip\">What's this?</span>\r\n\r\n      <div style=\"display:none\">\r\n        <div id=\"cvvTooltipTemplate\" style=\"width:175px;\">This is the 3 digit number at the back of your card</div>\r\n      </div>\r\n      <label>CVV</label>\r\n      <input type=\"password\" name=\"cc-cvv\" value=\"\" style=\"display: none;\" />\r\n      <input type=\"password\" id=\"Cvv\" name=\"cc-cvv\" value=\"\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" class=\"input text-align-center\"\r\n        data-parsley-required-message=\"Invalid CVV\" data-parsley-maxlength-message=\"Invalid CVV\" data-parsley-minlength-message=\"Invalid CVV\"\r\n        maxlength=\"3\" data-parsley-minlength=\"3\" data-parsley-maxlength=\"3\" required/>\r\n    </div>\r\n";
},"23":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "\r\n      <input type=\"text\" id=\"CCexpiry\" name=\"cc-expiry\" value=\""
    + alias4(((helper = (helper = helpers.expiryMonth || (depth0 != null ? depth0.expiryMonth : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"expiryMonth","hash":{},"data":data}) : helper)))
    + " / "
    + alias4(((helper = (helper = helpers.expiryYear || (depth0 != null ? depth0.expiryYear : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"expiryYear","hash":{},"data":data}) : helper)))
    + "\" class=\"input\" maxlength=\"7\" data-parsley-minlength=\"7\"\r\n        data-parsley-maxlength=\"7\" data-parsley-maxlength-message=\"Invalid Expiry Date\" data-parsley-expirymonth data-parsley-expirymonth-message=\"Invalid expiry month\"\r\n        data-parsley-expirydate data-parsley-expirydate-message=\"Card expired\" data-parsley-minlength-message=\"Invalid Expiry Date\"\r\n        disabled=\"true\" /> ";
},"25":function(container,depth0,helpers,partials,data) {
    return "\r\n      <input type=\"text\" id=\"CCexpiry\" name=\"cc-expiry\" value=\"\" class=\"input\" maxlength=\"7\" data-parsley-minlength=\"7\" data-parsley-maxlength=\"7\"\r\n        data-parsley-maxlength-message=\"Invalid Expiry Date\" data-parsley-expirymonth data-parsley-expirymonth-message=\"Invalid expiry month\"\r\n        data-parsley-expirydate data-parsley-expirydate-message=\"Card expired\" data-parsley-minlength-message=\"Invalid Expiry Date\"\r\n        required/> ";
},"27":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : {};

  return "    <div class=\"input-group float-label ipg--date full\">\r\n      <label>Expiry date</label>\r\n      <input type=\"text\" name=\"cc-expiry\" value=\"\" style=\"display: none;\" /> "
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.expiryYear : depth0),{"name":"if","hash":{},"fn":container.program(28, data, 0),"inverse":container.program(30, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n    </div>\r\n    <div class=\"clearfix\">\r\n      <div class=\"ipg--cardpin input-group float-label full\">\r\n        <label class=\"CardPinLabel\">Card PIN</label>\r\n        <input type=\"password\" name=\"cc-pin\" class=\"input text-align-center\" value=\"\" style=\"display: none;\" /> "
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.isMobile : depth0),{"name":"if","hash":{},"fn":container.program(18, data, 0),"inverse":container.program(20, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n        <div class=\"clearfix\">\r\n          <div id=\"RandomPinpad\"></div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n";
},"28":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "\r\n      <input type=\"text\" id=\"CCexpiry\" name=\"cc-expiry\" value=\""
    + alias4(((helper = (helper = helpers.expiryMonth || (depth0 != null ? depth0.expiryMonth : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"expiryMonth","hash":{},"data":data}) : helper)))
    + " / "
    + alias4(((helper = (helper = helpers.expiryYear || (depth0 != null ? depth0.expiryYear : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"expiryYear","hash":{},"data":data}) : helper)))
    + "\" class=\"input\" maxlength=\"7\" data-parsley-minlength=\"7\"\r\n        data-parsley-maxlength=\"7\" data-parsley-expirymonth data-parsley-expirymonth-message=\"Invalid expiry month\" data-parsley-expirydate\r\n        data-parsley-expirydate-message=\"Card expired\" data-parsley-maxlength-message=\"Invalid Expiry Date\" data-parsley-minlength-message=\"Invalid Expiry Date\"\r\n        disabled=\"true\" /> ";
},"30":function(container,depth0,helpers,partials,data) {
    return "\r\n      <input type=\"text\" id=\"CCexpiry\" name=\"cc-expiry\" value=\"\" class=\"input\" maxlength=\"7\" data-parsley-minlength=\"7\" data-parsley-maxlength=\"7\"\r\n        data-parsley-expirymonth data-parsley-expirymonth-message=\"Invalid expiry month\" data-parsley-expirydate data-parsley-expirydate-message=\"Card expired\"\r\n        data-parsley-maxlength-message=\"Invalid Expiry Date\" data-parsley-minlength-message=\"Invalid Expiry Date\" required\r\n      /> ";
},"32":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "    <div class=\"input-group ipg--cvv float-label full\">\r\n      <span id=\"cvvTooltip\">What's this?</span>\r\n\r\n      <div style=\"display:none\">\r\n        <div id=\"cvvTooltipTemplate\" style=\"width:175px;\">This is the 3 digit number at the back of your card</div>\r\n      </div>\r\n      <label>CVV</label>\r\n      <input type=\"password\" name=\"cc-cvv\" value=\"\" style=\"display: none;\" />\r\n      <input type=\"password\" id=\"Cvv\" name=\"cc-cvv\" value=\"\" autocomplete=\"off\" spellcheck=\"false\" data-parsley-required-message=\"Invalid CVV\"\r\n        data-parsley-maxlength-message=\"Invalid CVV\" data-parsley-minlength-message=\"Invalid CVV\" autocapitalize=\"off\" class=\"input text-align-center\"\r\n        maxlength=\"3\" data-parsley-minlength=\"3\" data-parsley-maxlength=\"3\" required/>\r\n    </div>\r\n    <div class=\"clearfix\">\r\n      <div class=\"ipg--cardpin input-group float-label\">\r\n        <label class=\"CardPinLabel\">Card PIN</label>\r\n        <input type=\"password\" name=\"cc-pin\" class=\"input text-align-center\" value=\"\" style=\"display: none;\" /> "
    + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.isMobile : depth0),{"name":"if","hash":{},"fn":container.program(18, data, 0),"inverse":container.program(20, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n\r\n        <div class=\"clearfix\">\r\n          <div id=\"RandomPinpad\"></div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : {};

  return "<div>\r\n  <div class=\"container\">\r\n    <!-- Support Cvv -->\r\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.cardSettings : depth0)) != null ? stack1.supportCvv : stack1),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\r\n    <!-- Support Pin -->\r\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.cardSettings : depth0)) != null ? stack1.supportPin : stack1),{"name":"if","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\r\n    <!-- Support  Expiry -->\r\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.cardSettings : depth0)) != null ? stack1.supportExpiry : stack1),{"name":"if","hash":{},"fn":container.program(8, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "    <!-- Support Cvv, Pin, Expiry -->\r\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.cardSettings : depth0)) != null ? stack1.supportAll : stack1),{"name":"if","hash":{},"fn":container.program(13, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\r\n\r\n    <!-- Support Cvv, Expiry -->\r\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.cardSettings : depth0)) != null ? stack1.supportCvvExpiry : stack1),{"name":"if","hash":{},"fn":container.program(22, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\r\n\r\n    <!-- Support Pin, Expiry -->\r\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.cardSettings : depth0)) != null ? stack1.supportPinExpiry : stack1),{"name":"if","hash":{},"fn":container.program(27, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\r\n    <!-- Support Cvv, Pin  -->\r\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.cardSettings : depth0)) != null ? stack1.supportCvvPin : stack1),{"name":"if","hash":{},"fn":container.program(32, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "  </div>\r\n</div>";
},"useData":true});

},{"hbsfy/runtime":24}],94:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(container,depth0,helpers,partials,data) {
    return "    <div class=\"input-group float-label ipg--cvv full\">\r\n      <span id=\"cvvTooltip\">What's this?</span>\r\n\r\n      <div style=\"display:none\">\r\n        <div id=\"cvvTooltipTemplate_credit\" style=\"width:175px;\">This is the 3 digit number at the back of your card</div>\r\n      </div>\r\n      <label>CVV</label>\r\n      <input type=\"password\" name=\"cc-cvv\" value=\"\" style=\"display: none;\" />\r\n      <input type=\"password\" id=\"Cvv_credit\" name=\"cc-cvv\" value=\"\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" class=\"input text-align-center\"\r\n        maxlength=\"3\" data-parsley-minlength=\"3\" data-parsley-maxlength=\"3\" data-parsley-required-message=\"Invalid CVV\" data-parsley-maxlength-message=\"Invalid CVV\"\r\n        data-parsley-minlength-message=\"Invalid CVV\" required />\r\n    </div>\r\n";
},"3":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "    <div class=\"ipg--cardpin input-group float-label  full\">\r\n      <label class=\"CardPinLabel\">Card PIN</label>\r\n      <input type=\"password\" name=\"cc-pin\" class=\"input text-align-center\" value=\"\" style=\"display: none;\" /> "
    + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.isMobile : depth0),{"name":"if","hash":{},"fn":container.program(4, data, 0),"inverse":container.program(6, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n      <div class=\"clearfix\">\r\n        <div id=\"RandomPinpad_credit\"></div>\r\n      </div>\r\n    </div>\r\n";
},"4":function(container,depth0,helpers,partials,data) {
    return "\r\n      <input type=\"password\" id=\"Pin_credit\" name=\"cc-pin\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" value=\"\" class=\"input text-align-center\"\r\n        maxlength=\"4\" data-parsley-minlength=\"4\" data-parsley-maxlength=\"4\" data-parsley-required-message=\"Invalid Pin\" data-parsley-maxlength-message=\"Invalid Pin\"\r\n        data-parsley-minlength-message=\"Invalid Pin\" maxlength=\"4\" required /> ";
},"6":function(container,depth0,helpers,partials,data) {
    return "\r\n      <input type=\"password\" id=\"Pin_credit\" name=\"cc-pin\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" value=\"\" class=\"input text-align-center\"\r\n        maxlength=\"4\" data-parsley-minlength=\"4\" data-parsley-maxlength=\"4\" data-parsley-required-message=\"Invalid Pin\" data-parsley-maxlength-message=\"Invalid Pin\"\r\n        data-parsley-minlength-message=\"Invalid Pin\" maxlength=\"4\" required readonly/> ";
},"8":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "    <div class=\"input-group ipg--date float-label full\">\r\n      <label>MM/YY</label>\r\n      <input type=\"text\" name=\"cc-expiry\" value=\"\" style=\"display: none;\" /> "
    + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.expiryYear : depth0),{"name":"if","hash":{},"fn":container.program(9, data, 0),"inverse":container.program(11, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n    </div>\r\n";
},"9":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "\r\n      <input type=\"text\" id=\"CCexpiry_credit\" name=\"cc-expiry\" value=\""
    + alias4(((helper = (helper = helpers.expiryMonth || (depth0 != null ? depth0.expiryMonth : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"expiryMonth","hash":{},"data":data}) : helper)))
    + " / "
    + alias4(((helper = (helper = helpers.expiryYear || (depth0 != null ? depth0.expiryYear : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"expiryYear","hash":{},"data":data}) : helper)))
    + "\" class=\"input\" disabled=\"true\"\r\n        required maxlength=\"7\" data-parsley-minlength=\"7\" data-parsley-maxlength=\"7\" data-parsley-expirymonth data-parsley-expirymonth-message=\"Invalid expiry month\"\r\n        data-parsley-expirydate data-parsley-expirydate-message=\"Card expired\" data-parsley-maxlength-message=\"Invalid Expiry Date\"\r\n        data-parsley-minlength-message=\"Invalid Expiry Date\" /> ";
},"11":function(container,depth0,helpers,partials,data) {
    return "\r\n      <input type=\"text\" id=\"CCexpiry_credit\" name=\"cc-expiry\" value=\"\" class=\"input\" maxlength=\"7\" data-parsley-minlength=\"7\" data-parsley-maxlength=\"7\"\r\n        data-parsley-expirymonth data-parsley-expirymonth-message=\"Invalid expiry month\" data-parsley-expirydate data-parsley-expirydate-message=\"Card expired\"\r\n        data-parsley-maxlength-message=\"Invalid Expiry Date\" data-parsley-minlength-message=\"Invalid Expiry Date\" required/> ";
},"13":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : {};

  return "    <div class=\"clearfix\">\r\n      <div class=\"input-group float-label ipg--date half\">\r\n        <label>MM/YY</label>\r\n        <input type=\"text\" name=\"cc-expiry\" value=\"\" style=\"display: none;\" /> "
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.expiryYear : depth0),{"name":"if","hash":{},"fn":container.program(14, data, 0),"inverse":container.program(16, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n      </div>\r\n\r\n      <div class=\"input-group float-label  ipg--cvv half-last\">\r\n        <span id=\"cvvTooltip\">What's this?</span>\r\n\r\n        <div style=\"display:none\">\r\n          <div id=\"cvvTooltipTemplate_credit\" style=\"width:175px;\">This is the 3 digit number at the back of your card</div>\r\n        </div>\r\n        <label>CVV</label>\r\n        <input type=\"password\" name=\"cc-cvv\" value=\"\" class=\"input\" style=\"display:none\" />\r\n        <input type=\"password\" id=\"Cvv_credit\" name=\"cc-cvv\" value=\"\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" class=\"input text-align-center\"\r\n          maxlength=\"3\" data-parsley-required-message=\"Invalid CVV\" data-parsley-maxlength-message=\"Invalid CVV\" data-parsley-minlength-message=\"Invalid CVV\"\r\n          data-parsley-minlength=\"3\" data-parsley-maxlength=\"3\" required/>\r\n      </div>\r\n    </div>\r\n    <div class=\"clearfix\">\r\n      <div class=\"ipg--cardpin input-group float-label full\">\r\n        <label class=\"CardPinLabel\">Card PIN</label>\r\n        <input type=\"password\" name=\"cc-pin\" class=\"input text-align-center\" style=\"display:none\" /> "
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.isMobile : depth0),{"name":"if","hash":{},"fn":container.program(18, data, 0),"inverse":container.program(20, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n        <div class=\"clearfix\">\r\n          <div id=\"RandomPinpad_credit\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n";
},"14":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "\r\n        <input type=\"text\" id=\"CCexpiry_credit\" name=\"cc-expiry\" value=\""
    + alias4(((helper = (helper = helpers.expiryMonth || (depth0 != null ? depth0.expiryMonth : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"expiryMonth","hash":{},"data":data}) : helper)))
    + " / "
    + alias4(((helper = (helper = helpers.expiryYear || (depth0 != null ? depth0.expiryYear : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"expiryYear","hash":{},"data":data}) : helper)))
    + "\" class=\"input\" disabled=\"true\"\r\n          maxlength=\"7\" data-parsley-expirymonth data-parsley-expirymonth-message=\"Invalid expiry month\" data-parsley-minlength=\"7\"\r\n          data-parsley-maxlength=\"7\" data-parsley-expirydate data-parsley-expirydate-message=\"Card expired\" data-parsley-maxlength-message=\"Invalid Expiry Date\"\r\n          data-parsley-minlength-message=\"Invalid Expiry Date\" /> ";
},"16":function(container,depth0,helpers,partials,data) {
    return "\r\n        <input type=\"text\" id=\"CCexpiry_credit\" name=\"cc-expiry\" value=\"\" class=\"input\" required maxlength=\"7\" data-parsley-minlength=\"7\"\r\n          data-parsley-maxlength=\"7\" data-parsley-expirymonth data-parsley-expirymonth-message=\"Invalid expiry month\" data-parsley-expirydate\r\n          data-parsley-expirydate-message=\"Card expired\" data-parsley-maxlength-message=\"Invalid Expiry Date\" data-parsley-minlength-message=\"Invalid Expiry Date\"\r\n        /> ";
},"18":function(container,depth0,helpers,partials,data) {
    return "\r\n        <input type=\"password\" id=\"Pin_credit\" name=\"cc-pin\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" value=\"\" class=\"input text-align-center\"\r\n          maxlength=\"4\" data-parsley-minlength=\"4\" data-parsley-maxlength=\"4\" data-parsley-required-message=\"Invalid Pin\" data-parsley-maxlength-message=\"Invalid Pin\"\r\n          data-parsley-minlength-message=\"Invalid Pin\" maxlength=\"4\" required /> ";
},"20":function(container,depth0,helpers,partials,data) {
    return "\r\n        <input type=\"password\" id=\"Pin_credit\" name=\"cc-pin\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" value=\"\" class=\"input text-align-center\"\r\n          maxlength=\"4\" data-parsley-minlength=\"4\" data-parsley-maxlength=\"4\" data-parsley-required-message=\"Invalid Pin\" data-parsley-maxlength-message=\"Invalid Pin\"\r\n          data-parsley-minlength-message=\"Invalid Pin\" maxlength=\"4\" required readonly/> ";
},"22":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "    <div class=\"input-group float-label ipg--date half\">\r\n      <label>MM/YY</label>\r\n      <input type=\"text\" name=\"cc-expiry\" style=\"display:none\" /> "
    + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.expiryYear : depth0),{"name":"if","hash":{},"fn":container.program(23, data, 0),"inverse":container.program(25, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n    </div>\r\n    <div class=\"input-group float-label  ipg--cvv half-last\">\r\n      <span id=\"cvvTooltip\">What's this?</span>\r\n\r\n      <div style=\"display:none\">\r\n        <div id=\"cvvTooltipTemplate_credit\" style=\"width:175px;\">This is the 3 digit number at the back of your card</div>\r\n      </div>\r\n      <label>CVV</label>\r\n      <input type=\"password\" name=\"cc-cvv\" value=\"\" style=\"display: none;\" />\r\n      <input type=\"password\" id=\"Cvv_credit\" name=\"cc-cvv\" value=\"\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" class=\"input text-align-center\"\r\n        data-parsley-required-message=\"Invalid CVV\" data-parsley-maxlength-message=\"Invalid CVV\" data-parsley-minlength-message=\"Invalid CVV\"\r\n        maxlength=\"3\" data-parsley-minlength=\"3\" data-parsley-maxlength=\"3\" required/>\r\n    </div>\r\n";
},"23":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "\r\n      <input type=\"text\" id=\"CCexpiry_credit\" name=\"cc-expiry\" value=\""
    + alias4(((helper = (helper = helpers.expiryMonth || (depth0 != null ? depth0.expiryMonth : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"expiryMonth","hash":{},"data":data}) : helper)))
    + " / "
    + alias4(((helper = (helper = helpers.expiryYear || (depth0 != null ? depth0.expiryYear : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"expiryYear","hash":{},"data":data}) : helper)))
    + "\" class=\"input\" maxlength=\"7\" data-parsley-minlength=\"7\"\r\n        data-parsley-maxlength=\"7\" data-parsley-maxlength-message=\"Invalid Expiry Date\" data-parsley-expirymonth data-parsley-expirymonth-message=\"Invalid expiry month\"\r\n        data-parsley-expirydate data-parsley-expirydate-message=\"Card expired\" data-parsley-minlength-message=\"Invalid Expiry Date\"\r\n        disabled=\"true\" /> ";
},"25":function(container,depth0,helpers,partials,data) {
    return "\r\n      <input type=\"text\" id=\"CCexpiry_credit\" name=\"cc-expiry\" value=\"\" class=\"input\" maxlength=\"7\" data-parsley-minlength=\"7\" data-parsley-maxlength=\"7\"\r\n        data-parsley-maxlength-message=\"Invalid Expiry Date\" data-parsley-expirymonth data-parsley-expirymonth-message=\"Invalid expiry month\"\r\n        data-parsley-expirydate data-parsley-expirydate-message=\"Card expired\" data-parsley-minlength-message=\"Invalid Expiry Date\"\r\n        required/> ";
},"27":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : {};

  return "    <div class=\"input-group float-label ipg--date full\">\r\n      <label>Expiry date</label>\r\n      <input type=\"text\" name=\"cc-expiry\" value=\"\" style=\"display: none;\" /> "
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.expiryYear : depth0),{"name":"if","hash":{},"fn":container.program(28, data, 0),"inverse":container.program(30, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n    </div>\r\n    <div class=\"clearfix\">\r\n      <div class=\"ipg--cardpin input-group float-label full\">\r\n        <label class=\"CardPinLabel\">Card PIN</label>\r\n        <input type=\"password\" name=\"cc-pin\" class=\"input text-align-center\" value=\"\" style=\"display: none;\" /> "
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.isMobile : depth0),{"name":"if","hash":{},"fn":container.program(18, data, 0),"inverse":container.program(20, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n        <div class=\"clearfix\">\r\n          <div id=\"RandomPinpad_credit\"></div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n";
},"28":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "\r\n      <input type=\"text\" id=\"CCexpiry_credit\" name=\"cc-expiry\" value=\""
    + alias4(((helper = (helper = helpers.expiryMonth || (depth0 != null ? depth0.expiryMonth : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"expiryMonth","hash":{},"data":data}) : helper)))
    + " / "
    + alias4(((helper = (helper = helpers.expiryYear || (depth0 != null ? depth0.expiryYear : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"expiryYear","hash":{},"data":data}) : helper)))
    + "\" class=\"input\" maxlength=\"7\" data-parsley-minlength=\"7\"\r\n        data-parsley-maxlength=\"7\" data-parsley-expirymonth data-parsley-expirymonth-message=\"Invalid expiry month\" data-parsley-expirydate\r\n        data-parsley-expirydate-message=\"Card expired\" data-parsley-maxlength-message=\"Invalid Expiry Date\" data-parsley-minlength-message=\"Invalid Expiry Date\"\r\n        disabled=\"true\" /> ";
},"30":function(container,depth0,helpers,partials,data) {
    return "\r\n      <input type=\"text\" id=\"CCexpiry_credit\" name=\"cc-expiry\" value=\"\" class=\"input\" maxlength=\"7\" data-parsley-minlength=\"7\" data-parsley-maxlength=\"7\"\r\n        data-parsley-expirymonth data-parsley-expirymonth-message=\"Invalid expiry month\" data-parsley-expirydate data-parsley-expirydate-message=\"Card expired\"\r\n        data-parsley-maxlength-message=\"Invalid Expiry Date\" data-parsley-minlength-message=\"Invalid Expiry Date\" required\r\n      /> ";
},"32":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "    <div class=\"input-group ipg--cvv float-label full\">\r\n      <span id=\"cvvTooltip\">What's this?</span>\r\n\r\n      <div style=\"display:none\">\r\n        <div id=\"cvvTooltipTemplate_credit\" style=\"width:175px;\">This is the 3 digit number at the back of your card</div>\r\n      </div>\r\n      <label>CVV</label>\r\n      <input type=\"password\" name=\"cc-cvv\" value=\"\" style=\"display: none;\" />\r\n      <input type=\"password\" id=\"Cvv_credit\" name=\"cc-cvv\" value=\"\" autocomplete=\"off\" spellcheck=\"false\" data-parsley-required-message=\"Invalid CVV\"\r\n        data-parsley-maxlength-message=\"Invalid CVV\" data-parsley-minlength-message=\"Invalid CVV\" autocapitalize=\"off\" class=\"input text-align-center\"\r\n        maxlength=\"3\" data-parsley-minlength=\"3\" data-parsley-maxlength=\"3\" required/>\r\n    </div>\r\n    <div class=\"clearfix\">\r\n      <div class=\"ipg--cardpin input-group float-label\">\r\n        <label class=\"CardPinLabel\">Card PIN</label>\r\n        <input type=\"password\" name=\"cc-pin\" class=\"input text-align-center\" value=\"\" style=\"display: none;\" /> "
    + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.isMobile : depth0),{"name":"if","hash":{},"fn":container.program(18, data, 0),"inverse":container.program(20, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n\r\n        <div class=\"clearfix\">\r\n          <div id=\"RandomPinpad_credit\"></div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : {};

  return "<div>\r\n  <div class=\"container\">\r\n    <!-- Support Cvv -->\r\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.cardSettings : depth0)) != null ? stack1.supportCvv : stack1),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\r\n    <!-- Support Pin -->\r\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.cardSettings : depth0)) != null ? stack1.supportPin : stack1),{"name":"if","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\r\n    <!-- Support  Expiry -->\r\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.cardSettings : depth0)) != null ? stack1.supportExpiry : stack1),{"name":"if","hash":{},"fn":container.program(8, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "    <!-- Support Cvv, Pin, Expiry -->\r\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.cardSettings : depth0)) != null ? stack1.supportAll : stack1),{"name":"if","hash":{},"fn":container.program(13, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\r\n\r\n    <!-- Support Cvv, Expiry -->\r\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.cardSettings : depth0)) != null ? stack1.supportCvvExpiry : stack1),{"name":"if","hash":{},"fn":container.program(22, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\r\n\r\n    <!-- Support Pin, Expiry -->\r\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.cardSettings : depth0)) != null ? stack1.supportPinExpiry : stack1),{"name":"if","hash":{},"fn":container.program(27, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\r\n    <!-- Support Cvv, Pin  -->\r\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.cardSettings : depth0)) != null ? stack1.supportCvvPin : stack1),{"name":"if","hash":{},"fn":container.program(32, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "  </div>\r\n</div>";
},"useData":true});

},{"hbsfy/runtime":24}],95:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "<div id=\"mtn--wrapper\" class=\"ipg-form-container\">\r\n    <div class=\"mtn--header\">\r\n        <div>Kindly complete this transaction on</div>\r\n        <div>your mobile device</div>\r\n        <div>"
    + ((stack1 = container.lambda(((stack1 = (depth0 != null ? depth0.paymentData : depth0)) != null ? stack1.mobilePhoneNumber : stack1), depth0)) != null ? stack1 : "")
    + "</div>\r\n    </div>\r\n    <div class=\"mtn--body-text\">\r\n        <div>Didn't get a prompt on your device?</div>\r\n        <div class=\"mtn--subbody\"><div class=\"otpLink\">Click here</div> &nbsp;to get an OTP via SMS</div>\r\n    </div>\r\n\r\n    <div class=\"mtn-button-back\">\r\n        <button type=\"button\" id=\"Back\">\r\n            <span class=\"btn-text\">Back</span>\r\n        </button>\r\n    </div>\r\n</div>\r\n\r\n<style>\r\n\r\n    .mtn--header {\r\n        display: block;\r\n        text-align: center;\r\n        justify-content: flex-start;\r\n        font-size: 17px;\r\n        color: #386B81;\r\n    }\r\n\r\n    .mtn--header div{\r\n        margin-bottom: 5px;\r\n    }\r\n\r\n    .mtn--body-text {\r\n        display: block;\r\n        text-align: center;\r\n        color: #555;\r\n        font-size: 15px;\r\n        letter-spacing: .3px;\r\n        margin-top: 40px;\r\n    }\r\n\r\n    .mtn--subbody {\r\n\r\n    }\r\n\r\n    .mtn-button-back {\r\n        width: 100%;\r\n        margin-top: 60px;\r\n    }\r\n\r\n    .mtn-button-back button{\r\n        font-size: 14px;\r\n        background-color: #FEFEFE;\r\n        color: #6A7479;\r\n        border: 1px solid #D1DADE;\r\n        height: 40px;\r\n        width: 100%;\r\n        border-radius: 4px;\r\n        letter-spacing: .6px;\r\n        font-weight: 600;\r\n    }\r\n\r\n    #mtn--wrapper .otpLink{\r\n        display: inline-block;\r\n        font-size: 14px;\r\n        color: #00B3F6;\r\n        text-decoration: underline;\r\n        cursor: pointer;\r\n    }\r\n</style>";
},"useData":true});

},{"hbsfy/runtime":24}],96:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"ipg-form-container\" id=\"pay_with_mobile_complete_wrapper\">\r\n  <div class=\"content\">\r\n\r\n    <div class=\"icon\">\r\n      <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 336.08 336.08\">\r\n        <g>\r\n          <g>\r\n            <path d=\"M336,182.68V115.4c1.268-19.443-13.465-36.233-32.909-37.502c-1.429-0.093-2.862-0.099-4.291-0.018h-96v-30.8    c0-19.36-10.48-40-40-40H40c-25.04,0-40,14.96-40,40V289c0,19.36,10.56,40,40,40h123.2c29.52,0,40-20.72,40-40v-41.6l6.64,8    c2.819,3.402,7.862,3.876,11.264,1.057c1.86-1.541,2.925-3.841,2.896-6.257v-29.92h74.96    c19.458,1.016,36.056-13.934,37.072-33.392C336.105,185.485,336.094,184.08,336,182.68z M16,47.08c0-5.92,0-24,24-24h123.2    c11.693-1.562,22.438,6.651,24,18.344c0.251,1.877,0.251,3.779,0,5.656v8.96H16V47.08z M16,72.04h171.04v6.16h-18.4    c-19.44-1.323-36.271,13.362-37.595,32.802c-0.107,1.571-0.109,3.147-0.005,4.718V183c-1.282,19.442,13.44,36.243,32.882,37.525    c1.571,0.104,3.147,0.102,4.718-0.005h11.68l6.8,8l-0.08,29.84H16V72.04z M168.696,313c-1.877,0.251-3.779,0.251-5.656,0H40    c-11.693,1.562-22.438-6.651-24-18.344c-0.251-1.877-0.251-3.779,0-5.656v-14.64h171.04V289    C188.602,300.693,180.389,311.438,168.696,313z M303.084,204.209c-1.556,0.187-3.129,0.184-4.684-0.009H216c-4.418,0-8,3.582-8,8    v16l-17.68-21.12c-1.523-1.828-3.781-2.884-6.16-2.88h-15.6c-10.611,1.313-20.278-6.224-21.591-16.836    c-0.193-1.555-0.195-3.128-0.009-4.684V115.4c-1.274-10.616,6.299-20.255,16.915-21.529c1.556-0.187,3.129-0.184,4.685,0.009    H298.8c10.637-1.089,20.142,6.65,21.232,17.287c0.144,1.408,0.134,2.828-0.032,4.233v67.28    C321.274,193.296,313.701,202.935,303.084,204.209z\"\r\n            />\r\n          </g>\r\n        </g>\r\n        <g>\r\n          <g>\r\n            <path d=\"M121.84,284.52H80.88c-4.418,0-8,3.582-8,8s3.582,8,8,8h40.96c4.418,0,8-3.582,8-8S126.258,284.52,121.84,284.52z\" />\r\n          </g>\r\n        </g>\r\n      </svg>\r\n    </div>\r\n\r\n    <div class=\"text\">\r\n      Please complete the transaction by following the prompt on your mobile device\r\n    </div>\r\n\r\n\r\n  </div>\r\n\r\n\r\n  <div class=\"button_area\">\r\n    <button class=\"btn-default btn\" type=\"button\" id=\"Back\">Cancel</button>\r\n  </div>\r\n\r\n</div>\r\n\r\n\r\n<style>\r\n  #pay_with_mobile_complete_wrapper {}\r\n\r\n  #pay_with_mobile_complete_wrapper .content {\r\n    font-size: 0px;\r\n    margin-top: 10px;\r\n    margin-bottom: 40px;\r\n  }\r\n\r\n  #pay_with_mobile_complete_wrapper .content .icon {\r\n    width: 50px;\r\n    height: 50px;\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n  }\r\n\r\n  #pay_with_mobile_complete_wrapper .content .icon svg {\r\n    width: 50px;\r\n    height: 50px;\r\n    fill: #22659a;\r\n  }\r\n\r\n  #pay_with_mobile_complete_wrapper .content .text {\r\n    display: inline-block;\r\n    width: calc(100% - 50px);\r\n    font-size: 15px;\r\n    padding-left: 25px;\r\n    vertical-align: middle;\r\n    line-height: 25px;\r\n  }\r\n\r\n  #pay_with_mobile_complete_wrapper .button_area {}\r\n</style>";
},"useData":true});

},{"hbsfy/runtime":24}],97:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"number_screen screen\" style=\"display: none\">\r\n  <form data-parsley-validate>\r\n    <div class=\"parameter-control paycode-number\">\r\n      <div class=\"label-tag\">Phone Number</div>\r\n\r\n      <input id=\"creditPayment_phoneNumber\" readonly data-parsley-mobile_number_ng\r\n        data-parsley-mobile_number_ng-message=\"Please provide a valid phone number\" type=\"text\" placeholder=\"Input your phone number\"\r\n        required />\r\n\r\n    </div>\r\n\r\n    <div class=\"container\">\r\n      <div class=\"\">\r\n        <button class=\"btn btn-primary\" type=\"submit\">\r\n          <span class=\"btn-text\">Continue</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"ipg--or--divider\">\r\n      <span class=\"ipg--or--text\">or</span>\r\n    </div>\r\n\r\n    <div class=\"e_wallet_login\">\r\n      <button class=\"btn btn-qt login\" type=\"button\" >Login to Verve eWallet</button>\r\n    </div>\r\n\r\n    <div class=\"disclaimer\">\r\n      Disclaimer: Your transaction history may be accessed to evaluate loan eligibility\r\n    </div>\r\n\r\n  </form>\r\n</div>\r\n\r\n<div class=\"otp_screen screen\" style=\"display: none\">\r\n  <form data-parsley-validate>\r\n\r\n    <div class=\"display--message\">\r\n      Kindly enter the OTP sent to the number provided\r\n    </div>\r\n\r\n\r\n\r\n    <div class=\"input-group float-label\">\r\n      <label for=\"Token\">Enter your One-Time PIN</label>\r\n      <div class=\"input-control\">\r\n\r\n        <input type=\"password\" name=\"token\" value=\"\" style=\"display: none;\" />\r\n        <input type=\"password\" name=\"token\" value=\"\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" id=\"creditPayment_otp\"\r\n          class=\"input text-align-center\" required data-parsley-required-message=\"Please enter your one time PIN\" />\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"token-otp-controls\">\r\n      <div class=\"token-otp-controls-top\">\r\n        Did not get OTP?\r\n      </div>\r\n      <div class=\"token-otp-controls-bottom\">\r\n        <div class=\"otp-controls-button-wrapper\" style=\"width: 100%;border-right: none;\">\r\n          <div class=\"otp-controls-button credit\">\r\n            <svg fill=\"#000000\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\" />\r\n              <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n            </svg>\r\n            <div>Resend OTP</div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n    <div class=\"container btn-group\">\r\n      <div class=\"ipg--back--container\">\r\n        <button class=\"btn-default btn\" type=\"button\" id=\"creditPayment_otpBackButton\">Back</button>\r\n      </div>\r\n      <div class=\"ipg--login--container\">\r\n        <button class=\"btn btn-primary\" type=\"submit\">\r\n          <span class=\"btn-text\">Continue</span>\r\n        </button>\r\n      </div>\r\n      \r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<div class=\"otp_card_screen screen\" style=\"display: none\">\r\n  <form data-parsley-validate>\r\n\r\n    <div class=\"display--message\">\r\n      Kindly enter the OTP sent to the number provided\r\n    </div>\r\n\r\n\r\n\r\n    <div class=\"input-group float-label\">\r\n      <label for=\"Token\">Enter your One-Time PIN</label>\r\n      <div class=\"input-control\">\r\n\r\n        <input type=\"password\" name=\"token\" value=\"\" style=\"display: none;\" />\r\n        <input type=\"password\" name=\"token\" value=\"\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" id=\"creditPayment_otp_card\"\r\n          class=\"input text-align-center\" required data-parsley-required-message=\"Please enter your one time PIN\" />\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"token-otp-controls\">\r\n      <div class=\"token-otp-controls-top\">\r\n        Did not get OTP?\r\n      </div>\r\n      <div class=\"token-otp-controls-bottom\">\r\n        <div class=\"otp-controls-button-wrapper\" style=\"width: 100%;border-right: none;\">\r\n          <div class=\"otp-controls-button credit\">\r\n            <svg fill=\"#000000\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\" />\r\n              <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n            </svg>\r\n            <div>Resend OTP</div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n    <div class=\"container btn-group\">\r\n      <div class=\"ipg--back--container\">\r\n        <button class=\"btn-default btn\" type=\"button\" id=\"creditPayment_otpCardBackButton\">Back</button>\r\n      </div>\r\n      <div class=\"ipg--login--container\">\r\n        <button class=\"btn btn-primary\" type=\"submit\">\r\n          <span class=\"btn-text\">Continue</span>\r\n        </button>\r\n      </div>\r\n      \r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<div class=\"offers_screen screen\" style=\"display: none\">\r\n\r\n  <div class=\"header\">\r\n\r\n    <span class=\"available_offers\">Available Offers</span>\r\n    <span class=\"getting_offers\">Getting Offers...</span>\r\n  </div>\r\n\r\n  <div class=\"no_offers_container\" style=\"display: none\" >Sorry, there are no available offers at the moment</div>\r\n\r\n  <div class=\"page_loader\" style=\"display: none\"></div>\r\n\r\n  <div class=\"offers_container\">\r\n\r\n  </div>\r\n\r\n\r\n\r\n  <div class=\"container\" id=\"container\" style=\"display: none\" >\r\n    <div class=\"\" style=\"margin-left: 15px;margin-right: 15px;\">\r\n      <button class=\"btn-default btn\" type=\"button\" id=\"creditPayment_offersBackButton\">\r\n        <span class=\"btn-text\" >Back</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n\r\n\r\n<div class=\"card_screen screen\" style=\"display: none\">\r\n  \r\n</div>\r\n\r\n\r\n<style>\r\n  #CreditDetailsForm {}\r\n\r\n  #CreditDetailsForm .number_screen .disclaimer {\r\n    margin-top: 20px;\r\n    color: #105986;\r\n    font-size: 12px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n  }\r\n\r\n  #CreditDetailsForm .offers_screen {\r\n    margin-left: -15px;\r\n    margin-right: -15px;\r\n  }\r\n\r\n  #CreditDetailsForm .offers_screen .header {\r\n    text-align: center;\r\n    font-size: 16px;\r\n    position: relative;\r\n  }\r\n\r\n  #CreditDetailsForm .offers_screen .header div {\r\n    position: absolute;\r\n    left: 0px;\r\n    margin-left: 15px;\r\n    padding: 0px;\r\n    top: 0px;\r\n    cursor: pointer;\r\n    display: none;\r\n  }\r\n\r\n  #CreditDetailsForm .offers_screen .header div svg {\r\n    width: 20px;\r\n    height: 20px;\r\n    vertical-align: middle;\r\n    fill: #868686;\r\n  }\r\n\r\n  #CreditDetailsForm .offers_screen .header span {\r\n    display: inline-block;\r\n    color: #676767;\r\n    letter-spacing: 1px;\r\n    font-size: 16px;\r\n  }\r\n\r\n  #CreditDetailsForm .offers_screen .offer_item {\r\n    margin: 15px;\r\n    margin-top: 20px;\r\n    padding-top: 13px;\r\n    background: white;\r\n    padding-bottom: 10px;\r\n    border: 1px solid #e8e8e8;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  #CreditDetailsForm .offers_screen .offer_item .title_section {\r\n    font-size: 0px;\r\n    padding-top: 0px;\r\n    padding-bottom: 10px;\r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n  }\r\n\r\n  #CreditDetailsForm .offers_screen .offer_item .title_section div {\r\n    display: inline-block;\r\n    width: calc(100% - 60px);\r\n    font-size: 14px;\r\n    color: #146c92;\r\n    font-weight: bold;\r\n  }\r\n\r\n  #CreditDetailsForm .offers_screen .offer_item .title_section span {\r\n    padding: 6px;\r\n    display: inline-block;\r\n    font-size: 11px;\r\n    color: white;\r\n    cursor: pointer;\r\n    letter-spacing: 1px;\r\n    background: #1aadcc;\r\n    width: 60px;\r\n    text-align: center;\r\n    border-radius: 2px;\r\n  }\r\n\r\n  #CreditDetailsForm .offers_screen .offer_item .loan_details {}\r\n\r\n\r\n  #CreditDetailsForm .offers_screen .offer_item .loan_details .entry {\r\n    padding: 5px;\r\n    padding-left: 15px;\r\n    font-size: 13px;\r\n  }\r\n\r\n  #CreditDetailsForm .offers_screen .offer_item .loan_details .entry .val_label {\r\n    display: inline-block;\r\n    width: 130px;\r\n    font-size: 13px;\r\n    color: #888;\r\n  }\r\n\r\n  #CreditDetailsForm .offers_screen .offer_item .loan_details .entry .val {\r\n    display: inline-block;\r\n  }\r\n\r\n\r\n  #CreditDetailsForm .offers_screen .no_offers_container {\r\n    margin: auto;\r\n    margin-top: 40px;\r\n    margin-bottom: 50px;\r\n    text-align: center;\r\n    font-size: 15px;\r\n    letter-spacing: 1px;\r\n    width: 240px;\r\n    line-height: 25px;\r\n    color: #999;\r\n  }\r\n\r\n\r\n\r\n\r\n  #CreditDetailsForm .card_screen .header {\r\n    text-align: right;\r\n    font-size: 16px;\r\n    margin-bottom: 25px;\r\n    border-bottom: 1px solid #ddd;\r\n    padding-bottom: 15px;\r\n    position: relative;\r\n  }\r\n\r\n  #CreditDetailsForm .card_screen .header div {\r\n    position: absolute;\r\n    left: 0px;\r\n    margin-left: 5px;\r\n    padding: 0px;\r\n    top: 0px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  #CreditDetailsForm .card_screen .header div svg {\r\n    width: 17px;\r\n    height: 17px;\r\n    vertical-align: middle;\r\n    fill: #146c92;\r\n  }\r\n\r\n  #CreditDetailsForm .card_screen .header span {\r\n    display: inline-block;\r\n    color: #146c92;\r\n    letter-spacing: 1px;\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  #CreditDetailsForm .card_screen .header_info {\r\n    text-align: center;\r\n    margin-bottom: 35px;\r\n    font-weight: bold;\r\n    color: #868383;\r\n    font-size: 13px;\r\n    letter-spacing: 0.5px;\r\n  }\r\n</style>";
},"useData":true});

},{"hbsfy/runtime":24}],98:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : {};

  return "      <!--First Opera check-->\r\n      <div class=\"input-group\">\r\n        <select class=\"input\" id=\"cardListOpera\">\r\n          <option>Select a card from your wallet</option>\r\n          <option data-index=\"-1\">Enter new card</option>\r\n          "
    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.wallet : depth0),{"name":"each","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\r\n        </select>\r\n      </div>\r\n\r\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.inputCard : depth0),{"name":"if","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "      <!--End if Input Card-->\r\n";
},"2":function(container,depth0,helpers,partials,data) {
    var stack1;

  return " "
    + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.selected : depth0),{"name":"if","hash":{},"fn":container.program(3, data, 0),"inverse":container.program(5, data, 0),"data":data})) != null ? stack1 : "")
    + " ";
},"3":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "\r\n          <option class=\"wallet-card\" id=\"wallet-card-credit\" data-card-brand=\""
    + alias4(((helper = (helper = helpers.cardTypeName || (depth0 != null ? depth0.cardTypeName : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"cardTypeName","hash":{},"data":data}) : helper)))
    + "\" data-card-label=\""
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + " "
    + alias4(((helper = (helper = helpers.maskedPanLabel || (depth0 != null ? depth0.maskedPanLabel : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"maskedPanLabel","hash":{},"data":data}) : helper)))
    + "\" data-masked-card=\""
    + alias4(((helper = (helper = helpers.maskedPan || (depth0 != null ? depth0.maskedPan : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"maskedPan","hash":{},"data":data}) : helper)))
    + "\"\r\n            data-index=\""
    + alias4(((helper = (helper = helpers.index || (data && data.index)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"index","hash":{},"data":data}) : helper)))
    + "\" value=\""
    + alias4(((helper = (helper = helpers.index || (data && data.index)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"index","hash":{},"data":data}) : helper)))
    + "\" selected>\r\n            "
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + " "
    + alias4(((helper = (helper = helpers.maskedPanLabel || (depth0 != null ? depth0.maskedPanLabel : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"maskedPanLabel","hash":{},"data":data}) : helper)))
    + "\r\n          </option>\r\n";
},"5":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "          <option class=\"wallet-card\" id=\"wallet-card-credit\" data-card-brand=\""
    + alias4(((helper = (helper = helpers.cardTypeName || (depth0 != null ? depth0.cardTypeName : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"cardTypeName","hash":{},"data":data}) : helper)))
    + "\" data-card-label=\""
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + " "
    + alias4(((helper = (helper = helpers.maskedPanLabel || (depth0 != null ? depth0.maskedPanLabel : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"maskedPanLabel","hash":{},"data":data}) : helper)))
    + "\" data-masked-card=\""
    + alias4(((helper = (helper = helpers.maskedPan || (depth0 != null ? depth0.maskedPan : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"maskedPan","hash":{},"data":data}) : helper)))
    + "\"\r\n            data-index=\""
    + alias4(((helper = (helper = helpers.index || (data && data.index)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"index","hash":{},"data":data}) : helper)))
    + "\" value=\""
    + alias4(((helper = (helper = helpers.index || (data && data.index)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"index","hash":{},"data":data}) : helper)))
    + "\">\r\n            "
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + " "
    + alias4(((helper = (helper = helpers.maskedPanLabel || (depth0 != null ? depth0.maskedPanLabel : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"maskedPanLabel","hash":{},"data":data}) : helper)))
    + "\r\n          </option>\r\n          ";
},"7":function(container,depth0,helpers,partials,data) {
    return "      <div class=\"input-group\">\r\n        <div class=\"relative operainit input-group float-label\" id=\"CardDropDownInput\">\r\n          <span id=\"CardNumber\" class=\"ipg--cardtype\"></span>\r\n          <label>Select or input your card number</label>\r\n          <input name=\"card-number\" class=\"input\" type=\"text\" style=\"display:none\">\r\n          <input class=\"input\" name=\"card-number\" type=\"text\" id=\"Cc\" required data-parsley-minlength=\"10\" data-parsley-cardconfig\r\n            data-parsley-cardconfig-message=\"\" data-parsley-cardluhn data-parsley-cardluhn-message=\"Card number is incorrect\"\r\n            data-parsley-required-message=\"Please enter card number or select card from wallet\" data-parsley-minlength-message=\"Card number is incorrect\"\r\n            autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" />\r\n        </div>\r\n      </div>\r\n";
},"9":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : {};

  return " "
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.isOpera : depth0),{"name":"if","hash":{},"fn":container.program(10, data, 0),"inverse":container.program(12, data, 0),"data":data})) != null ? stack1 : "")
    + "            <!--All this stuff happens when not Opera-->\r\n\r\n            <div class=\"clearfix\">\r\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.isOpera : depth0),{"name":"if","hash":{},"fn":container.program(14, data, 0),"inverse":container.program(16, data, 0),"data":data})) != null ? stack1 : "")
    + "              <!--End of Non Opera stuff-->\r\n              <div class=\"input-group float-label ipg--cvv half-last\">\r\n                <span id=\"cvvTooltip_credit\">What's this?</span>\r\n\r\n                <div style=\"display:none\">\r\n                  <div id=\"cvvTooltipTemplate_credit\" style=\"width:175px;\">This is the 3 digit number at the back of your card</div>\r\n                </div>\r\n\r\n                <label>CVV</label>\r\n                <input type=\"password\" name=\"cc-cvv\" value=\"\" style=\"display: none;\" />\r\n                <input type=\"password\" id=\"Cvv_credit\" name=\"cc-cvv\" value=\"\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" class=\"input text-align-center\"\r\n                  data-parsley-required-message=\"Invalid CVV\" data-parsley-maxlength-message=\"Invalid CVV\" data-parsley-minlength-message=\"Invalid CVV\"\r\n                  maxlength=\"3\" data-parsley-minlength=\"3\" data-parsley-maxlength=\"3\" required />\r\n              </div>\r\n            </div>\r\n            <div class=\"clearfix \" id=\"CardPin_credit\"> </div>\r\n";
},"10":function(container,depth0,helpers,partials,data) {
    return " ";
},"12":function(container,depth0,helpers,partials,data) {
    return "\r\n            <!--Not Opera stuff-->\r\n            <div class=\"relative input-group cardfield float-label\" id=\"CardDropDownInput_credit\">\r\n              <span id=\"CardNumber\" class=\"ipg--cardtype\"></span>\r\n              <label>Select or input your card number</label>\r\n              <input name=\"card-number\" class=\"input\" type=\"text\" style=\"display:none\">\r\n              <input class=\"input\" name=\"card-number\" type=\"text\" id=\"Cc-credit\" required data-parsley-minlength=\"10\"\r\n                 data-parsley-cardluhn data-parsley-cardluhn-message=\"Card number is incorrect\"\r\n                data-parsley-required-message=\"Please enter card number or select card from wallet\" data-parsley-minlength-message=\"Card number is incorrect\"\r\n                autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" />\r\n              <div class=\"card-type-container\"></div>\r\n              <div class=\"dropdown-wrapper\" id=\"OpenWallet_Credit\">\r\n                <svg width=\"10px\" height=\"9px\" viewBox=\"0 0 12 9\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n                  xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\">\r\n                  <g id=\"Joey\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\">\r\n                    <g id=\"verve-loged-in-8-copy-2\" sketch:type=\"MSLayerGroup\" transform=\"translate(-329.000000, -229.500000)\" fill=\"#9B9B9B\">\r\n                      <g id=\"1\" transform=\"translate(29.000000, 178.000000)\" sketch:type=\"MSShapeGroup\">\r\n                        <polygon id=\"dropdown-select-icon\" transform=\"translate(306.000000, 56.000000) scale(-1, -1) translate(-306.000000, -56.000000) \"\r\n                          points=\"306 52 312 60 300 60 \"></polygon>\r\n                      </g>\r\n                    </g>\r\n                  </g>\r\n                </svg>\r\n              </div>\r\n            </div>\r\n\r\n\r\n\r\n            <div class=\"fingerprint-enabled-wrapper\">\r\n              <div class=\"fingerprint-enabled-wrapper-inner\">\r\n\r\n                <div class=\"fingerprint-enabled-check-wrapper\">\r\n                  <div class=\"fingerprint-enabled-check enabled\"></div>\r\n                </div>\r\n\r\n                <div class=\"fingerprint-enabled-text\">\r\n                  Fingerprint enabled\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n";
},"14":function(container,depth0,helpers,partials,data) {
    return "              <div class=\"input-group float-label ipg--date half\">\r\n                <label>Expiry Month(MM)</label>\r\n                <div class=\"ipg--icon--svg\"> </div>\r\n                <input type=\"text\" name=\"cc-expiry\" value=\"\" class=\"input\" style=\"display:none\" />\r\n                <input type=\"text\" id=\"CCexpiryMonth\" name=\"cc-expiry\" value=\"\" class=\"input\" maxlength=\"2\" autocomplete=\"off\" spellcheck=\"false\"\r\n                  autocapitalize=\"off\" data-parsley-minlength=\"1\" data-parsley-maxlength=\"2\" data-parsley-expirydate data-parsley-expirydate-message=\"Card expired\"\r\n                  data-parsley-maxlength-message=\"Invalid Expiry Date\" data-parsley-required-message=\"Card Expiry is required\"\r\n                  data-parsley-minlength-message=\"Invalid Expiry Date\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\"\r\n                  required />\r\n              </div>\r\n              <div class=\"input-group float-label ipg--date half-last\">\r\n                <label> Expiry Year(YY)</label>\r\n                <div class=\"ipg--icon--svg\"> </div>\r\n                <input type=\"text\" name=\"cc-expiry\" value=\"\" class=\"input\" style=\"display:none\" />\r\n                <input type=\"text\" id=\"CCexpiryYear\" name=\"cc-expiry\" value=\"\" class=\"input\" maxlength=\"2\" autocomplete=\"off\" spellcheck=\"false\"\r\n                  autocapitalize=\"off\" data-parsley-minlength=\"1\" data-parsley-maxlength=\"2\" data-parsley-expirydate data-parsley-expirydate-message=\"Card expired\"\r\n                  data-parsley-maxlength-message=\"Invalid Expiry Date\" data-parsley-required-message=\"Card Expiry is required\"\r\n                  data-parsley-minlength-message=\"Invalid Expiry Date\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\"\r\n                  required />\r\n\r\n              </div>\r\n";
},"16":function(container,depth0,helpers,partials,data) {
    return "              <!--Stuff if opera above-->\r\n              <div class=\"input-group float-label icon-label ipg--date half\">\r\n                <label>MM / YY</label>\r\n                <div class=\"ipg--icon--svg\">\r\n                  <svg width=\"25px\" height=\"21px\" viewBox=\"0.000000 -55.714352 27.857176 30.000036\" xmlns=\"\">\r\n                    <path d=\"M2.142860 -27.857176L2.142860 -32.678610L6.964294 -32.678610L6.964294 -27.857176ZM8.035724 -27.857176L8.035724 -32.678610L13.392873 -32.678610L13.392873 -27.857176ZM2.142860 -33.750040L2.142860 -39.107189L6.964294 -39.107189L6.964294 -33.750040ZM8.035724 -33.750040L8.035724 -39.107189L13.392873 -39.107189L13.392873 -33.750040ZM2.142860 -40.178619L2.142860 -45.000054L6.964294 -45.000054L6.964294 -40.178619ZM14.464303 -27.857176L14.464303 -32.678610L19.821452 -32.678610L19.821452 -27.857176ZM8.035724 -40.178619L8.035724 -45.000054L13.392873 -45.000054L13.392873 -40.178619ZM20.892882 -27.857176L20.892882 -32.678610L25.714316 -32.678610L25.714316 -27.857176ZM14.464303 -33.750040L14.464303 -39.107189L19.821452 -39.107189L19.821452 -33.750040ZM8.571439 -48.214343C8.571439 -47.929745 8.320322 -47.678628 8.035724 -47.678628L6.964294 -47.678628C6.679695 -47.678628 6.428579 -47.929745 6.428579 -48.214343L6.428579 -53.035778C6.428579 -53.320376 6.679695 -53.571492 6.964294 -53.571492L8.035724 -53.571492C8.320322 -53.571492 8.571439 -53.320376 8.571439 -53.035778ZM20.892882 -33.750040L20.892882 -39.107189L25.714316 -39.107189L25.714316 -33.750040ZM14.464303 -40.178619L14.464303 -45.000054L19.821452 -45.000054L19.821452 -40.178619ZM20.892882 -40.178619L20.892882 -45.000054L25.714316 -45.000054L25.714316 -40.178619ZM21.428597 -48.214343C21.428597 -47.929745 21.177481 -47.678628 20.892882 -47.678628L19.821452 -47.678628C19.536854 -47.678628 19.285737 -47.929745 19.285737 -48.214343L19.285737 -53.035778C19.285737 -53.320376 19.536854 -53.571492 19.821452 -53.571492L20.892882 -53.571492C21.177481 -53.571492 21.428597 -53.320376 21.428597 -53.035778ZM27.857176 -49.285773C27.857176 -50.457649 26.886193 -51.428633 25.714316 -51.428633L23.571457 -51.428633L23.571457 -53.035778C23.571457 -54.508994 22.366098 -55.714352 20.892882 -55.714352L19.821452 -55.714352C18.348236 -55.714352 17.142878 -54.508994 17.142878 -53.035778L17.142878 -51.428633L10.714298 -51.428633L10.714298 -53.035778C10.714298 -54.508994 9.508940 -55.714352 8.035724 -55.714352L6.964294 -55.714352C5.491078 -55.714352 4.285719 -54.508994 4.285719 -53.035778L4.285719 -51.428633L2.142860 -51.428633C0.970983 -51.428633 0.000000 -50.457649 0.000000 -49.285773L0.000000 -27.857176C0.000000 -26.685300 0.970983 -25.714316 2.142860 -25.714316L25.714316 -25.714316C26.886193 -25.714316 27.857176 -26.685300 27.857176 -27.857176ZM27.857176 -49.285773\"\r\n                      fill=\"#CCCCCC\"></path>\r\n                  </svg>\r\n                </div>\r\n                <input type=\"text\" name=\"cc-expiry\" value=\"\" class=\"input\" style=\"display:none\" />\r\n                <input type=\"text\" id=\"CCexpiry_credit\" name=\"cc-expiry\" value=\"\" class=\"input\" maxlength=\"7\" autocomplete=\"cc-exp\" spellcheck=\"false\"\r\n                  autocapitalize=\"off\" data-parsley-minlength=\"7\" data-parsley-maxlength=\"7\" data-parsley-expirydate data-parsley-expirymonth\r\n                  data-parsley-expirymonth-message=\"Invalid expiry month\" data-parsley-expirydate-message=\"Card expired\" data-parsley-maxlength-message=\"Invalid Expiry Date\"\r\n                  data-parsley-required-message=\"Card Expiry is required\" data-parsley-minlength-message=\"Invalid Expiry Date\"\r\n                  autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" required />\r\n              </div>\r\n";
},"18":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "            <!--This if inputCard is false-->\r\n\r\n"
    + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.isOpera : depth0),{"name":"if","hash":{},"fn":container.program(19, data, 0),"inverse":container.program(21, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n\r\n            <div id=\"Expiry-Cvv-Pin-credit\" class=\"expiry-cvv-pin\"></div>\r\n";
},"19":function(container,depth0,helpers,partials,data) {
    return "            <!--Opera ish start-->\r\n";
},"21":function(container,depth0,helpers,partials,data) {
    return "            <!--Opera ish end-->\r\n            <label style=\"margin: 0px;height: 30px;top: -30px;padding: 0px;color: #444;transition: none;opacity: 1;font-size: 12px;\">Click below to use another card</label>\r\n            <div class=\"selected-input-wrapper cardfield form-group\" id=\"SelectedInputWrapper-credit\">\r\n              <div class=\"selected-card-wrapper\" id=\"SelectedCard_credit\"></div>\r\n            </div>\r\n\r\n\r\n            <div class=\"fingerprint-enabled-wrapper\">\r\n              <div class=\"fingerprint-enabled-wrapper-inner\">\r\n                <div class=\"fingerprint-enabled-check-wrapper\">\r\n                  <div class=\"fingerprint-enabled-check enabled\"></div>\r\n                </div>\r\n\r\n                <div class=\"fingerprint-enabled-text\">\r\n                  Fingerprint enabled\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n";
},"23":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1;

  return "\r\n          <ul class=\"CardInWallet--dropdown\">\r\n            <li class=\"ipg--new--card\" id=\"NewCard_credit\">\r\n              <div class=\"issuer-name\">Enter new card </div>\r\n              <div class=\"card\">\r\n                <svg width=\"40px\" height=\"25px\" viewBox=\"0 0 110 70\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\">\r\n                    <g id=\"Rectangle-1-+-Shape\" sketch:type=\"MSLayerGroup\">\r\n                      <rect id=\"Rectangle-1\" stroke=\"#00425F\" sketch:type=\"MSShapeGroup\" x=\"0\" y=\"0\" width=\"110\" height=\"70\" rx=\"6\"></rect>\r\n                      <path d=\"M65.6372908,32.9288252 L57.364409,32.9288252 L57.364409,24.5441477 C57.364409,23.2210673 56.3062892,22.1486486 55.0008499,22.1486486 C53.6954106,22.1486486 52.6364409,23.2210673 52.6364409,24.5441477 L52.6364409,32.9288252 L44.3635591,32.9288252 C43.0581198,32.9288252 42,34.0012439 42,35.3243243 C42,36.6474047 43.0581198,37.7198234 44.3635591,37.7198234 L52.6364409,37.7198234 L52.6364409,46.1045009 C52.6364409,47.4275813 53.6945607,48.5 55,48.5 C56.3054393,48.5 57.3635591,47.4275813 57.3635591,46.1045009 L57.3635591,37.7198234 L65.6364409,37.7198234 C66.9418802,37.7198234 68,36.6474047 68,35.3243243 C68,34.0012439 66.9427301,32.9288252 65.6372908,32.9288252 L65.6372908,32.9288252 Z\"\r\n                        id=\"Shape\" fill=\"#00B8DE\" sketch:type=\"MSShapeGroup\"></path>\r\n                    </g>\r\n                  </g>\r\n                </svg>\r\n              </div>\r\n            </li>\r\n"
    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.wallet : depth0),{"name":"each","hash":{},"fn":container.program(24, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "          </ul>\r\n";
},"24":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "            <li class=\"wallet-card\" id=\"wallet-card-credit\" data-card-brand=\""
    + alias4(((helper = (helper = helpers.cardTypeName || (depth0 != null ? depth0.cardTypeName : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"cardTypeName","hash":{},"data":data}) : helper)))
    + "\" data-card-label=\""
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + " "
    + alias4(((helper = (helper = helpers.maskedPanLabel || (depth0 != null ? depth0.maskedPanLabel : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"maskedPanLabel","hash":{},"data":data}) : helper)))
    + "\" data-masked-card=\""
    + alias4(((helper = (helper = helpers.maskedPan || (depth0 != null ? depth0.maskedPan : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"maskedPan","hash":{},"data":data}) : helper)))
    + "\"\r\n              data-index=\""
    + alias4(((helper = (helper = helpers.index || (data && data.index)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"index","hash":{},"data":data}) : helper)))
    + "\">\r\n              <div class=\"issuer-name\">"
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + " "
    + alias4(((helper = (helper = helpers.maskedPanLabel || (depth0 != null ? depth0.maskedPanLabel : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"maskedPanLabel","hash":{},"data":data}) : helper)))
    + "</div>\r\n              <div class=\"card\">\r\n                <img class=\"card-image\" src=\""
    + alias4(container.lambda((depths[1] != null ? depths[1].baseUrl : depths[1]), depth0))
    + "public/images/card-brands/"
    + alias4(((helper = (helper = helpers.cardTypeName || (depth0 != null ? depth0.cardTypeName : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"cardTypeName","hash":{},"data":data}) : helper)))
    + ".png\" />\r\n              </div>\r\n            </li>\r\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=depth0 != null ? depth0 : {};

  return "   <div class=\"header\">\r\n    <div id=\"creditPayment_cardBackButton\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\"\r\n        y=\"0px\" width=\"306px\" height=\"306px\" viewBox=\"0 0 306 306\" style=\"enable-background:new 0 0 306 306;\" xml:space=\"preserve\">\r\n        <g>\r\n          <g id=\"chevron-left\">\r\n            <polygon points=\"247.35,35.7 211.65,0 58.65,153 211.65,306 247.35,270.3 130.05,153   \" />\r\n          </g>\r\n        </g>\r\n      </svg>\r\n    </div>\r\n\r\n    <span></span>\r\n  </div>\r\n\r\n  <div class=\"header_info\">Enter card details for loan repayment</div>\r\n\r\n  <form data-parsley-validate id=\"credit-card-form\">\r\n\r\n    <div class=\"ipg--card--container\">\r\n\r\n\r\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.isOpera : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "      <!--First Opera check End-->\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <div class=\"input-control cc-advance-input relative\" id=\"WalletDropDown_credit\">\r\n        <div class=\"ipg--wallet--wrapper\" id=\"CardInWallet\">\r\n          <div class=\"select-input-wrapper ipg--card--container\">\r\n            "
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.inputCard : depth0),{"name":"if","hash":{},"fn":container.program(9, data, 0, blockParams, depths),"inverse":container.program(18, data, 0, blockParams, depths),"data":data})) != null ? stack1 : "")
    + "            <!--End if inputCard-->\r\n          </div>\r\n          "
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.isOpera : depth0),{"name":"if","hash":{},"fn":container.program(10, data, 0, blockParams, depths),"inverse":container.program(23, data, 0, blockParams, depths),"data":data})) != null ? stack1 : "")
    + "        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"container\">\r\n      <div class=\"\">\r\n        <button class=\"btn btn-primary\" type=\"submit\">\r\n          <span class=\"btn-text\">Continue</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"fingerprint-modal-wrapper\">\r\n\r\n\r\n\r\n      <div class=\"container prompt show\">\r\n\r\n        <div class=\"text-area\">\r\n          You will not be required to provide an OTP when using this card. Do you want to disable this feature?\r\n        </div>\r\n\r\n        <div class=\"button-area\">\r\n\r\n          <div class=\"fp-button cancel\">\r\n            <span>Cancel</span>\r\n          </div>\r\n\r\n          <div class=\"fp-button confirm\">\r\n            <span>Remove</span>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n      <div class=\"container success\">\r\n\r\n        <div class=\"text-area\">\r\n          Operation successful. Fingerprint for this card has been disabled.\r\n        </div>\r\n\r\n        <div class=\"button-area\">\r\n\r\n          <div class=\"fp-button cancel\">\r\n            <span>Close</span>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n      <div class=\"container failure\">\r\n\r\n        <div class=\"text-area\">\r\n          Operation failed. Please try again.\r\n        </div>\r\n\r\n        <div class=\"button-area\">\r\n\r\n          <div class=\"fp-button cancel\">\r\n            <span>Close</span>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n    </div>\r\n\r\n\r\n\r\n  </form>\r\n\r\n\r\n";
},"useData":true,"useDepths":true});

},{"hbsfy/runtime":24}],99:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"parameter-control provider\">\r\n  <div class=\"label-tag\">Provider</div>\r\n\r\n\r\n  <div class=\"dropdown-component-wrapper\">\r\n\r\n    <div class=\"main-wrapper\">\r\n\r\n      <div class=\"main-text\">Loading providers...</div>\r\n\r\n      <div class=\"main-logo\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\"\r\n          width=\"292.362px\" height=\"292.362px\" viewBox=\"0 0 292.362 292.362\" style=\"enable-background:new 0 0 292.362 292.362;\"\r\n          xml:space=\"preserve\">\r\n          <g>\r\n            <path d=\"M286.935,69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952,0-9.233,1.807-12.85,5.424   C1.807,72.998,0,77.279,0,82.228c0,4.948,1.807,9.229,5.424,12.847l127.907,127.907c3.621,3.617,7.902,5.428,12.85,5.428   s9.233-1.811,12.847-5.428L286.935,95.074c3.613-3.617,5.427-7.898,5.427-12.847C292.362,77.279,290.548,72.998,286.935,69.377z\"\r\n            />\r\n          </g>\r\n        </svg>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"dropdown-wrapper\">\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <div class=\"error\">Select a provider</div>\r\n</div>\r\n\r\n<div class=\"parameter-control mobile-number\">\r\n  <div class=\"label-tag\">Mobile Number</div>\r\n\r\n  <input type=\"text\" placeholder=\"Provide your mobile number\" />\r\n\r\n  <div class=\"error\">Provide a mobile number</div>\r\n\r\n</div>\r\n\r\n<div class=\"container\">\r\n  <div class=\"\">\r\n    <button class=\"btn btn-primary\" type=\"submit\" id=\"PayWithMobile\">\r\n      <span class=\"btn-text\">Pay</span>\r\n    </button>\r\n  </div>\r\n</div>";
},"useData":true});

},{"hbsfy/runtime":24}],100:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"parameter-control paycode-number\">\r\n  <div class=\"label-tag\">Paycode</div>\r\n\r\n  <input readonly type=\"text\" placeholder=\"Input your paycode\" />\r\n\r\n  <div class=\"error\">Input a valid paycode</div>\r\n\r\n</div>\r\n\r\n<div class=\"parameter-control pin\">\r\n  <div class=\"label-tag\">Pin</div>\r\n\r\n  <input readonly type=\"password\" placeholder=\"Input pin(Optional)\" />\r\n\r\n  <div class=\"error\">Input a valid pin</div>\r\n\r\n</div>\r\n\r\n<div class=\"container\">\r\n  <div class=\"\">\r\n    <button class=\"btn btn-primary\" type=\"submit\" id=\"PayWithPaycode\">\r\n      <span class=\"btn-text\">Pay</span>\r\n    </button>\r\n  </div>\r\n</div>";
},"useData":true});

},{"hbsfy/runtime":24}],101:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"ipg--cardpin input-group is--card--payment float-label\">\r\n    <label id=\"CardPinLabel_credit\">Card PIN</label>\r\n    <input type=\"password\" name=\"cc-pin\"  class=\"input text-align-center\" value=\"\" style=\"display: none;\"/>\r\n    <input type=\"password\" id=\"Pin_credit\" name=\"cc-pin\" autocomplete=\"new-password\" spellcheck=\"false\"\r\n           autocapitalize=\"off\"  value=\"\" class=\"input text-align-center\" maxlength=\"4\"  data-parsley-minlength=\"4\" data-parsley-maxlength=\"4\"\r\n           data-parsley-required-message=\"Invalid Pin\"\r\n           data-parsley-maxlength-message=\"Invalid Pin\"\r\n           data-parsley-minlength-message=\"Invalid Pin\"\r\n           maxlength=\"4\" required  readonly/>\r\n    <div class=\"clearfix\">\r\n        <div id=\"RandomPinpad_credit\"></div>\r\n    </div>\r\n</div>";
},"useData":true});

},{"hbsfy/runtime":24}],102:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "    <div class=\"ipg-pinpads\">\r\n"
    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : {},depth0,{"name":"each","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "    </div>\r\n";
},"2":function(container,depth0,helpers,partials,data) {
    var alias1=container.lambda, alias2=container.escapeExpression;

  return "        <button type=\"button\" class=\"ipg-pinpad_credit\" data-key-value=\""
    + alias2(alias1(depth0, depth0))
    + "\" id=\"keypad-"
    + alias2(alias1(depth0, depth0))
    + "\">"
    + alias2(alias1(depth0, depth0))
    + "</button>\r\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "<div class=\"ipg-pinpads-wrapper\">\r\n"
    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.randomNumbers : depth0),{"name":"each","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "</div>";
},"useData":true});

},{"hbsfy/runtime":24}],103:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"label-control\">\r\n    <div class=\"label-el\">Bank</div>\r\n    <div class=\"label-btn\">Retry</div>\r\n</div>\r\n\r\n\r\n\r\n<div class=\"dropdown-container\">\r\n    <select>\r\n    </select>\r\n</div>\r\n\r\n\r\n<div class=\"retry-container\">\r\n    <div>Retry</div>\r\n</div>\r\n\r\n\r\n<div class=\"short-code-container\">\r\n    <a>Select a bank</a>\r\n</div>\r\n\r\n\r\n<div class=\"message\">Tap the code above or dial on your mobile device to complete this transaction.</div>\r\n\r\n\r\n\r\n\r\n<style>\r\n    #UssdDetailsForm {}\r\n\r\n\r\n\r\n    #UssdDetailsForm .label-control {\r\n        margin-bottom: 5px;\r\n        font-size: 0px;\r\n    }\r\n\r\n    #UssdDetailsForm .label-control .label-el {\r\n        width: calc(100% - 40px);\r\n        display: inline-block;\r\n        font-size: 14px;\r\n    }\r\n\r\n    #UssdDetailsForm .label-control .label-btn {\r\n        display: none;\r\n        width: 40px;\r\n        text-align: right;\r\n        font-size: 12px;\r\n        color: #777;\r\n        color: #146c92;\r\n        cursor: pointer;\r\n    }\r\n\r\n\r\n    #UssdDetailsForm .dropdown-container {\r\n        padding-bottom: 25px;\r\n        border-bottom: 1px solid #e6e6e6;\r\n        margin-bottom: 10px;\r\n    }\r\n\r\n    #UssdDetailsForm .dropdown-container select {\r\n        padding: 10px;\r\n        border-radius: 5px;\r\n        width: 100%;\r\n        box-sizing: border-box;\r\n        border: 1px solid #dddddd;\r\n        background: white;\r\n    }\r\n\r\n    #UssdDetailsForm .retry-container {\r\n        text-align: right;\r\n        margin-bottom: 5px;\r\n        height: 16px;\r\n    }\r\n\r\n    #UssdDetailsForm .retry-container div {\r\n        display: none;\r\n        color: #146c92;\r\n        padding-left: 10px;\r\n        cursor: pointer;\r\n    }\r\n\r\n    #UssdDetailsForm .short-code-container {\r\n        text-align: center;\r\n        background: #efeff0;\r\n        border-radius: 2px;\r\n    }\r\n\r\n    #UssdDetailsForm .short-code-container a {\r\n        font-size: 16px;\r\n        color: #146c92;\r\n        font-weight: bold;\r\n        padding: 15px;\r\n        padding-left: 7px;\r\n        padding-right: 7px;\r\n        letter-spacing: 2px;\r\n        word-break: break-all;\r\n        display: inline-block;\r\n        text-decoration: none;\r\n        width: 100%;\r\n        cursor: pointer;\r\n    }\r\n\r\n    #UssdDetailsForm .message {\r\n        font-size: 14px;\r\n        text-align: center;\r\n        line-height: 21px;\r\n        margin-top: 20px;\r\n        color: #a0a0a0;\r\n    }\r\n</style>";
},"useData":true});

},{"hbsfy/runtime":24}],104:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"ipg--cardpin input-group is--card--payment float-label\">\r\n    <label id=\"CardPinLabel\">Card PIN</label>\r\n    <input type=\"password\" name=\"cc-pin\"  class=\"input text-align-center\" value=\"\" style=\"display: none;\"/>\r\n    <input type=\"password\" id=\"Pin\" name=\"cc-pin\" autocomplete=\"off\" spellcheck=\"false\"\r\n           autocapitalize=\"off\"  value=\"\" class=\"input text-align-center\" maxlength=\"4\"  data-parsley-minlength=\"4\" data-parsley-maxlength=\"4\"\r\n           data-parsley-required-message=\"Invalid Pin\"\r\n           data-parsley-maxlength-message=\"Invalid Pin\"\r\n           data-parsley-minlength-message=\"Invalid Pin\"\r\n           maxlength=\"4\" required  readonly/>\r\n    <div class=\"clearfix\">\r\n        <div id=\"RandomPinpad\"></div>\r\n    </div>\r\n</div>";
},"useData":true});

},{"hbsfy/runtime":24}],105:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "    <div class=\"ipg-pinpads\">\r\n"
    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : {},depth0,{"name":"each","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "    </div>\r\n";
},"2":function(container,depth0,helpers,partials,data) {
    var alias1=container.lambda, alias2=container.escapeExpression;

  return "        <button type=\"button\" class=\"ipg-pinpad\" data-key-value=\""
    + alias2(alias1(depth0, depth0))
    + "\" id=\"keypad-"
    + alias2(alias1(depth0, depth0))
    + "\">"
    + alias2(alias1(depth0, depth0))
    + "</button>\r\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "<div class=\"ipg-pinpads-wrapper\">\r\n"
    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.randomNumbers : depth0),{"name":"each","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "</div>";
},"useData":true});

},{"hbsfy/runtime":24}],106:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "<div>\r\n    <div class=\"card\">\r\n        <img class=\"card-image\" src=\""
    + alias4(((helper = (helper = helpers.baseUrl || (depth0 != null ? depth0.baseUrl : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"baseUrl","hash":{},"data":data}) : helper)))
    + "public/images/card-brands/"
    + alias4(((helper = (helper = helpers.cardTypeName || (depth0 != null ? depth0.cardTypeName : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"cardTypeName","hash":{},"data":data}) : helper)))
    + ".png\"/>\r\n    </div>\r\n    <div class=\"issuer-name\">"
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + " "
    + alias4(((helper = (helper = helpers.maskedPanLabel || (depth0 != null ? depth0.maskedPanLabel : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"maskedPanLabel","hash":{},"data":data}) : helper)))
    + "</div>\r\n</div>";
},"useData":true});

},{"hbsfy/runtime":24}],107:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function";

  return "<body>\r\n    <style>\r\n        body{\r\n            margin: 0;\r\n        }\r\n\r\n        .cardinal--loader {\r\n            position: absolute;\r\n            width: 100%;\r\n            text-align: center;\r\n            top: 120px;\r\n            font-weight: 200;\r\n            font-size: 18px;\r\n            font-family: \"proxima-nova\",'Helvetica', Arial, Sans-serif;\r\n            color: #00425F;\r\n        }\r\n        .loader{\r\n            margin-bottom: 20px;;\r\n        }\r\n    </style>\r\n    <div class=\"cardinal--loader\">\r\n        <!-- 3  -->\r\n        <div class=\"loader\">\r\n            <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n                 width=\"40px\" height=\"40px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\r\n              <path  fill=\"#00425F\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n                <animateTransform attributeType=\"xml\"\r\n                  attributeName=\"transform\"\r\n                  type=\"rotate\"\r\n                  from=\"0 25 25\"\r\n                  to=\"360 25 25\"\r\n                  dur=\"0.4s\"\r\n                  repeatCount=\"indefinite\"/>\r\n                </path>\r\n              </svg>\r\n        </div>\r\n        <div>\r\n            Connecting to 3D secure...\r\n        </div>\r\n    </div>\r\n    <form action=\""
    + ((stack1 = ((helper = (helper = helpers.url || (depth0 != null ? depth0.url : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"url","hash":{},"data":data}) : helper))) != null ? stack1 : "")
    + "\" method=\"post\" class=\"ipg-form-container\" id=\"payWithCardinalForm\">\r\n        <input type=\"hidden\" name=\"PaReq\" value=\""
    + ((stack1 = ((helper = (helper = helpers.paReg || (depth0 != null ? depth0.paReg : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"paReg","hash":{},"data":data}) : helper))) != null ? stack1 : "")
    + "\"/>\r\n        <input type=\"hidden\" name=\"MD\" value=\""
    + ((stack1 = ((helper = (helper = helpers.md || (depth0 != null ? depth0.md : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"md","hash":{},"data":data}) : helper))) != null ? stack1 : "")
    + "\"/>\r\n        <input type=\"hidden\" name=\"TermUrl\" value=\""
    + ((stack1 = ((helper = (helper = helpers.termUrl || (depth0 != null ? depth0.termUrl : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"termUrl","hash":{},"data":data}) : helper))) != null ? stack1 : "")
    + "\" />\r\n    </form>\r\n</body>\r\n\r\n";
},"useData":true});

},{"hbsfy/runtime":24}],108:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(container,depth0,helpers,partials,data) {
    return "";
},"3":function(container,depth0,helpers,partials,data) {
    return "            <div class=\"loader\">\r\n                \r\n                <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n                 width=\"40px\" height=\"40px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\r\n              <path class=\"loaderPath\" fill=\"#00425F\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n\r\n               <animateTransform attributeType=\"xml\"\r\n                  attributeName=\"transform\"\r\n                  type=\"rotate\"\r\n                  from=\"0 25 25\"\r\n                  to=\"360 25 25\"\r\n                  dur=\"0.4s\"\r\n                  repeatCount=\"indefinite\"/>\r\n                </path>\r\n              </svg>\r\n            </div>\r\n";
},"5":function(container,depth0,helpers,partials,data) {
    return "                 <br>\r\n                 <br>\r\n                 <button  id=\"continueTrans\">Continue Transaction</button>\r\n";
},"7":function(container,depth0,helpers,partials,data) {
    return "    <div class=\"cardinal-iframe\">\r\n        <iframe></iframe>\r\n    </div>\r\n";
},"9":function(container,depth0,helpers,partials,data) {
    return "    <div class=\"ipg-form-container\">\r\n        <div class=\"container btn-group\">\r\n            <div class=\"ipg--back--container\">\r\n                <button class=\"btn-default btn\" type=\"button\" id=\"Back\">Back</button>\r\n            </div>\r\n            <div class=\"ipg--login--container\">\r\n                <button class=\"btn btn-primary\" type=\"submit\" id=\"CardExtraDetailsBtn\">\r\n                      <span class=\"btn-text\">Retry</span> \r\n                    </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : {};

  return "<div class=\"cardinal-iframe-wrapper\">\r\n\r\n    <div class=\"cardinal-notification\">\r\n        <div class=\"cardinal--loader\">\r\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.isOpera : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.program(3, data, 0),"data":data})) != null ? stack1 : "")
    + "            Processing...\r\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.isOpera : depth0),{"name":"if","hash":{},"fn":container.program(5, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\r\n        </div>\r\n             \r\n\r\n    </div>\r\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.loadIframe : depth0),{"name":"if","hash":{},"fn":container.program(7, data, 0),"inverse":container.program(9, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n</div>\r\n";
},"useData":true});

},{"hbsfy/runtime":24}],109:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1, helper;

  return "    <div class=\"display--message\">\r\n        "
    + ((stack1 = ((helper = (helper = helpers.displayMessage || (depth0 != null ? depth0.displayMessage : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : {},{"name":"displayMessage","hash":{},"data":data}) : helper))) != null ? stack1 : "")
    + "\r\n    </div>\r\n";
},"3":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : {};

  return "    <div class=\"display--message\">\r\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.smsAndEmail : depth0),{"name":"if","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.smsNotEmail : depth0),{"name":"if","hash":{},"fn":container.program(6, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.emailNotSms : depth0),{"name":"if","hash":{},"fn":container.program(8, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "    </div>\r\n";
},"4":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "          Kindly enter the OTP sent to "
    + alias4(((helper = (helper = helpers.mobilePhoneNumber || (depth0 != null ? depth0.mobilePhoneNumber : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"mobilePhoneNumber","hash":{},"data":data}) : helper)))
    + " and "
    + alias4(((helper = (helper = helpers.email || (depth0 != null ? depth0.email : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"email","hash":{},"data":data}) : helper)))
    + ". \r\n";
},"6":function(container,depth0,helpers,partials,data) {
    var helper;

  return "         Kindly enter the OTP sent to "
    + container.escapeExpression(((helper = (helper = helpers.mobilePhoneNumber || (depth0 != null ? depth0.mobilePhoneNumber : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : {},{"name":"mobilePhoneNumber","hash":{},"data":data}) : helper)))
    + ".\r\n";
},"8":function(container,depth0,helpers,partials,data) {
    var helper;

  return "         Kindly enter the OTP sent to "
    + container.escapeExpression(((helper = (helper = helpers.email || (depth0 != null ? depth0.email : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : {},{"name":"email","hash":{},"data":data}) : helper)))
    + ".\r\n";
},"10":function(container,depth0,helpers,partials,data) {
    return "                <input   type=\"password\" name=\"token\" value=\"\" style=\"display: none;\"/>\r\n                <input   type=\"password\" name=\"token\" value=\"\"  autocomplete=\"off\" spellcheck=\"false\"\r\n                        autocapitalize=\"off\"   id=\"Token\" class=\"input text-align-center\"\r\n                        required  data-parsley-required-message=\"Please enter your one time PIN\"/>\r\n";
},"12":function(container,depth0,helpers,partials,data) {
    return "            <input   type=\"text\" name=\"token\" value=\"\" style=\"display: none;\"/>\r\n             \r\n              <input   type=\"text\" name=\"token\" value=\"\"  autocomplete=\"off\" spellcheck=\"false\"\r\n                        autocapitalize=\"off\"   id=\"Token\" class=\"input text-align-center\"\r\n                        required  data-parsley-required-message=\"Please enter your one time PIN\"/>\r\n                        \r\n";
},"14":function(container,depth0,helpers,partials,data) {
    return "    <div class=\"ipg--resend\">\r\n        Did not receive OTP?  <a class=\"btn btn-link\" id=\"resendOtp\">Resend OTP</a>\r\n    </div>\r\n";
},"16":function(container,depth0,helpers,partials,data) {
    var stack1, helper;

  return "                "
    + ((stack1 = ((helper = (helper = helpers.messageRight || (depth0 != null ? depth0.messageRight : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : {},{"name":"messageRight","hash":{},"data":data}) : helper))) != null ? stack1 : "")
    + "\r\n";
},"18":function(container,depth0,helpers,partials,data) {
    var stack1, helper;

  return "    <div class=\"otp-controls-link\">\r\n        "
    + ((stack1 = ((helper = (helper = helpers.supportMessage || (depth0 != null ? depth0.supportMessage : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : {},{"name":"supportMessage","hash":{},"data":data}) : helper))) != null ? stack1 : "")
    + "\r\n    </div>\r\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : {};

  return "<form name=\"two-factor-form\" class=\"ipg-form-container \" id=\"TwoFactorTokenForm\" data-parsley-validate>\r\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.displayMessage : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.program(3, data, 0),"data":data})) != null ? stack1 : "")
    + "    <div class=\"input-group float-label\" >\r\n        <label for=\"Token\">Enter your One-Time PIN</label>\r\n        <div class=\"input-control\">\r\n           \r\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.maskedToken : depth0),{"name":"if","hash":{},"fn":container.program(10, data, 0),"inverse":container.program(12, data, 0),"data":data})) != null ? stack1 : "")
    + "        </div>\r\n    </div>\r\n<!--\r\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.smsOrEmail : depth0),{"name":"if","hash":{},"fn":container.program(14, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "-->\r\n\r\n\r\n    <div class=\"token-otp-controls\">\r\n        <div class=\"token-otp-controls-top\">\r\n            Did not get OTP?\r\n        </div>\r\n        <div class=\"token-otp-controls-bottom\">\r\n            <div class=\"otp-controls-button-wrapper\">\r\n                <div class=\"otp-controls-button\">\r\n                    <svg fill=\"#000000\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"/>\r\n                        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                    </svg>\r\n                    <div>Resend OTP</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"otp-controls-message\">\r\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.messageRight : depth0),{"name":"if","hash":{},"fn":container.program(16, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"token-otp-remember\">\r\n        <div class=\"otp-remember-top\">\r\n            <div class=\"remember-device-check-wrapper\">\r\n                <div class=\"remember-device-check\"></div>\r\n            </div>\r\n            <span>Remember card on this device</span>\r\n        </div>\r\n\r\n        <div class=\"otp-remember-bottom\">\r\n            <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 1000 1000\" enable-background=\"new 0 0 1000 1000\" xml:space=\"preserve\">\r\n                <g>\r\n                    <path d=\"M390.2,943.5c-70.7-19.7-146.8-52.1-201-96.2c-43.4-35.3-80.9-78-111.5-127c-52.1-83.3-66.4-156.5-67-159.6l-0.7-3.7V133.4l22.2-10.9C165.5,57.2,379,56.5,388.1,56.5l0,79.3c-1.9,0-180.4,0.7-298.8,48.1v365.3c3.2,13.6,17.9,69.7,57.3,131.8c59.3,93.4,144.1,156.1,252.2,186.3L390.2,943.5z\"/>\r\n                    <path d=\"M381.7,770.6c-182.4-50.9-215.3-223.9-215.3-223.9s0-182.4,0-251.4c80.5-39.4,215.3-39.4,215.3-39.4\"/>\r\n                    <path d=\"M475.3,312.7c-43.9-5.9-95.1-9.9-95.5-9.9l0-47.6c1.6,0,54.5,4,101.7,10.3L475.3,312.7z\"/>\r\n                    <path d=\"M380.6,770.2l-6.1-45.8c150-41.9,178.6-183.8,178.9-185.2l44.5,16.7c-0.3,1.8-6.4,36.5-36.7,84.8C521.2,704.9,454.3,749.6,380.6,770.2z\"/>\r\n                    <path d=\"M528.8,146.2c-77-10.4-140.8-10.5-141.5-10.5l0-79.3c2.8,0,106.9,2.4,189.2,13.4L528.8,146.2z\"/>\r\n                    <path d=\"M390.2,943.5l-13.5-76.3C635.4,795,661.8,588.5,662.1,586.3l81.9,8.5c-0.4,2.8-7.7,65-55.8,141.4c-28,44.6-63.6,83.8-105.6,116.5C530.5,893.4,460.6,923.9,390.2,943.5z\"/>\r\n                    <path fill=\"#11CD6E\" d=\"M758.5,81.2c-127.8,0-231.5,103.6-231.5,231.5c0,127.8,103.6,231.5,231.5,231.5c127.8,0,231.5-103.6,231.5-231.5C990,184.8,886.4,81.2,758.5,81.2z M731.7,415.6l-17.4-17.2L599.2,284.7l36.5-36.9l97.6,96.4L883,208.8l34.8,38.5L731.7,415.6z\"/>\r\n                </g>\r\n            </svg>\r\n            <span>Remember this card if you do not want an OTP for subsequent transactions.</span>\r\n        </div>\r\n    </div>\r\n\r\n\r\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.supportMessage : depth0),{"name":"if","hash":{},"fn":container.program(18, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\r\n\r\n    <div class=\"container btn-group\">\r\n        <div class=\"ipg--back--container\">\r\n            <button class=\"btn-default btn\" type=\"button\" id=\"Back\">Back</button>\r\n        </div>\r\n        <div class=\"ipg--login--container\">\r\n            <button class=\"btn btn-primary\" type=\"submit\" id=\"TwoFactorTokenBtn\">\r\n                <span class=\"btn-text\">Continue</span>\r\n            </button>\r\n        </div>\r\n    </div>\r\n</form>\r\n";
},"useData":true});

},{"hbsfy/runtime":24}],110:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(container,depth0,helpers,partials,data) {
    return "      <input type=\"password\" name=\"token\" value=\"\" style=\"display: none;\" />\r\n      <input type=\"password\" name=\"token\" value=\"\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" id=\"Token\" class=\"input text-align-center\"\r\n        required data-parsley-required-message=\"Please enter your one time PIN\" /> ";
},"3":function(container,depth0,helpers,partials,data) {
    return "\r\n      <input type=\"text\" name=\"token\" value=\"\" style=\"display: none;\" />\r\n\r\n      <input type=\"text\" name=\"token\" value=\"\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" id=\"Token\" class=\"input text-align-center\"\r\n        required data-parsley-required-message=\"Please enter your one time PIN\" /> ";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "<form name=\"two-factor-form\" class=\"ipg-form-container \" id=\"TwoFactorTokenForm\" data-parsley-validate>\r\n\r\n  <div class=\"display--message\">\r\n    Kindly enter the OTP sent tp the number linked to your account\r\n  </div>\r\n\r\n\r\n\r\n  <div class=\"input-group float-label\">\r\n    <label for=\"Token\">Enter your One-Time PIN</label>\r\n    <div class=\"input-control\">\r\n\r\n"
    + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.maskedToken : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.program(3, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div class=\"container btn-group\">\r\n    <div class=\"ipg--back--container\">\r\n      <button class=\"btn-default btn\" type=\"button\" id=\"Back\">Back</button>\r\n    </div>\r\n    <div class=\"ipg--login--container\">\r\n      <button class=\"btn btn-primary\" type=\"submit\" id=\"TwoFactorTokenBtn\">\r\n        <span class=\"btn-text\">Continue</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>";
},"useData":true});

},{"hbsfy/runtime":24}],111:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<form id=\"RegForm\" class=\"ipg-form-container\" autocomplete=\"off\">\r\n\r\n        <div class=\"tr--operation-info-wrapper\">\r\n            <div class=\"tr--operation-info\">\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n    <div class=\"tr--message-header\">\r\n		You are not registered on our One-Time PIN <b>(OTP)</b> service. Enter the phone number linked to your account to register.\r\n    </div>\r\n\r\n\r\n\r\n	<div class=\"tr--control\">\r\n			<span class=\"tr--control-code\"></span>\r\n			<input placeholder=\"Enter your number\" id=\"numField\" type=\"text\">\r\n	</div>\r\n\r\n    <div class=\"tr--validation\">\r\n		Please enter your mobile number\r\n    </div>\r\n\r\n	<div class=\"tr--button-area\">\r\n	    <div class=\"tr-button-back\">\r\n	        <button type=\"button\" id=\"Back\">\r\n	            <span class=\"btn-text\">Back</span>\r\n	        </button>\r\n	    </div>\r\n	    <div class=\"tr--button-register\">\r\n	        <button type=\"submit\" id=\"Register\">\r\n	            <span class=\"btn-text\">Register</span>\r\n	        </button>\r\n	    </div>\r\n	</div>\r\n</form>\r\n\r\n";
},"useData":true});

},{"hbsfy/runtime":24}],112:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : {};

  return "      <!--First Opera check-->\r\n      <div class=\"input-group\">\r\n        <select class=\"input\" id=\"cardListOpera\">\r\n          <option>Select a card from your wallet</option>\r\n          <option data-index=\"-1\">Enter new card</option>\r\n          "
    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.wallet : depth0),{"name":"each","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\r\n        </select>\r\n      </div>\r\n\r\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.inputCard : depth0),{"name":"if","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "      <!--End if Input Card-->\r\n";
},"2":function(container,depth0,helpers,partials,data) {
    var stack1;

  return " "
    + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.selected : depth0),{"name":"if","hash":{},"fn":container.program(3, data, 0),"inverse":container.program(5, data, 0),"data":data})) != null ? stack1 : "")
    + " ";
},"3":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "\r\n          <option class=\"wallet-card\" id=\"wallet-card\" data-card-brand=\""
    + alias4(((helper = (helper = helpers.cardTypeName || (depth0 != null ? depth0.cardTypeName : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"cardTypeName","hash":{},"data":data}) : helper)))
    + "\" data-card-label=\""
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + " "
    + alias4(((helper = (helper = helpers.maskedPanLabel || (depth0 != null ? depth0.maskedPanLabel : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"maskedPanLabel","hash":{},"data":data}) : helper)))
    + "\" data-masked-card=\""
    + alias4(((helper = (helper = helpers.maskedPan || (depth0 != null ? depth0.maskedPan : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"maskedPan","hash":{},"data":data}) : helper)))
    + "\"\r\n            data-index=\""
    + alias4(((helper = (helper = helpers.index || (data && data.index)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"index","hash":{},"data":data}) : helper)))
    + "\" value=\""
    + alias4(((helper = (helper = helpers.index || (data && data.index)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"index","hash":{},"data":data}) : helper)))
    + "\" selected>\r\n            "
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + " "
    + alias4(((helper = (helper = helpers.maskedPanLabel || (depth0 != null ? depth0.maskedPanLabel : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"maskedPanLabel","hash":{},"data":data}) : helper)))
    + "\r\n          </option>\r\n";
},"5":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "          <option class=\"wallet-card\" id=\"wallet-card\" data-card-brand=\""
    + alias4(((helper = (helper = helpers.cardTypeName || (depth0 != null ? depth0.cardTypeName : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"cardTypeName","hash":{},"data":data}) : helper)))
    + "\" data-card-label=\""
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + " "
    + alias4(((helper = (helper = helpers.maskedPanLabel || (depth0 != null ? depth0.maskedPanLabel : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"maskedPanLabel","hash":{},"data":data}) : helper)))
    + "\" data-masked-card=\""
    + alias4(((helper = (helper = helpers.maskedPan || (depth0 != null ? depth0.maskedPan : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"maskedPan","hash":{},"data":data}) : helper)))
    + "\"\r\n            data-index=\""
    + alias4(((helper = (helper = helpers.index || (data && data.index)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"index","hash":{},"data":data}) : helper)))
    + "\" value=\""
    + alias4(((helper = (helper = helpers.index || (data && data.index)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"index","hash":{},"data":data}) : helper)))
    + "\">\r\n            "
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + " "
    + alias4(((helper = (helper = helpers.maskedPanLabel || (depth0 != null ? depth0.maskedPanLabel : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"maskedPanLabel","hash":{},"data":data}) : helper)))
    + "\r\n          </option>\r\n          ";
},"7":function(container,depth0,helpers,partials,data) {
    return "      <div class=\"input-group\">\r\n        <div class=\"relative operainit input-group float-label\" id=\"CardDropDownInput\">\r\n          <span id=\"CardNumber\" class=\"ipg--cardtype\"></span>\r\n          <label>Select or input your card number</label>\r\n          <input name=\"card-number\" class=\"input\" type=\"text\" style=\"display:none\">\r\n          <input class=\"input\" name=\"card-number\" type=\"text\" id=\"Cc\" required data-parsley-minlength=\"10\" data-parsley-cardconfig\r\n            data-parsley-cardconfig-message=\"\" data-parsley-cardluhn data-parsley-cardluhn-message=\"Card number is incorrect\"\r\n            data-parsley-required-message=\"Please enter card number or select card from wallet\" data-parsley-minlength-message=\"Card number is incorrect\"\r\n            autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" />\r\n        </div>\r\n      </div>\r\n";
},"9":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : {};

  return " "
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.isOpera : depth0),{"name":"if","hash":{},"fn":container.program(10, data, 0),"inverse":container.program(12, data, 0),"data":data})) != null ? stack1 : "")
    + "            <!--All this stuff happens when not Opera-->\r\n\r\n            <div class=\"clearfix\">\r\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.isOpera : depth0),{"name":"if","hash":{},"fn":container.program(14, data, 0),"inverse":container.program(16, data, 0),"data":data})) != null ? stack1 : "")
    + "              <!--End of Non Opera stuff-->\r\n              <div class=\"input-group float-label ipg--cvv half-last\">\r\n                <span id=\"cvvTooltip\">What's this?</span>\r\n\r\n                <div style=\"display:none\">\r\n                  <div id=\"cvvTooltipTemplate\" style=\"width:175px;\">This is the 3 digit number at the back of your card</div>\r\n                </div>\r\n\r\n                <label>CVV</label>\r\n                <input type=\"password\" name=\"cc-cvv\" value=\"\" style=\"display: none;\" />\r\n                <input type=\"password\" id=\"Cvv\" name=\"cc-cvv\" value=\"\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" class=\"input text-align-center\"\r\n                  data-parsley-required-message=\"Invalid CVV\" data-parsley-maxlength-message=\"Invalid CVV\" data-parsley-minlength-message=\"Invalid CVV\"\r\n                  maxlength=\"3\" data-parsley-minlength=\"3\" data-parsley-maxlength=\"3\" required />\r\n              </div>\r\n            </div>\r\n            <div class=\"clearfix \" id=\"CardPin\"> </div>\r\n";
},"10":function(container,depth0,helpers,partials,data) {
    return " ";
},"12":function(container,depth0,helpers,partials,data) {
    return "\r\n            <!--Not Opera stuff-->\r\n            <div class=\"relative input-group cardfield float-label\" id=\"CardDropDownInput\">\r\n              <span id=\"CardNumber\" class=\"ipg--cardtype\"></span>\r\n              <label>Select or input your card number</label>\r\n              <input name=\"card-number\" class=\"input\" type=\"text\" style=\"display:none\">\r\n              <input class=\"input\" name=\"card-number\" type=\"text\" id=\"Cc\" required data-parsley-minlength=\"10\" data-parsley-cardconfig\r\n                data-parsley-cardconfig-message=\"\" data-parsley-cardluhn data-parsley-cardluhn-message=\"Card number is incorrect\"\r\n                data-parsley-required-message=\"Please enter card number or select card from wallet\" data-parsley-minlength-message=\"Card number is incorrect\"\r\n                autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" />\r\n              <div class=\"card-type-container\"></div>\r\n              <div class=\"dropdown-wrapper\" id=\"OpenWallet\">\r\n                <svg width=\"10px\" height=\"9px\" viewBox=\"0 0 12 9\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n                  xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\">\r\n                  <g id=\"Joey\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\">\r\n                    <g id=\"verve-loged-in-8-copy-2\" sketch:type=\"MSLayerGroup\" transform=\"translate(-329.000000, -229.500000)\" fill=\"#9B9B9B\">\r\n                      <g id=\"1\" transform=\"translate(29.000000, 178.000000)\" sketch:type=\"MSShapeGroup\">\r\n                        <polygon id=\"dropdown-select-icon\" transform=\"translate(306.000000, 56.000000) scale(-1, -1) translate(-306.000000, -56.000000) \"\r\n                          points=\"306 52 312 60 300 60 \"></polygon>\r\n                      </g>\r\n                    </g>\r\n                  </g>\r\n                </svg>\r\n              </div>\r\n            </div>\r\n\r\n\r\n\r\n            <div class=\"fingerprint-enabled-wrapper\">\r\n              <div class=\"fingerprint-enabled-wrapper-inner\">\r\n\r\n                <div class=\"fingerprint-enabled-check-wrapper\">\r\n                  <div class=\"fingerprint-enabled-check enabled\"></div>\r\n                </div>\r\n\r\n                <div class=\"fingerprint-enabled-text\">\r\n                  Fingerprint enabled\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n";
},"14":function(container,depth0,helpers,partials,data) {
    return "              <div class=\"input-group float-label ipg--date half\">\r\n                <label>Expiry Month(MM)</label>\r\n                <div class=\"ipg--icon--svg\"> </div>\r\n                <input type=\"text\" name=\"cc-expiry\" value=\"\" class=\"input\" style=\"display:none\" />\r\n                <input type=\"text\" id=\"CCexpiryMonth\" name=\"cc-expiry\" value=\"\" class=\"input\" maxlength=\"2\" autocomplete=\"off\" spellcheck=\"false\"\r\n                  autocapitalize=\"off\" data-parsley-minlength=\"1\" data-parsley-maxlength=\"2\" data-parsley-expirydate data-parsley-expirydate-message=\"Card expired\"\r\n                  data-parsley-maxlength-message=\"Invalid Expiry Date\" data-parsley-required-message=\"Card Expiry is required\"\r\n                  data-parsley-minlength-message=\"Invalid Expiry Date\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\"\r\n                  required />\r\n              </div>\r\n              <div class=\"input-group float-label ipg--date half-last\">\r\n                <label> Expiry Year(YY)</label>\r\n                <div class=\"ipg--icon--svg\"> </div>\r\n                <input type=\"text\" name=\"cc-expiry\" value=\"\" class=\"input\" style=\"display:none\" />\r\n                <input type=\"text\" id=\"CCexpiryYear\" name=\"cc-expiry\" value=\"\" class=\"input\" maxlength=\"2\" autocomplete=\"off\" spellcheck=\"false\"\r\n                  autocapitalize=\"off\" data-parsley-minlength=\"1\" data-parsley-maxlength=\"2\" data-parsley-expirydate data-parsley-expirydate-message=\"Card expired\"\r\n                  data-parsley-maxlength-message=\"Invalid Expiry Date\" data-parsley-required-message=\"Card Expiry is required\"\r\n                  data-parsley-minlength-message=\"Invalid Expiry Date\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\"\r\n                  required />\r\n\r\n              </div>\r\n";
},"16":function(container,depth0,helpers,partials,data) {
    return "              <!--Stuff if opera above-->\r\n              <div class=\"input-group float-label icon-label ipg--date half\">\r\n                <label>MM / YY</label>\r\n                <div class=\"ipg--icon--svg\">\r\n                  <svg width=\"25px\" height=\"21px\" viewBox=\"0.000000 -55.714352 27.857176 30.000036\" xmlns=\"\">\r\n                    <path d=\"M2.142860 -27.857176L2.142860 -32.678610L6.964294 -32.678610L6.964294 -27.857176ZM8.035724 -27.857176L8.035724 -32.678610L13.392873 -32.678610L13.392873 -27.857176ZM2.142860 -33.750040L2.142860 -39.107189L6.964294 -39.107189L6.964294 -33.750040ZM8.035724 -33.750040L8.035724 -39.107189L13.392873 -39.107189L13.392873 -33.750040ZM2.142860 -40.178619L2.142860 -45.000054L6.964294 -45.000054L6.964294 -40.178619ZM14.464303 -27.857176L14.464303 -32.678610L19.821452 -32.678610L19.821452 -27.857176ZM8.035724 -40.178619L8.035724 -45.000054L13.392873 -45.000054L13.392873 -40.178619ZM20.892882 -27.857176L20.892882 -32.678610L25.714316 -32.678610L25.714316 -27.857176ZM14.464303 -33.750040L14.464303 -39.107189L19.821452 -39.107189L19.821452 -33.750040ZM8.571439 -48.214343C8.571439 -47.929745 8.320322 -47.678628 8.035724 -47.678628L6.964294 -47.678628C6.679695 -47.678628 6.428579 -47.929745 6.428579 -48.214343L6.428579 -53.035778C6.428579 -53.320376 6.679695 -53.571492 6.964294 -53.571492L8.035724 -53.571492C8.320322 -53.571492 8.571439 -53.320376 8.571439 -53.035778ZM20.892882 -33.750040L20.892882 -39.107189L25.714316 -39.107189L25.714316 -33.750040ZM14.464303 -40.178619L14.464303 -45.000054L19.821452 -45.000054L19.821452 -40.178619ZM20.892882 -40.178619L20.892882 -45.000054L25.714316 -45.000054L25.714316 -40.178619ZM21.428597 -48.214343C21.428597 -47.929745 21.177481 -47.678628 20.892882 -47.678628L19.821452 -47.678628C19.536854 -47.678628 19.285737 -47.929745 19.285737 -48.214343L19.285737 -53.035778C19.285737 -53.320376 19.536854 -53.571492 19.821452 -53.571492L20.892882 -53.571492C21.177481 -53.571492 21.428597 -53.320376 21.428597 -53.035778ZM27.857176 -49.285773C27.857176 -50.457649 26.886193 -51.428633 25.714316 -51.428633L23.571457 -51.428633L23.571457 -53.035778C23.571457 -54.508994 22.366098 -55.714352 20.892882 -55.714352L19.821452 -55.714352C18.348236 -55.714352 17.142878 -54.508994 17.142878 -53.035778L17.142878 -51.428633L10.714298 -51.428633L10.714298 -53.035778C10.714298 -54.508994 9.508940 -55.714352 8.035724 -55.714352L6.964294 -55.714352C5.491078 -55.714352 4.285719 -54.508994 4.285719 -53.035778L4.285719 -51.428633L2.142860 -51.428633C0.970983 -51.428633 0.000000 -50.457649 0.000000 -49.285773L0.000000 -27.857176C0.000000 -26.685300 0.970983 -25.714316 2.142860 -25.714316L25.714316 -25.714316C26.886193 -25.714316 27.857176 -26.685300 27.857176 -27.857176ZM27.857176 -49.285773\"\r\n                      fill=\"#CCCCCC\"></path>\r\n                  </svg>\r\n                </div>\r\n                <input type=\"text\" name=\"cc-expiry\" value=\"\" class=\"input\" style=\"display:none\" />\r\n                <input type=\"text\" id=\"CCexpiry\" name=\"cc-expiry\" value=\"\" class=\"input\" maxlength=\"7\" autocomplete=\"off\" spellcheck=\"false\"\r\n                  autocapitalize=\"off\" data-parsley-minlength=\"7\" data-parsley-maxlength=\"7\" data-parsley-expirydate data-parsley-expirymonth\r\n                  data-parsley-expirymonth-message=\"Invalid expiry month\" data-parsley-expirydate-message=\"Card expired\" data-parsley-maxlength-message=\"Invalid Expiry Date\"\r\n                  data-parsley-required-message=\"Card Expiry is required\" data-parsley-minlength-message=\"Invalid Expiry Date\"\r\n                  autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" required />\r\n              </div>\r\n";
},"18":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "            <!--This if inputCard is false-->\r\n\r\n"
    + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.isOpera : depth0),{"name":"if","hash":{},"fn":container.program(19, data, 0),"inverse":container.program(21, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n\r\n            <div id=\"Expiry-Cvv-Pin\" class=\"expiry-cvv-pin\"></div>\r\n";
},"19":function(container,depth0,helpers,partials,data) {
    return "            <!--Opera ish start-->\r\n";
},"21":function(container,depth0,helpers,partials,data) {
    return "            <!--Opera ish end-->\r\n            <label style=\"margin: 0px;height: 30px;top: -30px;padding: 0px;color: #444;transition: none;opacity: 1;font-size: 12px;\">Click below to use another card</label>\r\n            <div class=\"selected-input-wrapper cardfield form-group\" id=\"SelectedInputWrapper\">\r\n              <div class=\"selected-card-wrapper\" id=\"SelectedCard\"></div>\r\n            </div>\r\n\r\n\r\n            <div class=\"fingerprint-enabled-wrapper\">\r\n              <div class=\"fingerprint-enabled-wrapper-inner\">\r\n                <div class=\"fingerprint-enabled-check-wrapper\">\r\n                  <div class=\"fingerprint-enabled-check enabled\"></div>\r\n                </div>\r\n\r\n                <div class=\"fingerprint-enabled-text\">\r\n                  Fingerprint enabled\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n";
},"23":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1;

  return "\r\n          <ul class=\"CardInWallet--dropdown\">\r\n            <li class=\"ipg--new--card\" id=\"NewCard\">\r\n              <div class=\"issuer-name\">Enter new card </div>\r\n              <div class=\"card\">\r\n                <svg width=\"40px\" height=\"25px\" viewBox=\"0 0 110 70\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\">\r\n                    <g id=\"Rectangle-1-+-Shape\" sketch:type=\"MSLayerGroup\">\r\n                      <rect id=\"Rectangle-1\" stroke=\"#00425F\" sketch:type=\"MSShapeGroup\" x=\"0\" y=\"0\" width=\"110\" height=\"70\" rx=\"6\"></rect>\r\n                      <path d=\"M65.6372908,32.9288252 L57.364409,32.9288252 L57.364409,24.5441477 C57.364409,23.2210673 56.3062892,22.1486486 55.0008499,22.1486486 C53.6954106,22.1486486 52.6364409,23.2210673 52.6364409,24.5441477 L52.6364409,32.9288252 L44.3635591,32.9288252 C43.0581198,32.9288252 42,34.0012439 42,35.3243243 C42,36.6474047 43.0581198,37.7198234 44.3635591,37.7198234 L52.6364409,37.7198234 L52.6364409,46.1045009 C52.6364409,47.4275813 53.6945607,48.5 55,48.5 C56.3054393,48.5 57.3635591,47.4275813 57.3635591,46.1045009 L57.3635591,37.7198234 L65.6364409,37.7198234 C66.9418802,37.7198234 68,36.6474047 68,35.3243243 C68,34.0012439 66.9427301,32.9288252 65.6372908,32.9288252 L65.6372908,32.9288252 Z\"\r\n                        id=\"Shape\" fill=\"#00B8DE\" sketch:type=\"MSShapeGroup\"></path>\r\n                    </g>\r\n                  </g>\r\n                </svg>\r\n              </div>\r\n            </li>\r\n"
    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.wallet : depth0),{"name":"each","hash":{},"fn":container.program(24, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "          </ul>\r\n";
},"24":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "            <li class=\"wallet-card\" id=\"wallet-card\" data-card-brand=\""
    + alias4(((helper = (helper = helpers.cardTypeName || (depth0 != null ? depth0.cardTypeName : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"cardTypeName","hash":{},"data":data}) : helper)))
    + "\" data-card-label=\""
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + " "
    + alias4(((helper = (helper = helpers.maskedPanLabel || (depth0 != null ? depth0.maskedPanLabel : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"maskedPanLabel","hash":{},"data":data}) : helper)))
    + "\" data-masked-card=\""
    + alias4(((helper = (helper = helpers.maskedPan || (depth0 != null ? depth0.maskedPan : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"maskedPan","hash":{},"data":data}) : helper)))
    + "\"\r\n              data-index=\""
    + alias4(((helper = (helper = helpers.index || (data && data.index)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"index","hash":{},"data":data}) : helper)))
    + "\">\r\n              <div class=\"issuer-name\">"
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + " "
    + alias4(((helper = (helper = helpers.maskedPanLabel || (depth0 != null ? depth0.maskedPanLabel : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"maskedPanLabel","hash":{},"data":data}) : helper)))
    + "</div>\r\n              <div class=\"card\">\r\n                <img class=\"card-image\" src=\""
    + alias4(container.lambda((depths[1] != null ? depths[1].baseUrl : depths[1]), depth0))
    + "public/images/card-brands/"
    + alias4(((helper = (helper = helpers.cardTypeName || (depth0 != null ? depth0.cardTypeName : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"cardTypeName","hash":{},"data":data}) : helper)))
    + ".png\" />\r\n              </div>\r\n            </li>\r\n";
},"26":function(container,depth0,helpers,partials,data) {
    return "    <div class=\"wallet-remember\">\r\n      <input id=\"wallet-remember-card\" type=\"checkbox\">\r\n      <span>Add Card to Wallet</span>\r\n    </div>\r\n";
},"28":function(container,depth0,helpers,partials,data) {
    return "        <button class=\"btn btn-primary\" type=\"submit\" id=\"WalletFormBtn\">\r\n          <span class=\"btn-text\">Pay</span>\r\n        </button> ";
},"30":function(container,depth0,helpers,partials,data) {
    return "\r\n        <button class=\"btn btn-primary\" type=\"submit\" id=\"WalletFormBtn\">\r\n          <span class=\"btn-text\">Pay</span>\r\n        </button> ";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=depth0 != null ? depth0 : {};

  return "<div class=\"ipg-payment-info-form\">\r\n\r\n\r\n\r\n\r\n  <div class=\"payment-type-control\">\r\n\r\n    <div class=\"item-wrapper card active\">\r\n\r\n      <div class=\"image-wrapper\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\"\r\n          y=\"0px\" width=\"512px\" height=\"512px\" viewBox=\"0 0 512 512\" style=\"enable-background:new 0 0 512 512;\"\r\n          xml:space=\"preserve\">\r\n          <g>\r\n            <path d=\"M464,64H48C21.6,64,0,85.6,0,112v288c0,26.4,21.6,48,48,48h416c26.4,0,48-21.6,48-48V112C512,85.6,490.4,64,464,64z M48,96   h416c8.674,0,16,7.327,16,16v48H32v-48C32,103.327,39.327,96,48,96z M464,416H48c-8.673,0-16-7.327-16-16V256h448v144   C480,408.673,472.674,416,464,416z M64,320h32v64H64V320z M128,320h32v64h-32V320z M192,320h32v64h-32V320z\" />\r\n          </g>\r\n        </svg>\r\n      </div>\r\n\r\n      <div class=\"text\">Card</div>\r\n\r\n    </div>\r\n\r\n\r\n    <div class=\"item-wrapper qr\">\r\n\r\n      <div class=\"image-wrapper\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\"\r\n          y=\"0px\" width=\"401.994px\" height=\"401.994px\" viewBox=\"0 0 451.994 451.994\" style=\"enable-background:new 0 0 401.994 401.994;\"\r\n          xml:space=\"preserve\">\r\n          <g>\r\n            <path d=\"M0,401.991h182.724V219.265H0V401.991z M36.542,255.813h109.636v109.352H36.542V255.813z\" />\r\n            <rect x=\"73.089\" y=\"292.355\" width=\"36.544\" height=\"36.549\" />\r\n            <rect x=\"292.352\" y=\"365.449\" width=\"36.553\" height=\"36.545\" />\r\n            <rect x=\"365.442\" y=\"365.449\" width=\"36.552\" height=\"36.545\" />\r\n            <polygon points=\"365.446,255.813 328.904,255.813 328.904,219.265 219.265,219.265 219.265,401.991 255.813,401.991     255.813,292.355 292.352,292.355 292.352,328.904 401.991,328.904 401.991,219.265 401.991,219.265 365.446,219.265   \" />\r\n            <path d=\"M0,182.728h182.724V0H0V182.728z M36.542,36.542h109.636v109.636H36.542V36.542z\" />\r\n            <rect x=\"73.089\" y=\"73.089\" width=\"36.544\" height=\"36.547\" />\r\n            <path d=\"M219.265,0v182.728h182.729V0H219.265z M365.446,146.178H255.813V36.542h109.633V146.178z\" />\r\n            <rect x=\"292.352\" y=\"73.089\" width=\"36.553\" height=\"36.547\" />\r\n          </g>\r\n        </svg>\r\n      </div>\r\n\r\n      <div class=\"text\">QR</div>\r\n\r\n    </div>\r\n\r\n\r\n    <div class=\"item-wrapper mobile\">\r\n\r\n      <div class=\"image-wrapper\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\"\r\n          y=\"0px\" viewBox=\"0 0 487.6 487.6\" style=\"enable-background:new 0 0 487.6 487.6;\" xml:space=\"preserve\">\r\n          <g>\r\n            <path d=\"M460.3,216.55h-11.6v-69.7c0-28.5-23.2-51.6-51.6-51.6h-10.7l0.1-25.9c0-19.2-15.6-34.8-34.8-34.8H42.3   c-23.1,0-42,18.6-42.3,41.7c0,0.2,0,0.4,0,0.6v341.4c0,19.2,15.6,34.8,34.8,34.8h362.4c28.5,0,51.6-23.2,51.6-51.6v-69.8h11.6   c15,0,27.2-12.2,27.2-27.2v-60.7C487.5,228.75,475.3,216.55,460.3,216.55z M42.3,58.55h309.4c5.9,0,10.8,4.8,10.8,10.7l-0.1,26   H42.3c-10.1,0-18.3-8.2-18.3-18.3S32.2,58.55,42.3,58.55z M424.7,401.35c0,15.2-12.4,27.6-27.6,27.6H34.7   c-5.9,0-10.8-4.8-10.8-10.8v-303.1c5.6,2.7,11.8,4.2,18.4,4.2h354.8c15.2,0,27.6,12.4,27.6,27.6v69.7h-81.9   c-15,0-27.2,12.2-27.2,27.2v60.7c0,15,12.2,27.2,27.2,27.2h81.9V401.35z M463.5,304.45c0,1.8-1.4,3.2-3.2,3.2H342.9   c-1.8,0-3.2-1.4-3.2-3.2v-60.7c0-1.7,1.4-3.2,3.2-3.2h117.4c1.7,0,3.2,1.4,3.2,3.2L463.5,304.45L463.5,304.45z\" />\r\n          </g>\r\n        </svg>\r\n      </div>\r\n\r\n      <div class=\"text\">Mobile</div>\r\n\r\n    </div>\r\n\r\n\r\n    <div class=\"item-wrapper paycode\">\r\n\r\n      <div class=\"image-wrapper\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\"\r\n          y=\"0px\" viewBox=\"0 0 468.7 468.7\" style=\"enable-background:new 0 0 468.7 468.7;\" xml:space=\"preserve\">\r\n          <g>\r\n            <g>\r\n              <path d=\"M449.35,0h-430c-6.6,0-12,5.4-12,12s5.4,12,12,12h25.9v432.4c0,4.4,2.4,8.5,6.3,10.6s8.6,1.9,12.3-0.6l52.1-34.7    l52.3,34.8c4,2.7,9.3,2.7,13.3,0l52.1-34.7l52.3,34.8c4,2.7,9.3,2.7,13.3,0l52.1-34.7l52.3,34.8c2,1.3,4.3,2,6.6,2    c1.9,0,3.9-0.5,5.7-1.4c3.9-2.1,6.3-6.2,6.3-10.6l-0.2-432.4h27.3c6.6,0,12-5.4,12-12S455.95,0,449.35,0z M398.35,434l-40.3-26.8    c-4-2.7-9.3-2.7-13.3,0l-52.1,34.8l-52.3-34.8c-4-2.7-9.3-2.7-13.3,0l-52.1,34.7l-52.3-34.7c-4-2.7-9.3-2.7-13.3,0l-40.1,26.7    v-410h329L398.35,434z\" />\r\n              <path d=\"M124.45,191.6h125.7c6.6,0,12-5.4,12-12s-5.4-12-12-12h-125.7c-6.6,0-12,5.4-12,12S117.75,191.6,124.45,191.6z\" />\r\n              <path d=\"M124.45,233.3h94.2c6.6,0,12-5.4,12-12s-5.4-12-12-12h-94.2c-6.6,0-12,5.4-12,12S117.75,233.3,124.45,233.3z\" />\r\n              <path d=\"M312.95,191.6h31.4c6.6,0,12-5.4,12-12s-5.4-12-12-12h-31.4c-6.6,0-12,5.4-12,12S306.25,191.6,312.95,191.6z\" />\r\n              <path d=\"M312.95,233.3h31.4c6.6,0,12-5.4,12-12s-5.4-12-12-12h-31.4c-6.6,0-12,5.4-12,12S306.25,233.3,312.95,233.3z\" />\r\n              <path d=\"M124.45,95.3h125.7c6.6,0,12-5.4,12-12c0-6.6-5.4-12-12-12h-125.7c-6.6,0-12,5.4-12,12    C112.45,89.9,117.75,95.3,124.45,95.3z\" />\r\n              <path d=\"M124.45,136.9h94.2c6.6,0,12-5.4,12-12s-5.4-12-12-12h-94.2c-6.6,0-12,5.4-12,12S117.75,136.9,124.45,136.9z\" />\r\n              <path d=\"M312.95,95.3h31.4c6.6,0,12-5.4,12-12c0-6.6-5.4-12-12-12h-31.4c-6.6,0-12,5.4-12,12C300.95,89.9,306.25,95.3,312.95,95.3    z\" />\r\n              <path d=\"M312.95,136.9h31.4c6.6,0,12-5.4,12-12s-5.4-12-12-12h-31.4c-6.6,0-12,5.4-12,12S306.25,136.9,312.95,136.9z\" />\r\n              <path d=\"M124.45,289.1h125.7c6.6,0,12-5.4,12-12s-5.4-12-12-12h-125.7c-6.6,0-12,5.4-12,12S117.75,289.1,124.45,289.1z\" />\r\n              <path d=\"M124.45,330.7h94.2c6.6,0,12-5.4,12-12s-5.4-12-12-12h-94.2c-6.6,0-12,5.4-12,12S117.75,330.7,124.45,330.7z\" />\r\n              <path d=\"M312.95,289.1h31.4c6.6,0,12-5.4,12-12s-5.4-12-12-12h-31.4c-6.6,0-12,5.4-12,12S306.25,289.1,312.95,289.1z\" />\r\n              <path d=\"M312.95,330.7h31.4c6.6,0,12-5.4,12-12s-5.4-12-12-12h-31.4c-6.6,0-12,5.4-12,12S306.25,330.7,312.95,330.7z\" />\r\n            </g>\r\n          </g>\r\n        </svg>\r\n      </div>\r\n\r\n      <div class=\"text\">Paycode</div>\r\n\r\n    </div>\r\n\r\n\r\n    <div class=\"item-wrapper credit\">\r\n      <div class=\"image-wrapper\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\"\r\n          viewBox=\"0 0 64 80\" enable-background=\"new 0 0 64 64\" xml:space=\"preserve\">\r\n          <g>\r\n            <path d=\"M46.557,19.145c0.161-2.975-2.826-5.717-6.388-5.716c-3.66,0.001-6.655,2.731-6.432,5.798 c0.209,2.863,3.028,5.115,6.325,5.164C43.417,24.441,46.399,22.053,46.557,19.145z\"></path>\r\n            <path d=\"M59.724,32.23c-0.543-2.244-2.558-3.757-5.011-3.758c-0.233,0-0.466,0-0.698,0l1.194-12.414 c0.077-0.804,0.157-1.617,0.237-2.438c0.081-0.832,0.163-1.672,0.245-2.52c0.175-1.82,0.306-3.254,0.426-4.634 c0.269-3.107-1.396-4.985-4.578-5.061c-3.19-0.077-6.432-0.071-9.566-0.066c-0.703,0.001-1.405,0.003-2.108,0.003H38.47 c-3.254,0-6.62,0-9.93,0.071c-2.588,0.056-4.134,1.527-4.349,4.084c-0.038,0.461-0.031,0.949,0.02,1.494 c0.658,6.886,1.091,11.391,1.584,16.517c-1.859,0.35-3.207,1.478-4.364,2.948c-2.784,3.536-9.182,2.011-13.189,2.015 c-2.404,0.001-4.114,1.706-4.114,4.106c-0.002,7.216-0.002,14.432-0.001,21.647c0.001,1.978,1.16,3.482,2.914,3.948 c0.375,0.102,0.776,0.156,1.2,0.156c4.063,0.002,8.246-0.361,12.249,0.424c4.279,0.837,8.158,3.051,12.488,3.646 c4.614,0.633,9.312-0.083,13.941-0.091c0.496-0.001,0.972-0.071,1.419-0.2c1.053-0.305,1.945-0.938,2.573-1.773 c0.813-1.081,1.18-2.499,0.87-3.974c-0.143-0.683-0.47-1.328-0.712-1.986c1.186-0.086,2.2-0.51,2.989-1.15 c1.38-1.12,2.069-2.898,1.774-4.676c-0.141-0.845-0.503-1.69-1.117-2.464c0.905-0.389,1.651-0.99,2.19-1.722 c1.27-1.718,1.404-4.155-0.203-6.259c0.092-0.05,0.18-0.102,0.273-0.148C59.21,36.839,60.294,34.583,59.724,32.23z M32.745,10.827 c1.517-1.106,2.412-2.685,2.719-4.848c3.375,0.014,6.447,0.014,9.36,0c0.528,3.511,2.585,5.568,6.116,6.221l0.091,0.016 l-0.004,0.063c-0.459,6.792-0.742,10.987-1.094,16.194c-0.49,0-0.98,0-1.471,0l-5.313-0.091l-7.445-0.127 c-1.308-0.077-2.454-0.33-3.45-0.687c-0.199-0.055-0.398-0.11-0.597-0.161c-0.106-0.027-0.22-0.11-0.32-0.213 c-0.398-0.183-0.766-0.381-1.108-0.587c-0.038-0.56-0.076-1.123-0.115-1.691l-0.866-12.711 C30.594,12.002,31.769,11.54,32.745,10.827z\"></path>\r\n          </g>\r\n        </svg>\r\n      </div>\r\n\r\n      <div class=\"text\">Credit</div>\r\n    </div>\r\n\r\n\r\n\r\n    <div class=\"item-wrapper ussd\">\r\n      <div class=\"image-wrapper\">\r\n        <svg viewBox=\"0 0 64 74\">\r\n          <path d=\"M60.66,17.47a14.125,14.125,0,1,1-28.25,0A13.975,13.975,0,0,1,33.84,11.28,14.12258,14.12258,0,0,1,60.66,17.47Z\"\r\n            style=\"fill: none; stroke-width: 4px;\"></path>\r\n          <g>\r\n            <path d=\"M39.23,29.56V67.43a3.8311,3.8311,0,0,1-3.63,4H6.63a3.8311,3.8311,0,0,1-3.63-4V6.57a3.8311,3.8311,0,0,1,3.63-4H35.6A3.71022,3.71022,0,0,1,39.09,5.46a14.18973,14.18973,0,0,0-5.25,5.82,14.12191,14.12191,0,0,0,5.39,18.28Z\"\r\n              style=\"fill: none; stroke-width: 4px; stroke-miterlimit: 10;\"></path>\r\n            <line x1=\"33.84\" y1=\"11.28\" x2=\"3\" y2=\"11.28\" style=\"fill: none; stroke-width: 4px; stroke-miterlimit: 10;\"></line>\r\n            <line x1=\"18.42386\" y1=\"7.18495\" x2=\"23.80762\" y2=\"7.18495\" style=\"fill: none; stroke-width: 4px; stroke-miterlimit: 10;\"></line>\r\n            <line x1=\"3\" y1=\"60.53391\" x2=\"39.23148\" y2=\"60.53391\" style=\"fill: none; stroke-width: 4px; stroke-miterlimit: 10;\"></line>\r\n          </g>\r\n          <g id=\"Page-1\">\r\n            <g id=\"USSD-icon-Copy\">\r\n              <g id=\"noun_327278\" data-name=\"noun 327278\">\r\n                <g id=\"Group\">\r\n                  <path id=\"Shape\" d=\"M41.43925,22.0107H39.75753V19.29215H41.983l.73338-3.64159H39.75753v-2.7312H43.2727l.97363-4.81753h2.76914l-.97363,4.81753H48.773l.94834-4.81753h2.8703l-.98627,4.81753h1.707v2.7312H51.04905l-.746,3.64159h2.99674V22.0107h-3.5531L48.773,26.82823h-2.7565l.94834-4.81753H44.23368l-.97363,4.81753H40.46562l.97363-4.81753Zm4.05888-6.36015-.73338,3.64159H47.5086l.72074-3.64159Z\"\r\n                    ></path>\r\n                </g>\r\n              </g>\r\n            </g>\r\n          </g>\r\n        </svg>\r\n      </div>\r\n\r\n      <div class=\"text\">USSD</div>\r\n    </div>\r\n\r\n\r\n    <div class=\"border-special\"></div>\r\n\r\n\r\n\r\n  </div>\r\n\r\n\r\n\r\n\r\n  <form name=\"card-details\" class=\"ipg-form-container fadeTransition moded payment-type-section card active\" id=\"WalletDetailsForm\"\r\n    data-parsley-validate autocomplete=\"off\">\r\n    <div class=\"ipg--card--container\">\r\n\r\n\r\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.isOpera : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "      <!--First Opera check End-->\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <div class=\"input-control cc-advance-input relative\" id=\"WalletDropDown\">\r\n        <div class=\"ipg--wallet--wrapper\" id=\"CardInWallet\">\r\n          <div class=\"select-input-wrapper ipg--card--container\">\r\n            "
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.inputCard : depth0),{"name":"if","hash":{},"fn":container.program(9, data, 0, blockParams, depths),"inverse":container.program(18, data, 0, blockParams, depths),"data":data})) != null ? stack1 : "")
    + "            <!--End if inputCard-->\r\n          </div>\r\n          "
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.isOpera : depth0),{"name":"if","hash":{},"fn":container.program(10, data, 0, blockParams, depths),"inverse":container.program(23, data, 0, blockParams, depths),"data":data})) != null ? stack1 : "")
    + "        </div>\r\n      </div>\r\n    </div>\r\n\r\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.inputCard : depth0),{"name":"if","hash":{},"fn":container.program(26, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\r\n    <div class=\"container\" id=\"newCardAction\">\r\n      <div class=\"ipg--login--container logged-in\">\r\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.inputCard : depth0),{"name":"if","hash":{},"fn":container.program(28, data, 0, blockParams, depths),"inverse":container.program(30, data, 0, blockParams, depths),"data":data})) != null ? stack1 : "")
    + "\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"fingerprint-modal-wrapper\">\r\n\r\n\r\n\r\n      <div class=\"container prompt show\">\r\n\r\n        <div class=\"text-area\">\r\n          You will not be required to provide an OTP when using this card. Do you want to disable this feature?\r\n        </div>\r\n\r\n        <div class=\"button-area\">\r\n\r\n          <div class=\"fp-button cancel\">\r\n            <span>Cancel</span>\r\n          </div>\r\n\r\n          <div class=\"fp-button confirm\">\r\n            <span>Remove</span>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n      <div class=\"container success\">\r\n\r\n        <div class=\"text-area\">\r\n          Operation successful. Fingerprint for this card has been disabled.\r\n        </div>\r\n\r\n        <div class=\"button-area\">\r\n\r\n          <div class=\"fp-button cancel\">\r\n            <span>Close</span>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n      <div class=\"container failure\">\r\n\r\n        <div class=\"text-area\">\r\n          Operation failed. Please try again.\r\n        </div>\r\n\r\n        <div class=\"button-area\">\r\n\r\n          <div class=\"fp-button cancel\">\r\n            <span>Close</span>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n    </div>\r\n\r\n  </form>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  <form name=\"qr-details\" class=\"ipg-form-container moded payment-type-section qr\" id=\"QrDetailsForm_wallet\">\r\n\r\n    <div class=\"qr-content-area\">\r\n      <div class=\"qr-header\">\r\n        <div class==\"message\">\r\n          Please scan QR code to Pay using your mobile banking app\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"qr-body\">\r\n        <div class=\"bracket tl hidden\"></div>\r\n        <div class=\"bracket tr hidden\"></div>\r\n        <div class=\"bracket bl hidden\"></div>\r\n        <div class=\"bracket br hidden\"></div>\r\n\r\n        <img class=\"qr-container hidden\" id=\"qr-container\"></img>\r\n\r\n        <div class=\"qr-loading\">Generating QR...</div>\r\n      </div>\r\n\r\n\r\n\r\n    </div>\r\n\r\n  </form>\r\n\r\n\r\n\r\n\r\n\r\n  <form name=\"mobile-details\" class=\"ipg-form-container moded payment-type-section mobile\" id=\"MobileDetailsForm\">\r\n  </form>\r\n\r\n\r\n  <form name=\"paycode-details\" class=\"ipg-form-container moded payment-type-section paycode\" id=\"PaycodeDetailsForm\">\r\n  </form>\r\n\r\n  <div name=\"credit-details\" class=\"ipg-form-container moded payment-type-section credit\" id=\"CreditDetailsForm\">\r\n  </div>\r\n\r\n  <div name=\"ussd-details\" class=\"ipg-form-container moded payment-type-section ussd\" id=\"UssdDetailsForm\">\r\n  </div>\r\n\r\n</div>";
},"useData":true,"useDepths":true});

},{"hbsfy/runtime":24}],113:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 2/4/2016.
 */

var jQuery = require('jquery'),
    Backbone = require('backbone'),
    _ = require('underscore');
require('../../../../../node_modules/parsleyjs/dist/parsley.js');

var template = require('./templates/token_cardinal.hbs');
var templateIframe = require('./templates/token_cardinal_iframe.hbs');
var Response = require('../../models/response_model');
var ErrorHandler = require('../../models/util_error_handler');
var Utils = require('../../utils/utils');

Backbone.$ = jQuery;
require('../utils/float');

function token() {
    var events, view, frameTimeout;

    // Backbone events for main view
    events = {
        'click #Back': "goBack",
        'click .cardinal-iframe-wrapper': 'initiatePolls',
        'click #continueTrans': 'initiatePolls'

    };
    // Main View Object
    view = {
        el: '#PageTokenCardinal',
        name: "TokenCardinal",
        template: template,
        reset: reset,
        events: events,
        goBack: goBack,
        initiatePolls: initiatePolls,
        authenticateToken: authenticateToken,
        getBillPaymentResponse:getBillPaymentResponse,
        render: render,
        initialize: initialize

    };

    function goBack() {
        this.model.set('page_back', true);
    }

    function getBillPaymentResponse(paymentResponse) {
        if (this.model.get('channelAuthenticateModel').get('thirdPartyTransactionType') && paymentResponse.responseCode == '00') {
            paymentResponse.bpResp = 90000;
            paymentResponse.bpTrxnRef = paymentResponse.transactionReference;
            paymentResponse.rechPin = paymentResponse.virtualProductPin;
        }

        return paymentResponse;

    }

    function authenticateToken() {
        var scope = this;
        var paymentPromise;
        var cardModel = this.model.get('cardModel');
        paymentPromise = this.model.get('payModel').payWithCardCardinal();

        paymentPromise.success(function(paymentResponse) {
            if(paymentResponse.responseCode == '00'){
                if(scope.model.get('payModel').get('rememberCard')){
                    scope.model.get('payModel').set('walletId', scope.model.get('walletModel').get('wallet_data').user.mobileNo);
                    var addCardPromise = scope.model.get('payModel').addCardToWallet();
                    addCardPromise.success(function(response){

                    });
                    addCardPromise.error(function(error){

                    });
                }
            }

            paymentResponse = scope.getBillPaymentResponse(paymentResponse);
            var responseHandler = new Response('payment', paymentResponse);
            var response = responseHandler.getResponse();
            scope.goBack();
            setTimeout(function() {
                scope.model.set('responseData', response.model());
            }, 300);
            //make call here to remember card
        });

        paymentPromise.error(function(error) {
            scope.goBack();
            var error = ErrorHandler.handleError(error);
            var data = JSON.parse(error.responseText);
            var responseHandler = new Response('payment', data);
            var response = responseHandler.getResponse();
            scope.model.set('responseData', response.model());
        })
    }

    function reset(isIframe) {
        var $frameTmpl = templateIframe({ loadIframe: isIframe, isOpera: Utils.detectMobileDevice().Opera() });
        this.$el.html($frameTmpl);
        if (frameTimeout) {
            clearTimeout(frameTimeout);
        }
    }

    function initiatePolls() {
        return {};
    }

    function render() {
        var $frame, $frameTmpl, cardinalTemplate, cardinalPolls;
        var cardModel = this.model.get('cardModel');
        var data = {};
        var scope = this;

        data.paReg = cardModel.get('cardinal').payLoad;
        data.md = this.model.get('merchantModel').get('paymentId');
        data.termUrl = cardModel.get('cardinal').callBackUrl;
        data.url = cardModel.get('cardinal').url;

        scope.model.get('payModel').set('eciFlag', cardModel.get('cardinal').eciFlag);
        scope.model.get('payModel').set('transactionId', cardModel.get('cardinal').transactionId);
        scope.model.get('cardinalModel').set('paymentId', data.md);

        scope.reset(true);
        cardinalTemplate = this.template(data);
        if (frameTimeout) {
            clearTimeout(frameTimeout);
        }

        frameTimeout = setTimeout(function() {
            var cardinalPolls;
            $frame = scope.$el.find('.cardinal-iframe iframe');
            var doc = $frame[0].contentWindow.document;
            var $body = $('body', doc);
            scope.$body = $body;
            var step = 0;
            $body.html(cardinalTemplate);

            $body.find('form#payWithCardinalForm').submit();
            $('#LayoutContentBody').css({ 'min-height': '390px' });

            $frame.load(function(evt) {
                //test

                evt.preventDefault();
                evt.stopImmediatePropagation();
                if (step >= 1) {
                    scope.$el.find('.cardinal-notification').addClass('show');
                }
                cardinalPolls = scope.model.get('cardinalModel').checkStatus($.Deferred());
                cardinalPolls.progress(function(data) {
                    scope.$el.find('.cardinal-notification').removeClass('show')
                });

                cardinalPolls.done(function(response) {
                    scope.authenticateToken();
                });

                cardinalPolls.fail(function(response) {
                    scope.$el.find('.cardinal-notification').removeClass('show')
                });

                step++;
            });


        }, 1);

    }

    function initialize() {
        var scope = this;
        this.render();
    }


    return Backbone.View.extend(view);
}
module.exports = token();

},{"../../../../../node_modules/parsleyjs/dist/parsley.js":29,"../../models/response_model":60,"../../models/util_error_handler":63,"../../utils/utils":71,"../utils/float":133,"./templates/token_cardinal.hbs":107,"./templates/token_cardinal_iframe.hbs":108,"backbone":1,"jquery":28,"underscore":32}],114:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 1/29/2016.
 */

var jQuery = require('jquery'),
    Backbone = require('backbone'),
    _ = require('underscore');
require('../../../../../node_modules/parsleyjs/dist/parsley.js');

var template = require('./templates/token_otp.hbs');
var ButtonLoader = require('../utils/button_loader');
var Response = require('../../models/response_model');
var ErrorHandler = require('../../models/util_error_handler');
require('jquery.payment');
require('../utils/float');


Backbone.$ = jQuery;


function token() {
    var events, view;

    // Backbone events for main view
    events = {
        'click #Back': "goBack",
        'click .otp-controls-button': 'resendOTP',
        'submit #TwoFactorTokenForm': 'authenticateToken',
        'input #Token' : 'toggleRememberDevice',
        'click .otp-remember-top': 'rememberDevice'
    };
    // Main View Object
    view = {
        el: '#PageTokenOtp',
        name: "TokenOtp",
        template: template,
        events: events,
        goBack: goBack,
        authenticateToken: authenticateToken,
        getBillPaymentResponse: getBillPaymentResponse,
        render: render,
        resendOTP: resendOTP,
        initialize: initialize,
        resendingOTP: false,
        toggleRememberDevice: toggleRememberDevice,
        rememberDevice: rememberDevice
    };

    function goBack() {
        if(this.model.get('payModel').has('tokenValidationParameters')) {
            this.model.get('payModel').unset('tokenValidationParameters');
        }
        this.model.set('page_back', true);
    }

    function toggleRememberDevice() {
        var scope = this;

        //fix resize issue
        //scope.model.set('resize', true);

        if(scope.model.get('payModel').get('fingerPrintAllowed')) {
            if($('#Token').val().length > 0){
                scope.$el.find('.token-otp-controls').css('display', 'none');
                scope.$el.find('.token-otp-remember').css('display', 'block');
                scope.$el.find('.otp-controls-link').css('display', 'none');
                scope.model.set('resize', true);
            } else{
                scope.$el.find('.token-otp-controls').css('display', 'block');
                scope.$el.find('.token-otp-remember').css('display', 'none');
                scope.$el.find('.otp-controls-link').css('display', 'block');
                scope.model.set('resize', true);
            }
        }
    }

    function rememberDevice(evt) {
        var scope = this;
        evt.stopImmediatePropagation();

        if(scope.model.get('payModel').has('rememberCardOnDevice')) {
            if(scope.model.get('payModel').get('rememberCardOnDevice')){
                scope.model.get('payModel').set('rememberCardOnDevice', false);
                scope.$el.find('.remember-device-check').removeClass('enabled');
            } else {
                scope.model.get('payModel').set('rememberCardOnDevice', true);
                scope.$el.find('.remember-device-check').addClass('enabled');
            }
        }
    }


    function getBillPaymentResponse(paymentResponse) {
        if (this.model.get('channelAuthenticateModel').get('thirdPartyTransactionType') && paymentResponse.responseCode == '00') {
            paymentResponse.bpResp = 90000;
            paymentResponse.bpTrxnRef = paymentResponse.transactionReference;
            paymentResponse.rechPin = paymentResponse.virtualProductPin;
        }

        return paymentResponse;

    }

    function isNumber(evt) {
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        return true;
    }

    function authenticateToken(evt) {
        var scope = this;
        var paymentPromise;
        var token = this.model.get('payModel').set('token', $('#Token').val());
        evt.stopImmediatePropagation();
        evt.preventDefault();
        var buttonLoader = new ButtonLoader({ el: scope.$el.find('button[type=submit]') });
        paymentPromise = this.model.get('payModel').payWithWallet();

        paymentPromise.success(function(paymentResponse) {
            if(paymentResponse.responseCode == '00'){
                if(scope.model.get('walletModel').get('channelProvider') == 'BBM') {
                    if(paymentResponse.paymentInstrumentData) {

                        var expiryDate = new Date()
                        expiryDate.setTime( expiryDate.getTime() + 300 * 86400000 );
                        expiryDate = expiryDate.toUTCString()

                        document.cookie = "qtbbmd_e75f8c8652rt=" + paymentResponse.paymentInstrumentData.identifier + ";expires=" + expiryDate;
                    }
                }

                if(scope.model.get('payModel').get('rememberCard')){

                    var walletId = '0000';
                    if(scope.model.get('walletModel').get('wallet_data').user) {
                        walletId = scope.model.get('walletModel').get('wallet_data').user.mobileNo;
                    }

                    scope.model.get('payModel').set('walletId', walletId);


                    var addCardPromise = scope.model.get('payModel').addCardToWallet();
                    addCardPromise.success(function(response){

                    });
                    addCardPromise.error(function(error){

                    });
                }
            }

            buttonLoader.resetButton('Pay');
            paymentResponse = scope.getBillPaymentResponse(paymentResponse);
            var responseHandler = new Response('payment', paymentResponse);
            var response = responseHandler.getResponse();
            if (response.pass()) {
                scope.model.set('page_proceed', scope());
                return;
            }

            if(scope.model.get('payModel').has('tokenValidationParameters')) {
                scope.model.get('payModel').unset('tokenValidationParameters');
            }

            scope.goBack();
            setTimeout(function() {
                scope.model.set('responseData', response.model());
            }, 250);
        })
        paymentPromise.error(function(error) {
            buttonLoader.resetButton('Continue');
            var error = ErrorHandler.handleError(error);
            var data = JSON.parse(error.responseText);

            var responseHandler = new Response('payment', data);
            var response = responseHandler.getResponse();

            if(scope.model.get('payModel').has('tokenValidationParameters')) {
                scope.model.get('payModel').unset('tokenValidationParameters');
            }

            scope.goBack();
            setTimeout(function() {
                scope.model.set('responseData', response.model());
            }, 250);
        })
    }


    function resendOTP() {
        var scope = this;

        if(scope.resendingOTP){
            return;
        }
        var payWithCard = this.model.get('payModel').payWithCard();

        scope.$el.find('.otp-controls-button div').html('Sending...');

        payWithCard.success(function() {
            scope.$el.find('.otp-controls-button div').html('Sent');
            setTimeout(function() {
                scope.$el.find('.otp-controls-button div').html('Resend OTP');
                scope.resendingOTP = false;
            }, 2000)
        })
        payWithCard.error(function() {
            scope.goBack();
        })
    }

    function render() {
        var paymentJSON = this.model.get('cardModel').get('payment');

        paymentJSON.smsAndEmail = paymentJSON.emailSent && paymentJSON.smsSent;
        paymentJSON.smsOrEmail = paymentJSON.emailSent || paymentJSON.smsSent;
        paymentJSON.smsNotEmail = paymentJSON.smsSent && !paymentJSON.emailSent;
        paymentJSON.emailNotSms = paymentJSON.emailSent && !paymentJSON.smsSent;
        paymentJSON.maskedToken = this.model.get('cardModel').get('cardConfigurations').maskToken;
        if(paymentJSON.supportMessage){
            var m = paymentJSON.supportMessage;
            paymentJSON.supportMessage = m.slice(m.indexOf('<a'), m.indexOf('/a>')+3);
        }

        paymentJSON.messageRight = "Contact your financial institution for assistance."
        if(paymentJSON.plainTextSupportMessage){
            if(paymentJSON.plainTextSupportMessage.indexOf('Dial *322*0# on your phone')){
                paymentJSON.messageRight = "<div class='otp-controls-message-wrap'>On your phone dial <span>*322*0#</span> <span>(Airtel, Etisalat, Glo, MTN)</span></div>";
            } else {
                paymentJSON.messageRight = paymentJSON.plainTextSupportMessage;
            }
        }
        this.$el.html(this.template(paymentJSON));
        this.$el.find('input#Token').payment('restrictNumeric');
        this.floatLabel();
    }

    function initialize() {
        var scope = this;
        this.render();
        var parsleyForm = this.$el.find('#TwoFactorTokenForm').parsley();
        parsleyForm.on('form:error', function() {
            scope.model.set('resize', true);
            scope.model.set('parsley-error', true);
        });
    }

    return Backbone.View.extend(view);
}
module.exports = token();
},{"../../../../../node_modules/parsleyjs/dist/parsley.js":29,"../../models/response_model":60,"../../models/util_error_handler":63,"../utils/button_loader":132,"../utils/float":133,"./templates/token_otp.hbs":109,"backbone":1,"jquery":28,"jquery.payment":27,"underscore":32}],115:[function(require,module,exports){

var jQuery = require('jquery'),
  Backbone = require('backbone'),
  _ = require('underscore');
require('../../../../../node_modules/parsleyjs/dist/parsley.js');

var template = require('./templates/token_otp_bank.hbs');
var ButtonLoader = require('../utils/button_loader');
var Response = require('../../models/response_model');
var ErrorHandler = require('../../models/util_error_handler');
require('jquery.payment');
require('../utils/float');


Backbone.$ = jQuery;


function tokenBank() {
  var events, view;

  // Backbone events for main view
  events = {
    'click #Back': "goBack",
    'submit #TwoFactorTokenForm': 'authenticateToken'
  };
  // Main View Object
  view = {
    el: '#PageTokenOtpBank',
    name: "TokenOtpBank",
    template: template,
    events: events,
    goBack: goBack,
    authenticateToken: authenticateToken,
    getBillPaymentResponse: getBillPaymentResponse,
    render: render,
    initialize: initialize
  };

  function goBack() {
    this.model.set('page_back', true);
  }



  function getBillPaymentResponse(paymentResponse) {
    if (this.model.get('channelAuthenticateModel').get('thirdPartyTransactionType') && paymentResponse.responseCode == '00') {
      paymentResponse.bpResp = 90000;
      paymentResponse.bpTrxnRef = paymentResponse.transactionReference;
      paymentResponse.rechPin = paymentResponse.virtualProductPin;
    }

    return paymentResponse;

  }

  function isNumber(evt) {
    evt = (evt) ? evt : window.event;
    var charCode = (evt.which) ? evt.which : evt.keyCode;
    if (charCode > 31 && (charCode < 48 || charCode > 57)) {
      return false;
    }
    return true;
  }

  function authenticateToken(evt) {
    evt.stopImmediatePropagation();
    evt.preventDefault();


    var scope = this;

    var token = $('#Token').val();

    var newPostData = scope.model.get('noncardModel').get('postData');
    newPostData.additionalInformation.token = token;
    scope.model.get('noncardModel').set('postData', newPostData);


    var buttonLoader = new ButtonLoader({ el: scope.$el.find('button[type=submit]') });

    var paymentPromise = this.model.get('noncardModel').purchase();

    paymentPromise.success(function (paymentResponse) {

      buttonLoader.resetButton('Pay');
      
      if(paymentResponse.code = "00") {
        paymentResponse.responseCode = "00"
      }

      paymentResponse = scope.getBillPaymentResponse(paymentResponse);
      var responseHandler = new Response('payment', paymentResponse);
      var response = responseHandler.getResponse();
      if (response.pass()) {
        scope.model.set('page_proceed', scope());
        return;
      }

      scope.goBack();
      setTimeout(function () {
        scope.model.set('responseData', response.model());
      }, 250);
    });


    paymentPromise.error(function (error) {
      buttonLoader.resetButton('Continue');
      var error = ErrorHandler.handleError(error);
      var data = JSON.parse(error.responseText);

      var responseHandler = new Response('payment', data);
      var response = responseHandler.getResponse();

      if (scope.model.get('payModel').has('tokenValidationParameters')) {
        scope.model.get('payModel').unset('tokenValidationParameters');
      }

      scope.goBack();
      setTimeout(function () {
        scope.model.set('responseData', response.model());
      }, 250);
    })
  }



  function render() {
    this.$el.html(this.template());
    this.$el.find('input#Token').payment('restrictNumeric');
    this.floatLabel();
  }

  function initialize() {
    var scope = this;
    this.render();
    var parsleyForm = this.$el.find('#TwoFactorTokenForm').parsley();
    parsleyForm.on('form:error', function () {
      scope.model.set('resize', true);
      scope.model.set('parsley-error', true);
    });
  }

  return Backbone.View.extend(view);
}
module.exports = tokenBank();
},{"../../../../../node_modules/parsleyjs/dist/parsley.js":29,"../../models/response_model":60,"../../models/util_error_handler":63,"../utils/button_loader":132,"../utils/float":133,"./templates/token_otp_bank.hbs":110,"backbone":1,"jquery":28,"jquery.payment":27,"underscore":32}],116:[function(require,module,exports){
var jQuery = require('jquery'),
    Backbone = require('backbone'),
    _ = require('underscore');
//parsley here

var template = require('./templates/token_otp_reg.hbs');
var ButtonLoader = require('../utils/button_loader');
//response here
//float here

Backbone.$ = jQuery;

require('intl-tel-input');

var TokenOTP = require('./token_otp');

//testing
var ErrorHandler = require('../../models/util_error_handler');
var Response = require('../../models/response_model');

function tokenReg() {
    var events, view;

    events = {
        'click #Back': 'goBack',
        'submit #RegForm': 'registerNumber',
        'copy #numField': 'blockInput',
        'paste #numField': 'blockInput',
        'keydown #numField': 'controlInput',
        'click .country': 'setCode'
    };

    view = {
        el: '#PageTokenOtpReg',
        name: 'TokenOtpReg',
        template: template,
        events: events,
        initialize: initialize,
        render: render,
        goBack: goBack,
        blockInput: blockInput,
        controlInput: controlInput,
        registerNumber: registerNumber,
        setCode: setCode

    };


    function initialize() {
        var scope = this;
        this.render();
    }

    function render() {
        var scope = this;
        this.$el.html(this.template({}));
        // this.$el.find('#numField').intlTelInput({initialCountry: this.model.get('userCountry')});
        this.$el.find('#numField').intlTelInput({ initialCountry: "ng", allowDropdown: false });
        this.setCode();
    }

    function goBack() {
        this.model.set('page_back', true);
    }

    function blockInput(evt) {
        evt.stopImmediatePropagation();
        evt.preventDefault();
    }

    function controlInput(evt) {

        var scope = this;
        var a = evt.keyCode;
        if (scope.$el.find('#numField').val().length >= 20) {
            if (!(a == 8 || a == 37 || a == 39 || a == 46)) {
                evt.preventDefault();
            }
        } else {
            if (!(a == 8 || a == 37 || a == 39 || a == 46 || (a >= 48 && a <= 57))) {
                evt.preventDefault();
            }
        }
    }



    function setCode(evt) {
        var newCode = this.$el.find('#numField').intlTelInput('getSelectedCountryData').dialCode;
        this.$el.find('.tr--control-code').html("+" + newCode);
    }

    function registerNumber(evt) {
        var scope = this;
        evt.stopImmediatePropagation();
        evt.preventDefault();

        scope.$el.find('.tr--validation').removeClass('error');
        scope.$el.find('#numField').removeClass('error');
        scope.$el.find('.tr--operation-info').removeClass('on');
        scope.model.set('resize', true);
        
        if (scope.$el.find('#numField').val().length == 0) {
            scope.$el.find('.tr--validation').addClass('error');
            scope.$el.find('#numField').addClass('error');
            setTimeout(function () {
                scope.$el.find('.tr--validation').removeClass('error');
                scope.$el.find('#numField').removeClass('error');
            }, 5000);
            return;
        } else {
            var mobile_part = this.$el.find('#numField').val();
            if (mobile_part[0] == 0) {
                mobile_part = mobile_part.slice(1);
            }

            var baseUrl = window.IpgApp.baseUrl;
            var link = '<a class="color-white" href="' + baseUrl + 'otpregistrationsteps" target="_blank">register using the following steps.</a>';

            var num = this.$el.find('.tr--control-code').html() + mobile_part;

            this.model.get('payModel').set('mobilePhoneNumber', num);
            var paymentPromise;
            var buttonLoader = new ButtonLoader({ el: scope.$el.find('button[type=submit]') });
            scope.$el.find('#Back').attr('disabled', true);
            paymentPromise = this.model.get('payModel').payWithNumber();
            //make call
            paymentPromise.success(function (paymentResponse) {
                buttonLoader.resetButton('Pay');
                scope.$el.find('#Back').attr('disabled', false);
                if (paymentResponse.responseCode == 'T0') {
                    scope.model.set('otpreg', true);
                    scope.model.get('cardModel').set('payment', paymentResponse);
                    scope.model.set('page_proceed', TokenOTP);
                    return;
                }

                var errorMessage = 'Registration failed. You can also ' + link;
                scope.$el.find('.tr--operation-info').html(errorMessage);
                scope.$el.find('.tr--operation-info').addClass('on');
                scope.model.set('resize', true);

                setTimeout(function () {
                    scope.$el.find('.tr--operation-info').removeClass('on');
                    scope.model.set('resize', true);
                }, 30000);

            });
            paymentPromise.error(function (error) {
                buttonLoader.resetButton('Pay');
                scope.$el.find('#Back').attr('disabled', false);

                var errorMessage = 'Registration failed. Ensure details entered are correct and try again.';

                if (error.readyState == 0) {
                    errorMessage = 'Registration failed. Network error.'
                } else {
                    var response = JSON.parse(error.responseText);

                    if (response.responseCode == 'AE1') {
                        errorMessage = 'Ensure that the card details entered are correct. You can also ' + link;
                    }

                    if (response.responseCode == 'AE2') {
                        errorMessage = 'Enter the phone number linked to your account. You can also ' + link;
                    }

                    if (response.responseCode == 'XS1') {

                        var error = ErrorHandler.handleError(error);
                        var data = JSON.parse(error.responseText);
                        data.status = error.status;
                        var responseHandler = new Response('payment', data);
                        var response = responseHandler.getResponse();
                        scope.model.set('responseData', response.model());
                    }


                }
                scope.$el.find('.tr--operation-info').html(errorMessage);
                scope.$el.find('.tr--operation-info').addClass('on');
                scope.model.set('resize', true);

                setTimeout(function () {
                    scope.$el.find('.tr--operation-info').removeClass('on');
                    scope.model.set('resize', true);
                }, 30000);

            });
        }

    }

    return Backbone.View.extend(view);
}

module.exports = tokenReg();
},{"../../models/response_model":60,"../../models/util_error_handler":63,"../utils/button_loader":132,"./templates/token_otp_reg.hbs":111,"./token_otp":114,"backbone":1,"intl-tel-input":26,"jquery":28,"underscore":32}],117:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 1/29/2016.
 */
var jQuery = require('jquery'),
  Backbone = require('backbone'),
  _ = require('underscore'),
  Tippy = require('tippy.js');
require('../../../../../node_modules/parsleyjs/dist/parsley.js');
require('jquery.payment');
var CSSPlugin = require('../../../../../node_modules/gsap/src/uncompressed/plugins/CSSPlugin.js'),
  TweenLite = require('../../../../../node_modules/gsap/src/uncompressed/TweenLite');

var template = require('./templates/wallet.hbs');
var selectedCardTmpl = require('./templates/selected_card.hbs');
require('./card_mixin');
var CardDetails = require('./card_details');
var TokenOTP = require('./token_otp');
var TokenCardinal = require('./token_cardinal');

var ButtonLoader = require('../utils/button_loader');
var CvvExpiryPin = require('./cvv_expiry_pin');
var CardType = require('./card_type');
var ErrorHandler = require('../../models/util_error_handler');
var Response = require('../../models/response_model');




require('../utils/float');
Backbone.$ = jQuery;

function wallet() {
  var events, view;

  // Backbone events for Card view
  events = {
    "click button.ipg-pinpad": "updateInput",
    "click #OpenWallet": "showWallet",
    "click #CreditDetailsForm #OpenWallet_Credit": "showCreditWallet",
    "focus #Cc": "showWallet",
    "focus #CreditDetailsForm #Cc-credit": "showCreditWallet",
    "click #BackfromPayment": "goBack",
    "click #wallet-card": "selectCard", 
    "click #CreditDetailsForm #wallet-card-credit": "selectCard_credit", 
    "click #SelectedInputWrapper": "showWallet",
    "click #SelectedInputWrapper-credit": "showCreditWallet",
    "click #NewCard": "selectNewCard",
    "click #NewCard_credit": "selectNewCard_credit",
    "keyup #Cc": "newCardInput",
    "keyup #CreditDetailsForm #Cc-credit": "newCardInput_credit",
    "submit #WalletDetailsForm": "payWithChannelUsingWallet",
    "blur input#Cc": "handleCardFieldBlur",
    // "blur #CreditDetailsForm #Cc-credit": "handleCardFieldBlur",
    "focus #Pin": "showPin",
    "click #CardPinLabel": "showPin",
    'submit #CreditDetailsForm .otp_card_screen form': 'creditPayment_otpCardScreenSubmitHandler',
  

    "change select#cardListOpera": "operaSelectCard",
    "focus select#cardListOpera": "operaSelectCard",
    "blur select#cardListOpera": "operaSelectCard",
    "click select#cardListOpera option": "operaSelectCard",
    "click select#cardListOpera": "operaSelectCard",

    'cardChange #Cvv': "cardChange",
    'cardChange #Cvv_credit': "cardChange",

    'click .wallet-remember': "toggleRemember",

    'click .fingerprint-enabled-wrapper-inner': 'openFingerprintModal',
    'click .fingerprint-modal-wrapper .fp-button.cancel': 'closeFingerprintModal',
    'click .fingerprint-modal-wrapper .fp-button.confirm': 'disableFingerprint',

    'click .payment-type-control .item-wrapper': 'selectPaymentTypeHandler',

    'submit .payment-type-section.mobile': 'payWithMobile',
    'submit .payment-type-section.paycode': 'payWithPaycode',

    //credit payment handlers
    'submit #CreditDetailsForm .number_screen form': 'creditPayment_numberScreenSubmitHandler',
    'submit #CreditDetailsForm .otp_screen form': 'creditPayment_otpScreenSubmitHandler',
    'click #CreditDetailsForm .otp_screen form #creditPayment_otpBackButton': 'creditPayment_otpScreenBackHandler',
    'click #CreditDetailsForm .offers_screen #creditPayment_offersBackButton': 'creditPayment_offersScreenBackHandler',
    'click #CreditDetailsForm .offers_screen .loan_select_button': 'creditPayment_selectOffer',
    'click #CreditDetailsForm .card_screen #creditPayment_cardBackButton': 'creditPayment_cardScreenBackHandler',

    'focus #Pin_credit': "creditPayment_showPin",
    'click #CardPinLabel_credit': "creditPayment_showPin",
    'click button.ipg-pinpad_credit': 'creditPayment_updateInput',
    'submit #CreditDetailsForm .card_screen form': 'creditPayment_cardScreenSubmitHandler',
    'submit #CreditDetailsForm .otp_card_screen form': 'creditPayment_otpCardScreenSubmitHandler',
    'click #CreditDetailsForm .otp_card_screen form .otp-controls-button': 'creditPayment_otpCardScreenResendOtpHandler',
    'click #CreditDetailsForm .otp_card_screen form #creditPayment_otpCardBackButton': 'creditPayment_otpCardScreenBackHandler',

  };

  // Card View Object
  view = {
    el: '#PageWallet',
    name: "Wallet",
    template: template,
    events: events,
    goBack: goBack,
    payWithWallet: payWithWallet,
    payWithChannelUsingWallet: payWithChannelUsingWallet,
    createPayment: createPayment,
    getCardDetailsView: getCardDetailsView,
    getWalletPostData: getWalletPostData,
    close: close,
    selectCard: selectCard,
    selectNewCard: selectNewCard,
    showSelectedCard: showSelectedCard,
    operaSelectCard: operaSelectCard,
    newCardInput: newCardInput,
    showWallet: showWallet,
    hideWallet: hideWallet,
    render: render,
    initialize: initialize,
    triggerChangeonCvc: triggerChangeonCvc,
    toggleRemember: toggleRemember,
    openFingerprintModal: openFingerprintModal,
    closeFingerprintModal: closeFingerprintModal,
    disableFingerprint: disableFingerprint,
    handleCardFieldBlur: handleCardFieldBlur
  };

  function goBack() {
    this.model.set('page_back', true);
  }

  function getWalletPostData() {
    var scope = this,
      payPromise, configData, expiry = "";
    var postData = {
      "merchantCode": scope.model.get('merchantModel').get('merchantCode'),
      "payableCode": scope.model.get('merchantModel').get('payableCode'),
      "paymentId": scope.model.get('merchantModel').get('paymentId')
    };
    var selectedPaymentMethod = this.model.get('cardModel').get('selectedPaymentMethod');
    if (selectedPaymentMethod.expiryYear || selectedPaymentMethod.expiryMonth) {
      expiry = selectedPaymentMethod.expiryYear + selectedPaymentMethod.expiryMonth
    } else {
      if (this.$el.find('input#CCexpiry').val()) {
        var expiryObj = this.$el.find('input#CCexpiry').payment('cardExpiryVal');
        expiry = this.getExpiry(expiryObj);
      }
    }
    var cvv = scope.$el.find('input#Cvv').val();
    var pin = scope.$el.find('input#Pin').val();


    scope.model.get('cardModel').set('cvv', cvv || '');
    scope.model.get('cardModel').set('expiry', expiry || '');
    scope.model.get('cardModel').set('pin', pin || '');
    scope.model.get('cardModel').set('cardNumber', selectedPaymentMethod.cardHash);

    configData = scope.model.get('cardModel').getConfigData();

    postData.issuerId = scope.model.get('cardModel').get('cardConfigurations').issuer.id;
    postData.cardTypeCode = selectedPaymentMethod.cardTypeGatewayConfiguration.cardTypeCode;
    postData.secureData = configData.secureData;
    postData.pinBlock = configData.pinBlock;
    postData.instrumentIdentifier = selectedPaymentMethod.cardIdentifier;
    postData = this.addExtraData(postData);
    return postData;
  }

  function createPayment(postData) {
    var scope = this,
      payPromise;
    var selectedPaymentMethod = this.model.get('cardModel').get('selectedPaymentMethod');
    if (selectedPaymentMethod.loyaltyRedemptionAllowed) {

      this.selectRewards(postData, this.payWallet);
      return;
    }
    this.payWallet(postData);

  }

  function payWithChannelUsingWallet(evt) {
    evt.preventDefault();
    evt.stopImmediatePropagation();
    var scope = this;
    var buttonLoader = new ButtonLoader({ el: scope.$el.find('button[type=submit]') });
    var channelAuthenticateModel = this.model.get('channelAuthenticateModel');
    if (channelAuthenticateModel.isChannelTransactions()) {
      if (this.model.get('walletModel').get('use_wallet')) {
        this.model.get('channelAuthenticateModel').set('postData', this.getWalletPostData());
      } else {
        this.model.get('channelAuthenticateModel').set('postData', this.getPostData());
      }
      this.getCollectionsAccount(function (paymentResponse) {
        buttonLoader.resetButton('Pay');
        if (paymentResponse.responseCode == '00') {
          scope.payWithWallet(evt);
        } else {
          var responseHandler = new Response('payment', paymentResponse);
          var response = responseHandler.getResponse();
          scope.model.set('responseData', response.model());
        }

      }, function (error) {
        buttonLoader.resetButton('Pay');
        var error = ErrorHandler.handleError(error);
        var data = JSON.parse(error.responseText);
        data.status = error.status;
        var responseHandler = new Response('payment', data);
        var response = responseHandler.getResponse();
        scope.model.set('responseData', response.model());
      })
    } else {
      this.payWithWallet(evt);
    }
  }

  function payWithWallet(evt) {
    evt.preventDefault();
    evt.stopImmediatePropagation();
    var cardNumber;
    if (this.model.get('walletModel').get('use_wallet')) {
      var selectedWalletCard = this.model.get('cardModel').get('selectedPaymentMethod');
      var walletInfo = {
        walletCardName: selectedWalletCard.name,
        walletIdentifier: selectedWalletCard.walletInstrumentIdentifier
      };
      if (this.model.get('walletModel').get('wallet_data').user) {
        walletInfo.walletId = this.model.get('walletModel').get('wallet_data').user.mobileNo;
      }

      this.model.get('payModel').set('walletInfo', walletInfo);
      this.createPayment(this.getWalletPostData());
    } else {

      if (this.model.get('walletModel').get('wallet_data').user) {
        var val = this.model.get('walletModel').get('wallet_data').user.mobileNo;
        var walletInfo = {
          walletId: val
        };
        this.model.get('payModel').set('walletInfo', walletInfo);
      }

      cardNumber = this.$el.find('#Cc').val();
      this.model.get('cardModel').set('cardNumber', cardNumber);
      this.model.get('cardModel').set('payableCode', this.model.get('merchantModel').get('payableCode'));

      //remember card
      if (this.$el.find('#wallet-remember-card')[0].checked) {
        this.model.get('payModel').set('rememberCard', true);
      } else {
        this.model.get('payModel').set('rememberCard', false);
      }


      this.payWithChannelUsingCard(evt);
    }
  }

  function getCardDetailsView() {
    return CardDetails;
  }

  function operaSelectCard(evt) {
    var _elem, index, selectCard, walletList, selectedTmpl, scope = this;
    _elem = $(evt.currentTarget);
    index = _elem.find(':selected').data('index');

    $('.operainit').removeClass('operainit');
    if (index !== undefined) {
      walletList = this.model.get('walletModel').get('wallet');

      if (index >= 0) {
        this.model.get('walletModel').set('use_wallet', true);
        selectCard = walletList[index];
        walletList[index].selected = true;
        this.model.get('walletModel').set('wallet', walletList);
        this.model.get('cardModel').set('selectedPaymentMethod', selectCard);

      } else {
        this.model.get('walletModel').set('use_wallet', false)
      }

      scope.render();
      $('.ipg--page').trigger('click');

    }

  }

  function triggerChangeonCvc(cardType) {
    var type, that = this;

    if (cardType) {
      if (cardType.match(/verve/)) {
        type = 'verve';
      } else if (cardType.match(/visa/)) {
        type = 'visa';

      } else if (cardType.match(/master/)) {
        type = 'master';
      } else {
        type = 'verve';
      }
    }


    setTimeout(function () {
      that.$el.find('#Cvv').trigger('cardChange', type);
    }, 0);
  }

  function selectCard(evt) {
    var scope = this;
    var _elem, index, selectCard, walletList, selectedTmpl;
    _elem = $(evt.currentTarget);

    index = _elem.data('index');
    walletList = this.model.get('walletModel').get('wallet');
    selectCard = walletList[index];
    this.model.get('cardModel').set('selectedPaymentMethod', selectCard);
    this.model.get('walletModel').set('use_wallet', true)
    this.render();

    if (selectCard.cardTypeCode == 'VMP') {
      setTimeout(function () {
        scope.$el.find('.CardPinLabel').html('eWallet PIN');
      }, 0);
    }

    if (selectCard.enableFingerPrint == true) {//
      scope.$el.find('.fingerprint-enabled-wrapper').addClass('show');
      this.model.get('fingerprintModel').set('key', selectCard.cookieKey);
    }

    this.triggerChangeonCvc(selectCard.cardTypeName);

    this.model.set('resize', true);
  }

  function selectNewCard() {

    var scope = this;
    var wallet = this.model.get('walletModel');
    wallet.set('use_wallet', false);
    this.model.get('cardModel').set('selectedPaymentMethod', null);

    this.render();
    this.$el.find('#Cc').focus();
    this.triggerChangeonCvc(selectCard.cardTypeName);

    setTimeout(function () {
      scope.$el.find('.CardPinLabel').html('Card PIN');
    }, 0);

    scope.$el.find('.fingerprint-enabled-wrapper').removeClass('show');
    this.model.set('resize', true);
  }

  function openFingerprintModal(evt) {
    evt.preventDefault();
    evt.stopImmediatePropagation();

    var scope = this;
    scope.$el.find('.fingerprint-modal-wrapper').addClass('show');
  }

  function closeFingerprintModal(evt) {
    evt.preventDefault();
    evt.stopImmediatePropagation();

    var scope = this;

    scope.$el.find('.fingerprint-modal-wrapper').removeClass('show');
    scope.$el.find('.fingerprint-modal-wrapper .container.prompt').addClass('show');
    scope.$el.find('.fingerprint-modal-wrapper .container.success').removeClass('show');
    scope.$el.find('.fingerprint-modal-wrapper .container.failure').removeClass('show');
    scope.$el.find('.fingerprint-modal-wrapper .fp-button.confirm span').html("Disable");
  }

  function disableFingerprint(evt) {
    evt.preventDefault();
    evt.stopImmediatePropagation();

    var scope = this;

    scope.$el.find('.fingerprint-modal-wrapper .fp-button.confirm span').html("Processing...");
    var disableFingerprintRequest = this.model.get('fingerprintModel').disableFingerprint();

    disableFingerprintRequest.success(function (response) {
      scope.$el.find('.fingerprint-modal-wrapper .container.prompt').removeClass('show');
      scope.$el.find('.fingerprint-modal-wrapper .container.success').addClass('show');
      scope.$el.find('.fingerprint-enabled-wrapper').removeClass('show');

    });

    disableFingerprintRequest.error(function (error) {
      scope.$el.find('.fingerprint-modal-wrapper .container.prompt').removeClass('show');
      scope.$el.find('.fingerprint-modal-wrapper .container.failure').addClass('show');
    });

  }

  function handleCardFieldBlur(evt) {
    evt.preventDefault();
    evt.stopImmediatePropagation();

    var scope = this;

    this.getCardConfiguration(evt);

    var val = this.$el.find(evt.target).val();

    if (val.length >= 12) {

      var statusData = scope.model.get('cardModel').getConfigData();
      scope.model.get('fingerprintModel').set('statusData', statusData);

      var fingerprintStatusPromise = scope.model.get('fingerprintModel').getFingerprintStatus();

      fingerprintStatusPromise.success(function (response) {
        if (response.status == true) {//response.status == true
          scope.$el.find('.fingerprint-enabled-wrapper').addClass('show');
          scope.model.get('fingerprintModel').set('key', response.key);
        }
      });

      fingerprintStatusPromise.error(function (error) {

      });

    }
    this.model.set('resize', true);

  }


  function showSelectedCard(selectCard) {
    selectCard.baseUrl = window.IpgApp.baseUrl;
    var selectedTmpl = selectedCardTmpl(selectCard);
    this.$el.find('#SelectedCard').html(selectedTmpl);
    this.$el.find('.selected-input-wrapper').css({
      visibility: 'visible'
    });
  }

  function showWallet() {
    var walletModel = this.model.get('walletModel');
    $('.ipg--content--container').css({ overflow: "visible" });
    if (walletModel.get('wallet') && walletModel.get('wallet').length) {
      var dropdown = this.$el.find('#CardInWallet ul:not(:visible)');
      dropdown.addClass('isvisible');
      var animate = TweenLite.from(dropdown, 0.15, {
        y: "-15",
        opacity: "0.7",
        clearProps: "y,opacity",
        onComplete: function () { }
      });
    }
  }

  function newCardInput() {
    var walletModel = this.model.get('walletModel');
    walletModel.set('use_wallet', false);
    if (this.$el.find('#Cc').val().trim()) {
      this.close()
    } else {
      this.showWallet()
    }

    this.$el.find('.fingerprint-enabled-wrapper').removeClass('show');

    this.model.set('resize', true);
  }

  function close() {
    this.$el.find('#CardInWallet ul').removeClass('isvisible');
    $('.ipg--content--container').css({ overflow: "hidden" });
  }

  function hideWallet(evt) {
    var scope = this;
    var paymentOption = scope.model.get('noncardModel').get('activePaymentMethod');

    var container;
    if(paymentOption == 'card') {
      container = this.$el.find('#WalletDropDown')
    }else{
      container = this.$el.find('#WalletDropDown_credit')
    }
    
    if (!container.is(evt.target) && container.has(evt.target).length === 0) {
      this.close();
    }
    this.model.set('resize', true);
  }

  function render() {
    var scope = this;
    var noncardModel = scope.model.get('noncardModel');
    var wallet = this.model.get('walletModel');
    var isOpera = Utils.detectMobileDevice().Opera();
    wallet.filter();
    this.$el.html(template({ baseUrl: window.IpgApp.baseUrl, wallet: wallet.get('wallet'), inputCard: !wallet.get('use_wallet'), isOpera: isOpera }));

    // Keep track of activepaymentmethod to navigate to offers if credit 
    var paymentoption = noncardModel.get('activePaymentMethod');
    
    this.setupPaymentTypes();
    this.selectPaymentType(paymentoption);

    this.$el.find('#Cc').payment('formatCardNumber');


    if (this.model.get('cardModel').get('selectedPaymentMethod')) {
      this.showSelectedCard(this.model.get('cardModel').get('selectedPaymentMethod'));
      this.model.get('cardModel').set('cardConfigurations', this.model.get('cardModel').get('selectedPaymentMethod'));
      this.model.get('cardModel').setConfigSettings();
      new CvvExpiryPin({ model: this.model });

      if (this.model.get('cardModel').get('selectedPaymentMethod').enableFingerPrint == true) {
        scope.$el.find('.fingerprint-enabled-wrapper').addClass('show');
        this.model.get('fingerprintModel').set('key', this.model.get('cardModel').get('selectedPaymentMethod').cookieKey);
      }

      scope.model.set('resize', true);

    }


    Tippy('#cvvTooltip', {
      html: document.querySelector('#cvvTooltipTemplate'),
      position: 'top',
      arrow: true,
      theme: 'webpay'
    });


    if (!isOpera) {
      this.parsleyValidator();
      var parsleyForm = this.$el.find('#WalletDetailsForm').parsley();
      parsleyForm.on('form:error', function () {
        scope.model.set('resize', true);
        scope.model.set('parsley-error', true);
      });
      new CardType({ el: $('#CardDropDownInput') });
      this.floatLabel();
      this.$el.find('input#Cc').payment('formatCardNumber');
      this.$el.find('input#CCexpiry').payment('formatCardExpiry');
      this.$el.find('input#Cvv').payment('formatCardCVC');

      if (this.model.get("walletModel").get('channelProvider') == 'BBM') {
        $("#wallet-remember-card").prop('checked', true);
      }

    }

  }

  function toggleRemember(e) {

    e.stopImmediatePropagation();

    if (e.target.tagName != 'INPUT') {
      var temp = $("#wallet-remember-card").prop('checked');
      $("#wallet-remember-card").prop('checked', !temp);
    }
  }


  function initialize() {
    var scope = this;
    var wallet = this.model.get('walletModel');
    var walletResponse = wallet.get('wallet_data');


    var lastPaymentInstrument = false;

    if (walletResponse['defaultWalletIdentifier']) {
      var lastCardIdent = walletResponse['defaultWalletIdentifier'];
      wallet.filter();
      var filteredWallet = wallet.get('wallet');
      for (var i = 0; i < filteredWallet.length; i++) {
        if (filteredWallet[i].walletInstrumentIdentifier == lastCardIdent) {
          lastPaymentInstrument = filteredWallet[i];
          break;
        }
      }
    }

    this.render();

    if (lastPaymentInstrument) {
      this.model.get('cardModel').set('selectedPaymentMethod', lastPaymentInstrument);
      this.model.get('walletModel').set('use_wallet', true)
      this.render();

      if (lastPaymentInstrument.cardTypeCode == 'VMP') {
        setTimeout(function () {
          scope.$el.find('.CardPinLabel').html('eWallet PIN');
        }, 0);
      }
    }

    if (walletResponse.error && walletResponse.error.fieldName) {
      walletResponse.responseTag = 'CANNOT_CONNECT_TO_PAYPHONE_SERVICE';
      var responseHandler = new Response('payment', walletResponse);
      var response = responseHandler.getResponse();
      setTimeout(function () {
        scope.model.set('responseData', response.model());
      }, 500);
    }
    $(document).on('click', function (e) {
      scope.hideWallet(e);
    });
  }
  
  return Backbone.View.extend(view);
}

module.exports = wallet();

},{"../../../../../node_modules/gsap/src/uncompressed/TweenLite":3,"../../../../../node_modules/gsap/src/uncompressed/plugins/CSSPlugin.js":4,"../../../../../node_modules/parsleyjs/dist/parsley.js":29,"../../models/response_model":60,"../../models/util_error_handler":63,"../utils/button_loader":132,"../utils/float":133,"./card_details":77,"./card_mixin":78,"./card_type":79,"./cvv_expiry_pin":82,"./templates/selected_card.hbs":106,"./templates/wallet.hbs":112,"./token_cardinal":113,"./token_otp":114,"backbone":1,"jquery":28,"jquery.payment":27,"tippy.js":31,"underscore":32}],118:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 1/29/2016.
 */

var jQuery = require('jquery'),
  Backbone = require('backbone'),
  _ = require('underscore');
var template = require('./templates/main.hbs');
states = require('../utils/state_mixin');
var Spinner = require('spin');
var Card = require('../card/card');
var Wallet = require('../card/wallet');
var Profile = require('../profile/profile');
var ResponseView = require('../response/response');

var CSSPlugin = require('../../../../../node_modules/gsap/src/uncompressed/plugins/CSSPlugin.js'),
  TweenLite = require('../../../../../node_modules/gsap/src/uncompressed/TweenLite'),
  TimelineLite = require('../../../../../node_modules/gsap/src/uncompressed/TimelineLite');
var redirectTemplate = require('./templates/redirect.hbs');
var UtilFunc = require('../../utils/utils.js');


Backbone.$ = jQuery;
window.jQuery = window.$ = jQuery;
require('../../utils/jquery.ba-postmessage.min');



//testing
//var BbmAuth = require('../bbm/bbm_auth');

//switching to num
var BbmNum = require('../bbm/bbm_number');

function loaderImage(elem) {
  var opts = {
    lines: 13,
    length: 5,
    width: 5,
    radius: 10,
    corners: 1,
    color: '#AAA',
    opacity: 0.25,
    rotate: 0,
    direction: 1,
    speed: 1,
    trail: 60,
    fps: 20,
    zIndex: 2e9,
    className: 'spinner',
    top: '50%',
    left: '50%',
    shadow: false,
    hwaccel: false,
    position: 'absolute'
  };

  var target = document.getElementById(elem)
  setTimeout(function () {
    var spinner = new Spinner(opts).spin(target);
  }, 0)
}


function main() {

  var events, view;

  // Backbone events for main view
  events = {
    'click #MerchantBack': 'back',
    'click #MerchantRedirect': 'cancelTransaction',
    'click .verified-images': 'toggleLogos',
    'redirect #MerchantRedirect': 'redirectToMerchantPage',
    'click #RedirectMerchantClose': 'cancelTransaction'
  };
  // Main View Object
  view = {
    el: '#AppView',
    name: "Main",
    getParentURI: getParentURI,
    getOrigin: getOrigin,
    postToFrame: postToFrame,
    preRender: preRender,
    template: template,
    events: events,
    resize: resize,
    showBackType: showBackType,
    transitTo: transitTo,
    handleResponse: handleResponse,
    toggleLogos: toggleLogos,
    back: back,
    emptyField: emptyField,
    renderWallet: renderWallet,
    animateFormError: animateFormError,
    postBackToMerchant: postBackToMerchant,
    cancelTransaction: cancelTransaction,
    cancelTransactionOnClose: cancelTransactionOnClose,
    redirectToMerchantPage: redirectToMerchantPage,
    render: render,
    showBackOnLogout: showBackOnLogout,
    popupParams: popupParams,
    initialize: initialize,
    logIn: logIn,
    logout: logout
  };

  function getOrigin(url) {
    var parser = document.createElement('a');
    parser.href = url;
    return parser.origin;
  }

  function getParentURI(siteUrl) {
    var url = this.getOrigin(siteUrl) || document.location.hash || document.location.href;
    return decodeURIComponent(url.replace(/^#/, ''));
  }

  function postToFrame(message, url) {
    $.postMessage(message, this.getParentURI(url));
  }

  function toggleLogos() {
    this.$el.find('.ipg-verified-all-images').toggleClass('visible');
  }

  function resize() {
    this.resizeHeight();
    this.model.set("resize", "", {
      silent: false
    });
  }

  function postBackToMerchant(data) {
    var scope = this;
    data.resp = data.resp ? data.resp.toString() : data.resp;
    if (this.model.get('merchantModel').get('displayModeType') === 'POPUP') {
      this.postToFrame(JSON.stringify(data), data.url);
      return;
    }
    if (!data.url) {
      window.location.href = IpgApp.baseUrl + "/failed-transaction";
      return;
    }

    this.model.set('cancelTransaction', true);
    var redirectTmpl = redirectTemplate(data);
    this.$el.append(redirectTmpl);
    this.$el.find('#merchantRedirect').submit();
  }

  function cancelTransactionOnClose() {
    var scope = this;
    this.model.set('cancelTransaction', false);
    var _evt = function () {
      scope.model.get('userModel').set('customerCancellationReason', 'Triggered by before unload: browser closed');
      scope.model.get('userModel').set('paymentId', scope.model.get('merchantModel').get('paymentId'));
      scope.model.get('userModel').set('thirdPartyTransactionType', scope.model.get('merchantModel').get('thirdPartyTransactionType'));

      scope.model.get('userModel').customerCancelTransaction();

      if (!scope.model.get('cancelTransaction')) {
        $.ajaxSetup({
          async: false
        });
      }
      return;
    };

    if (window.addEventListener) {
      window.addEventListener("beforeunload", _evt, false);
    } else {
      window.attachEvent("onbeforeunload", _evt);
    }
  }

  function cancelTransaction() {
    var data = {};

    this.model.set('cancelTransaction', true);
    var lastResponse = this.model.get('payModel').get('previousResponse');
    var merchantModel = this.model.get('merchantModel');

    this.model.get('userModel').set('customerCancellationReason', 'Return to merchant Site ');
    this.model.get('userModel').set('paymentId', this.model.get('merchantModel').get('paymentId'));
    this.model.get('userModel').set('thirdPartyTransactionType', this.model.get('merchantModel').get('thirdPartyTransactionType'));

    var trnxRef = lastResponse ?
      (lastResponse.transactionReference ?
        lastResponse.transactionReference : merchantModel.get('merchantTransactionReference')) : merchantModel.get('merchantTransactionReference');

    data.resp = lastResponse ? lastResponse.responseCode : 'Z6';
    data.url = merchantModel.get('siteRedirectUrl');
    data.desc = 'Customer cancellation';
    data.payRef = merchantModel.get('merchantTransactionReference');
    data.retRef = "";
    data.txnref = trnxRef;
    data.apprAmt = merchantModel.get('amount');
    data.amount = merchantModel.get('amount');
    data.cardNum = "";
    data.mac = "";
    data.thirdPartyTransactionType = merchantModel.get('thirdPartyTransactionType');

    $.ajaxSetup({
      async: false
    });
    this.model.get('userModel').customerCancelTransaction();
    this.postBackToMerchant(data);

  }

  function redirectToMerchantPage(evt, data) {
    this.postBackToMerchant(data);
  }

  function showBackOnLogout() {
    this.$el.find('#MerchantRedirect').addClass('show');
    this.$el.find('#MerchantBack').removeClass('show');
  }

  function showBackType() {
    var scope = this;
    setTimeout(function () {
      if (scope.hasNavigated()) {
        scope.$el.find('#MerchantRedirect').removeClass('show');
        scope.$el.find('#MerchantBack').addClass('show');
      } else {
        scope.$el.find('#MerchantBack').removeClass('show');
        scope.$el.find('#MerchantRedirect').addClass('show');
      }
    }, 100);
    this.model.set('state-change', false, {
      silent: true
    });

  }

  function transitTo(pageModel, pageView) {
    this.gotoPage({
      view: pageView,
      model: this.model
    });
    this.model.set("page_proceed", "", {
      silent: true
    });
    this.model.set('state-change', true);
  }

  function logIn() {
    new Profile({
      model: this.model
    });
  }

  function emptyField() {
    var $elem = this.$el.find('#AppContent').find('.ipg--page');
    var fields = [$elem.find('#Pin'), $elem.find('#Cvv'), $elem.find('#Password')];
    _.each(fields, function (field) {
      field.length && field.val('');
    });
  }

  function animateFormError() {
    var $elem = this.$el.find('#AppContent');
    this.model.unset("parsley-error", {
      silent: true
    });
    if (UtilFunc.detectMobileDevice().any()) {
      return true;
    }
    var tl = new TimelineLite({
      onComplete: function () {
        TweenLite.to($elem, 0, {
          clearProps: "transform"
        });
      }
    });
    tl.staggerTo($elem, 0.07, {
      transform: "translate3d(0,0,0)"
    });
    tl.staggerTo($elem, 0.07, {
      transform: "translateX(-6px) rotateY(-5deg)"
    });
    tl.staggerTo($elem, 0.1, {
      transform: "translateX(5px) rotateY(4deg)",

    });
    tl.staggerTo($elem, 0.1, {
      transform: "translateX(-3px) rotateY(-2deg)"
    });

    tl.staggerTo($elem, 0.1, {
      transform: "translateX(2px) rotateY(1deg)"
    });

    tl.staggerTo($elem, 0.07, {
      transform: "translateX(0)"
    });
  }

  function logout() {
    var scope = this;

    $('#AppContent').css({
      overflow: 'hidden'
    });
    //original
    if (this.model.get('walletModel').get('channelProvider') == 'BBM') {
      scope.model.set('page_proceed', BbmNum);
      document.cookie = "qtbbmd_b8dd8da8e4a7=;path=/;expires=Thu, 01 Jan 1970 00:00:00 GMT"
      document.cookie = "qtbbmd_e75f8c8652rt=;path=/;expires=Thu, 01 Jan 1970 00:00:00 GMT"
    } else {
      scope.goToTemplate('PageCard', true);
    }


    this.model.get('cardModel').clear();
    this.model.get('userModel').clear();
    this.model.get('payModel').clear();

    if (this.model.get('walletModel').get('channelProvider') == 'BBM') { //remember if the user is coming from bbm
      this.model.get('walletModel').clear();
      this.model.get('walletModel').set('channelProvider', 'BBM');
    } else {
      this.model.get('walletModel').clear();
    }

    scope.showBackOnLogout();

    //test
    setTimeout(function () {
      var $elem = scope.$el.find('#AppContent').find('.ipg--page');
      var fields = [$elem.find('#Cc'), $elem.find('#CCexpiry'), $elem.find('#Pin'), $elem.find('#Cvv'), $elem.find('#Password')];
      _.each(fields, function (field) {
        field.length && field.val('');
      });
    }, 0)

    //


    this.model.unset("page_proceed", {
      silent: true
    });
    this.model.unset("resize", {
      silent: true
    });
    this.model.unset("parsley-error", {
      silent: true
    });
    this.model.unset("responseData", {
      silent: true
    });
    this.model.unset("isLoggedIn", {
      silent: true
    });
    this.model.unset("logout", {
      silent: true
    });
  }

  function handleResponse(evt, data) {
    data.set('complete_model', this.model);
    this.model.get('merchantModel').set('lastResponse', data);

    var responseView = new ResponseView({
      el: this.el,
      model: data
    });
    this.emptyField();
    responseView.notify();
    this.model.set("resize", true);
    this.model.set('responseData', "", {
      silent: true
    });
  }

  function preRender() {
    this.$el.html(this.template());
    loaderImage('Ipg_loader');

  }

  function render() {
    var merchantData = this.model.get('merchantModel').toJSON();
    merchantData.paymentReady = true;
    this.$el.html(this.template({
      merchant: merchantData
    }));

    //this calls renders the card page. Modifying to redirect to login page
    //original
    var card = new Card({
      model: this.model
    });
    this.initPageView(card.el);

    //modified
    //var login = new Login({
    //  model: this.model
    //})
    //this.initPageView(login.el);

    this.listenTo(this.model, 'change:page_proceed', _.bind(this.transitTo, this));
    this.listenTo(this.model, 'change:page_back', _.bind(this.back, this));
    this.listenTo(this.model, 'change:resize', _.bind(this.resize, this));
    this.listenTo(this.model, 'change:responseData', _.bind(this.handleResponse, this));
    this.listenTo(this.model, 'change:isLoggedIn', _.bind(this.logIn, this));
    this.listenTo(this.model, 'change:logout', _.bind(this.logout, this));
    this.listenTo(this.model, 'change:parsley-error', _.bind(this.animateFormError, this));
    this.listenTo(this.model, 'change:state-change', _.bind(this.showBackType, this));
    this.listenTo(this.model, 'change:app-redirect', _.bind(this.redirectToMerchantPage, this));
    this.showBackType();



  }

  function renderWallet() {
    this.model.set('page_proceed', Wallet);
  }



  function back() {
    this.goBack();
    this.model.set("page_back", "", {
      silent: true
    });
    this.model.set('state-change', true);
  }


  function popupParams() {
    if (this.model.get('merchantModel').get('displayModeType') === 'POPUP') {

      if (!UtilFunc.detectMobileDevice().any()) {
        $('body').addClass('isw--popup');
        var $elem = $('.ipg-app-container');
        var tl = new TimelineLite({
          onComplete: function () {
            TweenLite.to($elem, 0, {
              clearProps: "transform"
            });
          }
        });
        tl.staggerFrom($elem, 0.2, {
          opacity: 0,
          transform: "translateY(70px) scale(0.89) rotateX(5deg)"

        });


        tl.staggerTo($elem, 0.1, {
          opacity: 1,
          transform: "translateY(0) scale(1) rotateX(0)"
        });

      } else {
        $('body').addClass('isw-popup');
      }

    }
  }


  function initialize() {
    var scope = this;
    var redirectTmpl, channelAuthenticateModel, loginWithToken;
    var walletModel = this.model.get('walletModel');
    this.preRender();
    this.cancelTransactionOnClose();

    if (UtilFunc.detectMobileDevice().Opera()) {
      scope.$el.addClass('opera-mini');
    }

    if (this.model.get('merchantModel').isValidTransaction()) {


      //Filter out active payment types
      var nonCardOptions = this.model.get('merchantModel').get('nonCardOptions');

      var supportedPaymentMethods = nonCardOptions.filter(function (item, index) {
        return item.enabled;
      });

      scope.model.get('noncardModel').set('supportedPaymentMethods', supportedPaymentMethods);




      channelAuthenticateModel = this.model.get('channelAuthenticateModel');
      if (channelAuthenticateModel.hasToken()) {


        if (scope.model.get('merchantModel').get('channelProvider') == "BBM") {

          scope.model.get('walletModel').set('channelProvider', 'BBM');
          scope.model.get('walletModel').set('bbmAuthCode', '');
          scope.model.get('bbmModel').set('data',
            {
              authUrl: scope.model.get('merchantModel').get('socialServiceAuthorizationUrl')
            }
          );
        }


        loginWithToken = channelAuthenticateModel.logInWithToken();
        loginWithToken.success(function (response) {
          walletModel.set('wallet_data', response);
          scope.render();
          if (!UtilFunc.detectMobileDevice().Opera()) {
            setTimeout(function () {
              scope.renderWallet();
            }, 100);
          }
          if (response.user) {

            scope.model.set('isLoggedIn', true);
          }
          scope.popupParams();
        });
        loginWithToken.error(function (error) {
          scope.render();
          scope.popupParams();
        });

      } else {
        this.render();

        //BBM flow
        if (scope.model.get('merchantModel').get('channelProvider') == "BBM") {
          //this.model.set('page_proceed', BbmAuth);
          scope.model.get('walletModel').set('channelProvider', 'BBM');
          scope.model.get('walletModel').set('bbmAuthCode', '');
          scope.model.get('bbmModel').set('data',
            {
              authUrl: scope.model.get('merchantModel').get('socialServiceAuthorizationUrl')
            }
          );
          scope.model.set('page_proceed', BbmNum);
        }
      }
      scope.popupParams();

    } else {
      var data = {};
      data.url = this.model.get('merchantModel').get('siteRedirectUrl');
      data.desc = this.model.get('merchantModel').get('responseDescription');
      data.resp = this.model.get('merchantModel').get('responseCode');
      scope.postBackToMerchant(data);
    }
  }

  return Backbone.View.extend(view)
}

module.exports = main();

},{"../../../../../node_modules/gsap/src/uncompressed/TimelineLite":2,"../../../../../node_modules/gsap/src/uncompressed/TweenLite":3,"../../../../../node_modules/gsap/src/uncompressed/plugins/CSSPlugin.js":4,"../../utils/jquery.ba-postmessage.min":67,"../../utils/utils.js":71,"../bbm/bbm_number":73,"../card/card":76,"../card/wallet":117,"../profile/profile":122,"../response/response":125,"../utils/state_mixin":135,"./templates/main.hbs":119,"./templates/redirect.hbs":120,"backbone":1,"jquery":28,"spin":30,"underscore":32}],119:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression, alias3=depth0 != null ? depth0 : {};

  return "      <div class=\"ipg--topbar--container clearfix\">\r\n        <div class=\"isw--cancel--icon\">\r\n          <svg id=\"RedirectMerchantClose\" viewBox=\"0 0 256 256\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n            xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\">\r\n            <defs></defs>\r\n            <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\">\r\n              <g id=\"Quit---Cancel-Copy-2\" sketch:type=\"MSArtboardGroup\" fill=\"#FFFFFF\">\r\n                <g id=\"Oval-65-+-close-copy-6\" sketch:type=\"MSLayerGroup\" transform=\"translate(15.000000, 15.000000)\">\r\n                  <path d=\"M115,230 C178.512746,230 230,178.512746 230,115 C230,51.4872538 178.512746,0 115,0 C51.4872538,0 0,51.4872538 0,115 C0,178.512746 51.4872538,230 115,230 L115,230 Z M115,220 C57.0101013,220 10,172.989899 10,115 C10,57.0101013 57.0101013,10 115,10 C172.989899,10 220,57.0101013 220,115 C220,172.989899 172.989899,220 115,220 L115,220 Z\"\r\n                    id=\"Shape\" sketch:type=\"MSShapeGroup\"></path>\r\n                  <g id=\"close-copy-6\" transform=\"translate(77.131148, 77.131148)\" sketch:type=\"MSShapeGroup\">\r\n                    <g id=\"Page-1\">\r\n                      <g id=\"Core\">\r\n                        <g id=\"close\">\r\n                          <path d=\"M79.3442623,7.93442623 L71.4098361,0 L39.6721311,31.7377049 L7.93442623,0 L0,7.93442623 L31.7377049,39.6721311 L0,71.4098361 L7.93442623,79.3442623 L39.6721311,47.6065574 L71.4098361,79.3442623 L79.3442623,71.4098361 L47.6065574,39.6721311 L79.3442623,7.93442623 L79.3442623,7.93442623 Z\"\r\n                            id=\"Shape\"></path>\r\n                        </g>\r\n                      </g>\r\n                    </g>\r\n                  </g>\r\n                </g>\r\n              </g>\r\n            </g>\r\n          </svg>\r\n        </div>\r\n        <a href=\"#\" id=\"MerchantRedirect\" class=\"ipg--close\">\r\n          <!--<span>\r\n						<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 125\" enable-background=\"new 0 0 100 100\" xml:space=\"preserve\">\r\n							<path d=\"M92.2,48H15.3l28.7-28.8c1.1-1.1,1.1-2.9,0-3.9c-1.1-1.1-2.8-1.1-3.9,0L5,50.4l35.2,35.2c0.5,0.5,1.2,0.8,1.9,0.8  c0.7,0,1.4-0.3,1.9-0.8c1.1-1.1,1.1-3,0-4L15.7,53h76.6c1.5,0,2.8-1,2.8-2.5C95,49,93.7,48,92.2,48z\"/>\r\n						</svg>\r\n					</span>-->Cancel Payment and Return to "
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.merchant : depth0)) != null ? stack1.merchantName : stack1), depth0))
    + "</a>\r\n        <a href=\"#\" id=\"MerchantBack\" class=\"ipg--close invisible-responsive\">Back</a>\r\n\r\n      </div>\r\n      <div class=\"ipg--content--container\" id=\"AppContent\">\r\n        <div class=\"ipg--content--header--container\">\r\n          <div class=\"ipg--content--header container\">\r\n            <div class=\"ipg--merchant\">\r\n              <div class=\"container\">\r\n                <div class=\"ipg--merchant--logo--wrapper\">\r\n                  <img class=\"ipg--merchant--logo\" src=\""
    + ((stack1 = alias1(((stack1 = (depth0 != null ? depth0.merchant : depth0)) != null ? stack1.logoUrl : stack1), depth0)) != null ? stack1 : "")
    + "\" />\r\n                </div>\r\n\r\n                <div class=\"ipg--merchant--detail\">\r\n                  <div class=\"ipg-merchant-item-title\">"
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.merchant : depth0)) != null ? stack1.customerName : stack1), depth0))
    + "</div>\r\n"
    + ((stack1 = helpers["if"].call(alias3,((stack1 = (depth0 != null ? depth0.merchant : depth0)) != null ? stack1.isAmount : stack1),{"name":"if","hash":{},"fn":container.program(2, data, 0),"inverse":container.program(4, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"ipg--customer--wrapper \">\r\n              <div class=\"ipg--customer--name\" id=\"Profile\">\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"ipg--content--body--container\" id=\"LayoutContentBody\">\r\n          <div id=\"PageHome\" class=\"ipg--page\"></div>\r\n          <div id=\"PageLogin\" class=\"ipg--page\"></div>\r\n          <div id=\"PageCard\" class=\"ipg--page\"></div>\r\n          <div id=\"PageCardDetails\" class=\"ipg--page\"></div>\r\n          <div id=\"PageWallet\" class=\"ipg--page\"></div>\r\n          <div id=\"PageTokenOtp\" class=\"ipg--page\"></div>\r\n          <div id=\"PageTokenOtpReg\" class=\"ipg--page\"></div>\r\n\r\n          <div id=\"PageTokenOtpBank\" class=\"ipg--page\"></div>\r\n\r\n          <div id=\"PageBbmAuth\" class=\"ipg--page\"></div>\r\n          <div id=\"PageBbmNumber\" class=\"ipg--page\"></div>\r\n          <div id=\"PageBbmCode\" class=\"ipg--page\"></div>\r\n\r\n          <div id=\"PageMtnProcess\" class=\"ipg--page\"></div>\r\n          <div id=\"PageTokenCardinal\" class=\"ipg--page cardinal-wrapper\"></div>\r\n          <div id=\"PageRewards\" class=\"ipg--page\"></div>\r\n\r\n          <div id=\"PagePayWithMobileComplete\" class=\"ipg--page\"></div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"ipg--footer--container \">\r\n\r\n        <div class=\"ipg--logo--images\">\r\n          <img src=\""
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.merchant : depth0)) != null ? stack1.baseUrl : stack1), depth0))
    + "public/images/logo.png\" />\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <!-- Place a secure padlock here -->\r\n          </div>\r\n          <div class=\"ipg--verified--images\">\r\n            <div>\r\n              <svg class=\"verified-images\" version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n                x=\"0px\" y=\"0px\" viewBox=\"0 0 100 125\" style=\"enable-background:new 0 0 100 125;\" xml:space=\"preserve\">\r\n                <g>\r\n                  <path d=\"M83.6,52.9H78v-9.2c0-15.2-12.8-27.6-28-27.6c-15.2,0-28,12.4-28,27.6v9.2h-6.2c-1.2,0-2.8,2.1-2.8,3.4v50.3\r\n                                        c0,1.2,1.5,2.3,2.8,2.3h67.9c1.2,0,3.4-1.1,3.4-2.3V56.3C87,55,84.9,52.9,83.6,52.9z M58,96.2c-0.3,0.4-0.8,0.7-1.3,0.7H43.6\r\n                                        c-0.5,0-1-0.3-1.3-0.7c-0.3-0.4-0.4-1-0.2-1.4l4.5-14.7C44.5,78.7,43,76,43,73.2c0-3.9,3.2-7.1,7.2-7.1c3.9,0,7.2,3.4,7.2,7.4\r\n                                        c0,2.7-1.5,5.2-3.6,6.6l4.5,14.7C58.4,95.2,58.3,95.8,58,96.2z M62,52.9H38v-9.2c0-6.6,5.4-11.9,12-11.9c6.6,0,12,5.3,12,11.9V52.9\r\n                                        z\" />\r\n                </g>\r\n              </svg>\r\n            </div>\r\n            "
    + ((stack1 = helpers["if"].call(alias3,((stack1 = (depth0 != null ? depth0.merchant : depth0)) != null ? stack1.isPopup : stack1),{"name":"if","hash":{},"fn":container.program(6, data, 0),"inverse":container.program(8, data, 0),"data":data})) != null ? stack1 : "")
    + "          </div>\r\n        </div>\r\n      </div>\r\n";
},"2":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.lambda;

  return "                  <div class=\"ipg-header-amount\">\r\n                    "
    + ((stack1 = alias1(((stack1 = (depth0 != null ? depth0.merchant : depth0)) != null ? stack1.currencySymbol : stack1), depth0)) != null ? stack1 : "")
    + container.escapeExpression(alias1(((stack1 = (depth0 != null ? depth0.merchant : depth0)) != null ? stack1.formattedAmount : stack1), depth0))
    + "\r\n                  </div>\r\n                  ";
},"4":function(container,depth0,helpers,partials,data) {
    return " ";
},"6":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression;

  return " \r\n            <div class=\"image-group\">\r\n              <img class=\"\" src=\""
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.merchant : depth0)) != null ? stack1.baseUrl : stack1), depth0))
    + "public/images/verified/popup/verve.png\" />\r\n              <img class=\"mastercard\" src=\""
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.merchant : depth0)) != null ? stack1.baseUrl : stack1), depth0))
    + "public/images/verified/popup/mastercard.png\" />\r\n              <img class=\"\" src=\""
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.merchant : depth0)) != null ? stack1.baseUrl : stack1), depth0))
    + "public/images/verified/popup/masterpass.png\" />\r\n              <img class=\"visa\" src=\""
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.merchant : depth0)) != null ? stack1.baseUrl : stack1), depth0))
    + "public/images/verified/popup/visa.png\" />\r\n              <img class=\"\" src=\""
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.merchant : depth0)) != null ? stack1.baseUrl : stack1), depth0))
    + "public/images/verified/popup/mvisa.png\" />\r\n            </div>\r\n            ";
},"8":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression;

  return " \r\n            <div class=\"image-group\">\r\n              <img class=\"\" src=\""
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.merchant : depth0)) != null ? stack1.baseUrl : stack1), depth0))
    + "public/images/verified/standard/verve.png\" />\r\n              <img class=\"mastercard\" src=\""
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.merchant : depth0)) != null ? stack1.baseUrl : stack1), depth0))
    + "public/images/verified/standard/mastercard.png\" />\r\n              <img class=\"\" src=\""
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.merchant : depth0)) != null ? stack1.baseUrl : stack1), depth0))
    + "public/images/verified/standard/masterpass.png\" />\r\n              <img class=\"visa\" src=\""
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.merchant : depth0)) != null ? stack1.baseUrl : stack1), depth0))
    + "public/images/verified/standard/visa.png\" />\r\n              <img class=\"\" src=\""
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.merchant : depth0)) != null ? stack1.baseUrl : stack1), depth0))
    + "public/images/verified/standard/mvisa.png\" />\r\n            </div>\r\n";
},"10":function(container,depth0,helpers,partials,data) {
    return "\r\n<div class=\"ipg--page--loader--container\">\r\n  <span id=\"Ipg_loader\" class=\"ipg-loader\"></span>\r\n</div>\r\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : {};

  return "<div class=\"ipg-app\">\r\n  <div class=\"ipg-app-container\">\r\n    <div class=\"ipg--body--container\" id=\"AppBodyWrapper\">\r\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.merchant : depth0)) != null ? stack1.paymentReady : stack1),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "    </div>\r\n\r\n  </div>\r\n</div>\r\n\r\n"
    + ((stack1 = helpers["if"].call(alias1,((stack1 = (depth0 != null ? depth0.merchant : depth0)) != null ? stack1.paymentReady : stack1),{"name":"if","hash":{},"fn":container.program(4, data, 0),"inverse":container.program(10, data, 0),"data":data})) != null ? stack1 : "");
},"useData":true});

},{"hbsfy/runtime":24}],120:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1, helper;

  return "        <input type=\"hidden\" name=\"bpResp\" value=\""
    + ((stack1 = ((helper = (helper = helpers.bpResp || (depth0 != null ? depth0.bpResp : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : {},{"name":"bpResp","hash":{},"data":data}) : helper))) != null ? stack1 : "")
    + "\"/>\r\n";
},"3":function(container,depth0,helpers,partials,data) {
    var stack1, helper;

  return "        <input type=\"hidden\" name=\"bpTrxnRef\" value=\""
    + ((stack1 = ((helper = (helper = helpers.bpTrxnRef || (depth0 != null ? depth0.bpTrxnRef : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : {},{"name":"bpTrxnRef","hash":{},"data":data}) : helper))) != null ? stack1 : "")
    + "\"/>\r\n";
},"5":function(container,depth0,helpers,partials,data) {
    var stack1, helper;

  return "       <input type=\"hidden\" name=\"rechPin\" value=\""
    + ((stack1 = ((helper = (helper = helpers.rechPin || (depth0 != null ? depth0.rechPin : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : {},{"name":"rechPin","hash":{},"data":data}) : helper))) != null ? stack1 : "")
    + "\"/>\r\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "<form action=\""
    + alias4(((helper = (helper = helpers.url || (depth0 != null ? depth0.url : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"url","hash":{},"data":data}) : helper)))
    + "\" method=\"POST\" id=\"merchantRedirect\">\r\n    <input type=\"hidden\" name=\"txnref\" value=\""
    + alias4(((helper = (helper = helpers.txnref || (depth0 != null ? depth0.txnref : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"txnref","hash":{},"data":data}) : helper)))
    + "\"/>\r\n    <input type=\"hidden\" name=\"resp\" value=\""
    + ((stack1 = ((helper = (helper = helpers.resp || (depth0 != null ? depth0.resp : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"resp","hash":{},"data":data}) : helper))) != null ? stack1 : "")
    + "\" />\r\n    <input type=\"hidden\" name=\"payRef\" value=\""
    + alias4(((helper = (helper = helpers.payRef || (depth0 != null ? depth0.payRef : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"payRef","hash":{},"data":data}) : helper)))
    + "\"/>\r\n    <input type=\"hidden\" name=\"desc\" value=\""
    + alias4(((helper = (helper = helpers.desc || (depth0 != null ? depth0.desc : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"desc","hash":{},"data":data}) : helper)))
    + "\"/>\r\n    <input type=\"hidden\" name=\"retRef\" value=\""
    + alias4(((helper = (helper = helpers.retRef || (depth0 != null ? depth0.retRef : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"retRef","hash":{},"data":data}) : helper)))
    + "\" />\r\n    <input type=\"hidden\" name=\"cardNum\" value=\""
    + alias4(((helper = (helper = helpers.cardNum || (depth0 != null ? depth0.cardNum : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"cardNum","hash":{},"data":data}) : helper)))
    + "\" />\r\n    <input type=\"hidden\" name=\"apprAmt\" value=\""
    + alias4(((helper = (helper = helpers.apprAmt || (depth0 != null ? depth0.apprAmt : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"apprAmt","hash":{},"data":data}) : helper)))
    + "\"/>\r\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.bpResp : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.bpTrxnRef : depth0),{"name":"if","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.rechPin : depth0),{"name":"if","hash":{},"fn":container.program(5, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "    <input type=\"hidden\" name=\"amount\" value=\""
    + alias4(((helper = (helper = helpers.amount || (depth0 != null ? depth0.amount : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"amount","hash":{},"data":data}) : helper)))
    + "\"/>\r\n    <input type=\"hidden\" name=\"mac\" value=\""
    + alias4(((helper = (helper = helpers.mac || (depth0 != null ? depth0.mac : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"mac","hash":{},"data":data}) : helper)))
    + "\"/>\r\n</form>";
},"useData":true});

},{"hbsfy/runtime":24}],121:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 1/29/2016.
 */

var jQuery = require('jquery'),
    Backbone = require('backbone'),
    _ = require('underscore');
    require('../../../../../node_modules/parsleyjs/dist/parsley.js');
var ButtonLoader = require('../utils/button_loader');

var Wallet = require('../card/wallet');
var template = require('./templates/login.hbs');

require('../utils/float');

Backbone.$ = jQuery;

var Response = require('../../models/response_model');
var ErrorHandler = require('../../models/util_error_handler');


function login(){
    var events, view;
    // Backbone events for main view
    events =  {
        "click #Back": "goBack",
        "submit #LoginForm":"loginWallet"
    };
    // Main View Object
    view  = {
        el: '#PageLogin',
        name: "Login",
        template: template,
        loginWallet: loginWallet,
        goBack: goBack,
        events: events,
        render:render,
        initialize: initialize
    };

    function goBack(){
        this.model.set('page_back', true);
    }

    function loginWallet(evt){
        evt.preventDefault();
        evt.stopImmediatePropagation();
        var walletPromise = "";
        var scope = this;
        var username = this.$el.find('#LoginUsername').val();
        var password = this.$el.find('#Password').val();
        var walletModel = this.model.get('walletModel');
        var buttonLoader = new ButtonLoader({el: this.$el.find('button[type=submit]')});
        walletModel.set('payableCode', this.model.get('merchantModel').get('payableCode'));
        walletModel.set('merchantCode', this.model.get('merchantModel').get('merchantCode'));
        walletModel.set('username',username );
        walletModel.set('password',password );
        walletModel.set('paymentId', this.model.get('merchantModel').get('paymentId'));

        if(walletModel.get('channelProvider') == 'BBM'){//bbm login. get opt code first
            var bbmAuthPromise = scope.model.get('bbmModel').bbmTryAuth();
            bbmAuthPromise.success(function(operationResponse){

                var respString = operationResponse.location;
                respString = respString.split('=');
                for(var i = 0; i < respString.length; i++){
                    if(respString[i].indexOf('code') >= 0){
                        var bbmAuthCode = respString[i+1];
                        break;
                    }
                }

                scope.model.get('walletModel').set('bbmAuthCode', bbmAuthCode);

                var walletPromise = walletModel.retrieveWallet();
                walletPromise.success(function(response){
                    buttonLoader.resetButton('Login');

                    if(response.socialServiceAccessToken) {
                        var expiryDate = new Date()
                        expiryDate.setTime( expiryDate.getTime() + 300 * 86400000 );
                        expiryDate = expiryDate.toUTCString()
                        document.cookie = "qtbbmd_b8dd8da8e4a7=" + response.socialServiceAccessToken + ";path=/;expires=" + expiryDate;
                    }

                    if( response.user){
                        scope.model.set('isLoggedIn', true);
                    }
                    walletModel.set('wallet_data', response);
                    scope.model.set('page_proceed',Wallet);
                    walletModel.set('mobileNo', response.user.mobileNo );
                });

                walletPromise.error(function(error, status){
                    buttonLoader.resetButton('Login');
                    var error = ErrorHandler.handleError(error);
                    var data = JSON.parse(error.responseText);
                    data.status = error.status;
                    data.responseTag = undefined;
                    var responseHandler = new Response('login', data);
                    var  response = responseHandler.getResponse();
                    //test
                    var responseModel = response.model();
                    if(data.responseCode == 'SCL'){
                        responseModel.set('message', data.responseDescription);
                        responseModel.set('response', data.responseDescription);
                    }
                    //
                    scope.model.set('responseData', responseModel);
                });
            });
            bbmAuthPromise.error(function(error){
                scope.model.get('walletModel').set('bbmAuthCode', 'fail');
                var walletPromise = walletModel.retrieveWallet();
                walletPromise.success(function(response){
                    buttonLoader.resetButton('Login');
                    if( response.user){
                        scope.model.set('isLoggedIn', true);
                    }
                    walletModel.set('wallet_data', response);
                    scope.model.set('page_proceed',Wallet);
                    walletModel.set('mobileNo', response.user.mobileNo );
                });

                walletPromise.error(function(error, status){
                    buttonLoader.resetButton('Login');
                    var error = ErrorHandler.handleError(error);
                    var data = JSON.parse(error.responseText);
                    data.status = error.status;
                    data.responseTag = undefined;
                    var responseHandler = new Response('login', data);
                    var  response = responseHandler.getResponse();
                    //test
                    var responseModel = response.model();
                    if(data.responseCode == 'SCL'){
                        responseModel.set('message', data.responseDescription);
                        responseModel.set('response', data.responseDescription);
                    }
                    //
                    scope.model.set('responseData', responseModel);
                });
            });
        }else{//normal login
            var walletPromise = walletModel.retrieveWallet();
            walletPromise.success(function(response){
                buttonLoader.resetButton('Login');
                if( response.user){
                    scope.model.set('isLoggedIn', true);
                }
                walletModel.set('wallet_data', response);
                scope.model.set('page_proceed',Wallet);
                walletModel.set('mobileNo', response.user.mobileNo );
            });

            walletPromise.error(function(error, status){
                buttonLoader.resetButton('Login');
                var error = ErrorHandler.handleError(error);
                var data = JSON.parse(error.responseText);
                data.status = error.status;
                var responseHandler = new Response('login', data);
                var  response= responseHandler.getResponse();
                scope.model.set('responseData', response.model());
            });
        }

/*
        walletPromise = walletModel.retrieveWallet();
        walletPromise.success(function(response){
            buttonLoader.resetButton('Login');
            if( response.user){
                scope.model.set('isLoggedIn', true);
            }
            walletModel.set('wallet_data', response);
            scope.model.set('page_proceed',Wallet);
        });

        walletPromise.error(function(error, status){
            buttonLoader.resetButton('Login');
            var error = ErrorHandler.handleError(error);
            var data = JSON.parse(error.responseText);
            data.status = error.status;
            var responseHandler = new Response('login', data);
            var  response= responseHandler.getResponse();
            scope.model.set('responseData', response.model());
        });

*/

    }

    function render (){
        var scope = this, parsleyForm;
        this.$el.html(this.template({}));
        parsleyForm  = this.$el.find('#LoginForm').parsley();
        parsleyForm.on('form:error', function(){
            scope.model.set('resize', true);
            scope.model.set("parsley-error",true);
        });
        this.floatLabel();
    }

    function initialize(){
        this.render();
    }

    return Backbone.View.extend(view)
}

module.exports =  login();


},{"../../../../../node_modules/parsleyjs/dist/parsley.js":29,"../../models/response_model":60,"../../models/util_error_handler":63,"../card/wallet":117,"../utils/button_loader":132,"../utils/float":133,"./templates/login.hbs":123,"backbone":1,"jquery":28,"underscore":32}],122:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 1/29/2016.
 */

var jQuery = require('jquery'),
    Backbone = require('backbone'),
    _ = require('underscore');

var CSSPlugin = require('../../../../../node_modules/gsap/src/uncompressed/plugins/CSSPlugin.js'),
    TweenLite = require('../../../../../node_modules/gsap/src/uncompressed/TweenLite');

var template = require('./templates/profile.hbs');
Backbone.$ = jQuery;

function profile(){
    var events, view;

    // Backbone events for Card view
    events =  {
        "click #Logout": "logout",
        'click #ProfileHandle': 'ProfileHandle'
    };

    // Card View Object
    view  = {
        el: '#Profile',
        name: "Profile",
        template: template,
        events: events,
        logout: logout,
        ProfileHandle:ProfileHandle,
        hideProfile:hideProfile,
        render:render,
        initialize: initialize
    };

    function getInitials(firstName, lastName){
        return firstName[0]+lastName[0];

    }
    function ProfileHandle(evt){
        evt.preventDefault();
        evt.stopImmediatePropagation();
        var _elm = $('.ipg--profile');
        _elm.addClass('visible');
        var currentAnimation =  TweenLite.from(_elm, 0.12, {
            width: "40px",
            height: "40px",
            "border-radius":"100%",
            opacity:"0",
            clearProps: "width,height,opacity,border-radius",
            onComplete: function (){

            }
        });
    }

    function logout(evt){
        var scope = this
        evt.stopImmediatePropagation();
        this.$el.html('');
        this.model.set('logout', true);

        // We are already keeping track of active payment type
        // this.model.get('noncardModel').set('activePaymentMethod', 'card');
    }

    function hideProfile(e){
        var container = $('.ipg--customer--wrapper ')
        if (!container.is( e.target )
            && container.has(e.target).length === 0)
        {
            var _elm = $('.ipg--profile');
            var currentAnimation =  TweenLite.to(_elm, 0.12, {
                width: "30px",
                height: "30px",
                "border-radius":"100%",
                opacity:"0",
                clearProps: "width,height,border-radius,opacity",
                onComplete: function (){
                    $('.ipg--profile').removeClass('visible');

                }
            });
        }
    }

    function render (){
        var scope = this;
        var user =  this.model.get('walletModel').get('user') || this.model.get('walletModel').get('wallet_data').user;
        var userProfile = user;
        userProfile.channelProviderIsBBM = false;

        if(this.model.get('merchantModel').get('channelProvider') == "BBM"){

            var n = user.mobileNo;
            var maskedNum = "+" + n.slice(0,n.length-6) + "***" + n.slice(n.length-3);

            user.firstName = maskedNum;
            user.lastName = "";
            userProfile.initials = "BBM";
            userProfile.channelProviderIsBBM = true;

        }else{
            userProfile.initials = getInitials(user.firstName, user.lastName);

        }
        this.$el.html(template(userProfile));

    }

    function initialize(){
        var scope = this;
        this.render();
        $(document).on('click', function (evt){
            scope.hideProfile(evt);
        })
    }

    return Backbone.View.extend(view)
}

module.exports =  profile();


},{"../../../../../node_modules/gsap/src/uncompressed/TweenLite":3,"../../../../../node_modules/gsap/src/uncompressed/plugins/CSSPlugin.js":4,"./templates/profile.hbs":124,"backbone":1,"jquery":28,"underscore":32}],123:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<form class=\"ipg-form-container ipg-login-form-container \" autocomplete=\"off\" id=\"LoginForm\"  data-parsley-validate>\r\n    <div class=\"input-group float-label\">\r\n        <label>Email or Mobile Number</label>\r\n        <div class=\"input-control\">\r\n            <input type=\"text\"  name=\"username\" style=\"display:none\" />\r\n            <input type=\"text\" name=\"username\" value=\"\" class=\"input\" id=\"LoginUsername\"  autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\"\r\n                   required  data-parsley-pattern=\"(^\\d{9,}$)|([a-zA-Z0-9_\\.\\+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-\\.]+)\"\r\n                   data-parsley-required-message=\"Fill in your email or mobile number\"\r\n                   data-parsley-pattern-message=\"Fill in a valid email or mobile number\"\r\n                  />\r\n        </div>\r\n    </div>\r\n    <div class=\"input-group float-label\">\r\n        <label>Password</label>\r\n        <div class=\"input-control\">\r\n            <input type=\"text\"  name=\"password\" style=\"display:none\" />\r\n            <input type=\"password\" name=\"password\" value=\"\" class=\"input\" id=\"Password\"  autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" required\r\n                   data-parsley-required-message=\"Fill in your password\"\r\n                   />\r\n        </div>\r\n    </div>\r\n    <div class=\"container btn-group\">\r\n        <div class=\"ipg--back--container\">\r\n            <button class=\"btn-default btn\" type=\"button\" id=\"Back\">Back</button>\r\n        </div>\r\n        <div class=\"ipg--login--container\">\r\n                             \r\n\r\n            <button class=\"btn btn-primary\" type=\"submit\" id=\"loginBtn\"><span class=\"btn-text\">Login</span></button>\r\n        </div>\r\n    </div>\r\n</form>";
},"useData":true});

},{"hbsfy/runtime":24}],124:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers["if"].call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.channelProviderIsBBM : depth0),{"name":"if","hash":{},"fn":container.program(2, data, 0),"inverse":container.program(4, data, 0),"data":data})) != null ? stack1 : "");
},"2":function(container,depth0,helpers,partials,data) {
    return "                    <div class=\"menu-icon\"></div>\r\n";
},"4":function(container,depth0,helpers,partials,data) {
    var helper;

  return "                    <span class=\"profile--initials\">"
    + container.escapeExpression(((helper = (helper = helpers.initials || (depth0 != null ? depth0.initials : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : {},{"name":"initials","hash":{},"data":data}) : helper)))
    + "</span>\r\n";
},"6":function(container,depth0,helpers,partials,data) {
    return "                <span class=\"profile--initials\">QT</span>\r\n";
},"8":function(container,depth0,helpers,partials,data) {
    return "            <span></span>\r\n";
},"10":function(container,depth0,helpers,partials,data) {
    var helper;

  return "            <span class=\"profile--initials\">"
    + container.escapeExpression(((helper = (helper = helpers.initials || (depth0 != null ? depth0.initials : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : {},{"name":"initials","hash":{},"data":data}) : helper)))
    + "</span>\r\n";
},"12":function(container,depth0,helpers,partials,data) {
    return "            <a class=\"logout\" id=\"Logout\">Forget me</a>\r\n";
},"14":function(container,depth0,helpers,partials,data) {
    return "            <a class=\"logout\" id=\"Logout\">Not me</a>\r\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "<div class=\"\">\r\n    <div class=\"\">\r\n        <a id=\"ProfileHandle\" class=\"show-responsive\">\r\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.initials : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.program(6, data, 0),"data":data})) != null ? stack1 : "")
    + "        </a>\r\n        <div class=\"hidden-responsive\">\r\n            <div class=\"profile--initials\"><span>"
    + alias4(((helper = (helper = helpers.firstName || (depth0 != null ? depth0.firstName : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"firstName","hash":{},"data":data}) : helper)))
    + " "
    + alias4(((helper = (helper = helpers.lastName || (depth0 != null ? depth0.lastName : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"lastName","hash":{},"data":data}) : helper)))
    + "  <br/><a class=\"logout\"\r\n                                                                                     id=\"Logout\">Not me</a></span></div>\r\n        </div>\r\n    </div>\r\n    <div class=\"ipg--profile\">\r\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.channelProviderIsBBM : depth0),{"name":"if","hash":{},"fn":container.program(8, data, 0),"inverse":container.program(10, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n        <div class=\"ipg--customer--name-text\">\r\n            "
    + alias4(((helper = (helper = helpers.firstName || (depth0 != null ? depth0.firstName : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"firstName","hash":{},"data":data}) : helper)))
    + " <br/> "
    + alias4(((helper = (helper = helpers.lastName || (depth0 != null ? depth0.lastName : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"lastName","hash":{},"data":data}) : helper)))
    + "\r\n        </div>\r\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.channelProviderIsBBM : depth0),{"name":"if","hash":{},"fn":container.program(12, data, 0),"inverse":container.program(14, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n    </div>\r\n\r\n</div>\r\n";
},"useData":true});

},{"hbsfy/runtime":24}],125:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 2/1/2016.
 */
var jQuery = require('jquery'),
  Backbone = require('backbone'),
  _ = require('underscore');
var successTemplate = require('./templates/success.hbs');
var completeTemplate = require('./templates/complete.hbs');
var failedTemplate = require('./templates/failed.hbs');
var inlineTemplate = require('./templates/inline.hbs');
var TIMEOUT = require('../../config/app.timeout');
var UtilFunc = require('../../utils/utils.js');

var states = require('../utils/state_mixin');
var CSSPlugin = require('../../../../../node_modules/gsap/src/uncompressed/plugins/CSSPlugin.js'),
  TweenLite = require('../../../../../node_modules/gsap/src/uncompressed/TweenLite'),
  TimelineLite = require('../../../../../node_modules/gsap/src/uncompressed/TimelineLite');

Backbone.$ = jQuery;

function responseView() {
  var events, view, isErrorComplete;

  // Backbone events for main view
  events = {
    'click #Redirectback': 'redirectToMerchantPage',
    'click .forget-device-top': 'forgetDevice',
    'click .alert--error': 'removeErrorInstant'
  };
  // Main View Object
  view = {
    timeout: TIMEOUT.REDIRECT_TIMEOUT_INLINE,
    name: "Response",
    notify: notify,
    events: events,
    success: success,
    redirectTimeout: redirectTimeout,
    complete: complete,
    removeErrorInstant: removeErrorInstant,
    removeError: removeError,
    inlineError: inlineError,
    preparePostData: preparePostData,
    failed: failed,
    animateError: animateError,
    redirectToMerchantPage: redirectToMerchantPage,
    render: render,
    initialize: initialize,
    forgetDevice: forgetDevice
  };

  function success() {

  }

  function animateError() {
    var $elem = this.$el.find('.alert--error');
    var tl = new TimelineLite({
      onComplete: function () {
        TweenLite.to($elem, 0, { clearProps: "transform,opacity" });
      }
    });
    tl.staggerFrom($elem, 0.2, {
      opacity: "0.3",
      // transform: "translate3d(0,-10px,0)"
    });
  }

  function removeErrorInstant() {
    $('.alert--error').remove();
    this.resizeHeight();
  }


  function removeError() {
    var scope = this;
    isErrorComplete = setTimeout(function () {
      $('.alert--error').remove();
      scope.resizeHeight();
    }, scope.timeout);
  }

  function inlineError() {
    // var el = this.$el.find('.ipg--page.isvisible');
    var el = this.$el.find('.ipg--content--header--container');
    var elem = inlineTemplate(this.model.toJSON());
    el.find('.alert--error').remove();
    el.prepend(elem);
    this.animateError();

    if (isErrorComplete) {
      clearTimeout(isErrorComplete);
      isErrorComplete = undefined
    }
    this.removeError();

  }

  function preparePostData(model) {
    var ref = this.model.get('paymentResponse') ?
      this.model.get('paymentResponse').transactionReference ?
        this.model.get('paymentResponse').transactionReference :
        this.model.get('complete_model').get('merchantModel').get('merchantTransactionReference') :
      this.model.get('complete_model').get('merchantModel').get('merchantTransactionReference');

    if (this.model.get('notification_type') && this.model.get('notification_type') == 'COMPLETE') {
      return {
        url: this.model.get('complete_model').get('merchantModel').get('siteRedirectUrl'),
        txnref: ref,
        resp: this.model.get('paymentResponse').responseCode,
        desc: this.model.get('paymentResponse').responseDescription,
        retRef: this.model.get('paymentResponse').retrievalReferenceNumber,
        apprAmt: this.model.get('paymentResponse').amount,
        amount: this.model.get('paymentResponse').approvedAmount,
        payRef: this.model.get('paymentResponse').channelTransactionReference,
        bpResp: this.model.get('paymentResponse').bpResp,
        bpTrxnRef: this.model.get('paymentResponse').bpTrxnRef,
        rechPin: this.model.get('paymentResponse').rechPin,
        cardNum: "",
        mac: ""
      };
    }

    return {
      url: this.model.get('complete_model').get('merchantModel').get('siteRedirectUrl'),
      txnref: ref,
      resp: this.model.get('paymentResponse').responseCode,
      desc: this.model.get('paymentResponse').responseDescription,
      retRef: "",
      apprAmt: this.model.get('complete_model').get('merchantModel').get('amount'),
      amount: this.model.get('complete_model').get('merchantModel').get('amount'),
      payRef: "",
      cardNum: "",
      mac: ""
    }
  }

  function failed() {
    var el = this.$el.find('.ipg--content--container');
    this.model.set('merchantName', window.IpgApp.merchantName);
    var elem = failedTemplate(this.model.toJSON());
    el.prepend(elem);
  }

  function complete() {
    var el = this.$el.find('.ipg--content--container'),
      paymentResponse = this.model.get('paymentResponse');
    paymentResponse.earnLoyaltyResponse = paymentResponse.earnLoyaltyResponse || {};
    this.model.set('merchantName', window.IpgApp.merchantName);
    if (paymentResponse.earnLoyaltyResponse.isLoyaltyDiscountSuccessful) {
      this.model.set('discountedMajorAmount', paymentResponse.earnLoyaltyResponse.discountedAmount / 100);
    }
    var templateData = this.model.toJSON();

    if (this.model.get('complete_model').get('payModel').has('transactionWasFP')) {
      templateData.showSecureLock = true
    }

    var elem = completeTemplate(templateData);
    el.prepend(elem);
  }

  function render() {

  }

  function redirectTimeout() {
    var timeOutValue = TIMEOUT.REDIRECT_TIMEOUT;
    if (false) {
      timeOutValue = TIMEOUT.FINGERPRINT_REDIRECT_TIMEOUT;
    }
    var scope = this;
    var _interval;
    scope._time = (timeOutValue - 1000) / 1000;
    scope.timeTaken = (timeOutValue - 1000) / 1000;

    el = this.$el.find('#ResponseTimer');
    el.html(scope.timeTaken);
    _interval = setInterval(timer, 1000);

    var circle = $('#Circle');
    var radius = 80;

    scope.redirectId = setTimeout(function () {
      scope.redirectToMerchantPage();
    }, timeOutValue);

    function timer() {
      if (scope.timeTaken == 0) {
        clearInterval(_interval);
      }
      angle = parseInt((scope._time - scope.timeTaken) * (2 * Math.PI * radius) / scope._time);
      circle.attr("stroke-dasharray", angle + ", 20000");
      el.html(scope.timeTaken--);
    }
  }

  function notify() {
    var scope = this,
      paymentResponse = this.model.get('paymentResponse');
    var notificationType = this.model.get('notification_type');

    this.model.set('symbol', this.model.get('complete_model').get('merchantModel').get('currencySymbol'));
    switch (notificationType) {
      case 'INLINE':
        this.inlineError();
        break;
      case 'INLINE_SUCCESS':
        this.success();
        break;
      case 'FAILED':
        this.failed();
        break;
      case 'FAILED_NO_REDIRECT':
        this.failed();
        break;
      case 'COMPLETE':
        paymentResponse.earnLoyaltyResponse = paymentResponse.earnLoyaltyResponse || {};
        scope.model.set('isEarnedPoint', paymentResponse.earnLoyaltyResponse.isLoyaltyDiscountSuccessful || paymentResponse.earnLoyaltyResponse.isRedeemPointsSuccessful);
        this.complete();

        break;
    }

    if ((notificationType === 'FAILED') || (notificationType === 'COMPLETE')) {
      scope.postData = this.preparePostData(this.model);
      if (UtilFunc.detectMobileDevice().Opera()) {
        $('.ipg--page.isvisible').remove();
      }

      if (scope.model.get('isEarnedPoint')) {
        return;
      }
      scope.redirectTimeout();

      return;
    }
    this.model.get('complete_model').set('resize', true);
  }

  function redirectToMerchantPage() {
    if (this.redirectCalled) { return };
    this.redirectCalled = true;

    window.webpayAllowCancellation = false;

    if (this.postData) {
      $('#MerchantRedirect').trigger('redirect', this.postData);
    }
  }

  function initialize() {
    this.redirectCalled = false;
  }

  function forgetDevice() {
    var scope = this;

    if (scope.ignoreForget) {
      return;
    }
    scope.ignoreForget = true;

    clearTimeout(scope.redirectId);
    scope.timeTaken = (TIMEOUT.REDIRECT_TIMEOUT - 1000) / 1000;
    scope._time = (TIMEOUT.REDIRECT_TIMEOUT - 1000) / 1000;

    scope.redirectId = setTimeout(function () {
      scope.redirectToMerchantPage();
    }, TIMEOUT.REDIRECT_TIMEOUT);

    scope.$el.find('.forget-device-check').addClass('enabled');
    scope.$el.find('#Redirectback').attr('disabled', true);

    setTimeout(function () {
      scope.$el.find('#Redirectback').attr('disabled', false);
    }, 3500);

  }

  return Backbone.View.extend(view)
}

module.exports = responseView();
},{"../../../../../node_modules/gsap/src/uncompressed/TimelineLite":2,"../../../../../node_modules/gsap/src/uncompressed/TweenLite":3,"../../../../../node_modules/gsap/src/uncompressed/plugins/CSSPlugin.js":4,"../../config/app.timeout":38,"../../utils/utils.js":71,"../utils/state_mixin":135,"./templates/complete.hbs":126,"./templates/failed.hbs":127,"./templates/inline.hbs":128,"./templates/success.hbs":129,"backbone":1,"jquery":28,"underscore":32}],126:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(container,depth0,helpers,partials,data) {
    return "            <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"57px\" height=\"53px\" viewBox=\"0 0 57 53\" version=\"1.1\">\r\n                <!-- Generator: Sketch 41.2 (35397) - http://www.bohemiancoding.com/sketch -->\r\n                <title>Group 9</title>\r\n                <desc>Created with Sketch.</desc>\r\n                <defs/>\r\n                <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\r\n                    <g id=\"Group-9\">\r\n                        <circle id=\"Mask\" fill=\"#9EC75C\" cx=\"26\" cy=\"26\" r=\"26\"/>\r\n                        <path d=\"M56.4925635,51.389274 C56.4925635,51.9251088 56.0623351,52.3649953 55.5362458,52.3649953 L41.9564383,52.3649953 C41.4302284,52.3649953 41,51.9251088 41,51.389274 L41,39.9757213 C41,39.4381643 41.4302284,39 41.9564383,39 L55.5362458,39 C56.0623351,39 56.4925635,39.4381643 56.4925635,39.9757213 L56.4925635,51.389274\" id=\"Fill-8\" fill=\"#F8CF37\"/>\r\n                        <path d=\"M44.9178203,39.2216697 L44.9178203,37.0681204 C44.9178203,34.8016473 46.7248278,32.956363 48.9466296,32.956363 L49.0951838,32.956363 C51.3169855,32.956363 53.123993,34.8016473 53.123993,37.0681204 L53.123993,39.2216697 L55.0419339,39.2216697 L55.0419339,37.0681204 C55.0419339,33.7213669 52.3742284,31 49.0951838,31 L48.9466296,31 C45.6677055,31 43,33.7213669 43,37.0681204 L43,39.2216697 L44.9178203,39.2216697\" id=\"Fill-9\" fill=\"#DADAD5\"/>\r\n                        <path d=\"M50.2815443,45.1839329 C50.2815443,43.9773204 49.3235386,43 48.1407722,43 C46.9572823,43 46,43.9773204 46,45.1839329 C46,46.1259492 46.5864997,46.9213368 47.4057183,47.2280026 L47.4057183,50.1416353 L48.8759467,50.1416353 L48.8759467,47.2280026 C49.6952858,46.9213368 50.2815443,46.1259492 50.2815443,45.1839329\" id=\"Fill-10\" fill=\"#DBA62F\"/>\r\n                        <path d=\"M33.0503596,16.3130375 L23.9996273,32.3877434 L18.5090178,29.6724868 C18.1310178,29.2724868 17.4980178,29.2524868 17.0950178,29.6324868 C16.6920178,30.0024868 16.6710178,30.6424868 17.0490178,31.0424868 L23.5336273,34.6777434 C23.9106273,35.0777434 24.5436273,35.0977434 24.9466273,34.7177434 C25.0686273,34.6077434 34.7823596,17.3130375 34.7823596,17.3130375 C35.0583596,16.8430375 34.8943596,16.2230375 34.4163596,15.9530375 C33.9373596,15.6730375 33.3263596,15.8430375 33.0503596,16.3130375 Z\" id=\"checkmark-square\" stroke=\"#FFFFFF\" fill=\"#FFFFFF\" transform=\"translate(25.847492, 25.404069) rotate(17.000000) translate(-25.847492, -25.404069) \"/>\r\n                    </g>\r\n                </g>\r\n            </svg>\r\n";
},"3":function(container,depth0,helpers,partials,data) {
    return "            <svg  viewBox=\"0 0 256 256\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\">\r\n                <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\">\r\n                    <g id=\"Success---Approve\" sketch:type=\"MSArtboardGroup\">\r\n                        <g id=\"Oval-65-Copy-2-+-Shape-Copy\" sketch:type=\"MSLayerGroup\" transform=\"translate(19.000000, 19.000000)\">\r\n                            <circle id=\"Oval-65-Copy-2\" fill=\"#9EC75C\" sketch:type=\"MSShapeGroup\" cx=\"110.5\" cy=\"110.5\" r=\"110.5\"></circle>\r\n                            <path d=\"M92.908561,138.293208 L66.7025501,112.207963 L57.9672131,120.903044 L92.908561,155.683372 L167.782878,81.1540984 L159.047541,72.4590164 L92.908561,138.293208 Z\" id=\"Shape-Copy\" fill=\"#FFFFFF\" sketch:type=\"MSShapeGroup\"></path>\r\n                        </g>\r\n                    </g>\r\n                </g>\r\n            </svg>\r\n";
},"5":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : {};

  return ((stack1 = helpers["if"].call(alias1,((stack1 = ((stack1 = (depth0 != null ? depth0.paymentResponse : depth0)) != null ? stack1.earnLoyaltyResponse : stack1)) != null ? stack1.isLoyaltyDiscountSuccessful : stack1),{"name":"if","hash":{},"fn":container.program(6, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers["if"].call(alias1,((stack1 = ((stack1 = (depth0 != null ? depth0.paymentResponse : depth0)) != null ? stack1.earnLoyaltyResponse : stack1)) != null ? stack1.isRedeemPointsSuccessful : stack1),{"name":"if","hash":{},"fn":container.program(8, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"6":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "                            <div class=\"ipg--receipt--sub\">\r\n                                <div class=\"ipg--receipt--sub--header\">\r\n                                    \r\n                                    Congrats! You got a discount of\r\n                                \r\n                                </div>\r\n                                <div class=\"ipg--receipt--sub--body\">\r\n                                   "
    + alias4(((helper = (helper = helpers.symbol || (depth0 != null ? depth0.symbol : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"symbol","hash":{},"data":data}) : helper)))
    + " "
    + alias4(((helper = (helper = helpers.discountedMajorAmount || (depth0 != null ? depth0.discountedMajorAmount : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"discountedMajorAmount","hash":{},"data":data}) : helper)))
    + "\r\n                                </div>\r\n                            </div>\r\n";
},"8":function(container,depth0,helpers,partials,data) {
    var stack1, helper, alias1=container.escapeExpression;

  return "                                 <div class=\"ipg--receipt--sub\">\r\n                                    <div class=\"ipg--receipt--sub--header\">\r\n                                        Congrats! You have earned verve reward points worth\r\n                                    </div>\r\n                                    <div class=\"ipg--receipt--sub--body\">\r\n                                        "
    + alias1(((helper = (helper = helpers.symbol || (depth0 != null ? depth0.symbol : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : {},{"name":"symbol","hash":{},"data":data}) : helper)))
    + alias1(container.lambda(((stack1 = ((stack1 = (depth0 != null ? depth0.paymentResponse : depth0)) != null ? stack1.earnLoyaltyResponse : stack1)) != null ? stack1.earnedPoints : stack1), depth0))
    + "\r\n                                    </div>\r\n                                </div>\r\n";
},"10":function(container,depth0,helpers,partials,data) {
    var helper;

  return "                      <div class=\"ipg--receipt--redirect--stmt\">\r\n                        <div class=\"\">\r\n                            Returning to "
    + container.escapeExpression(((helper = (helper = helpers.merchantName || (depth0 != null ? depth0.merchantName : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : {},{"name":"merchantName","hash":{},"data":data}) : helper)))
    + " in <br>\r\n                            <div class=\"timer--wrapper\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"0 0 200 200\" preserveAspectRatio=\"none\" style=\"\">\r\n                                    <circle cx=\"100\" cy=\"100\" r=\"80\" id=\"Circle\" fill=\"none\" stroke=\"#00B8DE\" stroke-width=\"7\" stroke-dasharray=\"0, 20000\" transform=\"rotate(-90,100,100)\"></circle>\r\n                                    <text id=\"ResponseTimer\" text-anchor=\"middle\" x=\"90\" y=\"120\" style=\"font-size: 70px;\">0</text>\r\n                                    <text text-anchor=\"middle\" x=\"135\" y=\"120\" style=\"font-size: 45px;\">s</text>\r\n                                </svg>\r\n                            </div>\r\n                        </div>\r\n                     </div>\r\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, helper, alias1=depth0 != null ? depth0 : {};

  return "\r\n<div  class=\"ipg--recipt--wrapper\">\r\n    <div class=\"ipg--recipt--overlay\"></div>\r\n    <div class=\"ipg--recipt--content\">\r\n        <div class=\"ipg--success--icon\">\r\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.showSecureLock : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.program(3, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n\r\n        </div>\r\n        <h1 class=\"ipg--receipt--content--header\">Transaction Successful</h1>\r\n        <div>\r\n            <div>\r\n                <div class=\"ipg--receipt--content--body\">\r\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.isEarnedPoint : depth0),{"name":"if","hash":{},"fn":container.program(5, data, 0),"inverse":container.program(10, data, 0),"data":data})) != null ? stack1 : "")
    + "\r\n                </div>\r\n\r\n                <!--\r\n                <div class=\"forget-device\">\r\n                    <div class=\"forget-device-top\">\r\n                        <div class=\"forget-device-check-wrapper\">\r\n                            <div class=\"forget-device-check\"></div>\r\n                        </div>\r\n                        <span>Forget this device</span>\r\n                    </div>\r\n                    <div class=\"forget-device-bottom\">\r\n                        You will not need an OTP to complete  subsequent transcations on this device.\r\n                    </div>\r\n                </div>\r\n                -->\r\n\r\n                <div>\r\n                    <button class=\"btn btn-primary smaller\" id=\"Redirectback\">Return to "
    + container.escapeExpression(((helper = (helper = helpers.merchantName || (depth0 != null ? depth0.merchantName : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(alias1,{"name":"merchantName","hash":{},"data":data}) : helper)))
    + "</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n";
},"useData":true});

},{"hbsfy/runtime":24}],127:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "\r\n<div  class=\"ipg--recipt--wrapper\">\r\n    <div class=\"ipg--recipt--overlay\"></div>\r\n    <div class=\"ipg--recipt--content\">\r\n        <div class=\"ipg--success--icon\">\r\n            <svg viewBox=\"0 0 256 256\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\">\r\n                <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\">\r\n                    <g id=\"Attention---Alert\" sketch:type=\"MSArtboardGroup\">\r\n                        <g id=\"ic_battery_alert_48px\" sketch:type=\"MSLayerGroup\" transform=\"translate(20.000000, 20.000000)\">\r\n                            <circle id=\"Oval-65\" fill=\"#F6A623\" sketch:type=\"MSShapeGroup\" cx=\"110\" cy=\"110\" r=\"110\"></circle>\r\n                            <path d=\"M123.303889,168.835472 L99.7761111,168.835472 L99.7761111,145.396478 L123.303889,145.396478 L123.303889,168.835472 L123.303889,168.835472 Z\" id=\"Path\" fill=\"#FFFFFF\" sketch:type=\"MSShapeGroup\"></path>\r\n                            <path d=\"M123.303889,121.957484 L99.7761111,121.957484 L99.7761111,63.36 L123.303889,63.36 L123.303889,121.957484 L123.303889,121.957484 Z\" id=\"Path\" fill=\"#FFFFFF\" sketch:type=\"MSShapeGroup\"></path>\r\n                        </g>\r\n                    </g>\r\n                </g>\r\n            </svg>\r\n        </div>\r\n        <h1 class=\"ipg--receipt--content--header\">Transaction Failed</h1>\r\n        <div>\r\n            <div>\r\n                <div class=\"ipg--receipt--content--body\">\r\n                    "
    + alias4(((helper = (helper = helpers.message || (depth0 != null ? depth0.message : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"message","hash":{},"data":data}) : helper)))
    + "\r\n                    <br/>\r\n                     <div class=\"ipg--receipt--redirect--stmt\">\r\n                        <div class=\"\">\r\n                            Returning to "
    + alias4(((helper = (helper = helpers.merchantName || (depth0 != null ? depth0.merchantName : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"merchantName","hash":{},"data":data}) : helper)))
    + " in <br>\r\n                            <div class=\"timer--wrapper\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"0 0 200 200\" preserveAspectRatio=\"none\" style=\"\">\r\n                                    <circle cx=\"100\" cy=\"100\" r=\"80\" id=\"Circle\" fill=\"none\" stroke=\"#00B8DE\" stroke-width=\"7\" stroke-dasharray=\"0, 20000\" transform=\"rotate(-90,100,100)\"></circle>\r\n                                    <text id=\"ResponseTimer\" text-anchor=\"middle\" x=\"90\" y=\"120\" style=\"font-size: 70px;\">0</text>\r\n                                    <text text-anchor=\"middle\" x=\"135\" y=\"120\" style=\"font-size: 45px;\">s</text>\r\n                                </svg>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <button class=\"btn btn-primary smaller\" id=\"Redirectback\">Return to "
    + alias4(((helper = (helper = helpers.merchantName || (depth0 != null ? depth0.merchantName : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"merchantName","hash":{},"data":data}) : helper)))
    + "</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>";
},"useData":true});

},{"hbsfy/runtime":24}],128:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, helper;

  return "<div class=\"alert alert--error\">\r\n    <div class=\"alert--icon\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\"\r\n            y=\"0px\" width=\"357px\" height=\"357px\" viewBox=\"0 0 357 357\" style=\"enable-background:new 0 0 357 357;\"\r\n            xml:space=\"preserve\">\r\n            <g>\r\n                <g id=\"close\">\r\n                    <polygon points=\"357,35.7 321.3,0 178.5,142.8 35.7,0 0,35.7 142.8,178.5 0,321.3 35.7,357 178.5,214.2 321.3,357 357,321.3     214.2,178.5   \" />\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    </div>\r\n\r\n    <div class=\"alert--msg\">\r\n        "
    + ((stack1 = ((helper = (helper = helpers.message || (depth0 != null ? depth0.message : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : {},{"name":"message","hash":{},"data":data}) : helper))) != null ? stack1 : "")
    + "\r\n    </div>\r\n\r\n</div>";
},"useData":true});

},{"hbsfy/runtime":24}],129:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var helper;

  return "<div  class=\"ipg--recipt--wrapper\">\r\n    <div class=\"ipg--recipt--overlay\"></div>\r\n    <div class=\"ipg--recipt--content\">\r\n        <div class=\"ipg--success--icon\">\r\n            <svg viewBox=\"0 0 256 256\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\">\r\n                <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\">\r\n                    <g id=\"Attention---Alert\" sketch:type=\"MSArtboardGroup\">\r\n                        <g id=\"ic_battery_alert_48px\" sketch:type=\"MSLayerGroup\" transform=\"translate(20.000000, 20.000000)\">\r\n                            <circle id=\"Oval-65\" fill=\"#F6A623\" sketch:type=\"MSShapeGroup\" cx=\"110\" cy=\"110\" r=\"110\"></circle>\r\n                            <path d=\"M123.303889,168.835472 L99.7761111,168.835472 L99.7761111,145.396478 L123.303889,145.396478 L123.303889,168.835472 L123.303889,168.835472 Z\" id=\"Path\" fill=\"#FFFFFF\" sketch:type=\"MSShapeGroup\"></path>\r\n                            <path d=\"M123.303889,121.957484 L99.7761111,121.957484 L99.7761111,63.36 L123.303889,63.36 L123.303889,121.957484 L123.303889,121.957484 Z\" id=\"Path\" fill=\"#FFFFFF\" sketch:type=\"MSShapeGroup\"></path>\r\n                        </g>\r\n                    </g>\r\n                </g>\r\n            </svg>\r\n        </div>\r\n        <h1 class=\"ipg--receipt--content--header\">Transaction Failed</h1>\r\n        <div>\r\n            <div>\r\n                <div class=\"ipg--receipt--content--body\">\r\n                    "
    + container.escapeExpression(((helper = (helper = helpers.message || (depth0 != null ? depth0.message : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : {},{"name":"message","hash":{},"data":data}) : helper)))
    + "\r\n                    <br/>\r\n                </div>\r\n\r\n                <div>\r\n                    <button class=\"btn btn-primary\" id=\"Redirectback\">Continue</button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    </div>\r\n</div>";
},"useData":true});

},{"hbsfy/runtime":24}],130:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 1/29/2016.
 */

var jQuery = require('jquery'),
    Backbone = require('backbone'),
    _ = require('underscore');
var template = require('./templates/rewards.hbs');
var ButtonLoader = require('../utils/button_loader');
var Utils = require('../../utils/utils');
var Func = require('../../utils/functions');
var TokenOTP = require('../card/token_otp');
var TokenCardinal = require('../card/token_cardinal');
var Response = require('../../models/response_model');

require('../card/card_mixin');
require('../../utils/jquery-ui.min.js');
require('../../utils/jquery.ui.touch-punch.js');

Backbone.$ = jQuery;

function rewards() {
    var events, view;

    // Backbone events for main view
    events = {
        'slidestop #AmountPicker': 'reactToSlider',
        'keyup #RewardInput': 'reactToInput',
        'keydown #RewardInput': 'reactToInput',
        'click #Back': 'goBack',
        'submit #RewardPayBtn': 'payWithRewards',

    };

    // Main View Object
    view = {
        el: '#PageRewards',
        name: "Rewards",
        template: template,
        events: events,
        reactToInput: reactToInput,
        reactToSlider: reactToSlider,
        getRewardAmountFromPercentage: getRewardAmountFromPercentage,
        getPercentageFromRewardAmount: getPercentageFromRewardAmount,
        payWithRewards: payWithRewards,
        getAmount: getAmount,
        goBack: goBack,
        isOTP: isOTP,
        isCardinal: isCardinal,
        isCardinalRegistration: isCardinalRegistration,
        render: render,
        initialize: initialize
    };


    function getRewardAmountFromPercentage(percentage) {
        var displayAmount;
        var merchantAmount = this.model.get('merchantModel').get('convertedAmount');
        var difference = this.rewardsBalance - merchantAmount;
        if (difference >= 0) {
            return parseInt(merchantAmount * (percentage / 100));
        } else {
            return parseInt(this.rewardsBalance * (percentage / 100));
        }
    }


    function getPercentageFromRewardAmount(rewardAmount) {
        var merchantAmount = this.model.get('merchantModel').get('convertedAmount');
        //ideal condition for rewards
        var difference = this.rewardsBalance - merchantAmount;
        if (difference >= 0) {
            return (rewardAmount / merchantAmount) * 100;
        } else {
            return (rewardAmount / this.rewardsBalance) * 100;
        }
    }


    function isNumber(evt) {
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        return true;
    }


    function reactToInput(evt) {
        var a = [8];
        var k = evt.which;



        if (!isNumber(evt)) {
            evt.preventDefault();
            return false;
        }
        //var rewardInputElem;
        var merchantAmount = this.model.get('merchantModel').get('convertedAmount');
        var rewardInput = this.$el.find(evt.target);
        var percent = this.getPercentageFromRewardAmount(rewardInput.val());
        this.$el.find('#AmountPicker').slider("value", percent);
        if (this.$el.find('#RewardInput').val() >= merchantAmount) {
            this.$el.find('#RewardInput').val(this.getRewardAmountFromPercentage(percent > 100 ? 100 : percent));
        }
        var rewardInputVal = this.$el.find('#RewardInput').val();
        // float number
        if (Utils.is_float(Number(rewardInputVal))) {
            this.$el.find('#RewardInput').val(parseInt(rewardInputVal));
        }
        if (percent === 0) {
            this.$el.find('#RewardInput').val('');
        }
        this.getAmount();

    }

    function reactToSlider(event, ui) {
        this.$el.find('#RewardInput').val(this.getRewardAmountFromPercentage(ui.value));
        this.getAmount();
    }

    function isOTP(paymentResponse) {
        return paymentResponse.responseCode == 'T0' && !paymentResponse.requiresCentinelAuthorization;
    }

    function isCardinal(paymentResponse) {
        return paymentResponse.responseCode == 'T0' && paymentResponse.requiresCentinelAuthorization;
    }

    function isCardinalRegistration(paymentResponse) {
        return paymentResponse.responseCode == 'T1' && paymentResponse.requiresCentinelAuthorization && paymentResponse.requiresRegistration;
    }

    function payWithRewards(evt) {
        evt.preventDefault();
        evt.stopImmediatePropagation();

        if(this.model.get('payModel').has('rewardMoney')){
            this.model.get('payModel').unset('rewardMoney');
        }

        var scope = this;
        var payPromise;
        var rewardInputElem = this.$el.find('#RewardInput');
        var rewardInputVal = rewardInputElem.length ? rewardInputElem.val().trim() : '';
        var buttonLoader = new ButtonLoader({ el: scope.$el.find('button[type=submit]') });

        if (rewardInputVal && rewardInputVal > 0) {
            this.model.get('payModel').set('rewardMoney', parseInt(rewardInputVal));
        }

        payPromise = this.model.get('payModel').payWithCard();
        payPromise.success(function(paymentResponse) {
            buttonLoader.resetButton('Continue');
            scope.model.get('cardModel').set('payment', paymentResponse);
            if (scope.isOTP(paymentResponse)) {
                scope.model.set('page_proceed', TokenOTP);
                return;
            }

            if (scope.isCardinal(paymentResponse)) {
                scope.model.get('cardModel').set('cardinal', paymentResponse.cardinalInfo);
                scope.model.set('page_proceed', TokenCardinal);
                return;
            }


            if (paymentResponse.responseCode == 'T1') {
                if (paymentResponse.requiresRegistration) {
                    paymentResponse.responseTag = 'PAYMENT_TOKEN_REG'
                } else if (scope.isCardinalRegistration(paymentResponse)) {
                    paymentResponse.responseTag = 'PAYMENT_TOKEN_CARDINAL_REG'
                } else {
                    paymentResponse.responseTag = 'PAYMENT_TOKEN_ERROR';
                }
            }

            paymentResponse = scope.getBillPaymentResponse(paymentResponse);
            var responseHandler = new Response('payment', paymentResponse);
            var response = responseHandler.getResponse();
            scope.model.set('responseData', response.model());
        });

        payPromise.error(function(error) {
            buttonLoader.resetButton('Continue');
            var data = JSON.parse(error.responseText);
            var responseHandler = new Response('payment', data);

            var response = responseHandler.getResponse();
            scope.model.set('responseData', response.model());
        });
    }

    function getAmount() {

        var merchantAmount = this.model.get('merchantModel').get('convertedAmount');

        var remainingAmount = this.$el.find('#RewardInput');

        var amount = this.model.get('merchantModel').get('currencySymbol') + Func.getAmount((merchantAmount - remainingAmount.val()).toFixed(2));

        $('#MerchantAmount').html(amount);
    }

    function goBack() {
        this.model.set('page_back', true);
    }

    function render() {
        var scope = this;
        var template = this.template;
        var rewardPercentage = 0;
        var reward = this.model.get('rewardModel');
        var formatedRewardMoney = Func.getAmount(reward.get('rewardMoney'));
        var currencySymbol = this.model.get('merchantModel').get('currencySymbol');
        this.model.get('rewardModel').set('formatedRewardMoney', formatedRewardMoney);
        this.model.get('rewardModel').set('symbol', currencySymbol);
        scope.$el.html(template(reward.toJSON()));
        scope.rewardsBalance = reward.get('rewardMoney');
        scope.$el.find('#RewardMoney').html(reward.rewardMoney);
        scope.$el.find('#AmountPicker').slider({
            range: "min",
            value: reward.get('rewardPercentages')[0],
            orientation: "horizontal",
            animate: true
        });
        scope.$el.find('#RewardInput').val(scope.getRewardAmountFromPercentage(reward.get('rewardPercentages')[0]))
        this.getAmount();
    }

    function initialize() {
        this.render();
    }

    return Backbone.View.extend(view)
}
module.exports = rewards();

},{"../../models/response_model":60,"../../utils/functions":65,"../../utils/jquery-ui.min.js":66,"../../utils/jquery.ui.touch-punch.js":68,"../../utils/utils":71,"../card/card_mixin":78,"../card/token_cardinal":113,"../card/token_otp":114,"../utils/button_loader":132,"./templates/rewards.hbs":131,"backbone":1,"jquery":28,"underscore":32}],131:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, helper, alias1=depth0 != null ? depth0 : {}, alias2=helpers.helperMissing, alias3="function";

  return "    <form id=\"RewardPayBtn\">\r\n    <div class=\"ipg--rewards--container\">\r\n\r\n        <div class=\"ipg--rewards--header text-align-center\">\r\n\r\n            <div class=\"title-label\">Your Verve Reward Balance </div>\r\n            <div class=\"ipg--rewards--amount\">\r\n               <span id=\"RewardMoney\"><small>"
    + ((stack1 = ((helper = (helper = helpers.symbol || (depth0 != null ? depth0.symbol : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"symbol","hash":{},"data":data}) : helper))) != null ? stack1 : "")
    + "</small>"
    + container.escapeExpression(((helper = (helper = helpers.formatedRewardMoney || (depth0 != null ? depth0.formatedRewardMoney : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"formatedRewardMoney","hash":{},"data":data}) : helper)))
    + "</span>\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"reward--content--wrapper\">\r\n            <div class=\"reward-text text-align-center\">\r\n                \r\n               Slide to choose how much Verve Reward to spend\r\n            \r\n            </div>\r\n            <div class=\"slider-wrapper\">\r\n                <div id=\"AmountPicker\"></div>\r\n            </div>\r\n            <div class=\"slider-amount-wrapper \">\r\n                <table class=\"reward--table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th > <div class=\"reward--table--heading\">Your Verve Money</div></th>\r\n                            <th> <div class=\"reward--table--heading\">Your Card Payment</div></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                   <div>\r\n                                        "
    + ((stack1 = ((helper = (helper = helpers.symbol || (depth0 != null ? depth0.symbol : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"symbol","hash":{},"data":data}) : helper))) != null ? stack1 : "")
    + "<input type=\"text\"  id=\"RewardInput\" class=\"reward-amount-input\"/>\r\n                                   </div>\r\n                            </td>\r\n                            <td>\r\n                                   <div>\r\n                                        <b id=\"MerchantAmount\"></b> \r\n                                  </div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n                <div class=\"container btn-group\">\r\n                    <div class=\"ipg--back--container\">\r\n                        <button class=\"btn-default btn\" type=\"button\" id=\"Back\">Back</button>\r\n                    </div>\r\n                    <div class=\"ipg--login--container\">\r\n                        <button class=\"btn btn-primary\" type=\"submit\"><span class=\"btn-text\">Continue</span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    </form>";
},"useData":true});

},{"hbsfy/runtime":24}],132:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 1/29/2016.
 */

var jQuery = require('jquery'),
    Backbone = require('backbone'),
    _ = require('underscore');

var template = require('./templates/button_loader.hbs');
var CSSPlugin = require('../../../../../node_modules/gsap/src/uncompressed/plugins/CSSPlugin.js'),
    TweenLite = require('../../../../../node_modules/gsap/src/uncompressed/TweenLite'),
    Utils = require('../../utils/utils.js');

Backbone.$ = jQuery;

function buttonLoader() {
    var events, view, isReset = false;

    // Backbone events for main view
    events = {

    };
    // Main View Object
    view = {
        name: "ButtonLoader",
        template: template,
        event: events,
        resetButton: resetButton,
        render: render,
        initialize: initialize
    };

    function resetButton(text) {
        isReset = true;
        this.$el.find('.btn-text').show();
        this.$el.attr('disabled', false);
        $('.btn').attr('disabled', false);
        this.$el.removeClass('isloader-added');
        if (!Utils.detectMobileDevice().Opera()) {
            this.rotate.kill();
            this.$el.find('.ipg--loader').remove()
        }
    }

    function render() {
        var scope = this;
         this.$el.attr('disabled', true);
        $('.btn').attr('disabled', true);
        if (!Utils.detectMobileDevice().Opera()) {

            this.$el.find('.btn-text').hide();
            if (!this.$el.hasClass('isloader-added')) {
                this.$el.append(this.template({ baseUrl: window.IpgApp.baseUrl }));
                this.$el.addClass('isloader-added');
            }

            var loaderPath = scope.$el.find('#LoaderPath');
            this.rotate = Utils.rotate(loaderPath);
        }
       
    }


    function initialize() {
        this.submitText = "";
        this.render();
    }

    return Backbone.View.extend(view)
}

module.exports = buttonLoader();


},{"../../../../../node_modules/gsap/src/uncompressed/TweenLite":3,"../../../../../node_modules/gsap/src/uncompressed/plugins/CSSPlugin.js":4,"../../utils/utils.js":71,"./templates/button_loader.hbs":136,"backbone":1,"jquery":28,"underscore":32}],133:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 2/9/2016.
 */

window.jQuery = $ = jQuery = require('jquery');
var Backbone = require('backbone'),
    _ = require('underscore');

var CSSPlugin = require('../../../../../node_modules/gsap/src/uncompressed/plugins/CSSPlugin.js'),
    TweenLite = require('../../../../../node_modules/gsap/src/uncompressed/TweenLite'),
    Utils = require('../../utils/utils');



Backbone.$ = jQuery;

function floatLabels() {
    var mixin = {
        floatLabel: floatLabel,
    };


    function floatLabelBlur(evt) {
        var currentElement = $(evt.target);
        var floatLabelParent = currentElement.parents('.float-label');
        if (!currentElement.val()) {
            floatLabelParent.find('label').removeClass('onfocus');
        }
    }

    function floatLabelKeyPress(evt) {
        var currentElement = $(evt.target);
        var floatLabelParent = currentElement.parents('.float-label');
        floatLabelParent.find('label').addClass('onfocus');
    }

    function floatLabel() {
        var scope = this;

        if (Utils.detectMobileDevice().any()) {
            this.$el.find('.float-label').each(function() {
                var currentElement = $(this);
                currentElement.find('label').addClass('onfocus');
            });
            return false;
        }

        this.$el.find('.float-label').each(function() {
            var currentElement = $(this);
            if (currentElement.find('input:visible').val()) {
                currentElement.find('label').addClass('onfocus');
            }
        });
        this.$el.find('.float-label input').on({
            focus: floatLabelKeyPress
        });

        this.$el.find('.float-label label').on('click', function(evt) {
            $(this).parents('.float-label').find('input:visible').trigger('focus');
        });
        this.$el.find('.float-label input').on('blur', floatLabelBlur);


    }

    _.extend(Backbone.View.prototype, mixin);

    return Backbone.View;
}
module.export = floatLabels();

},{"../../../../../node_modules/gsap/src/uncompressed/TweenLite":3,"../../../../../node_modules/gsap/src/uncompressed/plugins/CSSPlugin.js":4,"../../utils/utils":71,"backbone":1,"jquery":28,"underscore":32}],134:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 1/29/2016.
 */

var jQuery = require('jquery'),
    Backbone = require('backbone'),
    _ = require('underscore');

var template = require('./templates/page_loader.hbs');
var CSSPlugin = require('../../../../../node_modules/gsap/src/uncompressed/plugins/CSSPlugin.js'),
    TweenLite = require('../../../../../node_modules/gsap/src/uncompressed/TweenLite'),
    Utils = require('../../utils/utils.js');

Backbone.$ = jQuery;

function pageLoader() {
    var events, view, isReset = false;

    // Backbone events for main view
    events = {

    };
    // Main View Object
    view = {
        name: "PageLoader",
        template: template,
        event: events,
        resetPage: resetPage,
        render: render,
        initialize: initialize
    };

    function resetPage(text) {
        isReset = true;
        this.$el.attr('disabled', false);
        this.$el.removeClass('isloader-added');
        if (!Utils.detectMobileDevice().Opera()) {
            this.rotate.kill();
            this.$el.find('.ipg--loader').remove()
        }
    }

    function render() {
        var scope = this;
         this.$el.attr('disabled', true);
       
        if (!Utils.detectMobileDevice().Opera()) {

            if (!this.$el.hasClass('isloader-added')) {
                this.$el.append(this.template({ baseUrl: window.IpgApp.baseUrl }));
                this.$el.addClass('isloader-added');
            }

            var loaderPath = scope.$el.find('#LoaderPath');
            this.rotate = Utils.rotate(loaderPath);
        }
       
    }


    function initialize() {
        this.submitText = "";
        this.render();
    }

    return Backbone.View.extend(view)
}

module.exports = pageLoader();


},{"../../../../../node_modules/gsap/src/uncompressed/TweenLite":3,"../../../../../node_modules/gsap/src/uncompressed/plugins/CSSPlugin.js":4,"../../utils/utils.js":71,"./templates/page_loader.hbs":137,"backbone":1,"jquery":28,"underscore":32}],135:[function(require,module,exports){
/**
 * Created by Gabriel.Izebhigie on 1/18/2016.
 */
/**
 * Created by Gabriel.Izebhigie on 1/8/2016.
 *
 * Clean Backbone events out of memory
 */

window.jQuery = $ = jQuery = require('jquery');
var Backbone = require('backbone'),
    _ = require('underscore');

var CSSPlugin = require('../../../../../node_modules/gsap/src/uncompressed/plugins/CSSPlugin.js'),
    TweenLite = require('../../../../../node_modules/gsap/src/uncompressed/TweenLite');
var UtilFunc = require('../../utils/utils.js');

Backbone.$ = jQuery;

function stateMixin() {
    var currentPage = [], page, prevPage;
    var DURATION = 0.19;
    var isSetTimeout;

    var mixin = {
        gotoPage: gotoPage,
        goBackHome: goBackHome,
        goBack: goBack,
        goToTemplate: goToTemplate,
        initPageView: initPageView,
        hasNavigated: hasNavigated,
        resizeHeight: resizeHeight,
        resetTemplate: resetTemplate,
        getPageList: getPageList,
        setPageList: setPageList
    };

    function calLayoutHeight() {
        var currentPageHeight;
        currentPageHeight = page.height();
        $('#LayoutContentBody').css({ 'min-height': currentPageHeight + "px" });
    }

    function hasNavigated() {
        return currentPage.length > 1;
    }

    function gotoPage(options, callback) {
        function _gotoPage() {
            var _cp
            if (currentPage.length) {
                _cp = prevPage = currentPage[currentPage.length - 1];

                if (!UtilFunc.detectMobileDevice().Opera()) {
                    var currentAnimation = TweenLite.to(_cp, DURATION, {
                        left: "-100%",
                        opacity: "0",
                        clearProps: "left,opacity",
                        onComplete: function() {
                            _cp.removeClass('isvisible');
                        }
                    });
                } else {
                    _cp.removeClass('isvisible');
                }
            }

            var view = new options.view({ model: options.model });
            page = view.$el;
            currentPage.push(page);
            page.addClass('isvisible');
            if (!UtilFunc.detectMobileDevice().Opera()) {
                var nextAnimation = TweenLite.from(page, DURATION, {
                    left: "100%",
                    opacity: "0.3",
                    clearProps: "left,opacity",
                    onComplete: function() {
                        if (callback && _.isFunction(callback)) {
                            callback(currentPage, _cp, $(options.el));
                        }
                        //page.find('input:visible').first().trigger('focus')
                    }
                });
            } else {
                if (callback && _.isFunction(callback)) {
                    callback(currentPage, _cp, $(options.el));
                }
                //page.find('input:visible').first().trigger('focus')
            }
            calLayoutHeight();
        }
        if (isSetTimeout) {
            clearTimeout(isSetTimeout);
            isSetTimeout = undefined;
        }
        isSetTimeout = setTimeout(_gotoPage, 100);
    }

    function goBackHome(options) {
        this.gotoPage(options, function(cp, prevPage) {
            prevPage.html('');
            if (cp.length > 0) {
                currentPage = [cp[0]];
            }
        });
    }

    function goToTemplate(id, reset) {
        function _goBack() {
            if (currentPage.length) {
                var _cp = currentPage[currentPage.length - 1];
                currentPage.pop();
                if (!UtilFunc.detectMobileDevice().Opera()) {

                    var nextAnimation = TweenLite.to(_cp, DURATION, {
                        left: "100%",
                        opacity: "0",
                        clearProps: "left,opacity",
                        onComplete: function() {
                            _cp.removeClass('isvisible');
                            _cp.html("");
                        }
                    });
                } else {
                    _cp.removeClass('isvisible');
                    _cp.html("");
                }
            }

            if (currentPage.length) {
                var filteredPage = _.filter(currentPage, function(page) { return page.attr('id') == id; });
                if (filteredPage.length > 0) {
                    page = filteredPage[0];
                } else {
                    return;
                }
                page.addClass('isvisible');
                if (!UtilFunc.detectMobileDevice().Opera()) {
                    var currentAnimation = TweenLite.from(page, DURATION, {
                        left: "-100%",
                        opacity: "0.3",
                        clearProps: "left,opacity",
                        onComplete: function() {
                            if (reset) {
                                currentPage = [page];
                            }
                        }
                    });
                } else {
                    if (reset) {
                        currentPage = [page];
                    }
                }
                calLayoutHeight();
            }
        }
        if (isSetTimeout) {
            clearTimeout(isSetTimeout);
            isSetTimeout = undefined;
        }
        isSetTimeout = setTimeout(_goBack, 100);

    }

    function resetTemplate(options) {
        var view = new options.view({ model: options.model });
        view.$el.html(view);
    }

    function goBack(callback) {
        var scope = this;
        function _goBack() {
            if (currentPage.length) {

                var _cp = currentPage[currentPage.length - 1];

                currentPage.pop();

                if (!UtilFunc.detectMobileDevice().Opera()) {

                    var nextAnimation = TweenLite.to(_cp, DURATION, {
                        left: "100%",
                        opacity: "0",
                        clearProps: "left,opacity",
                        onComplete: function() {
                            _cp.removeClass('isvisible');
                            _cp.html("");
                        }
                    });
                } else {
                    _cp.removeClass('isvisible');
                    _cp.html("");
                }
            }
            if (currentPage.length) {
                if(scope.model.get('otpreg')){
                    currentPage.pop();
                    scope.model.set('otpreg', false);
                }
                if(scope.model.get('mobileid')){
                    currentPage.pop();
                    scope.model.set('mobileid', false);
                }
                page = currentPage[currentPage.length - 1];
                page.addClass('isvisible');
                if (!UtilFunc.detectMobileDevice().Opera()) {

                    var currentAnimation = TweenLite.from(page, DURATION, {
                        left: "-100%",
                        opacity: "0.3",
                        clearProps: "left,opacity",
                        onComplete: function() {
                            if (callback && _.isFunction(callback)) {
                                callback(currentPage);
                            }

                        }
                    });
                } else {
                    if (callback && _.isFunction(callback)) {
                        callback(currentPage);
                    }
                }
                calLayoutHeight();
            }
        }
        if (isSetTimeout) {
            clearTimeout(isSetTimeout);
            isSetTimeout = undefined;
        }
        isSetTimeout = setTimeout(_goBack, 100);
    }

    function initPageView(_page) {
        page = $(_page);
        currentPage.push($(page));
        page.addClass('isvisible');
        calLayoutHeight();
    }

    function resizeHeight() {
        page = currentPage[currentPage.length - 1];
        calLayoutHeight();
    }

    function getPageList(){
        return currentPage;
    }

    function setPageList(val){
        currentPage = val;
    }

    _.extend(Backbone.View.prototype, mixin);

    return Backbone.View;
}

module.export = stateMixin();


},{"../../../../../node_modules/gsap/src/uncompressed/TweenLite":3,"../../../../../node_modules/gsap/src/uncompressed/plugins/CSSPlugin.js":4,"../../utils/utils.js":71,"backbone":1,"jquery":28,"underscore":32}],136:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<span class=\"ipg--loader\">\r\n       <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n                 width=\"30px\" height=\"30px\" viewBox=\"0 0 50 50\"  xml:space=\"preserve\">\r\n             <path id=\"LoaderPath\" fill=\"#FFFFFF\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n                </path>\r\n       </svg>\r\n</span>";
},"useData":true});

},{"hbsfy/runtime":24}],137:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<span class=\"ipg--loader\">\r\n       <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n                 width=\"100px\" height=\"150px\" viewBox=\"0 0 50 50\"  xml:space=\"preserve\">\r\n             <path id=\"LoaderPath\" fill=\"#FFFFFF\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n                </path>\r\n       </svg>\r\n</span>";
},"useData":true});

},{"hbsfy/runtime":24}]},{},[33]);
